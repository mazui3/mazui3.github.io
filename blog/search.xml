<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>向日葵</title>
    <url>/blog/2015/04/28/P002/</url>
    <content><![CDATA[<img src="/blog/2015/04/28/P002/P002.jpg" class="">
<span id="more"></span>

<br>
我们正在小路上行走着
穿过向日葵的海洋
哼唱着不成曲的小调
有名的也罢 无名的也罢
也许下一句接不上也没有关系<br>
只是想要单纯的将思念传达给远方
]]></content>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>班长</title>
    <url>/blog/2014/06/28/P003/</url>
    <content><![CDATA[<img src="/blog/2014/06/28/P003/P003.jpg" class="">
<br>
是同人.参加西尾深夜六十分时画的同人图,不过当然超过了时间限定,成为了普通的命题同人图(笑).
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>同人</tag>
      </tags>
  </entry>
  <entry>
    <title>无题</title>
    <url>/blog/2013/11/23/P000/</url>
    <content><![CDATA[<p>（´･ω･｀）</p>
<span id="more"></span>

<blockquote>
<p>今天是窝们AD工作室成立一周年的纪念日，虽然这是一个废柴到没有任何成果的工作室，窝还是有很认真地想要怎么庆祝，可惜窝的合伙人阿九正欲仙欲死地参加着高中生限定的周周爽，无奈之下只得举杯邀明月，对影成三人了。讲到这里顺便表达一下赞美之情，太白哥哥能把对着影子傻笑这么恐怖一事写的这么浪漫，就冲他这胆子窝也相信这哥们以后有出息。<br>  <br><br>成立一周年却没有任何成果，以前都觉得就像在我的后脑勺贴着「废柴」两字。但是事实就是每当我们决定使用超能力去改变世界的时候，翻遍了床头柜也找不出一条红内裤。与其说我们那么多的计划都是中二小鬼的异想天开，不如说是卑微的一点反抗，用一个初中生最绚烂的梦想在苍白的试卷上涂几笔青春。那个时候老是在数学课上交流「吃饭快」图纸的细节，物理科上纠结用杠杆翘起成吨的阿九还是电驱，遇到人就拍着胸脯大喊窝可是有工作室的男人，恨不得爬上路灯去贴小广告。不过阻止我的并不是和蔼的城管大叔，而是当我把我们工作室的号码写在白板上时，别的小朋友悲悯的表情。<br>  <br><br>我当然可以继续挥着手大喊「愚蠢的地球人们！道不同不相为谋，哼！」<br>  所以说我跟我的战友能凑在一起，效果就像一坨健康的翔和一坨蛋白质过剩的翔凑在一起，能给人的嗅觉上的愉悦。而且我们的想法只是泄漏了一点而已，当然这个一般人我不告诉他。<br>  <br><br>再说说我的战友这个神奇的小同志吧。<br>跟我这种祖上三代单传「动手废」属性的不同，我的战友是从自动铅笔修到修正带的家伙。所以我觉得窝们至少有开个修理店这么条后路，以后应该饿不死。因为从我爸开始，就是那种修保险丝会整个拉断掉，修灯泡会吧灯座拧下来，切蔬菜会吧登板劈碎的渣渣，所以窝就从小受到包揽一切粗活的老妈的教导：「笨手笨脚到你这种程度的人不用功读书会死掉！」而我的战友有一次一个晚上就做了一把很精美的椅子帮我给美术老师交了差，这种天分实在是很令人羡慕。不过这个家伙吃亏之处在于她的天分并不在被社会广泛认可的领域，对于读书也毫无热情，导致他老是被按着头参加各种补习班，然后窝们工作室的活动时间就有限了。上了高中更是连周年庆也没有机会面基了。<br>  然后像我这种热情很容易欠费停机的家伙，就从从容容地翻出了条纹胖次反套在头上：”人生苦短，及时行乐ˊ_&gt;ˋ”<br>  <br><br>高中好像一下就从中二里毕了业一样，想来想去大概是窝已经没有资本在数学课上摸鱼了吧。而且充满学霸的学校里也再没有一个逗比会对另一个逗比超傻的想法拍手叫好了。不管AD工作室里面烂掉了多少个夭折的计划，至少里面埋葬了我们那么多对生活的美好幻想，那两个老是幻想着每天都会有好吃的饭菜和happy的family的小鬼，大概也是时候屈服了。<br>  <br><br>最后请王后雄老师赐予我力量。<br>  <br><br>让我永远记住2A669和两个老在数学课上交流图纸的神经病。</p>
</blockquote>
]]></content>
      <tags>
        <tag>树哥是神</tag>
      </tags>
  </entry>
  <entry>
    <title>信件</title>
    <url>/blog/2015/05/13/P001/</url>
    <content><![CDATA[<p>／´∀｀;:::＼</p>
<span id="more"></span>

<img src="/blog/2015/05/13/P001/P001.jpg" class="">

<br>
<br>

<p>从小学开始累计的信件有这————么多.已经放不下一个牛皮纸袋啦!准备更换一个大点儿的了,好开心.<br>我真的好喜欢信件.纸质的感觉特别地亲切.隔三差五天地向班主任讨她估计老嫌我烦了(笑.<br>里面大部分都是大树同学的ww<br>每一封信件还有明信片还有帕里斯小剧场我都好好地保存着——!!<br>还有大树同学的字老好看的了!!<br>大树同学也超可爱的了!!<br>大树同学写的【黏糊糊片段】我也老喜欢的呢!!(.<br>不过会在信封里放五香素肉和川味鱼豆腐的估计只有我们两个了(.<br><br></p>
<p>前两天整理房间有看到一位小学同学的一些信件.在读他人的信时不但能看到过去的他人还能看到过去的自我.<br>过去的自己也像现在一样喜欢给予他人期待.但是当时的自己却没有能力回应这份期待…喂ww<br>说实话这里真的真的吃了不少的苦头.<br>所以现在也正在更加努力地回复期待.</p>
<br>

<p>顺便一提,看过去自己的手帐(准确地说是杂录)时,只是单纯地觉得这个惹人烦的小鬼是谁噢!<br>但是当时的自己却是可以在对着天空大喊【老衲是世界第一————!!】的家伙,真是不可思议.</p>
]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>宾果和藩和小春日</title>
    <url>/blog/2015/01/24/P004/</url>
    <content><![CDATA[<p>涂涂的三位oc!!</p>
<span id="more"></span>

<br>
<br>
<br>
<br>
<br>

<img src="/blog/2015/01/24/P004/P004_1.jpg" class="">
<p>宾果酱与好多好多气球x<br><br><br><br><br><br><br><br></p>
<img src="/blog/2015/01/24/P004/P004_2.jpg" class="">
<p>最近好忙好累😭<br>虽然停得下摸鱼的手但脑洞根本停不下来（.<br>图付是女儿…！好像快点放假好好再磨磨人设…衣服太苦手.<br>coral的下属.掌管人口的记录和地区的交流.还有一只白色的兔子（雄）是她的助手（虽然表面上看上去两位是平等的.但这位老欺负她的那只兔子.</p>
<p>闲着的时候喜欢跟兔子下国际象棋.从来都没有输过（.<br>性格有些高冷.当能力相当出色.coral本身也是温柔的老好人（但是性格扭曲）所以能力也能得以很好的显现.<br>对知识或者说是文明十分的看重.却把管理国家图书馆的k先生完全无视wwww<br>不过k先生说起这位是称为【那个老太婆】w</p>
<p>右边那位先保密(x<br><br><br><br><br><br><br><br><br><br></p>
<img src="/blog/2015/01/24/P004/P004_3.jpg" class="">
<p>最初是给高中动画社团做的版娘xx社长还是个喜欢笨蛋测试的标准阿宅.<br>后来被允许拿回去自己养了.</p>
<br>
<br>
<br>

<p>相关图书馆编号:char02,char85,char8A.</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>oc</tag>
        <tag>家庭组</tag>
        <tag>在日落之前</tag>
        <tag>残局象棋</tag>
      </tags>
  </entry>
  <entry>
    <title>高中的新校服</title>
    <url>/blog/2015/07/18/P006/</url>
    <content><![CDATA[<img src="/blog/2015/07/18/P006/P006.jpg" class="">
<br>
涂了新校服!!♪
这身可好看!!
<span id="more"></span>

<p>今年小高一这届校服改革真是好运气233前辈们有眼福了(xxx<br>其实吧我觉得白大褂也挺好看的.</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>TAR与回礼</title>
    <url>/blog/2015/07/24/P007/</url>
    <content><![CDATA[<img src="/blog/2015/07/24/P007/P007.jpg" class="">
<br>
为了明天做了点贺卡.
明天(25号)是送别会+生日会.
高中认识的那些损友们说还准备了tar作为回礼.有位还说会带自己做的小点心.
我就不抱希望地期待一下吧(笑.
<span id="more"></span>

<br>
<br>
<br>
<br>
<br>

<p>(补)<br>那年我没在国内高中毕业就跑出国了.<br>在国内的时候很喜欢一个节目,叫the amazing race(简称TAR).是环游世界为主题.分为两人一小组,做各个贴近当地风情任务的真人秀.<br>趁着长假,我以自己高中为舞台设计了一些任务.更像是寻宝一样吧毕竟没条件像节目那么做加入生活体验的任务(笑).<br>有叫上我另一所学校的旧友树哥测试了一下,改进后又叫上我的高中同学一起这样在学校里乱跑.<br>我的同学非常喜欢…她是个很有仪式感的人.<br>那天他们为我一个人创造了类似的任务和线索,地点是当地的图书馆.加入了以书籍标号为答案的谜题.<br>每一个信封里是下一个信封的地点和一位朋友给我的留言,最后的是一个u盘,里面是我朋友去我们学校和教室录的影.</p>
<p>这份回礼过于厚重了.现在回想起也会觉得那是高中生努力对青春的诠释.</p>
]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>感谢信</title>
    <url>/blog/2015/05/18/P005/</url>
    <content><![CDATA[<span id="more"></span>
<img src="/blog/2015/05/18/P005/P005.jpg" class="">
]]></content>
      <categories>
        <category>画</category>
      </categories>
  </entry>
  <entry>
    <title>无题</title>
    <url>/blog/2015/07/24/P008/</url>
    <content><![CDATA[<blockquote><p>「这不是反悔啊…」我叹气道.</p>
<span id="more"></span>

<p>「因为情报缺失 所以无法做出正确的判断.不是吗?」</p>
</blockquote>
<br>
<blockquote><p>这个世界上有两种认知.<br>一种是【大家都这么认为,所以大家认为的是正确的.】<br>另一种是【无论大部分人是怎么认为的,但是对错是不会变的.】</p>
<p>公知与事实.</p>
<p>不要被眼前的事物所迷惑了.</p>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>无题</title>
    <url>/blog/2015/10/19/P009/</url>
    <content><![CDATA[<img src="/blog/2015/10/19/P009/P009.jpg" class="">
]]></content>
      <categories>
        <category>画</category>
      </categories>
  </entry>
  <entry>
    <title>Andre工作室三周年</title>
    <url>/blog/2015/11/23/P011/</url>
    <content><![CDATA[<img src="/blog/2015/11/23/P011/P011.jpg" class="">
<span id="more"></span>

<br>
…画不完了.九树花少女组合我也好想画啊!!!  
以前基本都在画炎焱和子安.箫笙竽和谢子安的组合一直没怎么画过,今年算是私心嘿嘿/////  
下面是给某人的留言^ ^  

<blockquote><p>  呼.约好了留言的.有在看吗?  </p>
<p>  中文水平本来就烂,现在更是不行了.就笑纳一下吧.<br>  虽然说工作室成立了三周年.第一年的时候就一脸ˊ_&gt;ˋ废柴地表示没有成品啊混球——<br>  然而两年过去了.<br>  今年还是一脸ˊ_&gt;ˋ.但连抱怨没有成品的必要都没有了.<br>  啊,时间犹如搓衣板,跪久了真的会疼的.<br>  就算是这样,我也是有认真地想庆祝一下.可惜我的合伙人被锁在了遥远的东方当着高三大妈.连在yy高歌一曲的机会恐怕都没有.<br>  我就算是想对着月亮唠家常,也有十三小时的时差等着它不紧不慢地转到对面.算了.还是电信号方便.<br><br></p>
<p>  那么就随便讲点什么吧.<br>  原想仿例谈谈我这可靠而诙谐的战友.<br>  可惜记忆不争气,实在漂泊不定.只记得托这位战友的福初中时代过的很中二很欢脱.记得穿着为人民服务,背着饭思密达盒克斯洛夫斯基爵士(准将).记得说着每天都有好吃的饭菜和幸福的family这样的话.<br>  如果能翻翻草稿的话一定会感叹,哇,原来还发生过这么有趣的事啊wwwww<br>  可惜事情本身咀嚼咀嚼也会失去味道.毕竟电视剧也好电影也好.初见和二刷是最有意思的.何况是没有剪辑功能的四次元.<br>  所幸的是,是在时间轴一直推动着不停的四次元.<br>  所以高中了之后看到一位文学少女给朋友写信,我也就学着做了.<br>  好在我也喜欢和信纸打交道,嘿嘿.不过塞一些乱七八糟的食物和其他东西一开始是谁先想出来的我也不记得了.<br>  信件没有全部带过来.只带了最后一封作为纪念.<br>  虽然说是纪念,也只是藏放在我猪窝一样的房间中最整齐的书架上面.说实话不是写这个日志,我也想不起来w.<br>  iR重默小系统貌似有点副作用(苦笑).<br><br></p>
<p>  【天要下雨娘要嫁人历史的车轮总是滚滚向前，不变的唯有食欲和爱！】<br>  记忆储存在头皮屑里抓吧抓吧总会消失不见.但是由此推挤而成的副产品倒是留了下来.<br>  话说我这位战友意料之外又在情理之中地去读了文科.当年的我也是略感惊讶的.<br>  战友的少女力也有潜移默化的提升,我觉得看到这里大树同学说不定会否认w.<br><br><br>  或者不会w.<br><br><br>  各位都一路向前.跟着时间一起.  </p>
<p>  我呆在新学校这会儿又是重新面对了像选课一样麻烦的事情.<br>  事业真是麻烦又不得不做的事情呢w.<br>  虽然是回不到那当着主角的配角这样的日子了.<br>  但是隔了段时间没联系也没有尴尬的感觉.<br>  这也许就是所谓的副产品吧.<br>  那么 愿哪天再来见面吧.<br>  最近学了点溜冰.寒假还有预定从雪山顶滚到山脚的活动.<br>  说不定我会比较轻 我是认真的.<br><br></p>
<p>  最后.<br><br></p>
<p>  最近觉得波的二象性好高端啊.<br>  那天有空去找本高中物理3-5研究研究吗wwwww.  </p>
</blockquote>
<br>
<br>
<br>
<br>
<br>

<blockquote><p>树哥是我从初中开始的旧友,是位很有才华的朋友.高中不在一个学校,也非常的忙,我们会偶尔写信以及在贴吧留言.<br>炎焱,箫笙竽和谢子安是树哥创作小说中的角色.<br>初中时某天我突然拍她桌子说成立个工作室吧,那时候取的名就是andre工作室.  </p>
<p>是中二小鬼幸福的一厢情愿.  </p>
</blockquote>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>树哥是神</tag>
        <tag>oc</tag>
        <tag>给朋友的画</tag>
      </tags>
  </entry>
  <entry>
    <title>❀ ✿ ❀</title>
    <url>/blog/2015/11/05/P010/</url>
    <content><![CDATA[<img src="/blog/2015/11/05/P010/P010.jpg" class="">
<span id="more"></span>

<br>

<img src="/blog/2015/11/05/P010/P010_2.jpg" class="">

<p>画了花花花.其实不是第一次画花花了…我有偷偷画过一些都觉得不够花花.</p>
<p>这个女孩子超可爱的好嘛…………………………………………………………<br><br><br><br></p>
<blockquote><p>花花是我的lofter这个博客认识的朋友.是一位很上进的学霸.当时很喜欢她的读书笔记心得.现在也很佩服她.</p>
</blockquote>

<img src="/blog/2015/11/05/P010/P010_3.jpg" class="">
<img src="/blog/2015/11/05/P010/P010_4.jpg" class="">
<img src="/blog/2015/11/05/P010/P010_5.jpg" class="">
<img src="/blog/2015/11/05/P010/P010_6.jpg" class="">
<img src="/blog/2015/11/05/P010/P010_8.JPG" class="">
<img src="/blog/2015/11/05/P010/P010_7.JPG" class="">
<p>这是她画给我的oc,现在还超级喜欢!</p>
<p>分别是图书管理员酱,王女,三谷,我朋友(…),生贺和木柑子!!<br>(好多……)</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>oc</tag>
        <tag>给朋友的画</tag>
      </tags>
  </entry>
  <entry>
    <title>老兔的假想乐队</title>
    <url>/blog/2015/10/03/P013/</url>
    <content><![CDATA[<p>这里是学校课题的乐队CD以及周边设计的作业.私心带了我原创角色的老兔玩.</p>
<span id="more"></span>

<br>
<img src="/blog/2015/10/03/P013/P013_1.jpg" class="">
<img src="/blog/2015/10/03/P013/P013_2.jpg" class="">
<img src="/blog/2015/10/03/P013/P013_3.jpg" class="">
<br>

<p>这次T-shirt如果有实体我还愿意当居家服穿(…).<br>指兔子的方巾问旁边的同学这叫什么.<br>【我可以叫它triangle scarf嘛?】<br>【我想这叫bandana】她说.</p>
<br>
<br>
<br>

<p>相关图书馆编号:char02.</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>oc</tag>
        <tag>家庭组</tag>
        <tag>奇怪作业</tag>
      </tags>
  </entry>
  <entry>
    <title>丹</title>
    <url>/blog/2015/12/29/P012/</url>
    <content><![CDATA[<img src="/blog/2015/12/29/P012/P012_1.jpg" class="">
<span id="more"></span>
<img src="/blog/2015/12/29/P012/P012_2.jpg" class="" width="300" height="300">

<p>立绘.自家家庭吵闹喜剧担当三人组中的老哥.<br>总是有些婆妈有些唠叨.8岁的大人(笑.喜欢喝麦茶.</p>
<br>
<br>
<br>

<p>相关图书馆编号:char03.</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>oc</tag>
        <tag>家庭组</tag>
      </tags>
  </entry>
  <entry>
    <title>第一次也许是最后一次的oc安利小集合</title>
    <url>/blog/2016/01/08/P014/</url>
    <content><![CDATA[<p>这里是给朋友介绍一下自己的原创角色为目的的小集合.</p>
<p>当时是先打印彩色文件,再手写的简介,所以这里的备份文件没有文字介绍.后期就简单补几个字啦.</p>
<span id="more"></span>

<img src="/blog/2016/01/08/P014/P014_1.jpg" class="">
<img src="/blog/2016/01/08/P014/P014_2.jpg" class="">
<img src="/blog/2016/01/08/P014/P014_3.jpg" class="">
<p>第二张是后来补的,这两位是日落里的姐妹.<br><br></p>
<img src="/blog/2016/01/08/P014/P014_4.jpg" class="">
<p>最左边的那位名字为单曳.取名超级感谢小数数T T!!!!非常棒(词穷)的名字呢!!!!<br>中间的那位是小春日的姐姐.<br>右边是神大人.<br><br></p>
<img src="/blog/2016/01/08/P014/P014_6.jpg" class="">
<p>这几位是日落的学生组.<br><br></p>
<img src="/blog/2016/01/08/P014/P014_5.jpg" class="">
<img src="/blog/2016/01/08/P014/P014_7.jpg" class="">
<p>这两页是卡尔马的冬日组.<br><br></p>
<img src="/blog/2016/01/08/P014/P014_8.jpg" class="">
<img src="/blog/2016/01/08/P014/P014_9.jpg" class="">
<p>这两页是卡尔马的怪异专家和她的助手x.<br><br></p>
<img src="/blog/2016/01/08/P014/P014_10.jpg" class="">

<br>


<p>寒假结束.被水淹没,不知所措.</p>
<br>
<br>
<br>

<p>相关图书馆编号:<br>char44,char45,char47,char48,<br>char80,char81,char85,char86,char8A,char8D,<br>char90.</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>oc</tag>
        <tag>在日落之前</tag>
        <tag>残局象棋</tag>
        <tag>卡尔马</tag>
        <tag>冬日组</tag>
        <tag>怪异专家与助手</tag>
      </tags>
  </entry>
  <entry>
    <title>高中时做过的奇奇怪怪作业log1</title>
    <url>/blog/2015/09/15/P016/</url>
    <content><![CDATA[<p>ｷﾀ - .∵･(ﾟ∀ﾟ)･∵. - ｯ!!</p>
<span id="more"></span>

<img src="/blog/2015/09/15/P016/P016_1.jpg" class="">
<img src="/blog/2015/09/15/P016/P016_2.jpg" class="">

<p>【paper bag assignment】的作业.<br>背景自带特效也救不回这破铜烂铁的面相.嘛嘛嘛.<br>听说这儿秋天的树叶可好看.<br>我研究一下是否能在安全帽上固定摄像机,再去trail骑上一圈.<br>【里约实况】百分百真实体验 最逼真的3D建模 惊喜刺激山地自行车(听说有阿婆主的尖叫). 更新第一回.<br>说笑的♪<br><br><br><br><br><br><br><br></p>
<img src="/blog/2015/09/15/P016/P016_3.jpg" class="">

<p>大半夜赶作业…心很累.是用不同的图案组成人物肖像的作业.<br>再这么晚才开始赶就直播吃狗粮(((.<br>今儿化学得了个super还是挺开心哒!<br><br><br><br><br><br><br><br></p>
<img src="/blog/2015/09/15/P016/P016_4.jpg" class="">
<img src="/blog/2015/09/15/P016/P016_5.jpg" class="">
<p>上次的作业.题目好像是仿照某个黑色童话,每个首字母的小孩子的死亡方式.<br>学校会把学生的作品展示在学校里.有点有趣.</p>
]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
        <tag>奇怪作业</tag>
      </tags>
  </entry>
  <entry>
    <title>充满甜食的果青同人</title>
    <url>/blog/2016/02/13/P015/</url>
    <content><![CDATA[<img src="/blog/2016/02/13/P015/P015.jpg" class="">
<br>
今年…2015到2016的明信片.我是最晚(…).成功的拖成黑历史,下印前可能还会再改改(.
<span id="more"></span>

<p>算是如愿的画了果青…!!喜欢这部作品老久了^q^结衣可爱可爱!!!!</p>
<p>没惹.</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>同人</tag>
      </tags>
  </entry>
  <entry>
    <title>万圣节</title>
    <url>/blog/2015/11/01/P017/</url>
    <content><![CDATA[<img src="/blog/2015/11/01/P017/P017_1.jpg" class="">
<span id="more"></span>

<img src="/blog/2015/11/01/P017/P017_2.jpg" class="">
<p>没怎么多拍.我简单写个repo.<br>学校是一个过Halloween很好得地方.<br>Haunted house做的很棒.是选修drama课的同学推荐的.Fiona同学(不是我伯母…)极力推荐我.<br>Bring your friend!!她这么说道.<br>跟游乐园的那种鬼屋质量差不多.<br>虽然这么说但是我没去过游乐园的鬼屋(怂……).<br>灯光打的很暗.所以道具的简陋都掩饰过去了.<br>但是音乐是光线调节的很好.一开始还使用了风.<br>有一个像用人骨祭奠的地方.有一个被关在大型牢房里的缝隙.有分尸魔.有从桌子底爬出来的囚徒.<br>最最喜欢的一个场景是一个像宿舍也像监狱的地方.<br>真的把床搬来了…木制两层的那种.<br>好像是有被子等等的.旁边还有很多书堆在那里.道具数目还是很齐全的.<br>一位囚徒坐在床上.二层很高.还有一位被手铐绑着,疯癫地喊着help me out.<br>那一块是从两个床铺间走过.就像是普通的宿舍内走过.我喜欢把场景摆在想日常一样的路上.<br><br><br><br><br><br><br>Esl的一位老师做了南瓜蛋糕.极好吃.<br>还发了糖果.这勾起了我今儿去要糖的兴致.<br>老师是make up做充分的人wwwwwww<br>还看到了一位匹克(不知道怎么拼……)做的很棒.<br>一些同学的make up太厉害了……(词穷.<br>Halloween要糖虽然是传统.但是很多房子的装饰真的太值得一看啦!!(没有怎么拍…悲伤.<br>一些蜘蛛网(棉网).墓碑(塑料或纸张).skeleton.还有传统的pumpkin!!<br>我才意识到这世界上比Fiona小姐(伯母)雕刻厉害的竟然有好多好多.<br>一些买回来的装饰也很有意思.碰一下就会出声help!!的骷髅…别吓到了!!!<br>不过去讨糖还有别吓到了…某位女士打扮得超用心(幽灵)然后BOO!!!<br>OMG.<br>虽然说是一项传统节日但并不是所有人都起劲的.<br>一些就是All right的表情.<br>但是有些完全不同wwwwww<br>有位大叔会打扮好然后问</p>
<blockquote><p>I have questions for you.<br>Who am I?<br>(sorry……)<br>Oh you had not see the movie!<br>The nightmare before Christmas! You have to see it!<br>But you still can get some candies!<br>(Thank you very much.)</p>
</blockquote>
<p>还有一位婆婆打扮成很老的一个卡通人物…没有记住名字非常抱歉…<br>一些人家就直接门口放个框装糖.还有张please take one的纸条.<br>一些人家只有小孩子在家.不出去要糖吗wwww<br>发现house的基本都有狗…还被舔手了ww我有点怕狗的(……<br>不过一些就是Hey!!!!的感觉ww<br>一些老人应该会很喜欢这样的活动.<br>小孩子人化妆得也很用心wwwww<br>基本都是全身套装.牛奶啊科学怪人啊prinecess叫不出名字的啊.<br>像我这样就带个头饰的太没有诚意了wwwww<br>跟朋友跑了两条街左右.虽然说是朋友,也只是刚交到的小学妹.<br>因为一直一直在温腻的环境中生活的里约得重新领悟交朋友的技巧.<br>好在两位还挺好说话.<br>这个另一个话题了.<br><br><br><br><br><br><br>最后.</p>
<p>隔壁来sleepover的小男孩好吵哦…………<br>边打字边向浴室走去结果因慢了两秒钟而被老弟一个箭步抢到了浴室.不开心.</p>
<br>
<br>
<br>

<p>omake</p>
<img src="/blog/2015/11/01/P017/P017_3.jpg" class="">
<p>用万圣节得到的橡皮泥玩w.</p>
]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>高中时做过的奇奇怪怪作业log2</title>
    <url>/blog/2016/09/27/P018/</url>
    <content><![CDATA[<p>(ﾟдﾟ)ｳ-(ﾟДﾟ)ﾏｰ(ﾟAﾟ)ｲ-…ヽ(ﾟ∀ﾟ)ﾉ…ｿﾞｫｫｫｫｫ!!!!</p>
<span id="more"></span>

<img src="/blog/2016/09/27/P018/P018_4.jpg" class="">
<img src="/blog/2016/09/27/P018/P018_3.jpg" class="">
<p>这两个还是在转学前做的,遇到了一个很好的美术老师,给我安利各种美术大学.<br>爱丽丝那个还蛮喜欢的,虽然拿油画画小姐姐也太难了吧,但满开心的.<br><br><br><br><br></p>
<img src="/blog/2016/09/27/P018/P018_1.jpg" class="">

<p>书架上又多了个意义不明的东西.<br>粘土的作业.内容是【看上去传达了一种情感,摸上去也传达了这种情感.】<br>于是我做了这个<br><br><br>【悲伤的拉肚人】.<br><br><br><br><br></p>
<img src="/blog/2016/09/27/P018/P018_2.jpg" class="">

<p>爱因斯坦吐舌头,为数不多雕刻的作业.印了很多版本,因为很喜欢还送给(祸害)了好友.<br><br><br><br><br></p>
<img src="/blog/2016/09/27/P018/P018_5.jpg" class="">

<p>遇上的美术老师是摄影出身的,在她的印象下也喜欢上了洗黑白胶卷.洗胶卷洗照片,旧的实体技术也算是一种浪漫.<br><br><br><br><br></p>
<img src="/blog/2016/09/27/P018/P018_6.jpg" class="">

<p>还是跟那位美术老师做的作业.作业要求是360度的图片.<br>学校的校门口有这么个[明明看上去是座椅但却被大家用来停自行车]的地方,我非常喜欢,于是乘这个机会记录下壮观的自行车场.</p>
]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
        <tag>奇怪作业</tag>
      </tags>
  </entry>
  <entry>
    <title>记一位初中时的朋友</title>
    <url>/blog/2016/06/06/P022/</url>
    <content><![CDATA[<img src="/blog/2016/06/06/P022/P022.jpg" class="">
<p>稍微写点.</p>
<span id="more"></span>

<p><br><br></p>
<p>今天是我的朋友,桃花小姐十八大寿的日子.特此画了互相调侃的九树花少女组合.<br>此人,大树赐名桃花,因满面春光泛桃花而得此名.<br>桃花是我初中时代的朋友,准确的说是朋友的朋友.大树同学勾搭上了这位泼辣的妹子,所以我得以认识她.<br>形容为泼辣可能不够准确,大树曾在tat中把炎焱比喻成菜市场大妈,然而设定人设的时候跟我强调了很多遍要美少女中的美少女,由此可见一斑.</p>
<p>菜市场的美少女,哈哈.</p>
<p>这人大概是游走于各个班级的那种交际花,又有相当直爽的性格,想必在学校也算是名人级的.<br>说实话我一直把她当做我心中的女神级人物,然而大树太抖s,桃花小姐的女神形象在这人眼前根本没法维持.<br>当然就像桃花这名字一样,这人让我佩服的其中一大理由就是这人的感情史了.<br>这人刚入初中就开始四处寻找意中情人,有段时间估摸出了和我一起去学校小店遇到帅哥的几率更大,所以经常组队去买肉吃.说实话那时候站在她旁边还有些紧张.<br>真的…很紧张.<br>大概这种紧张还持续到了一起去检查卫生的时候我不敢进前辈的教室,这人拖着我进去.还有家常便饭的获得重默资格时这人给我的呵斥.<br>想起来还真是有些好笑.不过也许是这人才会做到.<br>这人会非常绘声绘色的跟大树讨论她是如何走过某前辈的书桌前的,以及得意的讲(也许)某中意前辈回头或撇眼的小动作.<br>于是这人在初二的时候交到了一位学霸,可喜可贺可喜可贺.<br>她没有过多跟我谈论感情史,大树是那位情场排解老手.不过那什么【〇〇的臭袜子洗洗就是我的了】已经成了老梗…由此也说不定可以预见出这人今后其他的感情史中是如何秀恩爱的.<br>空间的狗粮生产大户.腿咚第一次在现实里见也是因为她hhhhh.<br>自恋又闪亮的美少女.今日也是kirakira.<br><br><br>说起来今天也是特殊的.</p>
<p>明日就是他们高考的日子了.<br>哇……怎么说呢.时间很快呢!!!虽然不是自己的青春了,但是好快呢!!!祝顺利吧.<br>而且今年减招…树哥跟我讲考这场得奔着去准备自招了.<br>我也只好在这里分享一点点的好运了…<br><br><br>此致<br>  敬礼.</p>
<br>
<br>
<br>
<img src="P022_2.jpg " style="width:50%;height:50%;">
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>树哥是神</tag>
      </tags>
  </entry>
  <entry>
    <title>搞错五分钟的距离是开车不是步行之动物收留所体验</title>
    <url>/blog/2016/02/23/P020/</url>
    <content><![CDATA[<p>↑↑↓↓←→←→BA(ﾟ∀ﾟ)↑↑↓↓←→←→BA!!!!!</p>
<span id="more"></span>

<img src="/blog/2016/02/23/P020/P020.jpg" class="">
]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>U君和老兔</title>
    <url>/blog/2016/04/04/P021/</url>
    <content><![CDATA[<img src="/blog/2016/04/04/P021/P021_1.jpg" class="">
<span id="more"></span>

<img src="/blog/2016/04/04/P021/P021_2.jpg" class="">
<br>
这里算是最初画U君和老兔一起的互动了吧.之后偶尔会派老兔会找U君闹腾xx.

<br>
<br>
<br>

<p>相关图书馆编号:char02.</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>oc</tag>
        <tag>家庭组</tag>
      </tags>
  </entry>
  <entry>
    <title>人生苦短,及早行乐</title>
    <url>/blog/2016/07/13/P025/</url>
    <content><![CDATA[<img src="/blog/2016/07/13/P025/P025.jpg" class="">
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
        <tag>家庭组</tag>
      </tags>
  </entry>
  <entry>
    <title>高中时做过的奇奇怪怪作业之好太太汤面</title>
    <url>/blog/2016/11/19/P019/</url>
    <content><![CDATA[<div class="bili_video"><iframe src="https://player.bilibili.com/player.html?aid=NaN&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" width="544" height="452" allowfullscreen="true"> </iframe></div>

<p>是给business课做的小广告.当时的课题是选择了台湾地区,再选择的商品是泡面.</p>
<span id="more"></span>

<p>oc里面凯和景德是常年在台湾香港跑的,作为oc厨就少许的(少许)带他们玩了.<br>当时是极限四小时凑出来的小视频.学校的餐厅里没什么电脑的插座,在板子上疯狂作业和电源消耗速度赛跑.<br><br></p>
<img src="/blog/2016/11/19/P019/P019_4.jpg" class="">
<img src="/blog/2016/11/19/P019/P019_1.jpg" class="">
<img src="/blog/2016/11/19/P019/P019_2.jpg" class="">
<p>logo和包装设计<br><br><br><br></p>
<img src="/blog/2016/11/19/P019/P019_3.jpg" class="">
<p>灵魂作画和分镜.</p>
<br>
<br>
<br>

<p>相关图书馆编号:char58.</p>
]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
        <tag>oc</tag>
        <tag>奇怪作业</tag>
        <tag>追风者</tag>
      </tags>
  </entry>
  <entry>
    <title>vocaloid两幅同人</title>
    <url>/blog/2016/06/17/P024/</url>
    <content><![CDATA[<img src="/blog/2016/06/17/P024/P024_1.jpg" class="">
<p>匹诺曹的アッカンベーダ.</p>
<span id="more"></span>

<br>
<img src="/blog/2016/06/17/P024/P024_2.jpg" class="">
mota的Q.
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>同人</tag>
        <tag>vocaloid</tag>
      </tags>
  </entry>
  <entry>
    <title>TAT人物印象</title>
    <url>/blog/2016/06/05/P023/</url>
    <content><![CDATA[<p>The amazing treasure的人物印象.<br>原作者是大树同学.<br>我是那个不干活的画手担当.</p>
<span id="more"></span>

<p>超简陋.</p>
<p><br><br><br><br><br></p>
<h4 id="炎焱"><a href="#炎焱" class="headerlink" title="炎焱"></a>炎焱</h4><img src="/blog/2016/06/05/P023/P023_Y.jpg" class="">
<p>人物形象基本是以三人的原型做的,炎焱的发型不符合校规(笑)是因为强调要超级美少女.←于是我理解成了日系美少女.<br>陆地海洋与天空是以陆海空的视角写的,所以炎焱的感觉是热情性,并不是很知道这人会想些什么呢hhh.<br>大冒险里面倒是吐槽功底相当,可能是因为大树的吐槽功底相当hhh.不过比起子安来说吐槽更温和一点.<br>会做爱妻便当.<br>少女力max.<br>脑补的声音一直是”噢↗噢↗噢↗噢↗”还有”哈!”</p>
<blockquote><p>.<br>“顺便一提，老娘是玛丽苏，不是袜底酥！”←这句台词是脑内的top10,不知道为什么hhh.<br>“啊啊~今天遇到了一个小正太萌死了！”<br>“欸，我今天也遇……”<br>“听我说！！眼睛超大的，睫毛有那么长！”说罢用食指与大拇指比了一大段距离。←说是top5还不如说是一言以概.</p>
</blockquote>
<p><br><br></p>
<p>理应来说谢子安是主角.</p>
<h4 id="谢子安"><a href="#谢子安" class="headerlink" title="谢子安"></a>谢子安</h4><img src="/blog/2016/06/05/P023/P023_A.jpg" class="">

<p>然而两个小短篇的主角是笛子与炎姐,诶作者怎么不给自己加戏啦hhh.<br>吐槽一流.<br>个子矮.<br>脸上的青春痘我经常喜欢点成因为和所以.不过祛痘了的大树很讨厌这个设定.<br>毒舌.<br>人物画的有些像男生…!然而有数落跟头只到别人下巴的男主(沈呆子)这样可爱的戏份.<br>我说给你扎个小辫子吧作者一口否决了,那如何增加少女力啦那么祛个痘就成.<br>别啦青春痘多么可爱.<br>珍藏的本篇和我手机一起泡水了台词只好在短篇里面找(………</p>
<blockquote><p>“笛子粘的啊，”谢子安伸出另一只手开始摩挲下巴：“果然捆绑技术中透着一股不解风情的呆气。”←咦.<br>【废话，连你昨天的胖次颜色都知道的程度】谢子安撑着下巴一脸嘲讽.←top10.</p>
</blockquote>

<p><br><br></p>
<p>名字作者以【并没有以箫这个姓】的原因改成了萧笙竽,然而这人的文里的错字很多,萧笙竽这几个字正确的写法至今没有人知道.</p>
<h4 id="萧笙竽"><a href="#萧笙竽" class="headerlink" title="萧笙竽"></a>萧笙竽</h4><img src="/blog/2016/06/05/P023/P023_X.jpg" class="">
<p>第一人称是咱.<br>美术生.画画极慢.<br>吃货.<br>乡土气息.<br>二愣子.</p>
<blockquote><p>老衲刚刚很严肃地向土地倾诉了一下忏悔。←top5!!这句话经常在脑内回荡hhh.<br>＂接下来三天你大肠米线里的大肠都归我了。＂←top10(笑.</p>
</blockquote>
<p>啊,三位男主角的人设完全没有做诶——!!<br>陆海空和沈燕然我也很喜欢hhh,会不会在大冒险里有更多的戏份呢.<br><br><br></p>
<p>最后附赠一下树哥的陆海空番外引言,全篇可以在树哥kami tag下找到(这个人先写的引言在写的本篇,剧情不一样orz).</p>
<blockquote>
<p>我叫陆海空，万万没想到，我的故事居然就这样登上了大雅之堂。<br>其实你们不知道，今年冬天的大雾都是被我帅出来的，早上起来没带口罩就去晨跑了，千不该万不该，都是我不好。<br>所以我只有沈燕然一个的朋友。一个每个月讲话像扣流量一样的朋友，还娶了一个不说话会死的老婆，简直看到他们两个就闹心。<br>而且我的智商比正常人要高，轻松考上了天才少年班，居然没有人拍着我的肩告诉我苟富贵勿相忘，反倒是一个长得非常好看的菜市场大妈还恋恋不忘我。于是我屈尊降贵的跟她处了对象。<br>我老婆和沈燕然的老婆还有一个共同的神奇的朋友，去深山老林里拐了个野男人回来，让我对她刮目相看。<br>总之，以上是我和这些人的25年人生，我们还会有很多很多个25年等着被记下来</p>
</blockquote>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>树哥是神</tag>
      </tags>
  </entry>
  <entry>
    <title>爱岚少爱生活</title>
    <url>/blog/2017/05/20/P027/</url>
    <content><![CDATA[<img src="/blog/2017/05/20/P027/P027.jpg" class="">

<p>520快乐呀.今年和岚少一起过///(you).</p>
<span id="more"></span>

<p>这人在我心中不单单是喜欢的游戏主播,倒是更像亲民的爱豆.</p>
<p>三观正,又风趣,能力强,人格魅力杠杠的.</p>
<p>因为时差的原因经常赶不上直播,最近一口气把直播翻出来听——这人是世界的宝藏吧,超容易就被她感染到活跃的气氛…!吐槽和玩梗也是随手拈来超合口味更不如说是这人太有才了!!!我也超喜欢她的认真!!靠谱的社会人也是靠谱的司机!!</p>
<p>不亏是我岚人.总之超级喜欢她?!!!</p>
<p>结论,爱生活爱岚少.</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>同人</tag>
      </tags>
  </entry>
  <entry>
    <title>小春日与12年级美术展</title>
    <url>/blog/2017/01/12/P026/</url>
    <content><![CDATA[<p>ｲｯﾃﾗ━━━━━━ヽ(´∀｀ヽ)━━━━━━ﾝ!!!!</p>
<span id="more"></span>

<h1 id="before-the-art-show"><a href="#before-the-art-show" class="headerlink" title="[before the art show]"></a>[before the art show]</h1><br>
due day一周前
我今天朕要宠幸谁好呢.

<p>due day12小时前<br>作业A:叫爸爸<br>作业B:叫爸爸</p>
<p>…………………………爸爸!!!!</p>
<img src="/blog/2017/01/12/P026/P026_2.jpg" class="">
<br>
期末了,就算我的vita酱放在了枕边我都没有时间打p4g了哭哭.
我art show的主人公是小春日哦!!
前两天查看了下旧博文…这孩子也要过两岁生日了,时间过得太快了.

<br>
<br>
<br>

<h1 id="the-art-show"><a href="#the-art-show" class="headerlink" title="[the art show]"></a>[the art show]</h1><br>
<br>

<p>各位新年好.</p>
<p>这个学期美术课大部分的时间都在准备这个show,在这里做个总结(唠嗑).<br>以及赶上申请大学准备作品集也是这段时间,试了各种不熟悉的东西.<br>虽然多半被画室的老师否了.<br>主角是我家的小春日,画得又有些小孩子.<br>不是很现实的红发打扮,然而却有代表有些nerd的眼镜.在故事里的设定也是藏在人群里的超强NPC,拿它来当主角再适合不过了.</p>
<br>
Art show是在学校的theater,黑色的背景再加上自带的灯,整体的效果真的是很不错.

<p>因为我有带声音,所以老师让我摆在了大门口.<br>超豪华待遇啊!!!<br>然而我的东西最乱啊!!!!(抱头遁地.<br><br><br>一进门看到的是我的短片.</p>
<img src="/blog/2017/01/12/P026/P026_3.jpg" class="">
<p>和我的树.</p>
<br>
(啊…老师总是忘记把我的电脑打开……)
<br>

<br>
<br>

<h3 id="【Wandering】"><a href="#【Wandering】" class="headerlink" title="【Wandering】"></a>【Wandering】</h3><br>
<br>

<p>啊我把电脑打开了w.</p>
<img src="/blog/2017/01/12/P026/P026_4.jpg" class="">

<p>(↓顺便一提把明信片也放在了这个桌子上发放↓)</p>
<p>(真的要发不出去了啊哈哈我已经开始练习以叠纸牌的方法叠明信片了x)</p>
<p>【b站存了个有声音的档】</p>
<div class="bili_video"><iframe src="https://player.bilibili.com/player.html?aid=NaN&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" width="544" height="452" allowfullscreen="true"> </iframe></div>
<p>正式挑战了动画!!!<br>是小春日在雨中奔跑.先是小春日本体——</p>
<img src="/blog/2017/01/12/P026/P026_run.gif" class="">

<p>然后是背景的定格动画.<br>去年学了在摄影棚中照相,高档的器材不玩一次怎么能算美术课毕业.<br>借此机会借来了灯与架子.</p>
<p>(↓我的脚↓)</p>


<p>↓雨滴担当的发票↓</p>
<img src="/blog/2017/01/12/P026/P026_6.jpg" class="">

<p>(不过最后效果真的不是很好hhh)<br>普通的发票在摄影棚下都可以变得好看!!(；-；)<br>最后拖到软件中合着BGM就成啦.</p>
<p><br><br></p>
<h3 id="【Crowd】"><a href="#【Crowd】" class="headerlink" title="【Crowd】"></a>【Crowd】</h3><br>


<img src="/blog/2017/01/12/P026/P026_1.jpg" class="">
<br>

<img src="/blog/2017/01/12/P026/P026_7.jpg" class="">

<p>(土下座)因为今年的新年明信片就是那这张凑的,所以一点儿都不喜庆,真是对不住了…!!<br>在初期计划的时候就把电绘算进去了一张.不过最后怎么展示还是苦恼了很久.</p>
<p><br><br></p>
<h3 id="【Flow】"><a href="#【Flow】" class="headerlink" title="【Flow】"></a>【Flow】</h3><br>

<img src="/blog/2017/01/12/P026/P026_8.jpg" class="">
<p>我的老师是摄影师,去年跟她学了摄影.<br>洗胶卷洗照片真的很有意思,而且我是喜欢能拿到手里的上世纪实物派,还是胶卷比较适合我.<br>不过隔了一个学期再挑战摄影还是觉得摄影太玄学了…作为一个本命担当R都抽不到的P还是早日放弃吧.</p>
<p>↓不巧选了最冷的一天去大多村转了一圈,这是在火车站↓</p>
<img src="/blog/2017/01/12/P026/P026_9.jpg" class="">

<p>↓圣诞节时的火鸡大餐↓</p>
<img src="/blog/2017/01/12/P026/P026_10.jpg" class="">

<p>↓和老弟他们的散步↓</p>
<img src="/blog/2017/01/12/P026/P026_11.jpg" class="">

<p><br><br><br><br></p>
<h3 id="【Rest】"><a href="#【Rest】" class="headerlink" title="【Rest】"></a>【Rest】</h3><p>使用材料是黏土.最初的主题是躺在夜晚的公路上.更直白的原因是实现把自家女儿实体化一次.<br>然而公路没有成功赶上show(捶地.<br>赶这黏土的时候我的眼镜二代正好碎了,就拿它去凑了.</p>
<img src="/blog/2017/01/12/P026/P026_12.jpg" class="">

<p>拥挤的城市中能感到空旷的也许是大马路了吧.<br>还记得那次在世博会呆到夜晚毕园,从世博园回我的伯父的家.<br>走出来的时候半夜也没有车,一群人就走在大马路的正中间,享受着四轮的待遇.突然地就很想躺下来看星星,超惬意.</p>
<p><br><br><br><br></p>
<h3 id="【Private-Space】"><a href="#【Private-Space】" class="headerlink" title="【Private Space】"></a>【Private Space】</h3><br>

<p>这张有参考些构图</p>
<img src="/blog/2017/01/12/P026/P026_13.jpg" class="">

<p>水彩.应该是完全无关的人物然而手一顺就画了习惯的发型…可恶有些出戏.<br>狭窄的空间能给我安全感.甚至内心深处还有会相信钻到狭小的橱柜里能让时间都暂停.<br>一小会儿也好,想抛下家人钻到衣橱里打游戏,抛下学校藏到locker里看实况,抛下工作躲到行李箱里看电影.<br>在属于我的空间外的事情什么都不知道哦.</p>
<p><br><br><br><br></p>
<h3 id="【Missing-Half】"><a href="#【Missing-Half】" class="headerlink" title="【Missing Half】"></a>【Missing Half】</h3><img src="/blog/2017/01/12/P026/P026_14.jpg" class="">

<p>这幅是油画.油画比水彩亲民多了!!<br>想画的是孩子想象中婚礼的花.花花绿绿的,不大真实.<br>“长大后的梦想是成为新娘”这样的愿望经常可以在电视剧里看到呢(笑.<br>对配偶有着美好的憧憬.幻想着对方可能的优点,可能是温柔,可能是有趣,也可能很聪明.<br>但是当渐渐渐渐的,当年龄靠近那时的梦想时,或者是自己的朋友交上了男朋友,看着他们的打情骂俏,对自己的憧憬却模糊了.<br>等着的是到底什么呢.<br><br></p>
<p>顺便一提我的幼时梦想是想挣钱.超简单直白.<br><br><br><br><br></p>
<h3 id="【最后是那个抢镜的树】"><a href="#【最后是那个抢镜的树】" class="headerlink" title="【最后是那个抢镜的树】"></a>【最后是那个抢镜的树】</h3><p>和从一元店里买回来的树屋w.<br><br><br><br></p>
<img src="/blog/2017/01/12/P026/P026_15.jpg" class="">
<img src="/blog/2017/01/12/P026/P026_16.jpg" class="">
<p>(可恶远看超乱的,近看倒是还行???布置的时候乱到我差点跪下来)<br><br></p>
<p>这个树是从家背后的树丛里抗回来的.<br>只是个布置,小时候就对树屋有莫名的热爱,也许是受小熊维尼的影响.<br>然后贴上了到处收集来的纸头,从博物馆里的传单到巧克力的包装纸,什么都有.我还剪掉了个老弟的地球仪x<br>围在桌子中间,不让人近距离观看.<br>有点像回不去的comfort zone吧.</p>
<p><br><br></p>
<p>以上就是全部了!!!非常感谢阅读.</p>
<p><br><br></p>
<p>12年级的美术课也上完了呢,有点寂寞.<br>最后是我的artist statement.<br>如果你跳过的话我给你总结一下,讲的是【大人的世界好难】.<br><br></p>
<blockquote><p>I was born and raised in a crowded place.<br>When I was in my hometown, school represents most of my memories.<br>When the bell rang for lunch, people rushed down the stairs to the cafeteria, lined up and queues filled the hall. Every day it was a 500 metres race.<br>People wear the same uniforms and are divided into groups, lines, and squares.<br>People are like the ocean tide.<br>Mediocre was the philosophy of life, my Grade 10 art teacher wrote on the board the first day teaching us. She was right, in some ways. Not everyone can save the world.<br>I feel safe in that tide.<br>But where does that tide go?<br>People work as hard as possible to get into the school they want. Then, they get the job they want. Then, they get married. Then, they buy a house, maybe 2 bed and 2 bath condo in the area which has the right school for kids in the future.<br>That anxiety pushes me to move forward.<br>I grow up, learning to be polite, friendly and thinking about others. But nobody teaches us the meaning of marriage or money or hard work. No nobody teaches us about us.<br>I am trying to question what I learn and what I see, but the tide never stops going.<br>I become a weirdo in the middle of the crowd.</p>
</blockquote>

<br>
<br>
<br>

<p>相关图书馆编号:char85.</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
        <tag>oc</tag>
        <tag>在日落之前</tag>
        <tag>奇怪作业</tag>
      </tags>
  </entry>
  <entry>
    <title>p4g和p5的涂鸦</title>
    <url>/blog/2017/04/03/P028/</url>
    <content><![CDATA[<h3 id="2017-04-03"><a href="#2017-04-03" class="headerlink" title="2017-04-03"></a>2017-04-03</h3><img src="/blog/2017/04/03/P028/P028_1.jpg" class="">
<br>
两只冰系小可爱XD.
<span id="more"></span>

<p>上周把一周目给通了,真是很棒的游戏呢.用了95的小时,normal模式迷宫也是卡了挺久.<br>现在准备二周目把social link等细节给看完.然后和完成和千枝交往的愿望.<br>说起来我一开始想攻略的就是千枝,然而四个人分组的时候就【(冷漠脸.jpg)诶你确定吗——你要让阳介和雪子单独相处吗!!】不啦我喜欢的是你啦千枝小姐!!!<br>但是她和阳介的默契度真是太高了…一对活宝.<br>-&gt;然后我吃着满满的醋去攻略理世了.<br>现在二周目带着满满的勇气值撩妹真是好开心啊hhhh.</p>
<br>
<br>

<h3 id="2017-04-03-1"><a href="#2017-04-03-1" class="headerlink" title="2017-04-03"></a>2017-04-03</h3><img src="/blog/2017/04/03/P028/P028_2.jpg" class="">
<p>日常欺负阳介(1/1)</p>
<p>学园祭那一段真是笑吐我了.<br>不愧是恶友们(x),互报选美比赛大写的就是个搞事情搞事情(.jpg).<br>Goodjob.真才是青春啊x.<br>Teddie出现的时候真是惊艳了!!脸真是可爱啊,女装和男装都能完美的切换.<br>你就是女孩子吧…!!!(不是<br>顺便一提我还挺喜欢番长女装的,可能是看不到立绘所以没有什么违和感.<br>最后,虽然我喜欢的是帅帅的直斗,但没有看到直斗的泳衣还是有些遗憾的x.<br>不过说起服装啊,在迷宫里能装备的服装才是这游戏最大的福利吧.<br>剧情里的服装已经是yoooooooooo的话,迷宫里的服装可是从和服到妹抖装啊!!妹抖装啊!!<br>制作组你们怎么这么懂.<br>不过还是想看立绘啊立绘——<br>剧情中的女生们:泳衣还是有些害羞的<br>实际上:你们已经只装着那几块布上演了不少美少女打怪了</p>
<p>(我个老流氓)<br><br><br><br></p>
<h3 id="2017-12-31"><a href="#2017-12-31" class="headerlink" title="2017-12-31"></a>2017-12-31</h3><img src="/blog/2017/04/03/P028/P028_4.jpg" class="">
<p>稍微 稍微多摸了一会儿…的梗图!!!</p>
<p>很糙呢抱歉(.<br>这段里面明明佑介一开始是认真的艺术家mode但是当杏殿把脱衣服的时候突然慌张真是笑吐了.<br>杏殿的这演技能上钩……是纯情吧!!<br><br><br><br></p>
<h3 id="2018-01-17"><a href="#2018-01-17" class="headerlink" title="2018-01-17"></a>2018-01-17</h3><img src="/blog/2017/04/03/P028/P028_3.jpg" class="">
<p>18年画的新年明信片.17年年初通关的p4g,夏天通的p5.选一个画明信片还是选了p4.<br>p5是时髦的是爽快的,但对友情表现的最深最温暖的还是会选择p4(哭).</p>
<h3 id="addition"><a href="#addition" class="headerlink" title="addition"></a>addition</h3><img src="/blog/2017/04/03/P028/P028_5.jpg" class="">
<p>挂在了大一那小小宿舍衣柜门上的每日睡觉提醒xx.</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>同人</tag>
        <tag>女神异闻录</tag>
      </tags>
  </entry>
  <entry>
    <title>京骚戏画的同人</title>
    <url>/blog/2017/06/11/P029/</url>
    <content><![CDATA[<img src="/blog/2017/06/11/P029/P029.jpg" class="">
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>同人</tag>
      </tags>
  </entry>
  <entry>
    <title>2017的年终总结</title>
    <url>/blog/2017/12/29/P030/</url>
    <content><![CDATA[<p>写个年终总结.今年过的很艰辛了.</p>
<span id="more"></span>

<img src="/blog/2017/12/29/P030/P030_s.jpg" class="">

<p>才发现圣诞帽漂浮在光头上面哈哈哈.<br>今年是很浩荡的一年呢.</p>
<p>我认为进入大学之后,或者说高中毕业之后,所拥有的日常就已经结束了.之后都是每日不安定的非日常生活.<br>可能是我小学初中,甚至到高中过的太安定了,所以突然进入社会人预备级就很有冲击了.<br>简略的算了算人生旅程,能忘我的潇洒的日子根本不存在嘛.那是哪个人编出的谎言,说的高中还是大学总有年轻人逃课打游戏那样不计后果的享乐生活.没有的,不存在的,什么东西都是有后果的.一不小心就要回家种田了,game over时时刻刻离自己都是很近的.</p>
<p>我不想回国啦!!!<br>真的好讨厌回国啦!!!</p>
<p>(指的是回国工作)<br>(或者是回国种田…)</p>
<p>说真的,我,一年比一年丧了,还一年比一年冷漠了.</p>
<p>明明知道这样的状态不是很有利的,但是好像也没有改变的方法.<br>在tt centre赶作业赶到1点那种时候,大家的大脑会产生酵母菌发酵一样神奇的反应.<br>还可以听到隔壁桌很认真的思考哲学与人生.<br>人文科有什么意义呢,都是人类所创造出来的东西.科学是精准的,但也只是人类造出来的秤罢了.<br>活着说到底根本没有答案嘛,结果大家一百年之后都会死掉那么活着是干嘛啦.</p>
<p>这种平时一直都在但是没有讨论的问题摆上桌子其实是很基本的问题了.<br>【终极问题】这种词是哪个人拿出来唬人的.前面的东西看不清就唬后面的人说很难哦,很高端哦.<br>但是大家都在往前走啊,这是没法避免的嘛.</p>
<p>所以嘛,所以啊.</p>
<p>明明已经到能合法喝酒的年龄了但是思维总觉得偏移了阳光健康的正常道路.<br>不不不,说不定阳光健康的那个【正常】本身就是不存在的.你想想,社会主义核心思维这种东西也是骗人的嘛.<br>存在不一定合理,个体也不一定了结总体.<br>人类真是孤独.</p>
<p>人志各不同,能早日意识到这份该死的孤独就早日开始自己的非日常了.<br>还能接受自己就行,还能喜欢着自己就行.<br>教副科的老师学到三十岁当上了牙医但真是实在不喜欢回去重修教育,<br>她说有些人这个年纪就做着喜欢的事那是份幸运.<br>幸运啊.</p>
<p>自由引领着成为自己想成为的人吧.<br>那先拥有自由吧.<br>自己的那份自由可能包含了每月收入,G牌驾照,大学文凭,面试经验,看懂地图,弄清公交车的方向和线路.</p>
<p>虽然我现在才刚克服最后一项(笑).</p>
<p>我只是最后有一点害怕.<br>我有努力想划分将自己和自己的环境分开来思考,但总体上来说,谁又不是环境的一部分呢.<br>少上网吧.<br>虽然这个人道的压榨青春的学校被很多毕业的学长们深爱着.<br>但12点走在回宿舍的路上还是想大喊一声<br>傻逼滑铁卢!!!!!!!<br>我的讲话完了.</p>
<p>这个人要没朋友了</p>
]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
        <tag>年终总结</tag>
        <tag>Thank you Mr.goose</tag>
      </tags>
  </entry>
  <entry>
    <title>随处可见的</title>
    <url>/blog/2018/01/29/P031/</url>
    <content><![CDATA[<img src="/blog/2018/01/29/P031/P031_1.jpg" class="">
<span id="more"></span>

<img src="/blog/2018/01/29/P031/P031_3.jpg" class="">
<img src="/blog/2018/01/29/P031/P031_2.jpg" class="">
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>Just two of us</title>
    <url>/blog/2018/03/11/P033/</url>
    <content><![CDATA[<img src="/blog/2018/03/11/P033/P033_1.jpg" class="">
<span id="more"></span>

<img src="/blog/2018/03/11/P033/P033_2.jpg" class="">

<p>Uu给的歌单特别好,其中一首很适合我家这对就涂了涂←<a href="https://www.youtube.com/watch?v=PJ0u5c9EF1E&ab_channel=ClaudinhoVianaII">youtube</a></p>
<p>是狼和兔.</p>
<br>
<br>
<br>

<p>偶尔会想,为什么人会结婚呢.为什么会有为了结婚为准备的法律呢.<br>我跟妈妈偷偷透露这个问题的时候,她会很认真的跟我说,将来选男人的时候要怎么样.<br>然后我回答,不是,不是结婚是怎样,我的问题是结婚是什么.<br>然后她还是接着刚才的继续说下去.<br>唔啊.<br>妈妈总不会给我答案.<br>自然而然的就到了这个岁数了.明明什么都还没搞懂.<br>直到最近会时不时感觉孤独.<br>跟朋友解释,不是对男女之情的憧憬.不如说能如此信任一个人真的很难.<br>想能有一个人.<br>普通的能随意说话,普通的能一起讨论人生.<br>嗯,就像是刺猬能露出肚子一样.</p>
<p>世界好大,人类好小.<br>把自己一头扎进人群里面很麻烦.<br>能有人一起往相反方向跑,接受大气压,接受地心引力,接受我们总会消失掉的结局.</p>
<p>如果能那样就好了.</p>
<br>
<br>
<br>

<p>相关图书馆编号:char30,char31.</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>oc</tag>
        <tag>狼与兔</tag>
      </tags>
  </entry>
  <entry>
    <title>左滑来拯救这位孤独的人</title>
    <url>/blog/2018/05/25/P035/</url>
    <content><![CDATA[<p>左滑来拯救这位孤独的人.</p>
<span id="more"></span>

<br>
<br>
<br>
<img src="/blog/2018/05/25/P035/P035_1.jpg" class="">
<img src="/blog/2018/05/25/P035/P035_2.jpg" class="">
<img src="/blog/2018/05/25/P035/P035_3.gif" class="">
<img src="/blog/2018/05/25/P035/P035_4.jpg" class="">
<br>
<blockquote><p>这篇是以instagram那样的划屏预览为设计,作出互动的内容.</p>
</blockquote>
<br>
<br>
]]></content>
      <categories>
        <category>画</category>
      </categories>
  </entry>
  <entry>
    <title>老兔的电话面试</title>
    <url>/blog/2018/07/16/P034/</url>
    <content><![CDATA[<p>老兔:根本没在怕的.<br><br></p>
<img src="/blog/2018/07/16/P034/P034_1.jpg" class="">
<span id="more"></span>

<img src="/blog/2018/07/16/P034/P034_2.jpg" class="">

<p>自称:穿睡裤可以减少焦虑.<br>老哥:也会增加老板不要你的几率.</p>
<blockquote><p>之前的博客预览是只显示第一张,所以做了打开全部内容会改变意思的设计.</p>
</blockquote>

<br>
<br>
<br>

<p>相关图书馆编号:char02.</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>oc</tag>
        <tag>家庭组</tag>
      </tags>
  </entry>
  <entry>
    <title>2018的年终总结</title>
    <url>/blog/2018/12/29/P036/</url>
    <content><![CDATA[<p>每年的定番,这里是今年的年末喝茶唠嗑().</p>
<p>这个脑子越发奇怪的人的年末唠嗑……今年不拼图因为一直在咕咕()就唠唠学业吧.</p>
<span id="more"></span>

<br>
<img src="/blog/2018/12/29/P036/P036_1.png" class="">
<img src="/blog/2018/12/29/P036/P036_2.png" class="">

<p>首先发放送给一直画给我们发果冻的教授,的课堂吉祥物x.<br><br><br>那么ry</p>
<br>
<br>
<br>
<br>
<br>


<p>前年的这个时候我应该是在做一个12年级的art show,最后做了些给高中的东西.<br>去年的这个时候我应该是经历了考学的余波,抱着一颗胆胆怯怯的心,过着像炒股一样盯着GPA的日子.</p>
<p>今年的话越发佛系.大一新生倒是给学校活力,搞得我格格不入.青春的激情是不是像涨潮退潮一样的东西.<br>我是因为逃避没达成的愿望才来到这个学校的(……),学校一半是个盈利组织,不是慈善机构.越发觉得除了头疼的功课,自己的技能点想往哪里学真的很重要.<br>我过于弱鸡……这个地方消磨着我对生活和未来的活力.真是本末颠倒了.</p>
<p>记得真正在这里的第一个学期,唯一期待的就是编码课了.仔细想想,今年也算是从零开始……到零点一的编码生活(……).回想起来那时候可是连为什么我的码不会跑都不知道的人……(因为我没有按run(苦笑)).<br>第一个学期结束,教学语言racket学完的时候,编了一个小小的代码用作karma目录的加密工具.那时候还会把码用文字po出来呢,太naive了我!现在po码只会觉得丢人!!(因为会暴露我的码怎么看怎么垃圾的事实!).<br><br></p>
<p>后来开始学更多的微积分,代数方程,统计和几率(乐中于算抽卡游戏的概率x),挂了代数方程……修完了c语言.<br>学c的时候,感觉得在学一些有用的东西了.可惜我们是在学校系统写的,也没有什么有趣的或者是使用的功能,而且学那些基础的东西的时候,挺吃力,分很低.<br>在修c++的时候,大部分的人已经都是电脑专业的朋友了,都去过次实习,会java呀python呀等等的.是熟练的编码人了.<br>我挺羡慕的!但是我也觉得我这个莽夫去选这门课我也是有够勇气的!上学期stack都只写了50分呢!(为什么自豪哦……).</p>
<br>
最后这个学期我遇上了激励我很多的飞哥,飞哥是优秀的编码人.
果然有优秀的人在身边就能看到真正优秀的地方呢.
之前说不是我这个莽夫(笨蛋)吗,比如说c++的时候,写到了第三个作业了,飞哥发现我的初期设定有问题……和课友写作业的时候人家的主页面有头牛,我的没有,我一直没在意.直到我的compiler有问题(......).
然后经过飞哥的帮助下,开学都二个月我才见到了这头牛.

<img src="/blog/2018/12/29/P036/P036_3.png" class="">
<br>

<p>(它很烦,会在我半夜赶码的时候祝我have a nice day.)</p>
<br>
好我刷出来了().

<img src="/blog/2018/12/29/P036/P036_4.jpg" class="">

<p>赶码很痛苦,也许做其他的工作也是这样的吧.<br>有周的作业怎么写都写不出来,熬到再晚也没有用.早上醒来码是不会自己完成,撑着最后一口气去学校写ww(那时我的电脑还坏掉了wwww)最后借了课友的电脑,真的得谢谢她(和她的猫),是革命战友了.<br>那一周我得了28,我也许是写的比较久却什么都没写成的那一派.嗨呀,还不如多睡一会x.<br>虽然这么说还是会去熬个夜再试图多过一个test().<br>后来慢慢才懂了些如何自己搜问题,问问题,如何自己学自己查找,如何有计划的去debug.<br>(虽然是这么说,debug还是很要命.)<br>在某个平台上遇到了位大佬:这行没些自学能力是不行的.也算是刻骨的体验过了.<br>后面写过的有些意思的作业是生命游戏(Conway’s Game of Life).</p>
<img src="/blog/2018/12/29/P036/P036_5.gif" class="">
<p>因为这是我第一次让我的码可以可视化.还是很开心的.</p>
<br>

<p>有想过把这个再次利用,放在一些有趣的地方w.<br>最后一次的作业是三人合作的小组作业.之前和课友说好了要共苦共难到最后,结果一场地狱期中考试两个人都drop走了,我是唯一剩下的一个(……).<br>最后是用这个课的论坛(相亲网站x)找到的不靠谱队友.<br>算是学了快一年了,终于我学到了正经流程!使用Git!(用于合作写项目)<br>但是我们三个人都没有使用Git的经验,有位同学乱学了我们就这么用起来了.<br>之后跟飞哥谈了谈才觉得哪里不对劲.</p>
<br>

<blockquote>
<p>飞哥:呃……我给你举个例子 这是只笔吧 你们这是在用笔当筷子吃面<br>飞哥:你们写完后就互相拉黑吧.</p>
</blockquote>
<br>
可以的.没毛病.安排上了(x).
最后一个作业我们组选择了双人俄罗斯方块.

<br>
以前的作业是基本的结构想法都告诉了我们的,毕竟我这种人c++的语法都要纠结老
久,平时已经足够挣扎了xx.这个是从零开始考虑的.
好在是小组合作嘛,虽然队友一个比一个不靠谱,每人想出自己负责的部分慢慢的实现,速度比一个人快太多.

<br>
一看就知道是我负责的视觉效果().

<p>因为学校服务器过于卡了,我开了三倍速还能看到卡顿,就gif意思一下()</p>
<p>截图是这样的.</p>
<img src="/blog/2018/12/29/P036/P036_6.gif" class="">

<p>(btw我现在才发现我的苹果偏色…挑的明明是小清新的青色orz.)</p>
<p>(明明做的是俄罗斯方块但是我测试的时候基本没有消过行…技术辣鸡x.)</p>
<br>

<img src="/blog/2018/12/29/P036/P036_7.jpg" class="">

<p>那段时候也是结课,大家都忙忙,过着中午起床,晚上回宿舍,再忙到前半夜的日子.11点开始做晚饭是经常的事.<br>说来和我的不靠谱队友基本是每天放课后去图书馆集合,最后天说好能交掉再去吃火锅庆祝一下.</p>
<p>非常标准的flag.<br>越写越发现更多的bug,约好7点写完,debug到11点.<br>然后有位队友受不了了.和另一位吵起来了.<br>“我觉得就这么不让吃饭来写作业很没有人性.”<br>但是大家都很饿,没有怒火就这么原地解散了.<br>那时候飞哥也来找我学习,然后被我们编成了段子x.没有人性同学和乱用git同学xx.</p>
<br>

<p>讲真,在死线面前不睡觉不吃饭谁都有过这种经历.能活到二年级大家都懂,大家都累.<br>想吵架也没有恨意在里面,目标反正是一样的.<br>最后一个作业也和平的(在和助教尬笑中)demo结束,很神奇.</p>
<br>

<img src="/blog/2018/12/29/P036/P036_8.jpg" class="">
<p>这个是学校Git账号的记录.</p>
<br>

<p>Git有记录你每次上传的次数和时间,看着还是很欣慰的w.<br>最后这个学期,或者说今年也算是安稳的度过了…顺便一提我不是计算机专业的哦.<br>也不知道以后会去做什么ww.明年的目标是在摸鱼中努力毕业.<br>(我在打字的时候飞哥在跟我语音玩八分音符酱我爆笑.)<br>(笑到我智商极降,那么这次就先到这里吧.)</p>
<br>

<p>明年再见~</p>
]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
        <tag>年终总结</tag>
        <tag>Thank you Mr.goose</tag>
      </tags>
  </entry>
  <entry>
    <title>Social loneliness</title>
    <url>/blog/2018/08/10/P037/</url>
    <content><![CDATA[<img src="/blog/2018/08/10/P037/P037.jpeg" class="">
<br>
<span id="more"></span>

<p>总觉得人类是没法共情的.<br><br></p>
<p>知道对方在难受,可能也知道些为什么因为有相同的处境.但距离好远.物理与心理上都好远.<br>以前高中的时候我能做的是去趟小卖部,刷我的饭卡,然后陪着朋友在网球场那里随便聊天.<br>聊什么不重要,无法解决任何事,所以其实挺多事情都不会重要,但在那个时候,对某个人来说是重要的,可能对他来说一直重要.<br>因为自己的价值观相信的东西果然很难传递给他人.我也只能在乱说话.<br>大家都难.连难处都不可以说的文化下大家真的都难.<br>明明知道大家都会难,还是会有【只是相信纯粹的东西】而希望对方一切都好.<br>明明是不可能的.但是还是会这么做.<br>最后【希望你天天开心!】会不会只变成了句现代人之间的惺惺相惜.</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>第一次也许是最后一次的oc不安利小集合</title>
    <url>/blog/2018/06/24/P032/</url>
    <content><![CDATA[<p>封面那张根据东云老师的建议改了一下.<br>∩(´･ω･)つ_*’*:.｡. .｡.:<em>･゜ﾟ･</em>　</p>
<span id="more"></span>

<img src="/blog/2018/06/24/P032/P032_1.jpeg" class="">
<br>
<b>[0 65535 32767 10904 20583 26107 19139 38230]</b>

<p><b>Karma.</b></p>
<p>这里[karma]这个故事里的篇章主角和目录草稿.</p>
<blockquote><p>这里是博客再整理时的里约.<br>最初还…蛮想把oc的一些想法都整理发布出来.<br>后来又修修改改,杂乱又不够简介,于是没有发布的念头了.<br>这里是当初留下的草稿,也就让这草稿留着吧.</p>
</blockquote>
<br>
<br>
<br>
<br>

<h1 id=""><a href="#" class="headerlink" title=""></a></h1><img src="/blog/2018/06/24/P032/P032_2.png" class="">

<p>1-1 尸体<br>1-2 犬<br>1-3 鬼</p>
<br>
<br>
<br>

<h1 id="-1"><a href="#-1" class="headerlink" title=""></a></h1><img src="/blog/2018/06/24/P032/P032_3.png" class="">

<p>2-1 邮轮<br>2-? 夏日<br>2-2 杀意<br>2-  工厂<br>(2-adt 旧友)</p>
<br>
<br>
<br>

<h1 id="-2"><a href="#-2" class="headerlink" title=""></a></h1><img src="/blog/2018/06/24/P032/P032_4.gif" class="">

<p>3-α  过去<br>3-β  未来</p>
<br>
<br>
<br>

<h1 id="-3"><a href="#-3" class="headerlink" title=""></a></h1><p>Re:2</p>
<br>
<br>
<br>

<h1 id="-4"><a href="#-4" class="headerlink" title=""></a></h1><img src="/blog/2018/06/24/P032/P032_5.png" class="">

<p>日后谈</p>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<img src="/blog/2018/06/24/P032/P032_6.jpeg" class="">
<br>

<br>
<br>
<br>

<p>相关图书馆编号:<br>char42,char44,char4E,char50,char55.</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>oc</tag>
        <tag>卡尔马</tag>
      </tags>
  </entry>
  <entry>
    <title>这个人类的使用说明</title>
    <url>/blog/2018/11/26/P038/</url>
    <content><![CDATA[<img src="/blog/2018/11/26/P038/P038_1.jpg" class="">
<span id="more"></span>

<img src="/blog/2018/11/26/P038/P038_2.jpg" class="">
<br>
↓衣服前面的介绍大概是这样的感觉↓

<p>通用名称:<br><br><br>人类.</p>
<p>组成成分:</p>
<ul>
<li>65%的水</li>
<li>35%的白日梦</li>
<li>3公斤的碳水化合物</li>
<li>7公斤的脂肪</li>
<li>12公斤的蛋白质</li>
<li>3公斤的矿物质<br></li>
</ul>
<p>注意事项:</p>
<ul>
<li>虽然是量产的,每位人类都会有不同,请注意.这也许是优点.</li>
</ul>
<p>贮藏:</p>
<ul>
<li>请温柔对待.也许多晒晒太阳会有好处.</li>
</ul>
<p>保质期:</p>
<ul>
<li>今天还没过期.<br>
<br>
<br></li>
</ul>
<p>以人类使用说明为想法的包装(衣服).<br>感觉介绍能有不少奇怪的东西可以写的/  ( * · _ ·*`   /   )</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>在花店打工的猫猫(?!)</title>
    <url>/blog/2019/05/06/P039/</url>
    <content><![CDATA[<img src="/blog/2019/05/06/P039/P039_1.png" class="">
<span id="more"></span>
<img src="/blog/2019/05/06/P039/P039_2.png" class="" width="370" height="420">
<br>

<p>给朋友画的头像稿.不可以用哦.<br><br></p>
<p>【最近来花店帮忙的小哥哥,温柔近人,不过爱好是将把猫猫包进花束里?!】<br>选择的是木天蓼和薄荷,听说是猫猫可以吃的品种,没有花语的意思.<br>搜的时候才发现大部分花猫猫都不能吃…my fault().</p>
<br>

<p>人设是我做给他的.是对他本人的印象.</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>给朋友的画</tag>
      </tags>
  </entry>
  <entry>
    <title>2019的年终总结</title>
    <url>/blog/2019/12/30/P041/</url>
    <content><![CDATA[<p>年末总结.<br>这次是作为普通在他国学数学大学生的闲聊.</p>
<span id="more"></span>

<br>
<br>
<br>

<p>翻了翻博客,这是第三篇了.<br>每年都觉得没有做太多的事情,但读上一年的总结文章,无论是语气还是思想都改变了不少.这就是时间的力量吧.<br>我总忘事,记录最大的目的是为了了解自己一年的经历.</p>
<br>

<p>年终总结…基本都是学业的事.我的生活,两点一线().<br>学校一年三个学期.今年修了冬天和秋天,夏天休学四个月回了国.<br>冬天是我作为二年级最后一个学期…原本应该是这样的.<br>连读五个学期,精神上到了受不了的程度.普通的学生学校期待是选五门课一个学期,我只能做到学四门课.最后的结果是今年的秋天因为学分被学校踢回二年级.<br>不愧是我呢……已经留级确定了(苦笑.</p>
<p>学校学数学的前两年基础课是微积分,线性代数,一点点的图论和记数,c语言.<br>对对我们学校不是计算机系的也要求学c语言或者python.<br>专业要求还有优化(co)的入门课,co250.今年的冬天正好把所有的基础课修完了.<br>基础课是数学,作为最基本工具而学的.以为好不容易考过了期末可以跟它分手,没学好的话却在3和4开头的课无数次出人意料的地方来揍你.<br>就比如说冬日上了co两门后续课.351和456.分别为net work flow和game theory.都用到250中关于linear programming的知识.</p>
<p>(翻译成中文大概是 送快递课 和 打游戏课 吧!)<br>(开 开个玩笑,是物流优化和博弈论)</p>
<p><br><br></p>
<p>250遇到的老师……很不好,课是期末考试一个月自己背书本考过的.那本书在秋天的四个月就像诅咒一样永远住在我的包里……欠下的债都是要还的呢.</p>
<p>好好休息的四个月是有用的.<br>秋天的时候没有像年初一样会熬夜赶due,基本都是提前一周开始写题,离deadline还有一两天就可以完成.过得比较规律了.规律是件很好很好的事,避免在死线前慌神.<br>因为开始写题得早,所以能赶上老师的帮助,也鼓起勇气经常跑老师办公室.<br>教授,Martin pei的办公室很可爱,有马里奥砖块的抱枕,题目为辛辣数独的练习册,堆积如山的桌游.每次去都情不自禁的开心.<br>三年级的课一个班也就五十来个人上同一门课,问老师还是比较容易的.<br>都是很难但蛮有趣的课.对我来说真的是越学越吃力.自己能力无法再理解更难的东西了.但数学又是有逻辑道理的.沿着它所帮你铺好的东西走,总觉得道理好像又没那么难.很神奇.也是感谢和我一起每个周末在图书馆苦思冥想的课友,没有大家互帮互助还真撑不下来.<br>第一个月还是有努力参加game jam…之后就没力气了,今年都没怎么写码,很对不起阿怜(我的游戏主角).</p>
<p><br><br></p>
<p>今年最大的进步…是考出了驾照!国内和这里的都考到手了.<br>能开车的感觉比我想象的要好很多.夏天的时候回国帮全家跑腿,我们家住乡下,能靠自己的力气什么时候进城都行,终于有点成年人的能力了.<br>成年人的大家都好厉害.我差得远……<br>我很佩服独立的大家的生活.生活很重要.</p>
<p><br><br></p>
<p>今年室友开始学做菜,我负责洗碗刷锅,来节约时间.<br>要好好的认真生活,好好思考吃饭,好好安排睡觉.总觉得能从这里面获得能量.明明是很基本的事.<br>我的室友是个很淳朴的人,能从吃饭感到快乐.夸奖她的做饭她会开心.给她带奶茶会说我爱你.</p>
<p>为什么会讨论这么基本的事情……<br>状态越来越不好,去体检的确是胃出了问题.睡眠没有检查,但经常做被追被杀的梦.<br>有段日子连续一周以不同的方式在梦中死掉.<br>梦境不会给身体伤害,但会疲倦.太经常的死亡会让人觉得现实很模糊.<br>考完351的夜晚好好的睡了10个小时.久违的只是去不认识的小镇散步.梦到了有趣的陌生人.醒来之后才觉得好久都没做那么悠闲的梦了.<br>不想在这里阐述学习的辛苦,因为大家都各有各的难处.<br>只是想说一定要有去找帮助的勇气和方法.<br>好好的明白自己会受的困难,好好思考如何去度过.<br>我是用约oc稿子的方式度过……草自己根本没在画.<br>如果是在外求学的朋友大概更能明白这份疼痛,大家要加油.<br>为什么特地在年终总结时停下来说生活.好好从最基本的地方开始思考生活是一种哲学……!是能面对虚无,让人拥有加踏实地的力量.</p>
<p><br><br></p>
<p>嘛,对我来说就是这样.生活的一点一点小事,这是今年越发像强迫一样的去做的事情.</p>
<p>昨天跟敬仰的实况主聊了天,谈觉得自己无法兼顾sns社群和普通的生活.<br>我觉得我把来博客给大家看我所做的东西和单纯的制作我喜欢的东西这两件事情搞混了.<br>所以得重头再思考一遍.非常感谢他给我了很多的勇气!</p>
<p>所以明年博客主的计划…是没有计划!<br>我得对自己更加的真诚,才可能做出自己也喜欢的东西.<br>下次有精力再谈谈我学到的有趣东西吧.<br>这次就先在此停笔.</p>
]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
        <tag>年终总结</tag>
        <tag>Thank you Mr.goose</tag>
      </tags>
  </entry>
  <entry>
    <title>GJ记录_HomePacker</title>
    <url>/blog/2019/01/27/P042/</url>
    <content><![CDATA[<p>⊂⌒~⊃｡Д｡)⊃ｱｳｱｳｱｰ</p>
<span id="more"></span>


<h2 id="【GJ进行时】"><a href="#【GJ进行时】" class="headerlink" title="【GJ进行时】"></a>【GJ进行时】</h2><img src="/blog/2019/01/27/P042/P042_1.jpg" class="">
<img src="/blog/2019/01/27/P042/P042_2.jpg" class="">
<p>清晨四点的校园,大声的喊中文都不在乎.<br>我一直都在焦虑,而且最近更加严重,往后也不好说能不能好转.<br>焦虑的原因反而归于单纯了.<br>我太担心自己糟蹋可能性了.生活一直在挣扎线,却只看着遥远的有些残忍的事物.<br>这能对我的生活有任何帮助吗,不会吧.<br>但是总会被吸引啊,没有办法的.<br>当人类很开心啊.<br>所以会不敢弄糟,忍受不住乏味,会贪心,会觉得自己没在活着.<br>最后被自己的感情给吞没去.<br><br><br><br><br><br><br><br></p>
<h2 id="【GJ报告】"><a href="#【GJ报告】" class="headerlink" title="【GJ报告】"></a>【GJ报告】</h2><p>我来丢人了!!!</p>
<p><b>【游戏制作记录】</b></p>
<p>是参与global game jam 2019 winter,48小时限制游戏制作的活动记录.<br>游戏名字: HomePacker.<br>制作软件: unity和photoshop.</p>
<img src="/blog/2019/01/27/P042/P042_8.gif" class="">
<p>demo的时候已经丢足脸了,就让这个成为我美好的黑历史回忆吧(狗头.jpg<br>这次还是当我唠嗑,算是第一次参加这种活动,也是第一次做出了个算是可以玩的东西.所以记录一下^ ^.<br>game jam一个学期一次,上个学期就想参加了.上次想避开编码,用rpg maker做个简单些的.叫了三位朋友,咕了三位,立绘都没画完就连我都不得不回去赶作业(……).</p>
<p>大失败.</p>
<p>这次在去过hackathon(限时的编程活动)之后,说实话更有(心理准备上的)经验,算是平安的走完了全程.<br>game jam这次的主题是what does home mean to you.跟朋友探讨了几个idea,决定的是【将安全空间背在背上,的生存向游戏】.<br>因为是我做美术,所以主角就决定是幼女了(认真).</p>
<blockquote>
<p>室友:去年你想做基佬恋爱,今年做幼女求生,你这个人就是靠这种来吸引我(摇头).<br>我:是啊,谁能拒绝幼女呢.</p>
</blockquote>
<img src="/blog/2019/01/27/P042/P042_3.jpeg" class="">
<img src="/blog/2019/01/27/P042/P042_4.jpg" class="">
<p>然后开始分配任务.<br><br></p>
<p>补给物品的随机生成——&gt;室友<br>角色走动动画——&gt;我<br>hp和san值条的设定<br><br></p>
<p>当然初期也设想了比如说剧情的演出,关卡设定,最高分设定等等.完全没来得及做.<br>我们队一开始就两个人,都没有unity经验.这个game jam是48小时计时.我画人物行走图,室友在翻教程.到时间过半的时候才开始创建unity文件,真的,我以为都要咕咕咕.<br>24小时的时候有选择性demo.其他的组有些已经有了很不错的原型,不过有听到他们有远程的协助者,于是demo结束后我直接给飞哥打了电话.</p>
<blockquote>
<p>飞哥:周末好闲啊我们做app吗.<br>我:我们game jam要凉了,现在聘请你还来得及吗.</p>
</blockquote>
<p>于是</p>
<p>hp和san值条的设定——&gt;飞哥</p>
<img src="/blog/2019/01/27/P042/P042_6.jpg" class="">


<p>好在unity能做到三个人同时编辑文件,我们这次没有用git.<br>(我怂,上次hackathon的时候我又双叒叕把git用错了,(用错是有可能导致对方丢失进度的),队友没有把我列进人生黑名单真是太感谢了.)</p>
<p>非常感谢后加入队的飞哥.我们是踩着最后的死线把半成品交上去的.如果没有飞哥,这个游戏真的是个幼女在末日世界开心不劳而获(?)的游戏了.<br>game jam比hackathon人性化很多.hackathon我们在学校lab就地打铺,只睡了两个小时(…).五点钟的时候绕学校走一圈,mc三楼的小沙发上躺着一个个盖着毯子像小丘一样的同学.这次好歹是睡了点的.<br>但有句说句.我的室友第二天又睡到失联,差点没赶上demo.<br>前24小时我边听完了百合露营()边在画+修正行走图.因为之前都是把绘图当做休闲,集中的赶图还是第一次.手到周一还疼(我太弱了!!!!!).美工成本比想象中的高很多.原来还计划着背景的作画,或者是前景和障碍物之类的.完全画不过来.</p>
<img src="/blog/2019/01/27/P042/P042_9.png" class="">
<img src="/blog/2019/01/27/P042/P042_10.png" class="">

<p>说实话这让我重新考虑想美工这件事().之前就觉得如果去做UI很耗时,而且会学不到太多编程.真想把一部分美术包给别人(.<br>后面的24小时就是翻教程将图导入进去了.<br>最后在测试平衡性的时候跟室友出了矛盾.<br>合作最大的好处是会省下巨大的时间.最大的麻烦的事情是【你以为你们在做同样的事,可是和对方脑内想象的不一样】.<br>对方设想的是快速的小游戏,低像素,主要占比是干脆简单的游戏机制,快节奏.<br>我是幼女占游戏主体很多,节奏会慢一些的,甚至会加入一些探索元素的游戏.</p>
<blockquote>
<p>飞哥:诶末日情节我们要不要把幼女做成变异人啊.<br>我:wwwwwwwwwww<br>我:我会画成魔法少女的哦?</p>
</blockquote>
<p>说实话陷入这个情况很糟糕.特别是当时还有十来个小时要上交了.<br>也因为这个原因,这个游戏可能并不会继续下去(嘛毕竟也是一个周末的小游戏).<br>我会担心如果快节奏,我做的幼女设定(还准备加入和已经去世的狗狗的互动情节)会很不尊重生命.<br>这个问题也没等解决demo的时间就到了.<br>是的,是整个活动最期待的!膜拜大佬的时间了!</p>
<p>(也是记载这篇文章的目的 嗯)</p>
<h3 id="showcase"><a href="#showcase" class="headerlink" title="showcase"></a>showcase</h3><p>游戏是个范围很广的词,有互动成分的都可以算是游戏不是吗.这个game jam桌游可是参加的.我们这个场地的大家也是各种各样的题材都有呢.</p>
<p>没有编程的朋友选择了自带了rpg元素的程序(用rpg maker的也有呢),还有做视觉小说的.<br>场地是在阶梯教室里进行的,我有偷偷看到那组视觉小说的朋友,画风很稳定(同样是美工,感受到了羞愧),背景用的是素材,整体的完成度很高呢.<br>用rpg maker的组做的剧情向的游戏,是猫猫出门冒险的主题,像素地图做的真的美…如果能全部完成的话还是很精致的.</p>
<p>game jam是每组人数不定的.最强的两组有一组是大佬solo,还有一组是六位大佬(+远程音乐人),真的很酷.<br>有些大佬是将台式电脑带到了会场,又加上笔记本双开,气势上就知道是个狠角色xx.</p>
<p>那位solo的佬就是台式大佬,用unreal做的3D跑酷向游戏.抓钩跳过障碍.大佬在半场demo的时候就把游戏雏形做出来了,这也太快了吧!</p>
<p>小组成员六位的做了个四人联机捉迷藏游戏…一个人当鬼(鲨鱼),其他三个人当鱼(被捉的人).如果在鲨鱼追到前三人团聚的话就是鱼赢,鲨鱼团灭了对方就是鲨鱼赢.</p>
<p>solo佬毕竟是solo,素材用的是默认材料.这组朋友自己做的3D模.<br>各位还记得那个【吃我咸鱼突刺.jpg】的表情包吗,给鱼的模型做了双手双脚,像那个表情包一样的魔性.鲨鱼则是加上了兄贵肌肉手,前进的方式是将划桨一样的前进,有毒吧!!</p>
<p>3D的魅力真的很大!<br>还有很厉害的组做了online联机游戏,3D探索向游戏,都是非常技术向的组!!果然是有趣的人而且拥有着很厉害的技术,所以能把那份有趣好好的展现出来呢55555.</p>
<p>demo的时候.</p>
<blockquote>
<p>我:讲真要不我们就别上去了.<br>室友:来都来了,对吧.</p>
</blockquote>
<p>最后的总结.</p>
<p>上次hackathon我是做UI设计,就是排版那种感觉吧.所以我们做的app还算是视觉上ok.这次直接跳到画小人了.真的很不应该,应该好好回去思考一下先把整体的视觉敲定,跟组员好好沟通.认真滴计算时间,完成是第一步的.游戏的机制是最重要的.美术很耗时但是美术是辅助品.重点不能再搞错了.<br>动画比我想象的难画很多,但是2D动起来的时候我还挺喜欢的.可能还会再思考思考.<br>嘛,也真的不是在逃避3D啦…相信我.</p>
<p>下次还想再参加呢!<br><br></p>
]]></content>
      <categories>
        <category>项目记录</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
        <tag>oc</tag>
        <tag>Thank you Mr.goose</tag>
        <tag>Game jam</tag>
        <tag>HomePacker</tag>
      </tags>
  </entry>
  <entry>
    <title>夜晚的涂鸦恶作剧</title>
    <url>/blog/2019/12/02/P040/</url>
    <content><![CDATA[<img src="/blog/2019/12/02/P040/P040_2.png" class="">
<span id="more"></span>

<img src="/blog/2019/12/02/P040/P040_1.png" class="">
<p>归到卡尔马世界观下了的oc.</p>
<p>不是怪异的怪异事件~←这样的感觉.<br>袖子里的喷漆是……像笔刷一样甩袖子就能甩出颜料的设计.<br>像乌贼里的大笔刷武器(?).虽然是在袖子下藏了颜料的机关.<br><br><br><br><br><br></p>
<img src="/blog/2019/12/02/P040/P040_3.png" class="">
<br>

<p>日常是在书店打工,常服会更正式一点.<br>因为家庭的关系偶尔还会被要求穿礼服,所以夜晚的时候才是属于自己的自由时间.</p>
<br>
<br>
<br>

<p>相关图书馆编号:char72.</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>oc</tag>
        <tag>卡尔马</tag>
        <tag>有猫的书店</tag>
      </tags>
  </entry>
  <entry>
    <title>脑洞三则</title>
    <url>/blog/2019/03/06/P043/</url>
    <content><![CDATA[<h1 id="1"><a href="#1" class="headerlink" title="1"></a>1</h1><img src="/blog/2019/03/06/P043/P043_1.jpeg" class="">
<p>眼睛.<br>过滤后所看到的世界.</p>
<span id="more"></span>

<br>

<p>最近睡四个小时就自然醒,我大概是离猝死不远了.<br>以及复习的时候后知后觉的发现自己学的课好厉害呃呃呃呃呃,239是什么黑魔法.这个专业我真的学得到毕业吗.</p>
<h1 id="2"><a href="#2" class="headerlink" title="2"></a>2</h1><img src="/blog/2019/03/06/P043/P043_2.png" class="" width="600" height="515">

<p>旧图重画.<br>等待着四叶草(希望)的少女.</p>
<h1 id="3"><a href="#3" class="headerlink" title="3"></a>3</h1><img src="/blog/2019/03/06/P043/P043_3.jpeg" class="">
<p>音乐真好.<br><br></p>
<p>我偷偷在这里说.</p>
<p>U哥断断续续给我很多次歌单,感觉她很喜欢有一点点八十年代那种安心的,可以沉浸进去的,愉快的歌.<br>而且每次都会付着歌单写歌曲介绍和甜甜的日常聊天.<br>U是不是超可爱!!<br>我最近也在油管上搜八十年代歌曲合集当背景音,<br>想当舞厅最会熬夜的数学人(?).</p>
<br>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>藏在过去的护身符</title>
    <url>/blog/2019/05/08/P044/</url>
    <content><![CDATA[<p>这次回老家的时间比较久,翻了旧的各种本子和涂鸦,试图找出老兔真正的出生年龄,顺带翻出了我萌二时代的收藏.</p>
<span id="more"></span>

<p>【噢噢,那时候还是会买轻小说的类型ww鸭志田的青春野狼也很有趣啊】,还看到了里面有张进过水的纸条.<br>因为我绝对不是会给未来的自己写煽情小短文的type,【这个死小鬼(萌二时代的我)会写什么东西】这么想着,<br>结果被那个死小鬼暴击了.</p>
<br>
<img src="/blog/2019/05/08/P044/P044.jpg" class="">

<br>

<p>是我非常喜欢的节目,the amazing race的标语.<br>好像那时候也是会用这句话当腾讯签名的来着.<br>明明现在出去了活的像个老黄狗.但这也没有一天两天改变的,也只能说妈诶,狗生想追求自由.<br>今年老兔的生日希望能赶上,虽然没有正经的证据,但他今年至少要过11岁生日了!</p>
<p>宾果小姐都长大了呢.</p>
]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>老兔的T恤collection</title>
    <url>/blog/2019/07/04/P045/</url>
    <content><![CDATA[<img src="/blog/2019/07/04/P045/0704.png" class="">
<span id="more"></span>

<br>
背景彩块生成,感谢大佬->https://gsbg.gine.me
<br>
<br>
<br>
<br>
<b>祝老兔生日快乐!!!</b>

<p>这次用jio画了一下老兔会穿的T恤们.潦草请见谅().<br><br><br><br><br><br></p>
<img src="/blog/2019/07/04/P045/0704_1.png" class="">
<img src="/blog/2019/07/04/P045/0704_2.png" class="">
<img src="/blog/2019/07/04/P045/0704_3.png" class="">
<img src="/blog/2019/07/04/P045/0704_5.png" class="">
<img src="/blog/2019/07/04/P045/0704_6.png" class="">
<img src="/blog/2019/07/04/P045/0704_7.png" class="">
<img src="/blog/2019/07/04/P045/0704_8.png" class="">
<br>
<br>
<br>

<p>老兔的饱和蓝T恤是从U哥给老兔画的表情包来的.其他的都多多少少也带了梗.<br>还有些梗没画进去wwww.<br>比如之前U哥跟我说没穿成的起司T恤.朋友跟我说的土味情话.我自己的话,更多的graph theory memes,还有点想把seg fault写进去但那也太恶魔了就下次吧哈哈哈.<br><br></p>
<p>老兔真的陪伴了我太久了.<br>我找到了最初记载老兔的小册子,是个记载偏门知识和小学生暗号的本子.老兔第一次登场是记载了3.14*n^2(计算圆面积)旁边的小涂鸦.里面还有莫斯暗码,注音文字,恺撒密码(…).可惜年代太久远查不出他真正的出生年月.<br>老兔的T恤也的确继承了一点点的偏门知识,一点点生活中有趣的东西,和大家给我的一点点闪闪发光的东西.<br>虽然我画的他相貌不一样了,某种意义上他还真从未变过.<br><br></p>
<img src="/blog/2019/07/04/P045/P045.gif" class="" width="300" height="300">

<br>
<br>
<br>

<p>相关图书馆编号:char02.</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
        <tag>oc</tag>
        <tag>家庭组</tag>
      </tags>
  </entry>
  <entry>
    <title>麻醉老兔的新年祝福和麻醉的设定</title>
    <url>/blog/2018/12/30/P046/</url>
    <content><![CDATA[<p>今年也辛苦啦.</p>
<img src="/blog/2018/12/30/P046/P046_1.jpeg" class="">
<span id="more"></span>

<br>
如果我用真心,是不是我也会成为真物呢,即使是网络形成的幻觉.

<p>还是喜欢着我的朋友们,单方面的,自私的喜欢着.所以没法离开.</p>
<p>又是一年了呢!<br><br><br><br><br><br></p>
<p><strong>这里是关于麻醉的设定</strong></p>
<img src="/blog/2018/12/30/P046/P046_2_2.jpg" class="">

<p>围巾留给麻醉了!短了一截是烧焦的痕迹.<br><br></p>
<img src="/blog/2018/12/30/P046/P046_3.png" class="">
<img src="/blog/2018/12/30/P046/P046_4.png" class="">

<br>
关于名字和自设的事情->
<br>
<br><br>

<img src="/blog/2018/12/30/P046/P046.jpeg" class="">

<p>很久之前先有我oc老兔,也就是叫做Rio的一只兔子.<br>是我偷了它的名字(…),作为 <strong>里约</strong> 开始网络上的活动.<br>老兔的设定,这里复制一下以前的笔记.</p>
<blockquote><p>老兔是被创造出来的角色(创造者是妹妹宾果),有点像”为了他人开心的主角”.<br>有自己的家人朋友,喜欢奇奇怪怪的冒险和冷知识,只是有点傻.<br>老兔是量产的事情…故事里的设定是被身为设计师的爸爸所商品化,布偶老兔就这样侵略世界.<br>因为是”为了他人”的存在,老兔不是”特别的”.</p>
</blockquote>

<p>老兔是依附于他人的主角,所以是量产的.</p>
<p>因为时间太久了,里约这个名字也不方便用英文署名,所以写成了Mazui,也做了新的更符合近几年心境的自设 <strong>麻醉</strong>.</p>
<p>(不过关于把麻醉设定成幼女的事情,问 就 是 后 悔,我不适合幼女orz.)</p>
<blockquote><p>麻醉不是量产的它只有一个.<br>它是从工厂里跑出来的,工厂本身是培养植物用的现在废弃了.<br>所以它明明不需要再以保护植物为生存目的,继续选择以保护自己的花而生存反而是一种自我保护的本能.<br>这么写好奇怪…就是”意识构造是第一呢还是柴米油盐是第一”的事情.<br>老兔给麻醉的围巾是为了”身为女孩子的麻醉”,老兔只把麻醉当普通女孩儿,围巾也正好能遮起花的位置.</p>
</blockquote>

<p>其背后的意义大概是因为幼年收到了很多朋友的好意,给现在的麻醉一些安慰吧.</p>
<br>
<br>
<br>

<p>相关图书馆编号:char02,char05.</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>oc</tag>
        <tag>家庭组</tag>
        <tag>废弃工厂</tag>
      </tags>
  </entry>
  <entry>
    <title>老兔和朋友的rpg大冒险</title>
    <url>/blog/2017/03/21/P050/</url>
    <content><![CDATA[<p>(・∀・)ｷｭﾝｷｭﾝ!</p>
<span id="more"></span>

<h1 id="0"><a href="#0" class="headerlink" title="0"></a>0</h1><p>❀<br>16年时最初和勇者相遇,给对方的生日贺图.</p>
<img src="/blog/2017/03/21/P050/P050_13.jpg" class="">
<img src="/blog/2017/03/21/P050/P050_14.jpg" class="">
<br>
<br>
<br>

<h1 id="1"><a href="#1" class="headerlink" title="1"></a>1</h1><p>❀</p>
<img src="/blog/2017/03/21/P050/P050_1_s.jpg" class="">
<img src="/blog/2017/03/21/P050/P050_2_s.jpg" class="">
<p>是祝我们私企中的魔女小姐姐的生日!!!赶上了!!</p>
<p>第二p是兔兔肝的.昨天勇者很壮烈的牺牲了(不是.</p>
<p>条漫画得好累啊!!而且赶时间不敢多檫不敢撤回就动次打次动次打次得画.<br><br><br><br><br><br></p>
<h1 id="2"><a href="#2" class="headerlink" title="2"></a>2</h1><br>
祝我的老哥生日快乐❀

<p>(就是想提下辈分是投筛子决定的←)</p>
<img src="/blog/2017/03/21/P050/P050_3.jpg" class="">
<img src="/blog/2017/03/21/P050/P050_4.jpg" class="">
<p>你说你要断网了那不知道什么时候你能看到,我就直接发了吧…(</p>
<p>画了rule the world三人组!!!<br>然后我要说一些肉麻的话了…!!(.<br>作为一个掉不动坑追不了番的老人…兔兔是我所认知中真的相当有活力的人!!!<br>虽然没有在同个坑,其实只是看你各种厨不同的作品也很开心hhh.<br>因为认识了兔兔第一次肝了条漫,第一次玩私企.<br>兔兔真的是很暖的人…受你的影响感受到了人的肝力的潜能呢!!(x<br>和兔兔聊天很开心!!以及收到我女儿的粮的时候我都要飞起来了(x<br>我嘴笨不知道说什么好了哈哈哈,总之,<br>感谢认识你: )<br><br><br><br><br><br></p>
<h1 id="3"><a href="#3" class="headerlink" title="3"></a>3</h1><p>❀</p>
<img src="/blog/2017/03/21/P050/P050_5.jpg" class="">
<p>五月快乐.</p>
<p>原本是给兔兔的生贺…怎么也赶不上了.画的是之前想的倒立生长的树……不过根本看不出来ww.<br>RPG世界这点就是好啊,什么脑洞放得下.<br>好久不见的色彩练习,画得太慢…还需好好练习…<br>愿原力与你我同在.<br><br><br><br><br><br></p>
<h1 id="4"><a href="#4" class="headerlink" title="4"></a>4</h1><p>❀<br>两位祝老兔的生贺.</p>
<img src="/blog/2017/03/21/P050/P050_7.JPG" class="">
<img src="/blog/2017/03/21/P050/P050_6.JPG" class="">
<br>
<br>
<br>

<h1 id="5"><a href="#5" class="headerlink" title="5"></a>5</h1><p>❀</p>
<img src="/blog/2017/03/21/P050/P050_8.jpg" class="">
<img src="/blog/2017/03/21/P050/P050_9.jpg" class="">
<br>
<br>
<br>

<h1 id="6"><a href="#6" class="headerlink" title="6"></a>6</h1><p>❀<br>勇者画的三人漫画.</p>
<img src="/blog/2017/03/21/P050/P050_10.jpg" class="">
<img src="/blog/2017/03/21/P050/P050_11.jpg" class="">
<img src="/blog/2017/03/21/P050/P050_12.jpg" class="">

<br>
<br>
<br>

<p>相关图书馆编号:char02.</p>
]]></content>
      <categories>
        <category>朋友给的画</category>
      </categories>
      <tags>
        <tag>oc</tag>
        <tag>家庭组</tag>
      </tags>
  </entry>
  <entry>
    <title>半梦半醒时会在厕所看到独角兽吗?</title>
    <url>/blog/2019/12/16/P047/</url>
    <content><![CDATA[<img src="/blog/2019/12/16/P047/P047.png" class="">
<span id="more"></span>

<p>解压摸鱼.</p>
<p>我:圣诞老人圣诞老人,我想要gpa4.0毕业.<br>圣诞老人:孩子,独角兽要公的母的.</p>
<p>有作弊使用magic voxel来帮助透视,很好用,推荐.<br>期末季不容易(…).</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>电器和我</title>
    <url>/blog/2017/01/29/P049/</url>
    <content><![CDATA[<img src="/blog/2017/01/29/P049/P049_1.jpg" class="">
<span id="more"></span>

<img src="/blog/2017/01/29/P049/P049_2.gif" class="">

<p>如果我的胃就像微波炉一样就好了,把食物塞到肚子里,叮——地一下就消化掉了<br>如果我的头就像洗衣机就好了,讨厌的记忆和脑浆一起,唰——地全部冲洗掉了<br>如果我的心就像电灯一样的就好了,虽然你可能没有察觉,我都有努力发出一点点的光芒哦</p>
<p>一直都在努力发光着哦<br>一直都……</p>
<p>Zzzz</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>朋友家的oc和ae练习log</title>
    <url>/blog/2018/07/30/P048/</url>
    <content><![CDATA[<p>(・∀・)ｲｲﾈ!!</p>
<span id="more"></span>

<img src="/blog/2018/07/30/P048/P048_1.jpg" class="">
<img src="/blog/2018/07/30/P048/P048_2.jpg" class="">
<img src="/blog/2018/07/30/P048/P048_3.png" class="">
<img src="/blog/2018/07/30/P048/P048_16.png" class="">
<img src="/blog/2018/07/30/P048/P048_15.jpg" class="">
<img src="/blog/2018/07/30/P048/P048_4.png" class="">
<img src="/blog/2018/07/30/P048/P048_7.png" class="">

<img src="/blog/2018/07/30/P048/P048_9.png" class="">
<img src="/blog/2018/07/30/P048/P048_18.gif" class="">
<img src="/blog/2018/07/30/P048/P048_11.gif" class="">
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>给朋友的画</tag>
      </tags>
  </entry>
  <entry>
    <title>夜晚</title>
    <url>/blog/2019/02/02/P051/</url>
    <content><![CDATA[<p>等待.</p>
<img src="/blog/2019/02/02/P051/P051_1.jpg" class="">
<span id="more"></span>

<br>
<br>
<br>
<img src="/blog/2019/02/02/P051/P051_2.jpg" class="" width="300" height="340">

<br>
<br>
<br>

<p>相关图书馆编号:char44.</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>oc</tag>
      </tags>
  </entry>
  <entry>
    <title>一点点的生活片段</title>
    <url>/blog/2018/11/22/P055/</url>
    <content><![CDATA[<p>■━⊂(　・∀・) 彡 ｶﾞｯ☆Д´)ﾉ</p>
<span id="more"></span>

<img src="/blog/2018/11/22/P055/P055_1.jpg" class="">
<img src="/blog/2018/11/22/P055/P055_2.jpg" class="">
<img src="/blog/2018/11/22/P055/P055_3.jpg" class="">
<img src="/blog/2018/11/22/P055/P055_4.jpg" class="">
<img src="/blog/2018/11/22/P055/P055_5.jpg" class="">
<img src="/blog/2018/11/22/P055/P055_6.jpg" class="">
<img src="/blog/2018/11/22/P055/P055_7.jpg" class="">
<img src="/blog/2018/11/22/P055/P055_8.jpg" class="">
<br>
<br>
<br>
<br>
<br>
]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>逆转裁判的同人</title>
    <url>/blog/2017/11/02/P054/</url>
    <content><![CDATA[<img src="/blog/2017/11/02/P054/P054_1.jpg" class="">
<span id="more"></span>

<p>是很喜欢的一个作品系列!!!有机会还想画!!!!</p>
<p>逆转里我最喜欢的女性角色…!<br>(不算龙太郎的话x)<br>终于涂了涂她了///<br>顺便一提本篇里最喜欢的男性角色是喜子!!<br><br><br><br><br><br><br><br></p>
<img src="/blog/2017/11/02/P054/P054_2.jpg" class="">
<p>第一次上被告席(?)十分紧张的被告安慰着第一次上辩护席十分紧张的律师(.</p>
<p>希月心音……没问题的!<br>因为紧张表情十分复杂的希月小姐做起了发声练习(<br>  <br><br>  <br><br>  <br><br>  <br></p>
<img src="/blog/2017/11/02/P054/P054_3.jpg" class="">
<p>是点图…!点的是青年的福尔摩斯和格雷格森刑警在伦敦漫步.</p>
<p>然后<br>然后<br>被我画成了格雷格森刑警街道扰民的报案结果发现是福尔摩斯在街头拉琴.</p>
<img src="/blog/2017/11/02/P054/P054_4.jpg" class="">
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>同人</tag>
      </tags>
  </entry>
  <entry>
    <title>来自U君的生日祝福</title>
    <url>/blog/2018/07/04/P052/</url>
    <content><![CDATA[<img src="/blog/2018/07/04/P052/P052_1.jpg" class="">
<span id="more"></span>

<img src="/blog/2018/07/04/P052/P052_2.jpg" class="">
<img src="/blog/2018/07/04/P052/P052_3.jpg" class="">
<img src="/blog/2018/07/04/P052/P052_4.jpg" class="">
<br>
<br>
<img src="/blog/2018/07/04/P052/P052_5.jpg" class="">
<br>
<blockquote><p>晚上突然丢失言语能力（……）</p>
<p>恩，画了里约家可爱的孩子们，远看真的很像好多土豆呢。画了很多自己喜欢的梗，如果能看出来就太好了。感觉看着很像贴纸什么的于是中间小小的玩了一下下<br>能给里约画生贺很开心，这年里约玩了许许多多有趣的东西呢，谜题和代码什么的都很好玩…我不太聪明但是觉得是很棒的游戏！也很乐在其中，能做自己想做的事很棒很棒。<br>(<em>’ｰ’</em>)  又活过了一年，总归是值得庆祝的，干啥都开心，就最好不过了</p>
<p>waweeeeeeee</p>
</blockquote>

<br>
<br>
<br>

<p>相关图书馆编号:<br>char01,char02,char30,char31,char42,char44,<br>char45,char47,char48,char50,char5B,char70,<br>char80,char81,char82,char83,char84,char85,char85,char8A,<br>char90.</p>
]]></content>
      <categories>
        <category>朋友给的画</category>
      </categories>
      <tags>
        <tag>oc</tag>
        <tag>家庭组</tag>
        <tag>在日落之前</tag>
        <tag>残局象棋</tag>
        <tag>冬日组</tag>
        <tag>怪异专家与助手</tag>
      </tags>
  </entry>
  <entry>
    <title>人生即谎言</title>
    <url>/blog/2017/06/04/P053/</url>
    <content><![CDATA[<p>祝愿我的朋友们今年高考顺利平安,达成梦想.<br>在此给你们最大的好运.<br><br></p>
<p>人生即谎言.只希望你们都能好好的.<br>少年要坚强.</p>
]]></content>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>miku与十周年纪念</title>
    <url>/blog/2017/10/01/P057/</url>
    <content><![CDATA[<img src="/blog/2017/10/01/P057/P057_1.jpg" class="">
<span id="more"></span>

<img src="/blog/2017/10/01/P057/P057_2.jpg" class="">
<img src="/blog/2017/10/01/P057/P057_3.jpg" class="">
<img src="/blog/2017/10/01/P057/P057_4.jpg" class="">
<br>
迟啦.

<br>
<br>
<br>




<p>其实没画完.</p>
<p>之前在脑的,以一位年轻的p主为视角,和miku桑的故事.<br>想了挺多种方法…关于要不要将p主本身画出来,怎样画出来.<br>然后也因为能力与时间的问题现在画出的就是这相当尴尬的东西了hh.</p>
<p>【我和初音未来的故事.】</p>
<p>miku给人带来最棒的是自由的创造可能性.<br>因为也算是一种乐器吧,而且不需要明白吉他有多少根玄就能演奏起来.无论谁都可以用她来创造歌曲.<br>在这样的情况下歌曲可以是自私的.或者不如说因为是自私的,而给人更多的吸引力.<br>因为vocaloid所聚齐起来也很不可思议.为什么能衍生出那么多的创作呢.</p>
<p>嘛,稍微稍微谈一谈一开始的脑洞吧.<br>这位p主,很年轻.初次接触miku也许是初中时期.<br>最初的创作是全部用电脑模拟乐器合出来的.非常的有电子音的感觉呢,操控各种软件也十分有趣.<br>因为喜欢各种特别的音效,所以先将邻居家的风铃声录下来用进去了.那是混杂了蝉鸣的风铃声,但很清脆.<br>之后水倒入杯子的声音啊,幼时玩具的音效啊,敲打餐具的声音啊.<br>可能会因为想录人群的声音在嘈杂的大都市不断的过马路.<br>最后可能会偷偷在教室里录喜欢女生的声音,但是那是不会用上去的.<br>miku每次都会伴着这些音效唱歌.在我意识里miku的性格是属于对事物保持新奇,不大能理解太多背后的含义,对唱歌特别真诚和认真,那样.<br>然后稍微有些观众的时候会一条条的去看弹幕,像是弹幕收集一样的去看.<br>还想着会不会也交上了些一样玩音乐的朋友,被约去酒会,然后夹杂在一群工作了的酒味大叔中间喝着橙汁.<br>被大叔安利了乐器,唯一会吹的乐器是小学时的竖笛,其他都得从零开始慢慢摸索.<br>好…好像扯太远了.总之还挺喜欢那样不知道那里的p主的日常的.<br>因为miku而改变的生活.也许不单单是生活,还有其他重要的东西.</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>同人</tag>
        <tag>vocaloid</tag>
      </tags>
  </entry>
  <entry>
    <title>无题</title>
    <url>/blog/2017/08/30/P056/</url>
    <content><![CDATA[<p>难得的出生在了这个世界上.为什么要让自己(人类)被自己(人类)所设定的规矩给束缚呢.</p>
<p>道理都明白.就是再怎么想,再怎么空虚罢了.<br><br><br><br><br><br></p>
]]></content>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>miku与跟随她的</title>
    <url>/blog/2019/08/31/P059/</url>
    <content><![CDATA[<img src="/blog/2019/08/31/P059/P059.png" class="">
<p>未来へ.</p>
<span id="more"></span>

<br>
<br>　　　　　　　　　　　　　　

<p>(提早了的)生日快乐.</p>
<p>在被吐槽前先自我吐槽一下……是不是混了miku曲以外的曲绘(小物)啊!<br>是的!!!(土下座.<br>嘛,是这样想的啦…miku桑是最初被大众所认识的虚拟歌手.<br>大家跟随着她和憧憬的创作者,在这里留下了尊贵的作品,只有miku会一直向前去.</p>
<br>

<p>所以画在引导者旁边其他歌姬的曲子算safe吧!!(你够了.<br>这里集聚了我喜欢的,对我意义很大的20首曲子(或p主的代表).有兴趣要不要猜一猜??<br>能认出10个大约是同时代的朋友了,20个可能有些难…!因为有些小物我自己整理pv的时候都…不好概况.</p>
<br>
<br>
<br>
<b>omake(*’ｰ’*)</b>

<p>是miku生贺的20首曲子以及连接.来听歌吗.<br>你猜出了多少wkwk.</p>
<br>
<br>
<br>

<p>从左到右.</p>
<img src="/blog/2019/08/31/P059/P059_1.png" class="">

<br>
<br>
【♪】蝴蝶->【初音ミク×巡音ルカ】magnet
<div class="bili_video"><iframe src="https://player.bilibili.com/player.html?aid=NaN&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" width="544" height="452" allowfullscreen="true"> </iframe></div>
<img src="/blog/2019/08/31/P059/001.png" class="">
<br>
<br>

<p>【♪】包-&gt;ARIA / Last Number feat.鏡音レン</p>
<div class="bili_video"><iframe src="https://player.bilibili.com/player.html?aid=NaN&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" width="544" height="452" allowfullscreen="true"> </iframe></div>
<p>遇到这首歌的时候正好在考学的分歧点…无论选择哪条道路都不会后悔&lt;-的歌词也是给我了勇气.</p>
<img src="/blog/2019/08/31/P059/002.png" class="">
<br>
<br>

<p>【♪】老匹家的-&gt;【初音】司空见惯的世界征服</p>
<div class="bili_video"><iframe src="https://player.bilibili.com/player.html?aid=NaN&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" width="544" height="452" allowfullscreen="true"> </iframe></div>
<img src="/blog/2019/08/31/P059/003.png" class="">
<br>
<br>

<p>【♪】长颈鹿-&gt;【鏡音リン】メランコリック(忧郁心情)</p>
<div class="bili_video"><iframe src="https://player.bilibili.com/player.html?aid=NaN&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" width="544" height="452" allowfullscreen="true"> </iframe></div>
<img src="/blog/2019/08/31/P059/004.png" class="">
<br>
<br>


<p>【♪】honeyworks家的吉祥物(?)<br>这里放一首honeyworks的rearrange-&gt;【初音ミク】因为暖和嘛♪【HoneyWorks】</p>
<div class="bili_video"><iframe src="https://player.bilibili.com/player.html?aid=NaN&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" width="544" height="452" allowfullscreen="true"> </iframe></div>
<img src="/blog/2019/08/31/P059/005.png" class="">
<br>
<br>

<p>【♪】伞-&gt;【初音ミク】Alkaline adults【ただのCo】(碱性成人)</p>
<div class="bili_video"><iframe src="https://player.bilibili.com/player.html?aid=NaN&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" width="544" height="452" allowfullscreen="true"> </iframe></div>
<img src="/blog/2019/08/31/P059/006.png" class="">
<br>
<br>

<p>【♪】cd player-&gt;【164】天ノ弱【GUMI】<br>这个我估计很难看出来…因为自己都想了很久到底用哪个物品来代表这首歌.但因为过于喜欢这首歌所以无法割舍呜呜.</p>
<div class="bili_video"><iframe src="https://player.bilibili.com/player.html?aid=NaN&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" width="544" height="452" allowfullscreen="true"> </iframe></div>
<img src="/blog/2019/08/31/P059/007.png" class="">
<br>
<br>

<p>【♪】白色的小鹿-&gt;【初音ミク】 我吻了初音未来【mikitoP 】</p>
<div class="bili_video"><iframe src="https://player.bilibili.com/player.html?aid=NaN&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" width="544" height="452" allowfullscreen="true"> </iframe></div>
<p>mikito真的是…我的白月光,在高中转学那段时间一直在听他的碟T T.</p>
<img src="/blog/2019/08/31/P059/008.png" class="">
<br>

<img src="/blog/2019/08/31/P059/P059_2.png" class="">

<br>
<br>

<p>【♪】kemu的贴一下这首吧-&gt;【GUMI】敗北的少年【kemu】</p>
<div class="bili_video"><iframe src="https://player.bilibili.com/player.html?aid=NaN&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" width="544" height="452" allowfullscreen="true"> </iframe></div>
<img src="/blog/2019/08/31/P059/009.png" class="">
<br>
<br>

<p>【♪】飞出来的cd-&gt;【IA】children record</p>
<div class="bili_video"><iframe src="https://player.bilibili.com/player.html?aid=NaN&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" width="544" height="452" allowfullscreen="true"> </iframe></div>
<p>这首意外的好多人都猜出来了??kemu的本体明明每个(?)pv都有,cd只出现过一次是我低估了我的jin厨朋友们().</p>
<img src="/blog/2019/08/31/P059/010.png" class="">
<br>
<br>

<p>【♪】笔记和上吊绳-&gt;【初音ミク・GUMI】Slow Downer【ろくろ】</p>
<div class="bili_video"><iframe src="https://player.bilibili.com/player.html?aid=NaN&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" width="544" height="452" allowfullscreen="true"> </iframe></div>
<img src="/blog/2019/08/31/P059/011.jpg" class="">
<br>
<br>

<p>【♪】窗户-&gt;Melty Land Nightmare(中文字幕) / 春卷饭 feat.初音未来</p>
<div class="bili_video"><iframe src="https://player.bilibili.com/player.html?aid=NaN&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" width="544" height="452" allowfullscreen="true"> </iframe></div>
<img src="/blog/2019/08/31/P059/012.jpg" class="">
<br>
<br>

<p>【♪】两条尾巴的猫猫-&gt;【重音テト】解闷消愁咆勃爵士乐【sasakure.UK】</p>
<div class="bili_video"><iframe src="https://player.bilibili.com/player.html?aid=NaN&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" width="544" height="452" allowfullscreen="true"> </iframe></div>
<p>这首无论听几百次都能带来好心情.sasa是人生导师.</p>
<img src="/blog/2019/08/31/P059/013.jpg" class="">
<br>
<br>

<p>【♪】遥控器-&gt;【じーざすP】遥控器【镜音铃&amp;镜音连】</p>
<div class="bili_video"><iframe src="https://player.bilibili.com/player.html?aid=NaN&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" width="544" height="452" allowfullscreen="true"> </iframe></div>
<p>b站我一下子找不到最初版本的…但应该都知道我指的是哪首().</p>
<p>这首歌对我印象最深是因为diva上我唯一(?)一首extreme打到a等级的.</p>
<p>去年入手了ps4的一作司空见惯的世界征服都打不过去了…我的音游生涯最登封只停留在这首了(.</p>
<img src="/blog/2019/08/31/P059/014.png" class="">
<br>
<br>

<p>【♪】围巾是mota的-&gt;不过我想贴一下这首.【初音ミク】StrobeLast【椎名もた ( ぽわぽわP )】</p>
<div class="bili_video"><iframe src="https://player.bilibili.com/player.html?aid=NaN&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" width="544" height="452" allowfullscreen="true"> </iframe></div>
<img src="/blog/2019/08/31/P059/015.jpg" class="">
<br>
<br>

<p>【♪】泰迪熊-&gt;ニコカラ / 東京テディベア（东京泰迪熊/东京Teddy Bear）</p>
<div class="bili_video"><iframe src="https://player.bilibili.com/player.html?aid=NaN&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" width="544" height="452" allowfullscreen="true"> </iframe></div>
<p>这首我也一时找不到原pv.</p>
<img src="/blog/2019/08/31/P059/016.png" class="">
<br>
<br>

<p>【♪】裏表ラバーズ【PV】</p>
<div class="bili_video"><iframe src="https://player.bilibili.com/player.html?aid=NaN&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" width="544" height="452" allowfullscreen="true"> </iframe></div>
<img src="/blog/2019/08/31/P059/017.png" class="">
<br>
<br>

<p>【♪】扩音器-&gt;【GUMI】透明哀歌</p>
<div class="bili_video"><iframe src="https://player.bilibili.com/player.html?aid=NaN&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" width="544" height="452" allowfullscreen="true"> </iframe></div>
<p>拿不拿的选曲我也纠结了蛮久的……组成了乐队后的【说吧】我也非常非常的喜欢,但不能放在生贺上来呢(苦笑.</p>
<img src="/blog/2019/08/31/P059/018.png" class="">
<br>
<br>

<p>ryo的选曲不是love is war而是这两首&gt;&lt;(怎么可以漏了他).<br>【♪】ryo (supercell) feat. 初音ミク-ODDS&amp;ENDS 中日双字MV</p>
<div class="bili_video"><iframe src="https://player.bilibili.com/player.html?aid=NaN&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" width="544" height="452" allowfullscreen="true"> </iframe></div>
<p>【♪】【初音ミク】积雨云涂鸦（原PV中日字幕）</p>
<div class="bili_video"><iframe src="https://player.bilibili.com/player.html?aid=NaN&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" width="544" height="452" allowfullscreen="true"> </iframe></div>
<img src="/blog/2019/08/31/P059/019.png" class="">
<br>
<br>

<p>【♪】最后是甜甜圈-&gt;【GUMI】DONUT HOLE【ハチ】</p>
<div class="bili_video"><iframe src="https://player.bilibili.com/player.html?aid=NaN&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" width="544" height="452" allowfullscreen="true"> </iframe></div>
<img src="/blog/2019/08/31/P059/020.png" class="">
<p>八爷的曲子想选的实在是太多了.这首可能没法一下看出来……选的原因单单是因为那时候我还在追周刊,见证了历史T T.</p>
<p>以上!<br><br></p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>同人</tag>
        <tag>vocaloid</tag>
      </tags>
  </entry>
  <entry>
    <title>侦探事务所的日常和DLC的解码</title>
    <url>/blog/2019/09/15/P061/</url>
    <content><![CDATA[<p>是给一款叫做细胞神曲的rpg游戏画的同人.</p>
<img src="/blog/2019/09/15/P061/P062_1.png" class="">
<p>早晨和工作和热乎乎的红茶</p>
<span id="more"></span>

<br>
<img src="/blog/2019/09/15/P061/P062_2.png" class="">
第一天就职与珍珠奶茶
<br>
<br>
<br>
<br>
<br>
<img src="/blog/2019/09/15/P061/P062_3.png" class="">
<img src="/blog/2019/09/15/P061/P062_4.png" class="">
做输入法而画的小q版.
<br>
<br>
<br>
<br>
<br>
<br>
关于DLC最后ed出现的背景二进制数字.
弹幕已经有解密了,少了句话可能是被冲掉了…
这里记载一下解码的方法Zzz.
跟我熟的朋友知道我喜欢这种东西(忍不住,就是想写,原谅我).
<br>

<p>思路是这样.<br>这是组非常有规则的数字,每组都是8个数字.没有遮盖,很清楚,这时候想到说不定是可以解的东西.</p>
<p>up主桑有把”神”的解码写出来,是unicode.一般了解加密者的方法都是提示.</p>
<p>从头开始.<br>8位的二进制.熟悉的朋友会想到是转成16进制很方便.<br>〇〇〇〇 ××××&lt;——这样的各式.前面4位对应一个数字,后面四位对应一个数字.合在一起就是16进制的数了.<br>比如说0100是4.<br>1111是f(十进制的15).<br>那么01001111就是4f(十进制的79).<br>(便捷方法是因为16是2^4,可以用计算证明).<br>第一组的8位二进制转换完是e7.<br>最初以为…每组代表了个字.所以e7对应了什么还有些犹豫…ascii最多到7f.</p>
<p>插播一下ascii和unicode的事情…<br>我们所阅读的文字,英文,符号等等.是如何存储到电脑里的?<br>ascii,全程是American Standard Code for Information Interchange.<br>字面意思就是从普通的码到信息的转变(字符的转变).英文字母是可以用它来代表的.随着信息的更多…要兼容不同语言…我们的汉字甚至是颜表情(还种类超多)是用unicode来表示.<br>对照着这样我们的信息都可以转换成最后的0和1.<br>更多贴个科普合集,废话这么多会被人揍(dbq)…-&gt;<a href="https://www.bilibili.com/video/av21376839/">https://www.bilibili.com/video/av21376839/</a></p>
<p>unicode的特征是e开头的6位.<br>所以转换完的前6位-&gt;e7b4b0,是【細】.<br>到这里明白方法是对的了.<br>接下来是苦力活.<br>在线的一个转换器-&gt;<a href="https://so-zou.jp/web-app/text/encode-decode/">https://so-zou.jp/web-app/text/encode-decode/</a></p>
<p>(用英文怎么搜都搜不到果然还是得用日语搜啊…)</p>
<p>e7b4b0 e8839e e7a59e e69bb2<br>細胞神曲</p>
<p>2d 43 6f 45 2d</p>
<ul>
<li>C o E -<br>(这里是ascii)</li>
</ul>
<p>0d 0a<br>(一个是return,一个是new line,没有太多意思)</p>
<p>e799ba e7abaf e38082 e998bf e897a4 e38292 22 e6849a e88085 22  e381a8 e38197 e381a6 e4bd9c e38289 e3828c e3819f e789a1 e8aa9e e38082</p>
<p>発端。阿藤を”愚者”として作られた物語。</p>
<p>0d 0a</p>
<p>e7a59e e3818c e69c80 e5889d e381ab e4bb95 e7b584 e38293 e381a0 e688af e69bb2 e381a7 e38182 e3828a e38081 e3838f e38384 e38388 e383aa e38292 e5889d e9b3a5 e381a8 e38195 e3828c e3828b e38193 e381a8 e381a7 e382bb e382aa e38389 e382a2 e381a8 e59ba0 e5ad90 e381a5 e38191 e38289 e3828c e3819f e38081 e382bb e382aa e38389 e382a2 e3818c e5b9b2</p>
<p>神が最初に仕組んだ戯曲であり、ハツトリを初鳥とされることでセオドアと因子づけられた、セオドアが干</p>
<p>e6</p>
<p>这里没有写完,最后剩下的是e6…干涉的涉unicode是【e6d89】.大概…是这样吧.<br>谢谢群里的大家揪了我的错.可能还有错,1和0看瞎我眼.</p>
<p>满满的一页是两句话,可以看出二进制对于存储消息是很,占用面积大呢(???).</p>

]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>同人</tag>
      </tags>
  </entry>
  <entry>
    <title>天空中的魔法少女</title>
    <url>/blog/2017/12/23/P058/</url>
    <content><![CDATA[<img src="/blog/2017/12/23/P058/P058.jpg" class="">
<span id="more"></span>

<p>有些日子不见.<br>第一个学期结束啦!啊↑啊↗啊↘啊↓<br>涂了涂小樱!!!</p>
<br>
<br>

<p>这是我记忆中最喜欢的一套衣服!!!<br>为了画这位童年女神也去回顾了下动画hhh.<br>然后发现哪,跟我记忆中的小樱完全不一样…小樱可能已经在我的记忆中被我当做支柱或者是理想中的女孩子了吧(笑.</p>
<p>以后就算再忙也要摸摸鱼…这才几个礼拜没好好画画,忘得太干净了,学几个点忘几个点还当什么画手orz.<br>(这张是在失去了宿舍居住权时借住在朋友家的纸头地毯上画的.)</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>同人</tag>
      </tags>
  </entry>
  <entry>
    <title>无力感</title>
    <url>/blog/2019/10/06/P062/</url>
    <content><![CDATA[<p>(´・ω・｀)</p>
<span id="more"></span>

<img src="/blog/2019/10/06/P062/P062_1.png" class="">
<img src="/blog/2019/10/06/P062/P062_2.png" class="">
<img src="/blog/2019/10/06/P062/P062_3.png" class="">
<p>打翻的咖啡.身体不适.清醒头脑.<br><br></p>
<p>深夜暴言x.<br>讲真我觉得到这个年龄大家精神脑子都不是很好(…<br>我们宿舍三个人轮流发疯(x),两个被学业搞,还有个飞哥某天冲进我房间大喊讲不穿羊毛不喝牛奶宣言,是被动物关怀纪录片搞疯惹.<br>还好是三个人,互相消化互相祸害x.</p>
<p>接受这份残忍和虚无再开启新的人生(.</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>朋友给的礼物log</title>
    <url>/blog/2017/07/31/P060/</url>
    <content><![CDATA[<p>(　；∀；) ｼﾞｰﾝ</p>
<span id="more"></span>

<h5 id="17年收到的生贺"><a href="#17年收到的生贺" class="headerlink" title="17年收到的生贺."></a>17年收到的生贺.</h5><br>
<br>
<img src="/blog/2017/07/31/P060/P060_1.jpeg" class="">
<br>
<br>
<img src="/blog/2017/07/31/P060/P060_2.jpeg" class="">
<br>
<br>
<img src="/blog/2017/07/31/P060/P060_3.jpg" class="">
<br>
<br>
<img src="/blog/2017/07/31/P060/P060_4.jpg" class="">
<br>
<br>
<br>

<h5 id="17年的明信片交换"><a href="#17年的明信片交换" class="headerlink" title="17年的明信片交换."></a>17年的明信片交换.</h5><img src="/blog/2017/07/31/P060/P060_5.jpg" class="">
<br>
<br>
<img src="/blog/2017/07/31/P060/P060_6.jpg" class="">
<br>
<br>
<img src="/blog/2017/07/31/P060/P060_0.jpg" class="">
<br>
<br>
<img src="/blog/2017/07/31/P060/P060_7.jpg" class="">
<br>
<br>
<img src="/blog/2017/07/31/P060/P060_8.jpg" class="">
<br>
<br>
<img src="/blog/2017/07/31/P060/P060_9.jpg" class="">
<br>
<br>
<img src="/blog/2017/07/31/P060/P060_10.jpg" class="">
<br>
<br>
<img src="/blog/2017/07/31/P060/P060_11.jpg" class="">
<br>
<br>
<br>
我会好好珍惜的.
<br>
<img src="/blog/2017/07/31/P060/P060_12.jpg" class="">
<br>
<br>
<br>
<br>
<br>
]]></content>
      <categories>
        <category>朋友给的画</category>
      </categories>
  </entry>
  <entry>
    <title>miku和剪纸袖子</title>
    <url>/blog/2019/04/11/P064/</url>
    <content><![CDATA[<img src="/blog/2019/04/11/P064/P064_1.png" class="">
<span id="more"></span>

<img src="/blog/2019/04/11/P064/P064_2.png" class="" width="325" height="400">

<p>是今年份的miku expo活动.今年去台湾香港,所以加入了中国元素.<br>剪纸袖子的图案感觉也可以加入有趣的图案w.</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>同人</tag>
        <tag>vocaloid</tag>
      </tags>
  </entry>
  <entry>
    <title>春假和室友的旅行</title>
    <url>/blog/2019/05/14/P063/</url>
    <content><![CDATA[<img src="/blog/2019/05/14/P063/P063_1.jpeg" class="">
<p>朋友你见过四点钟的滑铁卢吗.jpg</p>
<span id="more"></span>

<img src="/blog/2019/05/14/P063/P063_2.jpeg" class="">
<p>我们租的民宿是湖景房…!!夜晚和白天都各有一般风味.</p>
<img src="/blog/2019/05/14/P063/P063_3.jpeg" class="">
<p>河水里闪闪发光的是硬币,原来往河里投硬币求祝福是全球性的2333.</p>
<img src="/blog/2019/05/14/P063/P063_4.jpeg" class="">

<p>那个自带动态模糊的人是我室友,我们在那个公园呆了很久.<br>第二张是因为想吃炸鸡所以坐公交跑了半个城市(?).<br>两个人边吃炸鸡边追完了梦幻岛的进度,说起来那段时间好久都没看新剧了.</p>
<img src="/blog/2019/05/14/P063/P063_5.jpeg" class="">
<p>看到桌游店,书店都会不思索的进去2333.<br>说起来在唐人街有一家也许是台湾人开的书店,有今日子小姐的现代书(?)和上个世纪甚至有些掉色的菜谱,只是粗略的看看都会很开心w.</p>
<img src="/blog/2019/05/14/P063/P063_6.png" class="">
<p>其实坐地铁最开心的是我???我甚至超享受刷卡的过程,一定是在村里呆太久了().</p>
<br>
<br>
两个养老大学生去温哥华旅游了三天.这篇文章是简单的记录.
<br>
温哥华真是个温暖的城市.

<br>
<br>

<p>起因是圣诞假那天我和我的室友一起坐go bus回家.</p>
<blockquote>
<p>友:哪里都好好想出去走走啊.<br>我:我没有美签.<br>友:你怎么可以没有美签.</p>
</blockquote>
<p>所以定下了在reading week的时候国内走走.</p>
<br>

<p>为了赶便宜的航班,出发的时间定在了清早四点钟.<br>四点和十二点的景色没什么不同,除了坐车到多伦多的时候见到了天渐渐亮起来的过程.</p>
<blockquote>
<p>我:说起来我们以前最多也就熬夜到四点,没四点起过床呢.<br>友:是呢.</p>
</blockquote>
<p>(不过编辑这篇文章的时候她经历过了熬夜熬回北京时间的地狱期.大家活着都不容易.)</p>
<br>

<p>定的民宿位置超级酷.小小的两室一厅,在水旁边的十层楼.客厅是两面的玻璃,非常的开阔.下午到达的时候两个人就大喊大叫(….)地在客厅拍照.太累了再沙发上睡到傍晚,起来又是一个世界!<br>所处的地方离chinatown非常近,也是我的胃指引着我去的x.<br>温哥华的地形上下坡很多,楼群错落,唐人街那里也是很有历史的味道.<br>散步到像是小商品市场一样的地方.有什么…春节游行的活动标语.字也是繁简都有.店铺的铁门布局让我一瞬间产生处于上海的错觉.<br>晚上是我选择餐馆,想着既然出来了就选些本地的有趣店面吧.</p>
<blockquote>
<p>友:我觉得这家店好像是喝酒的.<br>我:……是啊我看到里面的吧台了.<br>友:但是我们是来吃饭的.<br>我:但是我们是来吃饭的(复读).<br>友:所以就尴尬了.</p>
</blockquote>
<p>dbq.</p>
<p>但里面的料理味道还是挺特别的.炸鸡翅加上柠檬味的酱汁,牛肉片盖上生拌菜.</p>
<p>不过回去的路上还是很没出息的去了麦当劳买了甜筒哈哈哈.</p>
<p>第二天的目的地是吊桥公园.<br>温哥华有几个自然的景区非常值得一去.这是其中的一个.<br>我特意挑了sea bus坐过去,吊桥公园在山的地方.以前住的地方都是平路,做车过了站的我们走回入口也是个挺有趣的体验w.<br>原本这个公园是私人的度假屋,是位工程师自己建造的吊桥留了下来.<br>公园非常惬意.公园附近就是居民区,如果能住在旁边再买个year pass那一定是散步的好地方.</p>
<p>叫吊桥公园是因为有座一百来米的桥连接了两岸,走上去会摇晃得很厉害,两侧很开阔.查了下百科告诉我离地面有个70来米,能看到河水和峭壁,树丛和小小的旅客们.<br>走过吊桥一眼望去全是绿.公园有布置一些装饰和彩灯在树上,起落的长廊也好似迷宫.苏州的狮子林有给我类似的感觉,不过吊桥公园开阔太多.</p>
<p>那天有遇上成群结队的穿着制服的学生(还是小西装校服!suki(不是)).应该是日本来修学旅行的吧.能去海外修学旅行真是羡慕啊.<br>在小煎饼摊子的地方室友悄悄拉着我的袖子.</p>
<blockquote>
<p>友:我们在这儿等等.<br>我:?<br>友:我想听日本妹子讲英语.<br>我:……<br>我:(我掏出手机在宿舍群里发室友的傻子记录).<br>飞哥:(爆笑)我觉得我明天需要去警局接你们出来.</p>
</blockquote>
<p>之后去了美术馆,科技馆,和水族馆.算是很经典的一些去处.去美术馆时很不巧,过两天有莫奈的展览,还在布展,只能在一楼警戒线外偷偷得看,啊我好难过!!!我的白月光!!!看到保安盯着我看我也不走!!!!(.<br>水族馆倒是非常开心,我从海獭的可爱体验到了大约二十年以来少数的恋爱的荷尔蒙(?).</p>
<br>


<p>我们的旅行计划很散漫,但也不想就这么直接回去.就在路上慢慢的逛,夜晚的温哥华也别有一番风味.</p>
<p>走到我们住所旁边有个小的公园,有些娱乐器材.人少,除了我们还有一对父子.室友可喜欢其中的轮胎秋千和有超大滑梯.<br>我真的好多年没荡秋千了,作为座椅的轮胎很大,直接躺上去望着天空,室友在旁边推我.风很惬意,没有滑铁卢的冷,也没有滑铁卢的日日夜夜赶作业的急躁感.<br>公园里面还有一个小坡,抓着绳子坐在连着的小椅子上,从坡上荡下去.那位小男生可以一路荡当底,我这个体重到半路就全靠自己晃动xx.恶魔室友还拍下了视频,这个世界上不能被人见到的黑历史又多了一件(…).</p>
<p>我们在公园里呆了很久,父子走了之后有两位情侣或者是夫妻也来荡秋千了.秋千是全民的…!</p>
<br>

<p>顺便一提民宿最后一天男主人回来了,我们见到了面.和客厅里摆放的各式酒类和多种旅游纪念冰箱贴给人的印象相同,是个健康好客爱生活的人.说起来是一个人住,但冰箱里的调味料可是满满当当.我和室友反思了一下,之后在唯二的酱油和老干妈之后终于尝试了咖喱,是历史性的进步了.</p>
<br>

<p>我非常容易忘事,所以会担心出游的时间和金钱放进去却忘得一干二净.但春假回来后人学习还是填坑都意外的有动力,经历所获得了放松和感受还是会留下来的呢.</p>
<br>

<p>那么也许下次也还会记录吧.</p>
]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>侵略地球二人组</title>
    <url>/blog/2019/09/03/P066/</url>
    <content><![CDATA[<img src="/blog/2019/09/03/P066/P066.png" class="">
<span id="more"></span>

<br>
<br>
<br>
<div class="bili_video"><iframe src="https://player.bilibili.com/player.html?aid=NaN&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" width="544" height="452" allowfullscreen="true"> </iframe></div>

<p>总有一天 走出梦的外面<br>如果你走出来了<br>你会知晓 让人讨厌的事<br>才不是跟想象中一样<br>跨越这一切 再出发吧<br>就再等一下</p>
<br>

<p>祝U君生日快乐.</p>
<br>
<br>
<br>

<p>相关图书馆编号:char02.</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>给朋友的画</tag>
      </tags>
  </entry>
  <entry>
    <title>GJ记录_U.N.OWEN.</title>
    <url>/blog/2019/09/30/P065/</url>
    <content><![CDATA[<p>【游戏制作记录】<br>参加Game Jam Fall2019,48小时限制游戏制作的活动记录.</p>
<span id="more"></span>

<p>游戏名称: U.N.OWEN.<br>制作软件: Unity和Photoshop.<br><br><br><br><br><br><br>哟.</p>
<p>继上次记载是半年多了,Winter的时候也参了game jam.<br>上次的游戏叫HomePacker(简称HPer),主角是小怜.是跟室友三人组一起参的活动,做的东西非常的自我.是尝试.<br>这次的想法不大一样,勉勉强强也是走完了全程,老规矩记载一下.<br>这篇文章主要是【记载过程】,我也是完完全全初学者,比起技术更多的是心情的记载.<br>如果有类似兴趣的朋友就把这次的文章当做休闲的杂谈吧.</p>
<br>
<br>
<br>
<br>

<p>文章聊了【制作时的杂谈】【我们的游戏】【其他人的游戏】.<br><br><br><br><br><br></p>
<h2 id="制作"><a href="#制作" class="headerlink" title="制作"></a>制作</h2><p>先从制作时开始吧.</p>
<p>今年Winter是我第一次走完全程的game jam.博客里也有记录,但上次做的游戏实在太过于黑历史就不贴链接了.<br>这次想好好的走完game jam,所以提前联系了认识的cs专业的大佬朋友,也是位画画的小姐姐Chloe一起来.<br>也鼓起勇气(社恐努力了)在最初分组的时候遇到了两位工程系大一的男生,Steven and Long,加上我安心的室友Sophia一共五个人组的Team.<br>实体的编码活动认识人都是福分,如果能有这个机会请务必抓住.</p>
<br>
<br>

<p>这次应该不是全球性的活动而已我们学校自己组的game jam,主题是create unknown.<br>第一次有五个人的team,最大的体会是组队的话进度真的会很快.<br>Long有unity2D游戏制作的经验,我也是学的2D,定下了使用的软件和大体的方向之后开始讨论主题.<br>Steven和Chloe从unknown联想到无人生还,我久仰大名但没有补过的作品,定下的是用小说情节改编的冒险系探索.<br>在房间内探索9个人的亡魂,跟他们的对话猜测凶手.<br>讨论的时候很快,大家都会扔出自己的想法来,从一个想法跳跃联想到另一个想法(哇没注意的话还真有些跟不上,大家都是人才,说话又好听.jpg).<br>写在纸上划分工作量,然后排序哪些先做先实现谁来做.<br>如果有没理解的多问很多次确认对方的意思,两位男生人也很好很有耐心,如果重复制作就非常尴尬了.<br>顺便一提分工是我做的,可能人是我组来的就成了默认的leader.去买晚饭的路上Sophia跟我谈有些不满,她希望能有更多的工作.<br>说实话还真没注意到分量问题,按大家的兴趣我分工作.看来我组织能力不大行.这一点还真得注意.</p>
<p>卖完饭之后跟组员再次讨论,希望是她想做的内容.<br>但这个人熬夜看教程,第二天睡到了下午两点.工作都被Long大佬做掉了.<br>唉.</p>
<p>我们回到制作的话题上来吧.</p>
<p>游戏的基本实现是</p>
<p>【人物的行走】【人物的攻击】【敌人的行动】【跟npc的对话】【跟npc对话结束后触发最后猜测凶手的剧情】【结局页面】</p>
<p>上次HPer我负责了实现阿怜走路,就继续把上次的码和文件继承过来,再加上美术和人物探索的灯光效果.<br>阿怜行走图上次我画的非常用心,甚至画的时间看完了一季12集的百合露营…这次是准备以编码为主的.<br>夏天的时候花了一个月走了几个Unity的教程,希望能在这方面帮上忙更多一些.但没有美术不行555.<br>游戏美术可以非常直观的告诉观众【这游戏在做什么】.HPer的初版我没有做视觉效果的设计只是【把小女孩努力画可爱】最后的效果也是非常糟糕的(悔恨的泪.jpg).<br>经历过上次的丢人之后……目标是【将东西说清楚就行!】的美术素材实现.毕竟是限时活动.</p>
<br>
<br>

<p>↓丢人选手怕时间来不及,都是先做一个无色版本测试,码编好了再上次加更多细节↓</p>
<img src="/blog/2019/09/30/P065/P065_1.jpg" class="">
<br>
<br>
<br>

<p>↓十分钟小幽灵↓</p>
<img src="/blog/2019/09/30/P065/P065_2.png" class="">
<br>
↓Chloe扔给了我电影评析去看,我照着画的9个人,但因为秃头大叔太多分不清谁是谁,大家最后选择瞎选↓
<img src="/blog/2019/09/30/P065/P065_3.png" class="">
<br>

<p>Chloe整理好了NPC的对话,我还在实现人物行走她就帮我上色了.<br>啊,有会画画的小姐姐真好!!我爱她!!<br>Steven负责了地图的背景.使用Tilemap实现的,唔,用中文说的话就是rpg maker那样的用单元素材平铺地图.能画的很快,Tilemap也可以处理墙壁Collision(触碰)的问题,非常的好用,学习到了.<br>Chloe因为还有作业死线就先走了(滑 铁 卢 人 没 有 生 活),Steven帮我又涂了个管家.</p>
<blockquote>
<p>我:你怎么用网页ps…<br>Steven:其实我在十年级后就没再开过ps.<br>我:那为什么自我简介的时候要说自己会美术,说会编码不更好吗.<br>Steven:比起编码我还不如说自己会美术.</p>
</blockquote>
<p>原来如此,我懂我懂.编码就是让人自闭.</p>
<p>顺便一提在我们讨论的时候主办方小姐姐找我们起队伍名称,是最让人期待的环节了!<br>Chloe起了404-not-found,非常的贴近unknown了!<br>Steven做的map也是404的图案.是彩蛋.</p>
<p>↓我们的地图↓</p>
<img src="/blog/2019/09/30/P065/P065_4.png" class="">
<br>

<p>Long负责了大部分的游戏实现,做的时候更加能感觉出来他很强.<br>这次能感觉到合作时需要注意的事情.<br>我和Long得会用到Player下面的东西,如果在编辑同一文件的时候很容易出Conflict(冲突).这时候都得手动修改.<br>我先拷贝了阿怜的行走码到我们这次的主角身上,Long在写自己的东西时改掉了我的一部分然后出了bug.<br>自己写码的时候……有时会复制黏贴,能run起来就行了!的这种不负责任想法真的会在合作时候被人打爆狗头.<br>将自己的码好好的想懂,哪些必须要留下来,哪些得删.Long的码到底在写什么.他改了我哪里等等.<br>好在看了一个月的Unity之后大约是懂了基本操作原理.跟着别人视频教程依葫芦画瓢还真不大行……编码太考验逻辑了,糊弄不过去的.<br>(很多次都因为没有从头到尾的考虑而bug了,oh~想打死自己.)<br>感谢Long大佬,没有他进度不会那么快的.<br>不过说起来还有一点非常在意的地方.<br>Chloe习惯于用GitHub多人合作了(毕竟是正统编码人).Unity 文件我们用GitHub试了一个晚上,经常出错.<br>Unity自带多人合作,不过免费的只有三个人的账号可以用.<br>我的知识范围内的解决方法是让没有log进来的Sophia每次用Export package的方式传给我,我再上传给他人.很麻烦.<br>如果可以的话想解决掉这个问题啊……</p>
<blockquote>
<p>我:我忘了如何用git!!!!<br>Chloe:lol</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">  </span><br><span class="line">Git add .</span><br><span class="line">Git commit -m “something meaningful”</span><br><span class="line">Git push</span><br></pre></td></tr></table></figure>

<blockquote>
<p>我:You are my life saver.</p>
</blockquote>
<p>再忘干脆纹身上算了.<br>关于【人物的攻击】这块是Long和Steven做的.<br>在远程攻击和近距离攻击里选择了远程发射子弹.敌人则是一种远程一种近战.<br>测试的时候经常会听到:</p>
<blockquote>
<p>Long:Shot me!!!!!</p>
</blockquote>
<p>孩子疯了.</p>
<blockquote>
<p>Steven:射我!!!!!</p>
</blockquote>
<p>?</p>
<p>制作时的闲聊大概到这里,然后来聊聊这次做出来的游戏吧.</p>
<h2 id="游戏"><a href="#游戏" class="headerlink" title="游戏"></a>游戏</h2><img src="/blog/2019/09/30/P065/P065_5.jpg" class="">
<br>
这次调节了主页面呢.

<img src="/blog/2019/09/30/P065/P065_6.jpg" class="">
<br>
点开始之后就会有文字打字机的效果一样出来,是我很想学的,等等去偷看他们的代码.

<img src="/blog/2019/09/30/P065/P065_7.jpg" class="">

<p>然后是游戏本体了.<br>不得不说把灯一关真的是界面粗糙的地方都被遮住很多了orz.<br>灯我调了个随机闪烁,虽然不截gif看不出来…这次就偷懒啦!</p>
<img src="/blog/2019/09/30/P065/P065_8.jpg" class="">
<br>

<p>因为我推荐给Sophia的教程里有调节音乐的方法,她调试了很久.<br>她跟我强调无数遍这里的menu设置跟主页面的音量设置是数据保留的超难的,好好好给她截图上来.</p>
<img src="/blog/2019/09/30/P065/P065_9.jpg" class="">

<p>跟NPC说话也是会有字打出来!<br>还保留了些古英文的台词,整理log的Chloe强强.</p>
<img src="/blog/2019/09/30/P065/P065_10.jpg" class="">

<p>看到了伐若隐若现的小幽灵.<br>讲真我的技术很差,再近一点会被打死.<br>音乐选的很良心的.背景音是Sophia半夜把自己吓死前选出来的.射击时的枪声和开门声是Long调节的.效果蛮好蛮好.<br>也若隐若现的左下角是记载9个人是否有全触发完的小兵雕像(按照小说).每调查完一个人就会消失一个,用来记载进度.</p>
<img src="/blog/2019/09/30/P065/P065_11.jpg" class="">

<p>最后可以猜测犯人.</p>
<img src="/blog/2019/09/30/P065/P065_12.jpg" class="">
<br>

<p>猜对就赢啦!<br><br><br><br></p>
<p>看上去比HPer完整很多(),虽然showcase的时候还是感觉到了很大的差距2333.</p>
<h2 id="showcase"><a href="#showcase" class="headerlink" title="showcase"></a>showcase</h2><p>是的最后是showcase的时间!!看大佬们的游戏,game jam最大的乐趣之一.<br>我们虽然是使用了Unity,做2D player探索…但游戏这个词果然是广泛的.<br>有可玩性的都是游戏.<br>做策略桌游的,用ppt做选择冒险的,做文字小说游戏的,做3D双人冒险的,做联网坑队友游戏的…都有!!!!<br>也是从完全不编码到——&gt;卧槽这是3A游戏吗?都有!!!<br>挑几个讲吧.</p>
<p>3A游戏指的是有一组大佬做了3D双人双视角的陀螺打架游戏,是完成度最高的游戏.嘛……直接说可以上街机也不奇怪.<br>Camera的设定相当自然,开始时是双视角,当一方开始开大,做那种……如龙带特效连环拳xx之后又切回一个远距离俯视Camera.我没文化,只能说炫酷,高级,无敌.虽然还有些bug需要修,但操作上可玩性相当强.</p>
<p>还有一款完成度很高的是款塔防游戏.<br>按时间攒点布置自己的士兵,有意思的是自己的塔和兵和敌人都是可以鼠标移动的.就是一边在布置士兵还一边在用鼠标移除敌人.<br>这种让玩家手忙脚乱的感觉真是不错.<br>做了三种士兵也做了三种敌人.引擎用的是Godot(终于记住了名字x).<br>做3D的人还是蛮多的.</p>
<p>有款很可爱的是双人小鸡的游戏.两个玩家操控自己的小鸡来移动物品,渡河解密.没有做鸡的动画,是乱滚的移动的.但checkPoint很有意思,是让鸡通过篝火点燃它.这个feature做的我相当喜欢(这个是Unity做的).<br>不编码的那组用ppt实现文字冒险其实做的意外精良.<br>很好的利用了点击的特效,gif的图片,图片的进入离开特效等等.小故事也很有趣.很一致性.</p>
<p>相比下还有组也没有写码,可是那一组没有把游戏做出来.<br>那一组有六个人,是大团队了.Winter时做四玩家视角捉鬼游戏也是个大团队所以会有些些期待.可惜那组估计大家都是artist,有做音乐的,有做背景美术的,有做动画的,还有个演讲时特会讲,怕不是商科的兄弟.<br>的确他们有很酷的idea和超棒的美术.但游戏本体都没有实现果然还是很难说做了个游戏.<br>介绍说是第一次使用Unity,果然还是会吃力吧.最后是用ppt来展示idea的.讲真也没有过于复杂的游戏机制,如果能有个码农队友一定能做出个好游戏的.</p>
<p>不管怎么样都得做出来才行.<br><br><br><br></p>
<h2 id="闲聊"><a href="#闲聊" class="headerlink" title="闲聊"></a>闲聊</h2><p>这也想聊聊考虑选Unity的事情了.<br>Unity本身是自由度很高的引擎了.刚入学的时候我只知道RPG maker,Winter时的确也有人使用了RPG maker来做冒险小说游戏.<br>自由度很高意味着可以做很多脱出框架的想法,但同时也会把明明可以不用自己编的框架重新做一遍,比如说我写的行动码.<br>以为编码也是一个重要学习的事情,但在夏天自学的一个月里也是干了些……诶等等我这不是在编个RPG框架出来吗我为什么要选Unity的事情.<br>果然还是因为从小看大的free game系列对自己的影响太深,我对game play没有很好的想法.<br>这次没有室友三人组一起去也是跟飞哥,我的人生导师,有了意见分歧.<br>重商业化的游戏还是比较有限的.<br>也许是因为飞哥不是创作者吧…说了些什么…【jrpg是没有未来的】【不圈钱的游戏都是耍流氓】【我的爱好实在是过于偏门】之类的暴言.<br>我明白飞哥的顾虑,我也很感谢,都是吃不吃得上饭这样重要的事情.<br>在现在看来因为自己的能力过于糟糕,我大概还是没有什么余地的.看了那么多大家的游戏要好好学啊!!</p>
<p>游戏是media,跟绘图跟小说那样的宽广的.最初喜欢的只有故事而已,为了表达故事而选择media.<br>我也没能做出选择,只是跟贼忙工程系的Long和Steven聊天的时候时候觉得自己再努力一点就好了.<br>大家都辛苦了,在showCase之前也好好保持了游戏的可运行x.</p>
<p>最后散场时跟Steven和Sophia去同德园吃饭,三个人有话没话的乱聊.聊自己看过的小说自己看过的动画.<br>Steven说自己很悲观,喜欢看anti-humanity的题材.<br>我想了想,说自己喜欢看西尾,他经常会暴露很多G向的片段.<br>Sophia说自己喜欢脆皮鸭喜欢了很多年.<br>我们都没能接上话,应该是Sophia赢了吧(?).<br>就像这样的乱聊,我还是很喜欢的.<br>生活还是一样会继续,能在这个周末跟大家相遇做一个游戏真是个奇迹.<br>明天还是得继续赶due,感冒了一周都没好,但game jam结束了没那么大压力了.<br>那么祝我们有缘下次还能聊game jam的话题吧.</p>
<p>辛苦了辛苦了.</p>
]]></content>
      <categories>
        <category>项目记录</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
        <tag>Thank you Mr.goose</tag>
        <tag>Game jam</tag>
      </tags>
  </entry>
  <entry>
    <title>Hackathon记录_UnstressfulSpace</title>
    <url>/blog/2020/02/01/P067/</url>
    <content><![CDATA[<p>这个学期的game jam咕了.</p>
<span id="more"></span>

<p>以悲痛且惭愧的心情为自己和室友的修罗周默哀.<br>每个学期都会写的记录,这次以hackathon来凑个位置…以免之后整理记录,缺一次会很难过.</p>
<br>
<br>

<p>网页名称:Unstressful Space.<br>使用: Javascipt, html, AWS.<br>不知道什么时候链接会挂掉的网页本体:【<a href="http://unstressful.space/?i=1%E3%80%91">http://unstressful.space/?i=1】</a><br>github:【<a href="https://github.com/Sophiasu2333/StarterhackProject%E3%80%91">https://github.com/Sophiasu2333/StarterhackProject】</a></p>
<br>
<br>

<p>今年是接着去年,报名了Starter hack.<br>24小时限时,成员最多5人.题材不限,面向是初学者的编码活动.<br>去年是第一次…参加限时的活动.要说一年了有什么进度.<br>那是真的没有进步(沉默).<br>这一年技能点也点很杂,学校修的课程偏数学,什么都想学,什么都没学好.只有深知自己不足这一点是明白的.<br>所以看到学校的海报宣传,心虚地思考报名的事情.<br>圣诞回了趟伯父家,遇到我阿弟.</p>
<blockquote><p>弟:今年的starter hack你去吗,我会去当mentor呢(讲师).<br>我:来了.</p>
</blockquote>

<blockquote><p>友:所以你弟那个高中生来当讲师,你这个大学辣鸡是来参加的.<br>我:nonono.我很明白自己的位置,教我编码的都是爸爸,我很尊重我弟的.</p>
</blockquote>

<p>世界上就是有这样的天才小孩.高中的时候我可是分不清c#和c++的人.<br><br><br><br></p>
<p>今年也是我负责联系寻找队友.因为对高中生(像我弟那样的好学勤奋)印象很好,联系上的是一位11年级的高中生,还有两位本校的朋友.<br>本校的一位是商科+数学的双学位.<br>因为我和我朋友都是英文差又社恐,每年都在pitch(推销自己做的产品)的时候吃亏.<br>掐指算.四个可以编码人,我可以做设计,再又商科人擅长说话,可以.<br>但事情永远会糟糕.两位本校朋友第二天咕了.<br>没办法,我校人永远没有生活.在pitch的时候又是硬着头皮上.</p>
<p>那么我们从最初的提议开始吧.</p>
<p>商科人不亏是商科人.讨论的时候提不少很有积极意义的主意.<br>因为我个人会以自己兴趣,想使用的东西放第一,商科人的想法很吸引我.<br>她说自己对心理学略有了解,想要做帮助panic attack,或者单纯帮助焦虑的人的产品.页面分为了互动转移注意力,记录心情事件,还有聊天功能.</p>
<img src="/blog/2020/02/01/P067/P067.jpg" class="">
<blockquote>
<p>分为了戳泡泡页面和写日记页面.</p>
</blockquote>
<p>高中生擅长做网站.我提议了互动可以用unity做小游戏.也用了ae简单做了游戏想实现的效果(戳泡泡),商科人很喜欢这个主意.<br>于是我们分工.我搜索unity如何适应网页的时候高中生提议了用JavaScript实现.</p>
<p>行吧行吧,那我先做设计.<br>友去参加了workshop(starter hack就是有很多帮助和教新东西的workshop),提出了用AWS(amazon web service)来实现聊天功能.我被拉去.</p>
<p>行吧行吧,那我来读documentation.<br>24小时内我大部分时间都在读不同的documentation(…).<br>原理是使用亚马逊已经设计好的产品,比如说我们做的聊天机器人.是亚马逊已经写好的系统.我们所需要的是搞懂它系统的运作方式(不是原理),在之上加入我们想要的对话.</p>
<p>亚马逊给的例子是个 送花人.</p>
<blockquote><p>bot:亲亲你几点来取花呀.<br>bot:亲亲你确认一下要取的是这些花吗.</p>
</blockquote>
<p>这样感觉的,所期待回答很固定的对话.</p>
<p>而我们想拿它所实现的是</p>
<blockquote><p>bot:你怎么了.没事的,能跟我讲讲吗,事情会好起来的.</p>
</blockquote>
<p>有点漫无边际的对话.</p>
<p>所以实现的效果并不好.</p>
<p>友:你写的这个智障也太气人了.<br>我:怎么会,写的时候可觉得自己是鸡汤大师,厨师转世.</p>
<blockquote><p>bot:你好我的cici,你叫什么名字.<br>(我叫az)<br>bot: az 你好,今天你过得好吗?<br>(糟透了)<br>bot:你跟我说说开心的事吧！<br>(no)<br>bot: no 是件好事,不是吗?<br>(NO!)<br>bot:我觉得你说得对.</p>
</blockquote>

<blockquote><p>我:【no】成了关键词…<br>友:很来气.</p>
</blockquote>


<p>高中生不擅长沟通,但水平很好,网页都是他写的.我和友搞智障机器人.<br>最后提交时写产品报告.上一次认真写人模人样的文章是12年级了!太久远了原想让高中生写.<br>高中生:我们这个产品老好了比suicide热线都棒.你根本不用等就能跟我们的专业机器人疏通心理.<br>我(心慌得一匹):我来写吧.<br>这次顺利能走到pitch都是友和高中生的功劳.我只做了辅佐的事.<br>pitch的时候也是.看两位社恐人说不下去了,第三位社恐人(我)加入跟评委聊来救场.<br>是羡慕商科人能做到的软实力.和组员开会时最初带动大家的主意,让气氛变好.可以把自己的主意讲的生动,让人想听下去.<br>最后有位评委喜欢这个主意的实现,说点了follow up(推荐继续做)的选项.<br>我们还是挺开心的…!然后选择咕咕.<br>毕竟AWS用来实现还是不大行.我和朋友的能力也不可能空手写个chat bot.得了称赞就心满意足跑路.<br><br></p>
<p>下个学期一定要参game jam(flag).</p>
]]></content>
      <categories>
        <category>项目记录</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
        <tag>Thank you Mr.goose</tag>
      </tags>
  </entry>
  <entry>
    <title>miku和清早的红茶</title>
    <url>/blog/2020/04/28/P069/</url>
    <content><![CDATA[<img src="/blog/2020/04/28/P069/P069.png" class="">
<p>今年份Forfange的miku投稿.</p>
<span id="more"></span>

<p>这次的题目是cozy at home.所以选了早晨的阳光和红茶.</p>
<p>原本五月的miku expo我难得的订了票想跟雀雀一起去.<br>是我人生第一次的miku演唱会!!!然后延期了(…).<br>那我就面对电脑排练打call吧(什.</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>同人</tag>
        <tag>vocaloid</tag>
      </tags>
  </entry>
  <entry>
    <title>社交游戏和国际友人和扯淡</title>
    <url>/blog/2019/11/24/P068/</url>
    <content><![CDATA[<p>这篇文章由19年退坑的笔记和17年刚入坑没多久的笔记构成,算是记录了抽卡游戏的记录.</p>
<span id="more"></span>

<br>
<br>
<br>

<p>#2019</p>
<p>这里是里约的午后闲聊.</p>
<img src="/blog/2019/11/24/P068/P068_1.png" class="">
<img src="/blog/2019/11/24/P068/P068_2.jpg" class="">
<br>
<br>

<p>我从这个游戏,叫做死亡爱丽丝的游戏退坑啦!<br>是款没有可玩度,靠挂机刷关卡的游戏.有剧情,但日语很差看不懂,所以体验度为零.<br>玩了两年坚持下来完全因为它是个社群游戏,一个公会15人,被网友拉入公会就没办法随便跑路了.<br>我记得第一次的私信是一位很可爱的朋友,跟我说了一些关于入会的事情,加了句”拜托了&gt;&lt;”.因为很可爱我无法拒绝.<br>的确很可爱,那位叫赫萝,是位非常非常好看的小姐姐,以前好像是个直播主.<br>顺便一提那个公会是赫萝桑勾搭喜欢的小姐姐而合并的().她勾搭的小姐姐真的很好看……大概是网红小姐姐,名字我就不说了,万一被赫哥看到我觉得会被打(草.<br>然后认识了蛋黄,之前画的猫猫花店小哥哥头像就是给他的.这次明日方舟活动他也跑过来问我要不要代吃().真的非常感谢,蛋哥天使.<br>还有捏捏,上次花谱演唱会想要抢票拜托他帮忙注册了账号,不过当然没抢到(…).<br>东云老师也是那时候认识的,就是那位骨头社的背景画师.我有一次鼓起勇气请教他如何画背景,因为水平差太大听不懂www(但是真的很感谢).<br>因为跟大家一起当网友真的很开心,无法离开.<br>反而画画其实…蛮难交朋友的.当网友没有包袱,扯皮很开心.<br>之后我因为时差问题换了公会,从晚上的时间段到午场.午场人…非常少,于是碰巧加入的是日本朋友的公会了.<br>会长叫深月,真的得感谢他忍受我糟糕的日语…会长还加我line,用英文日文翻译bot说话.<br>我上个月跟他说我决定毕业了,其实还是有些伤感的,单方面的很喜欢他们.我们聊着聊着不知道为什么他给我推荐起了vtuber…我一点气氛都没法去伤感了().<br>所以账号决定送给他了.这样就不会再回坑了.<br>明明是款乐色游戏,因为要送号我一个一个得删除好友,看到名字都是回忆.<br>是段值得感谢的经历.</p>
<br>
<br>
<br>
<br>
<br>

<p>#2017</p>
<p>一个微氪玩家的自我修养(.<br>今天悠闲地扯扯淡.</p>
<p>氪不能改命.</p>
<p>跟抽卡游戏打交道到现在也有…三四年了.<br>突然很认真的来扯抽卡游戏这件事的起因是…因为这次人鱼琴卡池大失败.<br>我认真玩过的游戏也没几个,就随便谈谈这段经历.<br>lovelive自从水团上线后失去了兴致就转玩cgss,初次之外因为岚少安利和送钻福利而留下来的葬爱.</p>
<p>这类手游的一个陷阱是体力值和活动的设定.(肝)<br>先说是音乐游戏吧.</p>
<p>呀,想想,比起花几百块钱买3ds或是psv的卡带,然后花上时间慢慢的将曲子clear再fc.手机音游不但限制了尝试次数,而且还让你为了活动持续着过一些fc过很多遍的曲子.<br>这是不是完全改变了单机音游的乐趣了.<br>乐趣变成了收集卡牌,就像是买很多很多的干脆面只为了收集里面的英雄卡.<br>而且这干脆面很贵呢!!超肝的!!!<br>最近我买回了p4d觉得自己玩音游的耐心真是越来越少了.<br>没有活动pt诶!!为什么要打!!<br>冷静的思考一下手机音游和单机音游的区别吧.<br>不然那份最初单纯的乐趣会被活动消磨掉的呢.<br>然后.<br>抽卡游戏的陷阱最大的也是最显而易见的就是头两个字,抽卡.(氪)<br>3%是什么意思.<br>不是抽出来就是欧洲人抽不出就是非洲人.<br>是按平均33抽会有出货的几率,平均150(0.666)抽能抽到你想要的卡,平均如果是0.444的话是225抽.<br>这么看是不是心平气和了很多.<br>一单10000日元是大约是35连(葬爱增量时)和33.6连(cgss).<br>那么出货大约是9523.8日元和9920.6日元.<br>抽出老婆得43288.6日元和45092.3日元.<br>结论.<br>2505和2609人民币.</p>
<p>诶等等,我是算错了吗怎么这么贵啊(笑哭.jpg<br>当然这些都只是平均,几率这种东西很难说的.没有就是没有,希望各位挑战卡池的时候也算一下井的费用和石头是多少作为心理底线.<br>我是氪一单表示敬意剩下都是白嫖钻去嫖嫖乐的战术.<br>多攒一个钻,离老婆就更进一步.<br>白雪琴40几发出了2宝,人鱼琴115发了一张都没有.<br>新年卡池不抽不抽,什么时候复刻什么时候再战.<br>想起来芙蕾复刻我是攒了…近两万钻吧也没出.<br>希望各位不要和几率过不去.</p>
<p>除了抽卡部分的游戏乐趣才是真正重要的部分不是吗!!<br>cgss当然是打音游啦,<br>这里先以维护爱丽丝为例子吧.</p>
<p>葬爱和cgss不一样的地方是它的ssr不是可爱的女孩子卡面与服装,而是武器.<br>(当然特定的武器也会解锁可爱的女孩子.)<br>但是啊,葬爱呢,武器需要太多了.<br>每样武器首先可以突破4次,所以一共是5张相同的卡.<br>和cgss不一样的是,卡牌突破之后最重要的武力值差别特别大.<br>而且现在虽然武器槽最多是20ssr(L),但还有太多的副武器和梦魇了.<br>这游戏坑也太大了吧!<br>坑也太大了吧!<br>太大了吧!<br>(这里就不吐槽这游戏有多么的肝了,葬爱玩家根本没有头发.jpg)<br>这游戏除了抽卡的部分有趣的地方只能说是黑黑的故事和公会战了.<br>活动就是挂机死肝,没有乐趣谢谢.<br>黑黑故事除去打一章才三句话外,还是可以的.主要是和一群有趣的人一起公会战比较开心.<br>我加了公会之后才发现,哇,这是个社交游戏.<br>打公会战会遇到的是→想打赢→想上排位→想变强→提高战力吧→肝与氪<br>哟呀,这不就绕回了我们想除去抽卡游戏的部分了吗.<br>我觉得这不大好.<br>对身心都不大好.<br>说起来为什么抽卡游戏会流行起来呢.<br>游戏里面的角色为什么会被人一口一个老婆老婆的叫呢.<br>比较其他作品所精心塑造的人物性格和故事冒险,游戏中的卡牌角色…一开始能吸引人的只有画师和声优.剧情反而相比较而言会比较简单呢.<br>怎么说呢…我觉得抽卡游戏里的角色像(就是)一直存在的纸片人.<br>故事结束了,角色的冒险也结束了.<br>抽卡游戏的话,游戏公司还没倒闭,打开游戏你的爱豆还会跟你说【辛苦了producer】.<br>你点她一下她再会【辛苦了producer】.<br>她一直会在那里.<br>哇,突然觉得自己有些可怜.<br>……</p>
<p>今天的扯淡就到这里吧……</p>
]]></content>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>p丸的兔子系列一周年</title>
    <url>/blog/2020/04/05/P070/</url>
    <content><![CDATA[<img src="/blog/2020/04/05/P070/P070.png" class="">
<span id="more"></span>

<p>我一个很喜欢的视频主做的神烦系列一周年了…<br>是个不可以带着脑子看的系列,但很解压.</p>
<blockquote>
<p>友情小安利 -&gt; <a href="https://space.bilibili.com/7151607/channel/detail?cid=109636">bilibili</a></p>
</blockquote>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>同人</tag>
      </tags>
  </entry>
  <entry>
    <title>miku和rin</title>
    <url>/blog/2018/04/09/P072/</url>
    <content><![CDATA[<img src="/blog/2018/04/09/P072/P072_1.png" class="">
<span id="more"></span>

<img src="/blog/2018/04/09/P072/P072_2.jpg" class="">

<p>参加了fanforge的举办的庆祝miku expo 2018 T恤设计的活动.</p>
<p>突然回去画萌系感觉自己也很不要脸()<br>其实是去年miku是十周年的时候去投了个稿.得到的结果没在这里说过.<br>最后有通过,不过基本没有人来买ww虽然很有趣()慢慢把这事儿给忘了.<br>最近收到了fanforge的邮件,时隔一年竟然卖出去了两份海报.<br>所以看到再次有投稿活动的时候还是心痒痒的参加的哇…w<br>而且最近还是期末复习期…ww这个人真的不大行.</p>
<p>好了我去做题了().</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>同人</tag>
        <tag>vocaloid</tag>
      </tags>
  </entry>
  <entry>
    <title>来自朋友的阿怜世界旅行</title>
    <url>/blog/2019/09/11/P071/</url>
    <content><![CDATA[<img src="/blog/2019/09/11/P071/P071_1.jpg" class="">
<span id="more"></span>

<img src="/blog/2019/09/11/P071/P071_2.jpg" class="">
<img src="/blog/2019/09/11/P071/P071_3.jpg" class="">
<img src="/blog/2019/09/11/P071/P071_4.jpg" class="">
<img src="/blog/2019/09/11/P071/P071_5.jpg" class="">
<img src="/blog/2019/09/11/P071/P071_6.jpg" class="">
<img src="/blog/2019/09/11/P071/P071_7.jpeg" class="">
<img src="/blog/2019/09/11/P071/P071_8.png" class="">
<br>
【后面的图都不是我画的】
<br>
<br>
<br>
阿怜是HomePacker里面的人物.

<p>之前在ig上办了一个小小的有偿(?)的征集活动.怜是【在已经没有人类的世界随便乱逛的小女孩】,因为ig国际友人比较多一些,选择了【自己拍摄的实景照片】+【阿怜】,带着阿怜去环游我们还存在着人类的世界……这样的主题.<br>讲真没想到我的朋友们会这么回应我…收到的投稿比想象的酷很多.<br>拜托了大家选的照片都很有趣,阿怜去了亚洲和美洲好多地方,非常感谢!!<br>然后有个朋友啊……给我画了12张.<br>获得了太多的善意我好想死啊……</p>
<p>是在菲律宾的各个地方,她说有自己的学校,有鲜花集会,有自己去旅游的地方.非常符合了去探索,去热爱这样的主题.是我配不上的善意.<br><br><br><br><br>无法回应所以先记载下来吧.</p>
]]></content>
      <categories>
        <category>朋友给的画</category>
      </categories>
      <tags>
        <tag>oc</tag>
        <tag>HomePacker</tag>
      </tags>
  </entry>
  <entry>
    <title>给U君的口信</title>
    <url>/blog/2017/09/23/P075/</url>
    <content><![CDATA[<img src="/blog/2017/09/23/P075/P075.jpg" class="">
<span id="more"></span>

<br>
<br>
<br>
关于宇宙之类的,童年的某个夏天之类的,关于自由的事情.

<p>也许时间只是可能会带着恶意的…小小的参数,我偶尔会这么想.</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>给朋友的画</tag>
      </tags>
  </entry>
  <entry>
    <title>一点点的生活片段</title>
    <url>/blog/2017/03/23/P073/</url>
    <content><![CDATA[<img src="/blog/2017/03/23/P073/P073_1.jpg" class="">
<span id="more"></span>

<img src="/blog/2017/03/23/P073/P073_2.jpg" class="">
<h3 id="上等猫片-不是x"><a href="#上等猫片-不是x" class="headerlink" title="上等猫片(不是x)."></a>上等猫片(不是x).</h3><p>跟朋友去door to door募捐的时候在大街上遇上了一只猫.<br>脖子上还有电话号码和名字.打过去没人接,于是联系humane society,等着他们过来接猫.<br>于是就用这借口跟猫独处了一段时间x.<br>这…是我人生第一次!!!摸到!!!活的!!!粘人的!!!柔软的!!!液体般的!!!猫!!!<br>很暖!!!很软!!!喜欢来蹭人!!!一回头又不见了!!!神出鬼没!!!可爱!!!可爱!!!可爱!!!<br>猫真好啊!!!原来猫这么好啊!!!!把养猫加入人生to do list了!!!<br>之前都很安静.被接走的时候是它第一次叫了几声.<br>祝早日回归原主呢.</p>
<br>
<br>
<br>
<img src="/blog/2017/03/23/P073/P073_3.jpg" class="">
<img src="/blog/2017/03/23/P073/P073_4.jpg" class="">

<h3 id="一日一夜的毕业舞会之旅"><a href="#一日一夜的毕业舞会之旅" class="headerlink" title="一日一夜的毕业舞会之旅."></a>一日一夜的毕业舞会之旅.</h3><p>不是个社交性人类但是因为人类观察还是努力去了!!!舞会之后已经近10点了赶到城里去唱到3点店打烊…然后一到宾馆我睡得都不知道他们还去看了日出ww<br>年轻人真有精力.<br>(这是我拍的…所以没有我在里面;P)<br><br><br><br><br><br></p>
<img src="/blog/2017/03/23/P073/P073_5.jpg" class="">
<img src="/blog/2017/03/23/P073/P073_6.jpg" class="">

<h3 id="放张上个月在学校过夜的图叭"><a href="#放张上个月在学校过夜的图叭" class="headerlink" title="放张上个月在学校过夜的图叭."></a>放张上个月在学校过夜的图叭.</h3><p>为癌症而筹款募捐的活动.</p>
<p>最高单人筹集额度一万八千多加币,太厉害了吧!这样子的人类是可以拯救世界的,我相信.<br>最后总额度是二十一万,好像.是全国第一,超厉害.<br>我吗…我当然是保底金额啦lol.<br><br><br><br><br><br></p>
<img src="/blog/2017/03/23/P073/P073_7.jpg" class="">
<img src="/blog/2017/03/23/P073/P073_8.jpg" class="">
<img src="/blog/2017/03/23/P073/P073_9_s.jpg" class="">

<h3 id="学校作业-bookplate设计"><a href="#学校作业-bookplate设计" class="headerlink" title="学校作业,bookplate设计."></a>学校作业,bookplate设计.</h3><p>之后用在了制作书本的作业上.<br>虽然没人能看的出来,但那是我家角色图书管理员的围巾和油灯.<br>加上这个bookplate是不是有假冒的露天图书馆的感觉wwww.</p>
<p>作为原创厨真开心啊(笑.<br><br><br><br><br><br></p>
<img src="/blog/2017/03/23/P073/P073_10.jpg" class="">

<h3 id="和物理课认识上的学妹一起在放学后做的实验"><a href="#和物理课认识上的学妹一起在放学后做的实验" class="headerlink" title="和物理课认识上的学妹一起在放学后做的实验."></a>和物理课认识上的学妹一起在放学后做的实验.</h3><p>感谢物理课!!!认识新的朋友太开心了.除了一起实验,我们还会ig上还配合着向学霸请教问题,最佳好队友.<br>说起来这位朋友高中毕业的那个假期去考了飞行员.我在ig上看她开飞机的照片,真的是太酷了.</p>
]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>miku和星空</title>
    <url>/blog/2017/05/26/P074/</url>
    <content><![CDATA[<img src="/blog/2017/05/26/P074/P074.png" class="">
<p>参加了一个miku十周年的绘画征集活动.</p>
<span id="more"></span>

<p>谢谢!!祝你有美好的一天!!!</p>
<p>anyway,已经十周年了,好快哇.<br>还记得第一次给这小可爱庆生的时候我还在初中.<br>画的还是rolling girl,记得特别清楚.<br>我厨miku也不是厨角色,很喜欢她调出来有些电脑样的歌声.还有她能给各位p主带来的可能性.Vocaloid最有趣的就是那样的自由的创作性了!!</p>
<p>能认识他们真好,真好.</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>同人</tag>
        <tag>vocaloid</tag>
      </tags>
  </entry>
  <entry>
    <title>高中时做过的奇奇怪怪作业之差点跟我的鞋子永别</title>
    <url>/blog/2016/06/15/P078/</url>
    <content><![CDATA[<p>つД｀) ﾀｽｹﾚ !!</p>
<span id="more"></span>

<h1 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h1><img src="/blog/2016/06/15/P078/P078_0.jpg" class="">
<p>被冲走的纸船.</p>
<br>
<br>
<br>

<h1 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h1><p>事情是这样的.<br>这次摄影课的作业是模仿一张照片.<br>我选择的是jerry uelsmann的一张.</p>
<img src="/blog/2016/06/15/P078/P078_1.jpg" class="">

<p>超帅的有没有.<br>而且他当时用的还是胶卷,那个多重印片的技巧实在太蛋疼了所以老师说直接ps就好啦!<br>然后就开始动手啦.<br>我需要一张船的照片和一张手的照片.<br>手很简单,我有自己的手.<br>蹡蹡——</p>
<img src="/blog/2016/06/15/P078/P078_2.jpg" class="">

<p>哦其实在延时摄像机前蹲马步还是很累的.<br>然后我需要一艘船.<br>我的小学生思维让我决定去做搜纸船,向邻居家借真的很不现实…<br>头是万能的.<br>于是就出现了前几天去湖边拍照还没拍完船就追不回来的事情.穿着运动鞋的我只好目送着船远去…<br>于是我今儿带着家伙又去尝试了一遍.<br>这次的船更大了一些!说不定镜头会更饱满点,我还是这么期待的.</p>
<img src="/blog/2016/06/15/P078/P078_3.jpg" class="">

<p>然而浪头一打它就扁下去了.</p>
<img src="/blog/2016/06/15/P078/P078_4.jpg" class="">

<p>哦,纸做的.<br>拎起来之后总有种既视感.</p>
<img src="/blog/2016/06/15/P078/P078_5.jpg" class="">

<p>因为想更好的拍水面的感觉,所以干脆穿着凉鞋走到水里去了.<br>湖水真的很凉,虽然也挺舒服的.<br>然后我的鞋被冲走了.</p>
<img src="/blog/2016/06/15/P078/P078_6.jpg" class="">

<p>当然追了回来:D.<br>咦,等等,鞋诶.<br>于是我的计划从放流纸船改成了放流鞋子.</p>
<img src="/blog/2016/06/15/P078/P078_7.jpg" class="">
<br>
<br>
<br>

<h1 id="3"><a href="#3" class="headerlink" title="3."></a>3.</h1><img src="/blog/2016/06/15/P078/P078_8.jpg" class="">

<p>同系列的再创作作业.</p>
]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
        <tag>奇怪作业</tag>
      </tags>
  </entry>
  <entry>
    <title>冬日不会再来,夏日终会逝去</title>
    <url>/blog/2017/06/10/P076/</url>
    <content><![CDATA[<h3 id="2018-05-20"><a href="#2018-05-20" class="headerlink" title="2018-05-20"></a>2018-05-20</h3><span id="more"></span>
<img src="/blog/2017/06/10/P076/P076_1.jpg" class="">

<p>冬日的故事就这样结束.<br><br><br><br></p>
<h3 id="2017-06-10"><a href="#2017-06-10" class="headerlink" title="2017-06-10"></a>2017-06-10</h3><img src="/blog/2017/06/10/P076/P076_2.jpeg" class="">

<p>那是自称怪异专家的开始.</p>
<br>
<br>
<br>

<p>相关图书馆编号:char44,char47.</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>oc</tag>
        <tag>卡尔马</tag>
        <tag>冬日组</tag>
      </tags>
  </entry>
  <entry>
    <title>一点点的生活片段</title>
    <url>/blog/2016/07/31/P079/</url>
    <content><![CDATA[<img src="/blog/2016/07/31/P079/P079_1.jpg" class="">

<p>一辆自挂东南枝(.)的单车.</p>
<span id="more"></span>
<br>
<br>
<br>
<img src="/blog/2016/07/31/P079/P079_2.jpg" class="">

<p>阿妈拍的春天.<br><br><br><br><br><br></p>
<img src="/blog/2016/07/31/P079/P079_3.jpg" class="">

<p>买了一罐两块五的勇气.<br><br><br><br><br><br></p>
<img src="/blog/2016/07/31/P079/P079_4.jpg" class="">

<p>木老师上课生气于是现场教做人(理论).</p>
<blockquote>
<p>11年级的英语课,或者说是语文课,真的是很教做人的一门课.<br>老师是位年轻的男老师,上来就调侃自己真的不是体育老师.名字叫Mr.Wood.<br>这位老师的课一开始真是每天来点负能量…<br>like【this is today’s moral lesson, you will die and be forgotten】<br>or【people are always shitty, no matter how the time changes】<br>然后最近谈到的是the great gastby and the fight club的论文.<br>真是好难呢wwwww思考人生什么的.<br>Wood用catcher in the rye举了例子,谈到主旨是在追求innocent与成长之间的矛盾.挺他分析的时候真是恍然大悟呢.上半年时看这本书的时候能感受到一定的共鸣但是却不知道为什么ww.<br>不过说到fight club这部电影…很喜欢它的黄色幽默,但是在课上与大家一起看的时候还是有感到不适哇!!这种看小黄片被抓了的感觉.<br>开始写论文的时候再讨论吧.<br>现在在思考的是 人可以从崇拜的人身上获得更好的自己…或者说是从别人的身上创造出更好的自己…<br>虽然这和讨论了几个礼拜的追求物质生活与道德矛盾的American dream一点关系也没有…</p>
</blockquote>
<br>
<br>
<br>
<img src="/blog/2016/07/31/P079/P079_5.jpg" class="">

<p>在小镇图书馆看到的可借miku音游.<br><br><br><br><br><br></p>
<img src="/blog/2016/07/31/P079/P079_6.jpg" class="">

<p>湖边捡来的树枝和一位印度女士家的颜料组合出来的奇怪东西.</p>
<br>
<br>
<br>

<img src="/blog/2016/07/31/P079/P079_7.jpg" class="">

<p>cheer rio!!</p>
<br>
<br>
<br>
<img src="/blog/2016/07/31/P079/P079_8.jpg" class="">

<br>
<br>
<br>
<img src="/blog/2016/07/31/P079/P079_9.jpg" class="">
Alex教了一点法语!
]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>万圣节的某位少年</title>
    <url>/blog/2016/10/31/P077/</url>
    <content><![CDATA[<p>( ´ﾟдﾟ)(ﾟдﾟ｀ )ﾈｰ</p>
<span id="more"></span>

<img src="/blog/2016/10/31/P077/P077.jpg" class="">

<p>我所认识的某位少年,万圣节的那天掏出了白色T恤写上了Niobium.</p>
<p>我:你这么干什么.<br>他:我装扮成Niobium这个元素.<br>我:……?<br>他:没觉得这个元素读上去特别好玩吗!<br><br></p>
<p>真是败给他了.</p>
]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>高中最后的奇奇怪怪作业</title>
    <url>/blog/2017/03/19/P080/</url>
    <content><![CDATA[<blockquote><p>这里是高中最后申请大学时,为艺术类学校准备的作品.<br>也是从这里开始作为创作者的我开始变得不同.<br>大学选择的是数学专业,几年来对于思维方式和追求目标都跟我的起点完全不同.<br>不以好坏来评论,这里仅供保留当年的痕迹.</p>
</blockquote>

<span id="more"></span>

<br>
<br>
<br>

<h1 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h1><img src="/blog/2017/03/19/P080/P080_1.jpg" class="">
<img src="/blog/2017/03/19/P080/P080_2.jpg" class="">
<img src="/blog/2017/03/19/P080/P080_3.jpg" class="">
<img src="/blog/2017/03/19/P080/P080_4.jpg" class="">
<p>还是上个礼拜的事情.</p>
<p>以为portfolio都准备好了的我跟老师休了天假.然后发现最后一个学校要求我完全没做过的杂志设计的时候被老师一通臭骂.<br>到最后的一天的时候和老师心态平稳和平和气.<br>这是那时赶出来的排版练习.<br>还是为Wikipedia乱摘来的词句,考官没有认真读真是太好了.<br><br><br><br><br><br></p>
<h1 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h1><p>同样也是那段时间赶的作品.</p>
<p>画了我的书架.我的书架在我心中可是爱抖露级别的,不过稍微改了一点因为不能再卡通了.<br>说起来准备portfolio这段时间最大的痛苦就是这里了.因为报的专业分别<br>是animation,illustration and graphic design.<br>所以考完了动画就很痛苦.<br>老师:你为什么画什么都那么卡通.再写实一点再写实一点.</p>
<img src="/blog/2017/03/19/P080/P080_5.jpg" class="">
<img src="/blog/2017/03/19/P080/P080_6.jpg" class="">
<br>
<br>
<br>

<h1 id="3"><a href="#3" class="headerlink" title="3."></a>3.</h1><p>这张我很喜欢.是水彩和马克笔.<br>三所学校的portfolio用上了.<br>nightschool的时候遇上了一位很喜欢blind contour的老师,就是不看着自己的纸只看着要画的东西画画,画出来的线条就很有意思了.<br>我就靠着这个技巧试图隐藏我根本没有的素描功底.<br>这张讲的是人…与…关系?<br>第一张是stopping,讲的是自身.<br>第二张是turning,讲的是做出选择.<br>第三张是walking,讲的是短时间的关系.<br>最后一张是following,讲的是长时间的关系,像是亲子关系.</p>
<img src="/blog/2017/03/19/P080/P080_7.jpg" class="">
<br>
<br>
<br>

<h1 id="4"><a href="#4" class="headerlink" title="4."></a>4.</h1><p>这张被老师砍掉了.</p>
<p>掰着手指数油画有了,水彩有了,电脑画有了,钢笔画有了.<br>老师提议我画张素描,然而画到一半被她叫停.<br>【这走形太严重了,百分之五十都不到,还是算了吧】<br>然后这张是想着画像电脑平铺一样的水粉.<br>所以我所想到的是重复的元素.像我新年明信片那样画.<br>重复的元素一定情况下看着的确很爽快,但是又有些没有重点,太啰嗦的问题.<br>不过老师砍掉的原因是【你的涂的太草了】</p>
<img src="/blog/2017/03/19/P080/P080_8.jpg" class="">
<br>
<br>
<br>

<h1 id="5"><a href="#5" class="headerlink" title="5."></a>5.</h1><p>所报考的学校有一所很喜欢抽象画.之前那些鞋子也是因此而尝试的.<br>这张是油画,那天我…我就带了两罐颜色,深蓝和白绿.还有一点点的黄.<br>油画平铺起来的效果,真的,不好.<br>老师【正常的画法是调一种颜色不超过三笔】<br>原来是这样啊.<br><br><br>第二天:</p>
<p>【老师我觉得颜色好难看.】<br>【那倒没有】<br>过会儿她又说<br>【但是没有那么好看,倒是真的】<br>老师我喜欢你的诚实.</p>
<p>于是后面加上了贴了报纸的木板,想着简配上繁的效果会不会好一些.<br>最后达成的就是这很微妙的效果了.<br>【老师你觉得考官会喜欢这幅吗】<br>【那要看你怎么解释这意思了】<br>好有哲理.</p>
<p>难道这是抽象画的本质吗.</p>
<br>

<p>顺便一提这幅画的时候我想的是【三人成虎】的故事.<br>画的是三个人与一只猴子.说小孩也可以啦.<br>如果猴子所说的话被三个人所叙述就会变得有假象道理也好,三个人所说的话被猴子所模仿也好,是指虚假的语言重量与人数的关系.<br>是不是觉得这幅画更有道理了一点(何.</p>
<img src="/blog/2017/03/19/P080/P080_9.jpg" class="">
<br>
<br>
<br>

<h1 id="6"><a href="#6" class="headerlink" title="6."></a>6.</h1><p>画室的混乱让这玩意看起来更乱了ww.</p>
<p>剪贴画.<br>我还是挺喜欢这个#postme的想法的.<br>社交软件上的各种拍食物,拍风景,拍自己等等等等.<br>不过最后效果不是很好就是了.<br>贴的时候觉得左下角实在太密但是老师特意说把上面空出来.<br>解释原因的时候她扔了几个纸团在上面,画一下子看起来乱得不像画了.<br>原来如此.</p>
<img src="/blog/2017/03/19/P080/P080_10.jpg" class="">
<img src="/blog/2017/03/19/P080/P080_11.jpg" class="">
<br>
<br>
<br>

<h1 id="7"><a href="#7" class="headerlink" title="7."></a>7.</h1><p>这幅是丙烯.也是那几天像地狱一样赶出来的.<br>我高中的时候和丙烯和黑白报相处了很久,然而并不能画出没有笔触的细腻的东西…<br>画的主旨.<br>老师【这幅讲了生命的活力,春天的涌动,一切欣欣向荣.】</p>
<p><em>虽说本质是玩颜色</em></p>
<img src="/blog/2017/03/19/P080/P080_12.jpg" class="">
<br>
<br>
<br>

<h1 id="8"><a href="#8" class="headerlink" title="8."></a>8.</h1><p>Alex家的狗,名字叫Manny.<br>为了送学校改了一点.<br>因为要送给Alex,所以我执意用油画继续画,老师提议用丙烯.<br>结果是没有干.考官的手碰到了颜料.<br>这件事被我当成悲伤的梗讲了三年(哈哈).</p>
<img src="/blog/2017/03/19/P080/P080_13.jpg" class="">
<br>
<br>
<br>

<h1 id="9"><a href="#9" class="headerlink" title="9."></a>9.</h1><p>最后一幅!!</p>
<p>这幅加了点细节送上去了.<br>为什么以前的我形画不准但是画出来的东西很有意思呢……<br>好好复健(哭.</p>
<img src="/blog/2017/03/19/P080/P080_14.jpg" class="">
<br>
<br>
<br>

<h1 id="10"><a href="#10" class="headerlink" title="10."></a>10.</h1><p>明明说好的最后一张了但是还是想拍下这份ww.<br>考动画的portfolio像是画考卷.<br>第一次认真画透视,也是很拼的.<br>我想我是努力过了的.进不了也问心无愧.</p>
<img src="/blog/2017/03/19/P080/P080_15.jpg" class="">
<img src="/blog/2017/03/19/P080/P080_16.jpg" class="">
]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
        <tag>奇怪作业</tag>
      </tags>
  </entry>
  <entry>
    <title>魔法少女雀雀</title>
    <url>/blog/2019/08/21/P081/</url>
    <content><![CDATA[<img src="/blog/2019/08/21/P081/P081_1.gif" class="">
<span id="more"></span>

<p>雀雀是我的同校好战友.跟雀去学校的写生社团非常开心,这里是给雀画的她自设小动图.</p>
<blockquote>
<p>雀 -&gt; <a href="https://www.instagram.com/manaku030_/">ig</a></p>
</blockquote>
<br>
<img src="/blog/2019/08/21/P081/P081_2.png" class="">
<br>
<br>
<br>
<br>
<br>
以及趁机(趁机)发一下雀画给我的老兔和麻醉嘿嘿嘿.
<img src="/blog/2019/08/21/P081/P081_3.png" class="" width="420" height="580">
<img src="/blog/2019/08/21/P081/P081_4.png" class="" width="400" height="400">
<br>
圣诞节老兔还是我在她旁边看她一步步画完的(老母亲的笑容).

<br>

<br>
<br>
<br>

<p>相关图书馆编号:char02,char05.</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>给朋友的画</tag>
        <tag>Thank you Mr.goose</tag>
        <tag>废弃工厂</tag>
      </tags>
  </entry>
  <entry>
    <title>前辈的私人辅导</title>
    <url>/blog/2018/01/02/P083/</url>
    <content><![CDATA[<p>趁着特别的日子做了oc搜狗输入法.</p>
<img src="/blog/2018/01/02/P083/P083.png" class="">
<span id="more"></span>

<p>源文件就不放了,还是第一个自己的输入法,用了很久.<br>国文苦手的后辈在前辈的指导下练习汉字ww.</p>
<br>
<br>
<br>

<p>相关图书馆编号:char44,char47.</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>oc</tag>
        <tag>卡尔马</tag>
        <tag>冬日组</tag>
      </tags>
  </entry>
  <entry>
    <title>前世是社畜的催稿天使</title>
    <url>/blog/2020/03/09/P086/</url>
    <content><![CDATA[<img src="/blog/2020/03/09/P086/P086_1.jpeg" class="">
<span id="more"></span>

<img src="/blog/2020/03/09/P086/P086_2.jpeg" class="">

<p>崽,死线催稿人,是我的自习群的报时npc,名字直接叫ddl了(…).<br>发型发色是灰桑提议的,很喜欢,很喜欢.<br>按个人爱好设计成了合法(?)坏心眼正太,贴合了自己对死线的爱恨情仇(….).</p>
<br>
<br>
<br>
<br>
<br>

<p>顺便分享一下朋友画给我的ddl,是我的宝物…<br>这是U君画的!!</p>
<img src="/blog/2020/03/09/P086/P086_5.JPG" class="" width="360" height="385">
<br>
<br>
<img src="/blog/2020/03/09/P086/P086_4.JPG" class="" width="380" height="385">
<br>
<br>

<p>这是菌桑画的!!</p>
<img src="/blog/2020/03/09/P086/P086_6.JPG" class="">
<br>
<br>

<p>最后是灰画的!!</p>
<img src="/blog/2020/03/09/P086/P086_3.PNG" class="">
<br>
<br>
爱大家!!!!

<br>
<br>
<br>

<p>相关图书馆编号:char06.</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>oc</tag>
        <tag>DDL</tag>
      </tags>
  </entry>
  <entry>
    <title>些许回忆</title>
    <url>/blog/2020/01/02/P082/</url>
    <content><![CDATA[<img src="/blog/2020/01/02/P082/P082_1.png" class="">
<span id="more"></span>

<br>
<br>
<br>
<img src="/blog/2020/01/02/P082/P082_2.png" class="">
<img src="/blog/2020/01/02/P082/P082_3.png" class="">
给他们20岁纪念所画的.
<br>
<br>
<br><br>
<br>
<br>
<br>
<br>
<br>
<img src="/blog/2020/01/02/P082/P082_4.png" class="">
<img src="/blog/2020/01/02/P082/P082_5.jpeg" class="">
<br>
<br>
<br>
<br><br>
<br>
<br>
<br>
<br>
<img src="/blog/2020/01/02/P082/P082_6.png" class="">
没能说出口的.

<br>
<br>
<br>

<p>相关图书馆编号:char44,char70.</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>oc</tag>
        <tag>卡尔马</tag>
        <tag>TokyoTL</tag>
      </tags>
  </entry>
  <entry>
    <title>第一次也许是最后一次的oc草稿小集合</title>
    <url>/blog/2017/09/18/P084/</url>
    <content><![CDATA[<img src="/blog/2017/09/18/P084/P084_1.jpg" class="">
<span id="more"></span>

<p>小春日.</p>
<img src="/blog/2017/09/18/P084/P084_2.jpg" class="">

<br>

<p>一直打瞌睡的同学与吵闹的学姐.<br>姓氏是春日居.是姐妹.<br>妹妹出现的时候姐姐不会出现.<br>发色都是粉色.姐姐颜色更深一些.<br>都是有颜色的人,妹妹的能力是胶体,姐姐是波纹.<br><br><br><br><br><br><br><br></p>
<img src="/blog/2017/09/18/P084/P084_3.jpg" class="">

<p>图书馆副馆的管理员.原型是昆虫,颜色是米白色.</p>
<br>
<br>
<br>
<br>
<br>
<img src="/blog/2017/09/18/P084/P084_4.jpg" class="">

<p>让人头疼的大臣和被使唤的下属.<br>日落里的老兔和其他设定下的老兔可以当做不同的角色.(毕竟是量产(笑))</p>
<p>顺便深夜廻真是个好厉害的游戏啊……虽然游戏的演出和剧本很震撼,但是对孩子下手大概是戳到了我的雷点(.有些残酷的冒险可以不如说很喜欢,但对小孩子出手是真的不可以(。)<br>看岚少的吐槽真是是忘了一代的惨……然后暴击伤害力加成max…(装死,jpg)<br><br><br><br><br><br><br><br><br><br></p>
<img src="/blog/2017/09/18/P084/P084_5.jpg" class="">
<img src="/blog/2017/09/18/P084/P084_6.jpg" class="">

<p>贩卖新闻报纸的和平主义者和周游世界的迷糊信使.<br>哇在ipad上画的和ps上的为什么画风差好大(哭笑.emoji.<br>两人之前是前辈后辈的关系.因为送信经常能看到各个地方的事情,更想传播出去,所以最后去做新闻报纸了.<br>发色大概是金色的,但并不是有颜色的人.<br>以及,<br>otter老兄啊,你好难画.<br><br><br><br><br><br><br><br><br><br></p>
<img src="/blog/2017/09/18/P084/P084_7.jpg" class="">

<p>前面几位都是日落世界观的,这两位是当时顺手的涂鸦(?).<br>是家庭组的宾果小姐和她的朋友.</p>
<br>
<br>
<br>

<p>相关图书馆编号:<br>char02,char04,char85,char8A,char8D,<br>char93,char94,char98.</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>oc</tag>
        <tag>在日落之前</tag>
        <tag>残局象棋</tag>
        <tag>湖底图书馆</tag>
        <tag>信使组</tag>
      </tags>
  </entry>
  <entry>
    <title>给白牙牙的生日祝福</title>
    <url>/blog/2016/09/14/P087/</url>
    <content><![CDATA[<img src="/blog/2016/09/14/P087/P087_1.png" class="">
<span id="more"></span>

<img src="/blog/2016/09/14/P087/P087_2.jpg" class="">
<br>
<br>

<p>白牙牙是我遇到的一位实况主,是很好很有感染力的人.有幸认识…<br>这是那年画给他的生日礼物.</p>
<blockquote>
<p>白牙齿 -&gt; <a href="https://space.bilibili.com/900186">bili</a></p>
</blockquote>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>给朋友的画</tag>
      </tags>
  </entry>
  <entry>
    <title>制作记录_流落之所</title>
    <url>/blog/2019/06/18/P085/</url>
    <content><![CDATA[<p>为【流落之所】制作过程的记录.</p>
<span id="more"></span>

<br>
<br>
<br>
<img src="/blog/2019/06/18/P085/P085_1.jpeg" class="">

<p>整个项目延续的时间相当长,说起来只有歉意.<br>记录也是删删减减写了很多回,想法甚至是语气都很不一样了w.<br>因为是记录,也是第一次去做一个完整的故事,尝试去做视频,尝试跟其他人一起来做一个项目.只能算是心情或说是经历上的笔记.<br>匿名老师给我的这个委托,既然决定记载了,那么就写完它吧.<br>对我来说也算是一段不短的路途了(苦笑).</p>
<br>
<br>
<br>

<img src="/blog/2019/06/18/P085/P085_2.png" class="">


<h4 id="1"><a href="#1" class="headerlink" title="1"></a>1</h4><p>还是18年夏天要结束的事了.</p>
<p>一开始的探讨:<br>那时还没有词,匿名桑先给我了demo和这个委托,谈论了下思路.</p>
<blockquote><p>匿:随便搞搞就好啦!一张图就好.</p>
</blockquote>

<p>(经过聊天之后了解到了是叙事曲,叙事曲怎么做一图流啦!!好难啦!!)</p>
<p>仔细想想真是个好大的flag,当初思考着一图流无法叙事清楚就挖了一个大坑把自己,甚至是匿名桑给拉了进来.当然那时的我并不知道自己会需要多大的力气把故事给讲出来.</p>
<br>

<p>很久之前的聊天记录:</p>
<blockquote><p>匿:之前主人公是在所有生命诞生之前,给他们赋予死亡结局的角色.</p>
<p>匿:因为自身并没有死亡的结局所以是永生的.</p>
<p>匿:直到他碰到一个小女孩.</p>
<p>匿:(熊猫头表情包)然后就放弃了他的能力吧小女孩的死亡放到了自己身上,这样.</p>
<p>(就是能力的转移对吧)</p>
<p>(那为什么是给小女孩呢)</p>
<p>匿:我一开始想主人公不给女孩子死亡的原因大概是他好久没见到这种纯洁无暇的事物.</p>
<p>匿:不忍心再去做他以前对其他生物做的事儿……就这么简单哈哈哈.</p>
</blockquote>

<img src="/blog/2019/06/18/P085/P085_3.png" class="">

<br>

<p>老师的想法,主人公是瘦弱的男孩子.所以还是画了很顺手的兜帽(…领子?),兜帽可能会遮住嘴巴,想是中立,无表情的感觉.</p>
<p>女孩子的话,会更活泼一些吧.年幼,简单,清纯,有活力.衣服是以没有装饰的制服裙来思考的.领子是翅膀的形状.不过画的时候感觉领子很容易撞,犹豫了一下.</p>
<img src="/blog/2019/06/18/P085/P085_4.jpg" class="">

<br>

<p>匿名桑的意思是男主会有些女性化,甚至病态的感觉.女孩子→拯救的对比.</p>
<p>头发散散的,会在遮掉眼睛的微妙位置,更长一些,嘴巴也是完全遮掉了.</p>
<img src="/blog/2019/06/18/P085/P085_5.png" class="">

<br>

<blockquote><p>匿:我一开始想的其实是个很瘦弱的男孩子.</p>
<p>(服饰呢?感觉是很正式的死亡代理人(?)还是会藏在人群里的感觉?)</p>
<p>匿:藏在人群里的感觉比较好吧wwww!!</p>
<p>匿:就是个普通的男孩子的感觉.</p>
</blockquote>


<p>……普通的男孩子是怎么穿的啦!!</p>
<p>(能看出我第二次的草稿就真的是灵魂级别的了,第一次还矜持了一下,我平时画自己的草稿就是这种完成度wwww)</p>
<p>一开始是我自己开始的pv制作.因为跟ae接触过一点点就一边想分镜一边画素材.完全是边翻教程边做.如果知道我的b站id那能看到我唯一做出来的小视频,真滴很辣鸡.</p>
<p>我给老师看了,我的技术大概就这么点,老师只回了我:【感觉很可爱!】</p>
<p>(……)</p>
<p>我乱来了啊老师!</p>
<br>
<br>

<p>说实话,很长时间对我来说最困难的是找教程.<br>一些能看懂的pv,虽然大体能猜到效果是如何叠加的,但苦于无法描述效果,也没法搜索.<br>打个比方就是查找想要的古典英语只能搜【sad classic music】……<br>之前找到的一些论坛也是日语和英语…而且偏重于实拍的特效.<br>直到我做到1/2的时候才想到了个词.<br>【静止系mad】.</p>
<p>……</p>
<p>想到有帮助的关键词花了半年,不愧是我!(被殴打).</p>
<img src="/blog/2019/06/18/P085/P085_6.png" class="">
<br>
<br>

<h4 id="2"><a href="#2" class="headerlink" title="2"></a>2</h4><p>前年9月开始的学期…之前也有记载过,是最初开始学编码的学期,过的相当吃力.然后再次开始做是12月的学期假了.<br>ae杀我.这个是我怎么也搞不定的一段().最后在5月的时候做完的!(屑)<br>最后终于稍微会用些camera了,多加一个null obj link到camera上会更好调,重点是把想要的镜头时间点给切好,然后就交给ae自己了w.<br>以及只会画自己东西的画手来说,分镜和平时的构图差很多的.在如何把事情讲清楚这里感觉很多都没做好.</p>
<br>

<p>我只有画的女孩子可以看看(……)→</p>
<img src="/blog/2019/06/18/P085/P085_7.png" class="">
<img src="/blog/2019/06/18/P085/P085_8.png" class="">
<br>

<p>虽然平时周末是用来填坑的,各种各样的原因太要命了于是咕到了宇宙.<br>真的真的非常对不起老师.<br>很长时间这件事都是我的压力源.<br>没能好好衡量自己的能力是我一直都有的毛病.<br>(其实去温哥华那次旅游的时候我都带着电脑在画ww一边点了炸鸡外卖一边画ww)</p>
<br>

<img src="/blog/2019/06/18/P085/P085_9.png" class="">
<br>


<p>这个坑被延迟,在5月的空闲再重新打开了.<br>这次回来配了个色.最后的一段,也就是能力转换后,准备重新把图上色.</p>
<img src="/blog/2019/06/18/P085/P085_10.png" class="">

<br>
<br>

<p>重新分了一下变成了七个part.开头和第二个part也准备推翻重做.</p>
<br>

<p>最先完成的是间奏和结尾的部分.也就是更像手书,靠画图然后加ppt特效这样完成的.<br>有歌词的部分开始考虑起来跟没有歌词的差了很多.<br>在 [为歌曲本身服务]—&gt;[如何让歌词清晰地展现出来并且配合画面]这个方面是第一次接触到.<br>一直都是vocaloid的观众,但为了学习制作去看感觉挺有趣w.<br>包括很多的细节,在前奏的时候把题目和staff桑交代清楚,或是一开始就是乐句,在间奏的时候交代staff列表.<br>很多pv主会再间奏的时候把之前的pv片段再利用,之前会觉得,一段pv已经挺短啦ww加点新画面不好吗ww.真实自己做了才会觉得【再利用】也是一门很深的学问.<br>越看以前喜欢的pv越觉得,哇我喜欢的这个pv主是天才吗是天才吧.在那么多年前就已经做得非常漂亮而且现在还在进步.果然初学者与观众的看法是不同的.<br>比如说sidu桑的是极其干脆利索且高效率,お菊桑就是【过于厉害以至于我的眼睛和大脑跟不上】了,以及三重之人和ke-sanβ是我印象中最vocaloid系pv的pv主……<br>悄悄说一句我觉得画师出生的pv主和其外的pv主给人的感觉可能有一点点不一样.有些画师可以做的非常漂亮,比如toma桑,非常的稳定.但单单字体和画面效果加不多的画也能做出很棒pv,很多的vocaloid系pv的魅力给我最大的震感是这一点.最重要的不是单单画好看,而且整体的设计效果和动态效果了.</p>
<br>

<p>真的好难wwwww.</p>
<br>

<p>啊,我们回到这个项目本身的话题上吧.</p>
<h4 id="3"><a href="#3" class="headerlink" title="3"></a>3</h4><br>
<br>

<p>我所思考的七个part:</p>
<p>【开幕间奏】<br>        在最初希望能说明男孩子的,和”流落之所”.</p>
<p>【背阳之面诞生地】<br>        讲明男孩子的能力.管理生物的生命.</p>
<p>【怀抱着畸生的使命】<br>        讲明男孩子也会面对和管理人类生命的命运.</p>
<p>【厌倦吗，绵延无尽的永恒】<br>        对命运的厌恶.和女孩子对他的救赎.</p>
<p>【流落之所皆呼啸崩塌】<br>        在对女孩子的逝去时,无法接受.于是启动了自己的能力.</p>
<p>【间奏】<br>        讲述女孩子对男孩子(单方面)的陪伴,珍贵的记忆是倒带.将自己的能力转移到女孩子身上.</p>
<p>【结尾】<br>        转移到女孩子身上之后,逝去.</p>
<p>【能力】<br>能力是用头顶的光环来表示的.</p>
<img src="/blog/2019/06/18/P085/P085_11.png" class="">

<br>
<br>

<p>在家里蹲了一个月之后pv算是做完了.</p>
<p>为什么说算是做完了呢……在pv里面挑战了【简单的3D建造人群的效果】和【用ae搭建时钟】.真的很苦手……最基本的掐点或是拼接过渡都做的不好.</p>
<br>

<h4 id="4"><a href="#4" class="headerlink" title="4"></a>4</h4><p>所以19年8月的时候麻烦了匿名桑委托了決森老师.</p>
<p>现在在等待決森老师重新制作,真是各种各样的地方都麻烦两位了.</p>
<br>
<br>
<br>
<br>
<br>
]]></content>
      <categories>
        <category>项目记录</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
        <tag>oc</tag>
      </tags>
  </entry>
  <entry>
    <title>花朵与魔法师</title>
    <url>/blog/2018/04/30/P091/</url>
    <content><![CDATA[<img src="/blog/2018/04/30/P091/P091.jpg" class="">
<p>这张是Uu画的!!!</p>
<span id="more"></span>

<p>是会(认真的)会魔法的魔法师(…)小姐姐!!使用魔法的时候脊柱背后会长出有花束组成的尾巴,耳朵后面也是.<br>她(对自己演出)的绝对自信和ki桑形成的对比,我在2-?中玩的很开心(</p>
<p>是活在将幻想转化成现实的人呢.</p>
<br>
<br>
<br>

<p>相关图书馆编号:char44,char5B.</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>oc</tag>
        <tag>卡尔马</tag>
      </tags>
  </entry>
  <entry>
    <title>miku和等待</title>
    <url>/blog/2019/06/19/P090/</url>
    <content><![CDATA[<img src="/blog/2019/06/19/P090/P090_1.png" class="">
<br>
朋友的委托,请不要使用.
<span id="more"></span>

<br>

<p>是在创作者工作桌上等待着的miku桑…的想法来画的.<br><br><br><br><br>如果看mmd系列的作品更多能觉得一些观众桑喜欢的是身为表演者的miku,个人来说作为创作者信赖表达媒介的miku桑更本真,是vocaloid给我最初的感觉了.</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>同人</tag>
        <tag>vocaloid</tag>
      </tags>
  </entry>
  <entry>
    <title>0421record的笔记</title>
    <url>/blog/2018/08/02/P089/</url>
    <content><![CDATA[<img src="/blog/2018/08/02/P089/P089.png" class="">

<span id="more"></span>

<blockquote><p>记梦</p>
<p>梦到遇到了外星人.</p>
<p>啊,语言组织有些困难…</p>
<br>
<br>
<br>


<p>谈话是和我遇到的一位普通的小学老师开始的.</p>
<p>【因为人类只会跟周围的人进行攀比及生存,那就生活在自己的小圈子里也不应该是更省事.】<br>我看着那些孩子在走廊里跑来跑去,这么说到.<br>【那还真是消极啊.】<br>【知道得不到的美好也是一种残酷吧.】<br>【但那样大家都在一条船上,不是吗.】<br>她终于停下修改试卷的笔,看着我说.<br>【如果大家都住在的是一个岛上,然后除了岛上的事情什么都不知道.如果有一天海平面开始上涨了,那会怎么样.】<br>【岛屿理论吗.】<br><br><br>我得到了想要的答案.</p>
<br>
<br>

<p>我遇到了位外星人.<br>把它说成一位还有些困难.因为是甲虫类,只有我胳膊那么大.那时候还感觉只像一只龙虾,只要扔到窗外就不可能有接下来科幻小说版故事的存在.<br>也许是因为只有外星人是岛屿外的生物,对我们来说可能是唯一的希望也说不定.<br>我不大记得原理了,只记得我让外星人注射了自己的血液,然后等着它能在地球生存.<br><br><br><br><br>我坐在车子背后,觉得是时候跟她提起我的计划了.<br>【是吗.】<br>我记得她这淡淡的应了一声,然后拿出一小罐液体喝了下去.<br>我才意识到那是毒药.<br>车子已经开始失控了,我深处身体拼命地想把住方向盘.<br>药没有一下就见效,她还努力妨碍我,看来真的很想跟我一起死掉.<br>我求生欲很强,车在公路上乱串,就这样僵持着.<br>直到最后撞上了公共汽车.<br><br><br><br><br>之后只记得场景已经破破烂烂的了.岛屿所剩下的时间已经不大够了.<br>我在废墟召集了些青年,有我所信赖的人还有那位老师的男朋友.那是接下来的队友.<br>想到自己接下来会一个个害死他们以及自己,感到了深深的内疚感.<br>我还记得最后黑色的什么物质从地平线的另一头涌过来.我做在摩托车的背后静静地看着一切.<br>还好这时我的闹钟响了.<br>真是相当糟糕的梦呢.</p>
</blockquote>
<br>
<br>
<br>

<p>0421这个剧本最初来自于17年年初的梦.</p>
<p>这位老师带着我想一起坠崖的情节,以及最后世界已经结束我还在被伙伴拉着逃跑的无力感,实在是太印象深刻了.<br>于是试着把这个记忆挖出来加上润色,就是余芝的故事.<br><del>不过在脑内加工设定的时候以为梦中的自己是余芝的男友,翻笔记发现是后辈,竟然感到淡谈的失恋.</del><br><br><br><br><br><br></p>
<p>相关图书馆编号:char10.</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>oc</tag>
        <tag>0421record</tag>
      </tags>
  </entry>
  <entry>
    <title>2016的年终总结</title>
    <url>/blog/2016/12/29/P094/</url>
    <content><![CDATA[<p>一言以概:全力向neet进发.</p>
<span id="more"></span>


<p>2016见底了.<br>一直以为地球四年前就应该已经完蛋了的博主是该让自己熟悉下比2012更大的数字了.<br>今年干了些什么:</p>
<p>先是转学<br>然后学了黑白胶卷的摄影<br>遇到了声音超好听的物理老师<br>遇到了我的家教alex<br>去了alex的bride shower<br>去了summer school<br>在summer school的时候遇上了一位很厉害的男生<br>然后一整个学期都没试着说上过话<br>之后回了国,见了些朋友<br>和树哥一起去了上海,那是她的毕业旅行<br>试着用了油画的颜料画了alex家的狗<br>试着用clay捏自家的女儿<br>隔了好几年重新又开始去画室<br>然后在年底又重新准备托福<br>情感也好,交流也好还是一如既往的没有进步.</p>
<p>新的一年希望早点跟托福绝交,抽到shiki的ssr,玩上p5.<br>没有什么目标,只剩下是喜欢着美少女美少年的习惯了.<br>(不过说起来习惯这词真是不可思议,喜欢oc可能要迈进第…第…第八个年头了)</p>
]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
        <tag>年终总结</tag>
      </tags>
  </entry>
  <entry>
    <title>别松手</title>
    <url>/blog/2019/07/02/P088/</url>
    <content><![CDATA[<img src="/blog/2019/07/02/P088/P088_1.png" class="">
<span id="more"></span>

<img src="/blog/2019/07/02/P088/P088_2.jpeg" class="">

<p>这张图一直都很想画一直都画不好.无法把他们那时候的感情记载下来.</p>
<br>
<br>
<br>

<p>福尔摩斯里面有一段,有毒的药和无毒的药看上去一模一样.犯人把其中一个放在自己面前,还有一个放在被害者面前的剧情.<br>因为很想知道大家会怎么选择,所以在insta上面发了个投票.<br>当然跟投票的人选一定有关(比如看了那个故事的人和没有看的人),不过我得到的回答是58选在自己面前的,14选在犯人面前的.<br>跟Uu谈起的时候,我说如果妹妹准备了两个看上去一模一样的寿司,一个放了宇宙无敌超级辣的芥末,一个没有.哥哥来选择,两个人会怎么放呢.<br>Uu给了答案之后过了点时间说要更改ww.<br>最后的好像是”妹妹会把没有芥末的放在哥哥面前,但哥哥选了妹妹面前的.”</p>
<p>(是吗,我有点忘了.)<br>(问了U哥也忘记了,结果无法考证wwww.)</p>
<p>这次画的讲的是接着寿司后面的剧情了(笑.</p>
<br>
<br>
<br>

<p>相关图书馆编号:char44,char70.</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>oc</tag>
        <tag>卡尔马</tag>
        <tag>TokyoTL</tag>
      </tags>
  </entry>
  <entry>
    <title>来自U君的生日祝福</title>
    <url>/blog/2016/07/04/P095/</url>
    <content><![CDATA[<img src="/blog/2016/07/04/P095/P095_1.jpeg" class="">
<span id="more"></span>

<img src="/blog/2016/07/04/P095/P095_2.jpeg" class="">
<br>
<blockquote><br>
HAPPY BIRTHDAY TO RIO

<p>这是一条系统定时放送的生日祝福<br>此时我大概不是在做梦就是在复习吧hhhhhh<br>里约真是很棒的人呢…要用颜色来说的话果然还是浅浅的糖果色，要用动物来说的话果然还是兔子</p>
<p>还要说什么（挠头（词穷了然后点下了发布</p>
</blockquote>

<br>
<br>
<br>

<p>相关图书馆编号:char02.</p>
]]></content>
      <categories>
        <category>朋友给的画</category>
      </categories>
      <tags>
        <tag>oc</tag>
        <tag>家庭组</tag>
      </tags>
  </entry>
  <entry>
    <title>来自U君的生日祝福</title>
    <url>/blog/2017/07/04/P093/</url>
    <content><![CDATA[<img src="/blog/2017/07/04/P093/P093_1.jpeg" class="">
<span id="more"></span>

<img src="/blog/2017/07/04/P093/P093_2.jpeg" class="">
<br>
<br>
<br>
<blockquote><p>Happy Birthday To Rio -！<br><br></p>
<p>这次是ET外星人的梗——XDDD</p>
<p>P2是找兔子游戏（喂<br><br></p>
<hr>
<p>恩！这次依旧是自动发布——</p>
<p>话说，关于里约的生日是美国独立日这件事我发现的会不会太迟了点hhhhh<br>这一年也看见里约变化了很多，就是不久之前吧，你说了那句西尾小说里的台词『虽然你的生活已经一团糟了 但是没有糟到无法获得幸福的程度』<br>是很西尾厨的里约，的确人生乱七八糟的也毫无办法，大喊着糟透了也依旧带着一大堆血包打着BOSS的人也算我一个，话说回来，按照RPG设定的话，兔子先生应该是奶爸角色吧XD 在路上偶尔演奏音乐庆祝一下也不错嘛—</p>
<br>
ﾃｯﾃｰﾃﾚｯﾃｰﾃｯﾃｰﾃﾚﾃｯﾃｰﾃﾚｯﾃｰﾃｯﾃｰﾃﾚﾃｯﾃｰﾃﾚｯﾃｰﾃｯﾃｰﾃﾚﾃｯﾃｰﾃﾚｯﾃｰﾃｯﾃｰﾃﾚ</blockquote>
<img src="/blog/2017/07/04/P093/P093_3.png" class="">

<br>
<br>
<br>

<p>相关图书馆编号:char02.</p>
]]></content>
      <categories>
        <category>朋友给的画</category>
      </categories>
      <tags>
        <tag>oc</tag>
        <tag>家庭组</tag>
      </tags>
  </entry>
  <entry>
    <title>水流与怪异助手</title>
    <url>/blog/2018/04/30/P092/</url>
    <content><![CDATA[<img src="/blog/2018/04/30/P092/P092_1.png" class="">

<span id="more"></span>

<p>我家的海带,名字是雨未.能力是水流操控.<br>初登场于和三谷小姐的故事中.<br>能力是水流控制,据说可以召唤出用水流做出的巨鸟.<br>总是慢悠悠的.<br>是去年(?)找Uu的约稿,属于和裕一一起的故事.他是神吧怎么能画的那么妙……</p>
<br>

<img src="/blog/2018/04/30/P092/P092_3.jpg" class="">

<p>是偷偷给两个人设计的舞会服装.在已经没有人的那个城堡里……之类的xx.</p>
<p>跟某人的空间移动结合在一起可以很好玩(…).组合技(???).<br>住手,这根本不是一个格斗游戏剧本(…)</p>
<br>
<br>
<img src="/blog/2018/04/30/P092/P092_2.png" class="" width="385" height="400">

<p>这孩子也是跟了我很久啦.</p>
<br>
<br>
<br>

<p>相关图书馆编号:char44,char45.</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>oc</tag>
        <tag>卡尔马</tag>
        <tag>怪异专家与助手</tag>
      </tags>
  </entry>
  <entry>
    <title>骗你的</title>
    <url>/blog/2016/05/29/P096/</url>
    <content><![CDATA[<p>( ﾟДﾟ)-σ異議あり!!</p>
<span id="more"></span>

<p>Rio玩偶连续三年全国销量领先.厂家积极推进国外零售部门,望在年底远销〇州以及〇〇州,达成全球性的侵略啊不对全球化交流…?<br>同步推出Rio的圆形沙发枕头沙袋以及沐浴露x,拓宽生产品种,追求多元化发展.</p>
<p>广告语为【始终面带微笑潜行到你身边的混沌】</p>
<p>宾果小姐或许为最大的受益者.</p>
]]></content>
      <tags>
        <tag>oc</tag>
        <tag>家庭组</tag>
      </tags>
  </entry>
  <entry>
    <title>U君画给我的</title>
    <url>/blog/2016/04/04/P097/</url>
    <content><![CDATA[<img src="/blog/2016/04/04/P097/P097_1.jpeg" class="">
<br>
夜晚的老兔.
<span id="more"></span>

<br>
<br>
<br>
<img src="/blog/2016/04/04/P097/P097_2.jpeg" class="">
<img src="/blog/2016/04/04/P097/P097_3.png" class="">
<br>
Uu画的社团合集.

<br>
<br>
<br>

<p>相关图书馆编号:char02,char44,char47,char48.</p>
]]></content>
      <categories>
        <category>朋友给的画</category>
      </categories>
      <tags>
        <tag>oc</tag>
        <tag>家庭组</tag>
        <tag>卡尔马</tag>
        <tag>冬日组</tag>
      </tags>
  </entry>
  <entry>
    <title>很多很多的老兔!!</title>
    <url>/blog/2015/09/03/P101/</url>
    <content><![CDATA[<p>老兔的铅笔涂鸦,会繁殖更多的老兔.</p>
<span id="more"></span>

<img src="/blog/2015/09/03/P101/P101_1.jpg" class="">
<img src="/blog/2015/09/03/P101/P101_2.jpg" class="">

<br>
<br>
<br>

<p>相关图书馆编号:char02.</p>
]]></content>
      <tags>
        <tag>oc</tag>
        <tag>家庭组</tag>
      </tags>
  </entry>
  <entry>
    <title>葬礼</title>
    <url>/blog/2016/04/02/P099/</url>
    <content><![CDATA[<img src="/blog/2016/04/02/P099/P099.jpg" class="">
<span id="more"></span>
<br>
<br>
<br>

<p>相关图书馆编号:char43.</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
  </entry>
  <entry>
    <title>单曳</title>
    <url>/blog/2016/06/06/P098/</url>
    <content><![CDATA[<img src="/blog/2016/06/06/P098/P098_1.jpg" class="">
<span id="more"></span>

<img src="/blog/2016/06/06/P098/P098_2.jpg" class="">
<br>
这位角色是拜托了一位我的旧友小数帮忙取的名,叫单曳,我私下称为扇叶.
伞会开花,合起伞花就会散开.
属于日落的世界观,是没有颜色的人.
<br>
<br>
<br>
<br>
<br>
后面是那位朋友送给我的礼物……!是当时我们的博客名做的设计,我超喜欢.
<br>
<img src="/blog/2016/06/06/P098/P098_3.jpg" class="">
<img src="/blog/2016/06/06/P098/P098_4.jpg" class="">
<img src="/blog/2016/06/06/P098/P098_5.jpg" class="">
<img src="/blog/2016/06/06/P098/P098_6.jpg" class="">

<br>
<br>
<br>

<p>相关图书馆编号:char86.</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>oc</tag>
        <tag>在日落之前</tag>
      </tags>
  </entry>
  <entry>
    <title>南国的小岛和你</title>
    <url>/blog/2016/03/12/P100/</url>
    <content><![CDATA[<p>生日快乐.</p>
<span id="more"></span>

<img src="/blog/2016/03/12/P100/P100_1.jpg" class="">
<img src="/blog/2016/03/12/P100/P100_2.jpg" class="">
<img src="/blog/2016/03/12/P100/P100_3.jpg" class="">


<br>
<br>
<br>
还记得还在南国的小岛上的时候,每次早晨去餐厅集合前都会从大厅走过.
七海经常都在那里.偶尔罪木与左右田也在.
一般只是道句早安,然后她就继续低头玩游戏了.
啊,早安这句话是魔法啊…不愧是治愈人心的天使(安详.
记得罪木还在的那次,记得是绝望病那章吧,七海教她游戏.
罪木开心得哭得不行,这人太爱哭啦.
虽然是剧情需要,但是这人走向处刑前还是随手的帮了忙呢.
……让人心疼的温柔.
<br>
第五章的时候,狛枝爆破了大厅之后.第二天很习惯的还是从大厅走过,没想到七海还在.
也是走向结束的篇章,气氛安排的真是好厉害.
回去截图的时候发现隐藏黑白熊没有收集全嘛.然而从头打起的时候校长跳出来时每次都怒关游戏(x.
论在互相残杀的学院生活中找糖吃.我的青春恋爱物语怎么想都是搞错了.
如果再来一周目的话去攻略狛枝吧(笑.
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>同人</tag>
        <tag>弹丸论破</tag>
      </tags>
  </entry>
  <entry>
    <title>来自U君的生日祝福</title>
    <url>/blog/2019/07/04/P103/</url>
    <content><![CDATA[<img src="/blog/2019/07/04/P103/P103_1.jpg" class="">
<span id="more"></span>

<blockquote><p>恭喜老兔生日快乐!!!</p>
<p>我仔细想想我们认识多久了,是不是快四年了,<br>感谢每年都要接受我蹩脚的祝福和礼物,生活太忙我也真滴好久没认真画画x<br>但是看你搞原创很开心呀!!! 搞代码也超开心的,特别喜欢碎碎念的一些小想法,如果里约是生活专家的话大概会是我喜欢的那种style!<br>因为嘛,日常里寻找各种灵感和笑点是很棒的事情哇,虽然可能和很多人比起来不算是幸福开心的青春,但是里约的生活轨迹我觉得,就是非常吸引人hhh</p>
<p>插一句题外话(…)最近听到苍〇优和搞笑艺人结婚的消息,脑内第一反应—–什,里约你的梦想说不定真的很有搞头</p>
<p>话说你现在是不是在开车 &gt; &lt;  </p>
</blockquote>
<br>

<br>
<br>
<br>

<p>相关图书馆编号:char02,char05.</p>
]]></content>
      <categories>
        <category>朋友给的画</category>
      </categories>
      <tags>
        <tag>oc</tag>
        <tag>家庭组</tag>
        <tag>废弃工厂</tag>
      </tags>
  </entry>
  <entry>
    <title>summer heat</title>
    <url>/blog/2020/07/10/P105/</url>
    <content><![CDATA[<img src="/blog/2020/07/10/P105/P105.png" class="">
<span id="more"></span>

<br>
<br>

<p>你那天难得跟我说要去看海.<br>坐电车大约一个多小时,我们赶在落日前到了.<br>说起来上次两个人出行也是很久前的事了,你努力的找着话题,有一句没一句的说着.<br>你说你想花一些时间做一些没什么,找不出话题的你在沙滩上涂涂画画.<br>我觉得这样也好.<br>那天我们在海边直到看了日落,我想我会记得的吧.</p>
<br>

<p>海浪洗走你留下的痕迹,<br>只剩夏日的温度.</p>
<br>
<br>
<br>

<p>相关图书馆编号:char44,char70.</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>oc</tag>
        <tag>卡尔马</tag>
        <tag>TokyoTL</tag>
      </tags>
  </entry>
  <entry>
    <title>来自U君的生日祝福</title>
    <url>/blog/2020/07/04/P102/</url>
    <content><![CDATA[<blockquote><p>“ 你将自己推入的冒险 “<br><img src="/blog/2020/07/04/P102/P102_1.jpg" class=""></p>
<span id="more"></span>

<br>
<br>
<br>

<p>老兔和约又安全度过了一年!恭喜!</p>
<p>这次画的是妹妹, 但是因为也是老兔的生日, 所以加上了兔子!<br>画的时候在思考的是, 这个世界的温柔是不是只是一种错觉, 感觉到你的故事里有在努力表达爱与希望的存在, 但实际上, 这其实很难吧…!<br>松木的存在本身感觉就能代表故事的核心, 是独属于你自己的想法<br>冒险也好, 超能力也好, 轻小说一样的日常也好, 怪异物语一般的超展开也好, 本质上是不是都是我们对于这个世界疑问的含蓄提问方式呢.<br>五彩斑斓而又深不见底的冒险, 我觉得都是独属于松木的, 因为最终要回归到日常, 要回归到最初的地方去,  但那段记忆和情感对她来说是什么呢, 对你来说是什么呢</p>
<p>我满怀期待着答案!</p>
<br>

<p>生日快乐!!  </p>
</blockquote>

<br>
<br>
<br>
<br>
<br>
<br>
<br>

<blockquote>
<p>U -&gt; <a href="https://tototofoo.github.io/">blog</a></p>
</blockquote>
<img src="/blog/2020/07/04/P102/P102_3.JPG" class="">
<br>
<img src="/blog/2020/07/04/P102/P102_6.jpg" class="">
<br>
<img src="/blog/2020/07/04/P102/P102_4.JPG" class="">
<br>
<img src="/blog/2020/07/04/P102/P102_5.JPG" class="">

<br>
<br>
<br>

<p>相关图书馆编号:char44,char70.</p>
]]></content>
      <categories>
        <category>朋友给的画</category>
      </categories>
      <tags>
        <tag>oc</tag>
        <tag>卡尔马</tag>
        <tag>TokyoTL</tag>
      </tags>
  </entry>
  <entry>
    <title>end roll of the lonely one</title>
    <url>/blog/2019/08/15/P107/</url>
    <content><![CDATA[<img src="/blog/2019/08/15/P107/P107_2.jpeg" class="">
<span id="more"></span>

<br>
那天突然怀旧,在图书馆涂了十分钟.名字是阿莼说的(...).

<br>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>同人</tag>
        <tag>カゲロウプロジェクト</tag>
      </tags>
  </entry>
  <entry>
    <title>来自饺饺的生日祝福</title>
    <url>/blog/2020/07/04/P109/</url>
    <content><![CDATA[<p>嘿嘿只是想保存一下饺宝给我画的两张麻醉.</p>
<img src="/blog/2020/07/04/P109/P109_2.jpg" class="">
<span id="more"></span>

<img src="/blog/2020/07/04/P109/P109_1.jpg" class="">

<blockquote>
<p>饺 -&gt; <a href="https://twitter.com/senyu306">twi</a><br><br><br><br><br><br></p>
</blockquote>
<p>相关图书馆编号:char05.</p>
]]></content>
      <categories>
        <category>朋友给的画</category>
      </categories>
      <tags>
        <tag>oc</tag>
        <tag>废弃工厂</tag>
      </tags>
  </entry>
  <entry>
    <title>恭喜乔迁和欢迎光临</title>
    <url>/blog/2020/08/13/P111/</url>
    <content><![CDATA[<p>好久不见的杂谈.</p>
<span id="more"></span>

<img src="/blog/2020/08/13/P111/P111_1.JPG" class="">
<p>既然点进来了就看看U君画的可爱老兔再走吧.jpg<br><br><br><br><br><br><br><br></p>
<p>花了些时间把以前博客内容备份整理,个人博客自由,用了时间魔法师的力量(何)加了些过去珍重的东西.<br>这里是搬家后的第一篇文章,可喜可贺可喜可贺.<br>今年在我所经历的二十多年里是不同的,因为世界的变动和个人未来的压力.<br>从哪里说起呢.</p>
<h5 id="1"><a href="#1" class="headerlink" title="1"></a>1</h5><p>真诚是一种力量.</p>
<p>真诚是从内而外的力量.<br>人对自己的真诚,人与人之间的真诚.<br>对自己的真诚来说,可以更好的面对自己所需要的事物,明白自己的需求.从那出发,因为是自己想要的,所以更会努力去追求.<br>也渐渐觉得时间快用完.无法一直接受表面的,想要在此之下的事物.<br>人与人之间的真诚也是如此…因为用的是真心,所以更容易是’个人对个人’来相处,而不是以一个模糊的集体来相处.<br>集体是浪流,是拥有极大力量也是可以吞噬个体的存在,而真诚可以连接人.<br>在这个时代人与人之间的连接太可贵了.信息洪流让人容易偏激,因为接纳已有偏见的成本会容易低.</p>
<p>真诚的确也是很花成本的事了…</p>
<h5 id="2"><a href="#2" class="headerlink" title="2"></a>2</h5><p>所以脱离原先的环境对我向自己真诚的一种帮助.</p>
<p>想脱离些群体的浪流和信息的浪流,拥有自己的空间是一个可以回去的地方,也是可以稍微休整再度出发的地方.<br>电子储存物搭建的家(笑).<br>我明白顺应浪流是降低成本的最优解,但稍微绕点远路找到自己可以出发的地方也不坏吧?<br><br><br><br><br><br><br>所以,恭喜乔迁以及,欢迎光临,请多指教.</p>
<br>
<br>
<br>

<p>相关图书馆编号:char02.</p>
]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
        <tag>家庭组</tag>
      </tags>
  </entry>
  <entry>
    <title>miku与交响乐</title>
    <url>/blog/2020/08/13/P110/</url>
    <content><![CDATA[<img src="/blog/2020/08/13/P110/P110_1.png" class="">
<span id="more"></span>

<img src="/blog/2020/08/13/P110/P110_2.png" class="">
<br>
<br>
<br>
喜欢的老师邀请的第一次参本图.

<p>实在是太紧张了也是技术不足…在细节上很磨蹭,视觉线也很乱orz.</p>
<p>想法是【天地间的指挥家】,那样的感觉呢.</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>同人</tag>
        <tag>vocaloid</tag>
      </tags>
  </entry>
  <entry>
    <title>来自大家的兄妹生日祝福</title>
    <url>/blog/2020/01/03/P112/</url>
    <content><![CDATA[<img src="/blog/2020/01/03/P112/P112_1.jpg" class="">
<span id="more"></span>

<img src="/blog/2020/01/03/P112/P112_2.jpg" class="">

<p>私下里认识我的朋友会知道些我对这两位oc感情很深.今年的一月初是他们二十岁,是成年的日子.<br>那时候是假期,跟我的朋友雀哥说想给他们买次蛋糕一起吃.<br>在我们地方的画画群里提了句,于是(不知道为什么x)就变成了群友聚会一起给兄妹过生日!<br>那天真的很开心,也感谢雀雀带社恐我去会面,谢谢热情的周哥,谢谢龙星给兄妹买的小蛋糕(好好吃噢).</p>
<p>嫖到了兄妹粮和祝福,嘿嘿嘿.</p>
<br>
<br>
<br>

<p>相关图书馆编号:char44,char70.</p>
]]></content>
      <categories>
        <category>朋友给的画</category>
      </categories>
      <tags>
        <tag>oc</tag>
        <tag>TokyoTL</tag>
      </tags>
  </entry>
  <entry>
    <title>什么竟然还有的奇奇怪怪作业</title>
    <url>/blog/2020/08/15/P113/</url>
    <content><![CDATA[<p>(´・д・｀)ﾔﾀﾞ</p>
<span id="more"></span>

<br>
<br>
我也是没想到大学里也报了门美术课…于是这个系列再复刻了.

<p>大学里大多不再限制于材料技术,更注重[有一个好想法]-&gt;[传递它].</p>
<p>在视觉效果和辩论之间找平衡真的好难.在构思的时候也深深感受到自己讽刺思考和力度不足,总有不够痛快的感觉(毕竟太业余了).</p>
<p> <strong>why</strong></p>
<img src="/blog/2020/08/15/P113/P113_1.png" class="">
<img src="/blog/2020/08/15/P113/P113_2.png" class="">
<img src="/blog/2020/08/15/P113/P113_3.png" class="">
<p>一生都在以[why]来探索来生活…的想法.<br><br><br><br><br><br><br> <strong>butcher</strong></p>
<img src="/blog/2020/08/15/P113/P113_4.png" class="">
<p>指的是文化环境恶劣的持续下,文化更加被屠杀.<br><br><br><br><br><br><br> <strong>my kingdom</strong></p>
<img src="/blog/2020/08/15/P113/P113_5.png" class="">
<img src="/blog/2020/08/15/P113/P113_6.png" class="">
<p>自我空间.</p>
]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
        <tag>奇怪作业</tag>
        <tag>Thank you Mr.goose</tag>
      </tags>
  </entry>
  <entry>
    <title>say hello to the sky</title>
    <url>/blog/2015/07/29/P104/</url>
    <content><![CDATA[<p>参了阳炎日的企划,分到的是momo attention的曲子.</p>
<span id="more"></span>

<img src="/blog/2015/07/29/P104/P104_1.jpg" class="">
<br>
我这个隐藏性jin厨好歹也算是贡献了自己一份力呢(笑).
完成度不是很高是因为画不动了(…)这次涂得比较保守,真的是不敢在给别人的图里再玩过火了(…)
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>同人</tag>
        <tag>カゲロウプロジェクト</tag>
      </tags>
  </entry>
  <entry>
    <title>老兔与丹与宾果的承诺</title>
    <url>/blog/2020/07/04/P114/</url>
    <content><![CDATA[<p>是给老兔的生日贺图,实际上做完是八月中旬的事了,就动用了时间魔法师的力量让生贺们整整齐齐(认罪).</p>
<span id="more"></span>

<img src="/blog/2020/07/04/P114/P114_1.png" class="">
<img src="/blog/2020/07/04/P114/P114_2.png" class="">
<br>
<br>
<img src="/blog/2020/07/04/P114/P114_5.png" class="">
(放飞的颜色盖掉了线orz)
<br>
<br>
虽然是老兔的生日,这次是以宾果的角度来思考的,所以加入了儿童玩具一样的字母.
去年做了宾果长大的人设.喜欢到处跑的城市规划,也许是保留了幼年喜欢大冒险的探险心.
<br>
<br>
<br>
<br>
<img src="/blog/2020/07/04/P114/P114_3.png" class="">
<img src="/blog/2020/07/04/P114/P114_4.png" class="">
去年画的初设和游戏服.

<p>有点想在童心和成长之间找平衡(笑).发饰和兔耳帽子上保留了两位哥哥的痕迹.<br>宾果在我oc中是比较特殊的位置,她算是我最初的oc,也是不会纳入故事情节的角色.老兔和丹留在了不变的年龄,只有宾果逢年过节找个借口思考下她.<br>拥有了幻想带来的力量,以自己的步调在这个世界进行大冒险…那样的普通女孩子!</p>
<br>
<br>
<br>

<p>相关图书馆编号:char02,char03,char04.</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>oc</tag>
        <tag>家庭组</tag>
      </tags>
  </entry>
  <entry>
    <title>给U君的口信2</title>
    <url>/blog/2020/09/03/P115/</url>
    <content><![CDATA[<img src="/blog/2020/09/03/P115/P115.png" class="">
<p>今年就写在博客这里吧.</p>
<span id="more"></span>

<div class="bili_video"><iframe src="https://player.bilibili.com/player.html?aid=NaN&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" width="544" height="452" allowfullscreen="true"> </iframe></div>

<p>生日快乐.</p>
<p>今年选的是[想要放松时什么都别想回复sp用的]曲子.<br>这修饰语好长…</p>
<p>选Beach boys的歌是因为上世纪音乐爱好者的我弟的影响,这首觉得很适合舞动就做了一个短版本…</p>
<br>
<br>
<br>
<br>
<br>

<p>这次因为私人的原因说不出什么喜气的话,请见谅…<br>如果只写希望你开心快乐那是屁话,你知道我希望你开心快乐,没有特地写的必要.开心快乐要消耗成本,不直面成本就是在耍流氓.<br>我希望你好.我希望你能找到自己喜欢的东西,我希望你能去用自己的方式诠释自己喜欢的东西.我也会担心很多.<br>U君你虽然说在某些方面我是你的前辈,但时常会觉得U君才是我的前辈.<br>面对成本的时候U比我坚强,比我有勇气,有时我会逻辑耍坏来逃避很多,看成本和收益来决定很多感情上的事情.<br>生活好是像在看不到边界的平原行走,脱离了名为学校的集体肯定会更明显吧.<br>来自内心的力量是指南针,是难以被夺走的,但如果腐坏也是难以得到帮助的.一切都是要自己取平衡.<br>我相信世界观没有绝对的正确和错误,有的是相对实用性,所以能帮的上忙的只有分析利弊,和努力想想冷笑话.<br>如何使用这份友谊我希望你来决定.</p>
<p>愿前路有繁星指引着你.</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>给朋友的画</tag>
      </tags>
  </entry>
  <entry>
    <title>夜晚</title>
    <url>/blog/2020/08/17/P116/</url>
    <content><![CDATA[<img src="/blog/2020/08/17/P116/P116.png" class="">
<span id="more"></span>

<br>
<br>
是细胞神曲那款游戏画的同人图…!

<p>一些图一直都很想画,啊好想要更多时间…</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>同人</tag>
      </tags>
  </entry>
  <entry>
    <title>温度</title>
    <url>/blog/2020/09/05/P117/</url>
    <content><![CDATA[<img src="/blog/2020/09/05/P117/P117.png" class="">
<span id="more"></span>

<br>
<br>
<br>
温度真是暧昧的东西.

<p>在记忆中溶解.<br><br></p>
<p>这张和summer heat是对应的.一张是哥哥视角,一张是妹妹视角.</p>
<br>
<br>
<br>

<p>相关图书馆编号:char44,char70.</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>oc</tag>
        <tag>卡尔马</tag>
        <tag>TokyoTL</tag>
      </tags>
  </entry>
  <entry>
    <title>世界的图书馆管理员和画到一半的阿怜</title>
    <url>/blog/2020/09/08/P118/</url>
    <content><![CDATA[<img src="/blog/2020/09/08/P118/P118_2.png" class="">
<p>世界的图书馆管理员,取名为Ada.</p>
<span id="more"></span>

<br>
<br>
给这位小魔女写一篇博文.

<p>之前在整理日落世界观的时候,发觉日落里的星星是比较特殊的存在.可以说是代表了不含杂质,不受干涉的,存粹的理.<br>这位管理员性格是软绵绵的长辈,年龄不详,迷迷糊糊但又什么都知道的样子,负责的职业是巡逻和守夜.<br>对夕阳那样的学生来说是辈分很大的存在,送上祝福的时候会说“愿繁星指引着你.”<br>因为星星的原因,在日落世界观下这句话就有点愿真理指引着你的意思了.<br>以前设定的图书管理员也都加入了星星的元素,算是巧合也是命运吧(笑).</p>
<br>
<br>
从好友那里薅到了张同人于是贴贴,是雀画给我的!!

<img src="/blog/2020/09/08/P118/P118_6.PNG" class="" width="400" height="400">
<blockquote>
<p>雀 -&gt; <a href="https://www.instagram.com/manaku030_/">ig</a></p>
</blockquote>
<br>
<br>
<br>
然后是阿怜的立绘.

<img src="/blog/2020/09/08/P118/P118_1.png" class="">

<p>这个假期原本是想做阿怜的故事的,剧本也整理干净了(因为本来就很短).<br>然后(又)因为各种各样的原因被搁浅…<br>计划这种东西不到作品做得只差按下发不键都可以出错呢……<br>这个假期里整理的剧本弱化了些虚无带来的疼痛感,因为加入了人见人爱的狗狗.<br>明天也又是新学期开始.逐渐习惯的同时也要逐渐结束了呢.</p>
<br>
<br>
<br>

<p>相关图书馆编号:char99.</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>oc</tag>
        <tag>在日落之前</tag>
        <tag>HomePacker</tag>
        <tag>湖底图书馆</tag>
      </tags>
  </entry>
  <entry>
    <title>(补)抽奖用小代码</title>
    <url>/blog/2020/09/21/P119/</url>
    <content><![CDATA[<p>使用语言C++14.</p>
<span id="more"></span>

<p>这个小代码里有些功能是想拓展的但没有写.<br>现在的功能是配备一份names.txt的文件.里面是每行一个@name的格式.<br>在run这个程序的时候,输入任何不是@的字符就会开始抽奖.<br>很久之前写的,也比较乱.但问题是有段日子没有写C++了…重新捡起来需要点时间.</p>
<br>
<br>
<br>
<br>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">  </span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;random&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> * argv[])</span> </span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Instruction in case I forgot!&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;if you go with ./a.out -f that means include a file call names.txt to include names to raffle&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;add -reset at front will empty your names.txt&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;otherwise, whatever you add to raffle will be automatically add to names.txt as well&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;add username with @!&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;any input without @ will start the raffle!&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    std::map&lt;<span class="keyword">int</span>,string&gt; theMap;</span><br><span class="line">    <span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>( argc &gt; <span class="number">1</span> )&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i &lt; argc ; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(argv[i][<span class="number">0</span>] == <span class="string">&#x27;-&#x27;</span>)&#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(argv[i][<span class="number">1</span>] == <span class="string">&#x27;f&#x27;</span>)&#123;<span class="comment">//file</span></span><br><span class="line">                    <span class="comment">//find names.txt</span></span><br><span class="line">                    ifstream file&#123;<span class="string">&quot;names.txt&quot;</span>&#125;;</span><br><span class="line">                    string s;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">while</span>(file &gt;&gt; s)&#123;</span><br><span class="line">                        string tb = s;</span><br><span class="line">                        theMap.<span class="built_in">insert</span>(pair&lt;<span class="keyword">int</span>,string&gt;(index,tb));</span><br><span class="line">                        index++;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;<span class="comment">//end of file interface</span></span><br><span class="line">                <span class="keyword">if</span>(argv[i][<span class="number">1</span>] == <span class="string">&#x27;r&#x27;</span>)&#123;<span class="comment">//reset</span></span><br><span class="line">                    <span class="comment">//find names.txt</span></span><br><span class="line">                    <span class="comment">//then clean it</span></span><br><span class="line">                    <span class="function">ofstream <span class="title">newFile</span><span class="params">(<span class="string">&quot;names.txt&quot;</span>, std::ofstream::app)</span></span>;</span><br><span class="line">                    newFile &lt;&lt; <span class="string">&quot;something&quot;</span>;</span><br><span class="line">                    newFile.<span class="built_in">close</span>();</span><br><span class="line"></span><br><span class="line">                &#125;<span class="comment">//end of reset</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="comment">//end of argc</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//mutually</span></span><br><span class="line">    string w;</span><br><span class="line">    <span class="keyword">while</span>(cin &gt;&gt; w)&#123;</span><br><span class="line">        <span class="keyword">if</span>(w[<span class="number">0</span>] == <span class="string">&#x27;@&#x27;</span>)&#123;</span><br><span class="line">            theMap.<span class="built_in">insert</span>(pair&lt;<span class="keyword">int</span>,string&gt;(index,w));</span><br><span class="line">            index++;</span><br><span class="line">            <span class="comment">//we add it into our names.txt as well</span></span><br><span class="line">            <span class="comment">//....</span></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//raffle here</span></span><br><span class="line">    <span class="keyword">int</span> rdmb = <span class="number">0</span>;</span><br><span class="line">    random_device rd;</span><br><span class="line">    <span class="function">mt19937 <span class="title">eng</span><span class="params">(rd())</span></span>;</span><br><span class="line">    uniform_int_distribution&lt;&gt; <span class="built_in">distr</span>(<span class="number">0</span>,index);</span><br><span class="line">    rdmb = <span class="built_in">distr</span>(eng);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;test:&quot;</span> &lt;&lt; theMap[rdmb] &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//for testing</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//we print all the content in the map</span></span><br><span class="line">    cerr &lt;&lt; <span class="string">&quot;ramdom num: &quot;</span> &lt;&lt; rdmb &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> it = theMap.<span class="built_in">begin</span>(); it != theMap.<span class="built_in">end</span>(); ++it) &#123;</span><br><span class="line">        cerr &lt;&lt; <span class="string">&#x27;\t&#x27;</span> &lt;&lt; it-&gt;first</span><br><span class="line">        &lt;&lt; <span class="string">&#x27;\t&#x27;</span> &lt;&lt; it-&gt;second &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cerr &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2&gt;/dev/null</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<br>
<br>
<br>
<br>
复录:Makefile.这次不需要使用.

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">  </span><br><span class="line">CXX = g++</span><br><span class="line">CXXFLAGS = -std=c++14 -Wall -Werror=vla -MMD -L/usr/X11/lib</span><br><span class="line">EXEC = nameOfTheProject</span><br><span class="line">OBJECTS = main.o sub.o</span><br><span class="line">DEPENDS = $&#123;OBJECTS:.o=.d&#125;</span><br><span class="line"></span><br><span class="line">$&#123;EXEC&#125;: $&#123;OBJECTS&#125;</span><br><span class="line">        $&#123;CXX&#125; $&#123;CXXFLAGS&#125; $&#123;OBJECTS&#125; -o $&#123;EXEC&#125;  -lX11</span><br><span class="line"></span><br><span class="line">-include $&#123;DEPENDS&#125;</span><br><span class="line"></span><br><span class="line">clean:</span><br><span class="line">        rm $&#123;OBJECTS&#125; $&#123;EXEC&#125; $&#123;DEPENDS&#125;</span><br><span class="line">.PHONY: clean</span><br></pre></td></tr></table></figure>
<br>
<br>
<br>
<br>
再复录:compile代码,试图唤醒沉睡的记忆.

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">g++ -std=c++14 -o a.out main.cpp</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>数学笔记</category>
      </categories>
      <tags>
        <tag>编码</tag>
      </tags>
  </entry>
  <entry>
    <title>your diary的同人</title>
    <url>/blog/2015/08/03/P106/</url>
    <content><![CDATA[<p>【一起…去寻找幸福吧🍀】</p>
<span id="more"></span>

<br>
<br>
<br>
<img src="/blog/2015/08/03/P106/P106_1.jpg" class="">
<img src="/blog/2015/08/03/P106/P106_2.jpeg" class="">
<img src="/blog/2015/08/03/P106/P106_3.jpeg" class="">
<br>
<br>
<br>

<p>这款游戏真的玩的很开心!!<br>一开始是念叨着kantoku大法好好好入坑的.</p>
<p>也非常感谢贴吧和汉化组能让我接触到这款游戏.想以前等汉化组是以年为单位的我还以为会坑()不过续作也在翻译中真是太期待了^q^好像早点看到更多的ゆあちゃん!!!!!!!</p>
<p>ゆあ可爱飞!!!!我是先走小奏线的,那时候ゆあ还挺路人的…以至于ed后冒出来有种【你怎么还在…】的感觉()玩下去后慢慢地就为什么有这么可爱的小女孩呜啊———!!!好甜好体贴好可爱呜啊———!!!走夕阳线的时候就觉得ゆあ和学姐在一起也是很棒的结局嘛w话说学姐对ゆあ的爱也是足够的深沉…一家三口的日常也是很温馨的^q^</p>
<p>通完学姐线后对于再走不走ゆあ线考虑了许久…不过通了ゆあ线真是太好了ಥ_ಥ也是终于能够细细地深入了解这位女孩子…<br>说句题外话我也很喜欢不同路线分别叙述世界观的一部分，走完所有的才能看到整体的叙述方法.<br>然后ゆあ线走得差不多得时候学姐已经被我列为情敌了(诶嘿☆</p>
<p>夕阳线是玩的最开心的一条了,青梅竹马+一群好(损)友的日常真是好戳我点///////而且我也很喜欢香穗!!基友组那两个人打助攻实在是太可爱啦!!不记得是哪条线了男主终于对基友问出了我一直很想问的【你们为什么不去结婚(划掉)在一起?】得到回答真是有些纠结哇www得到基友对香穗的很高评价的时候我一直在那里点头,但是你不告白续作里香穗可是要被我抢走的哟?嘛…谁让这个家伙是gal里的男主嘛ˊ_&gt;ˋ</p>
<p>顺便一提在学姐线中夕阳找学姐谈心(?)的那段倒是挺让人惊讶的,看到了如此严肃的夕阳真是让人重新认识了一遍呢…而且…心疼…</p>
<p>总之这算是我认真玩的gal入门之作啦.因为也是听说了不少gal里的坑新人之作…之前也看了点君与彼女与彼女之恋的实况(.还是奉行无血无柴刀来选择作品比较好()</p>
<p>结论:纯爱和青春真是美好——!出来吧我封尘已久的少女力——!(x</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>同人</tag>
      </tags>
  </entry>
  <entry>
    <title>灰桑家的小林和灰桑给我的</title>
    <url>/blog/2020/10/12/P121/</url>
    <content><![CDATA[<img src="/blog/2020/10/12/P121/P121.png" class="">
<span id="more"></span>

<p>我认真的检讨了一下,上一篇文章的编码真的太烂了.<br>这周是难得的reading week,希望自己能多做点事(合掌).<br><br><br><br><br><br><br>在这里补一下灰桑画给我的(天国)…!!一定要在个站也存存.</p>
<img src="/blog/2020/10/12/P121/P121_1.JPG" class="">
<img src="/blog/2020/10/12/P121/P121_2.JPG" class="">
<img src="/blog/2020/10/12/P121/P121_3.JPG" class="">
<img src="/blog/2020/10/12/P121/P121_4.JPG" class="">
<br>
<br>

<p>灰桑……………………</p>
<p>相关图书馆编号:<br>char01,char02,char03,char05,char30,char31,char44,char70,char99.</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>oc</tag>
        <tag>家庭组</tag>
        <tag>给朋友的画</tag>
        <tag>狼与兔</tag>
        <tag>废弃工厂</tag>
        <tag>湖底图书馆</tag>
      </tags>
  </entry>
  <entry>
    <title>宾果和老兔和乱七八糟的万圣节快乐</title>
    <url>/blog/2020/10/31/P122/</url>
    <content><![CDATA[<p>虽然错过了时间但用时间魔法师的力量强行再过一次万圣节x</p>
<span id="more"></span>

<p>这次带着家庭组一起来唠唠嗑.</p>
<br>
<img src="/blog/2020/10/31/P122/P122.png" class="" width="200" height="200" title="找灰藻老师画的,我加了几笔">

<br>
<br>
<br>

<img src="/blog/2020/10/31/P122/rio.jpeg" class="">

<p>下半年陆陆续续在做oc小网站,画到了老兔.<br>为了整理人设找来了15年画的老兔西服,顺手拼了个图.<br>老兔真是搞笑小源泉(褒义).</p>
<br>
<br>

<img src="/blog/2020/10/31/P122/rio_1.JPG" class="">

<p>虽然平时画他经常思考画什么衣服.蓝色的T恤还是U君先给老兔穿上的,我就接着画了.但这次整理的时候发现他衣服还不少(笑).<br>oc小网站的话,姑且还在做,不过进度最近渐渐慢下来了,很多杂事得做.<br>不知道今年还做不做得出来了……</p>
<br>
<br>
<br>
<br>

<p>然后是一些最近出门散步的照片.<br>今年因为新冠以为没有万圣节活动了,但那天晚上还是有些小孩子来敲门要糖果.<br>我:要不每人再多发一个口罩?</p>
<img src="/blog/2020/10/31/P122/P122_3.jpeg" class="">
<img src="/blog/2020/10/31/P122/P122_2.jpeg" class="">

<p>白天去看邻里的万圣节装饰和秋天的风景在一起也是不同的有趣呢~</p>
<br>
<br>
<br>
<br>

<img src="/blog/2020/10/31/P122/P122_4.jpeg" class="">

<p>天气也要渐渐冷起来了,大家要注意保暖呀.</p>
<br>
<br>
<br>

<p>相关图书馆编号:char02,char04.</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>oc</tag>
        <tag>家庭组</tag>
      </tags>
  </entry>
  <entry>
    <title>一点点stream cipher记录和数字母用小代码</title>
    <url>/blog/2020/09/22/P120/</url>
    <content><![CDATA[<p>中文维基翻译是流密码,是一种对称加密算法.</p>
<span id="more"></span>

<p>起因是这样,这个学期我回去重上co487,密码学.上次drop的原因是期中考撞上疫情爆发,我也没学好,手忙脚乱的炸掉两门期中,就干脆二进宫了.<br>这次的作业老师出的比上次的老师…要难些(笑),不过记录一下.<br>有答题是给了三种加密方法和三份加密后的文件,直接让我们分析并解密.</p>
<p>三种是</p>
<ul>
<li>Random simple substitution cipher</li>
<li>Vigenere cipher</li>
<li>Transposition cipher</li>
</ul>
<br>
<br>
<br>
<br>
<br>

<h2 id="Substitution-cipher"><a href="#Substitution-cipher" class="headerlink" title="Substitution cipher"></a>Substitution cipher</h2><p>维基介绍:</p>
<blockquote><p>簡易替換加密是一種以特定方式改變字母表上字母順序，並以此順序書寫的加密方式。這樣一張改變了字母次序的字母表即為『替換表』。<br>替換表可以以偏移或逆轉（分別為凱撒密碼和阿特巴希密碼（英語：Atbash））或更複雜方式構造，此時稱之為『混合表』。傳統上會先把一個關鍵詞寫在字母表最前面，再刪去重複字母，這樣就能得到一個混合表。</p>
<p>例子<br>使用混合表系統，關鍵字為“zebras”：</p>
<p>明文為    ABCDEFGHIJKLMNOPQRSTUVWXYZ<br>密文為    ZEBRASCDFGHIJKLMNOPQTUVWXY<br>明文為：</p>
<p>flee at once. we are discovered!<br>加密结果为：</p>
<p>SIAA ZQ LKBA. VA ZOA RFPBLUAOAR!</p>
</blockquote>
<br>
<br>
<br>
<br>
<br>

<h2 id="Vigenere-cipher"><a href="#Vigenere-cipher" class="headerlink" title="Vigenere cipher"></a>Vigenere cipher</h2><p>维基介绍:</p>
<blockquote><p>在一个凱撒密碼中，字母表中的每一字母都会作一定的偏移，例如偏移量为3时，A就转换为了D、B转换为了E……而维吉尼亚密码则是由一些偏移量不同的恺撒密码组成。<br>为了生成密码，需要使用表格法。这一表格包括了26行字母表，每一行都由前一行向左偏移一位得到。具体使用哪一行字母表进行编译是基于密钥进行的，在过程中会不断地变换。</p>
<p>例如，假设明文为：</p>
<p>ATTACKATDAWN</p>
<p>选择某一关键词并重复而得到密钥，如关键词为LEMON时，密钥为：</p>
<p>LEMONLEMONLE</p>
<p>对于明文的第一个字母A，对应密钥的第一个字母L，于是使用表格中L行字母表进行加密，得到密文第一个字母L。类似地，明文第二个字母为T，在表格中使用对应的E行进行加密，得到密文第二个字母X。以此类推，可以得到：</p>
<p>明文：ATTACKATDAWN<br>密钥：LEMONLEMONLE<br>密文：LXFOPVEFRNHR</p>
<p>解密的过程则与加密相反。例如：根据密钥第一个字母L所对应的L行字母表，发现密文第一个字母L位于A列，因而明文第一个字母为A。密钥第二个字母E对应E行字母表，而密文第二个字母X位于此行T列，因而明文第二个字母为T。以此类推便可得到明文。<br>用数字0-25代替字母A-Z，维吉尼亚密码的加密文法可以写成同余的形式：</p>
<p>C_i = P_i + K_i (mod 26)</p>
<p>解密方法则能写成：</p>
<p>P_i = C_i - K_i (mod 26)</p>
</blockquote>

<br>
<br>
<br>
<br>
<br>

<h2 id="Transposition-cipher"><a href="#Transposition-cipher" class="headerlink" title="Transposition cipher"></a>Transposition cipher</h2><p>维基…没有中文介绍!!<br>我自己概括的话是:将字母按一行n个字母分好组,然后在每组里做位置移动.</p>
<blockquote><p>For example, suppose we use the keyword ZEBRAS and the message WE ARE DISCOVERED. FLEE AT ONCE. In a regular columnar transposition, we write this into the grid as follows:</p>
<p>6 3 2 4 1 5<br>W E A R E D<br>I S C O V E<br>R E D F L E<br>E A T O N C<br>E Q K J E U</p>
<p>比如说这里是第一列换到第六列的位置,第二列换到第三列的位置,以此类推.为使满足n*6的字母数,多加了5个随机的字母.</p>
<p>providing five nulls (QKJEU), these letters can be randomly selected as they just fill out the incomplete columns and are not part of the message. The ciphertext is then read off as:</p>
<p>EVLNE ACDTK ESEAQ ROFOJ DEECU WIREE</p>
</blockquote>

<br>
<br>
<br>
<br>
<br>

<p>以上就是作业中出现的三种加密方式.<br>判断哪个是哪个的方法是分析每个字母和两个字母组合的出现频率.<br>在英文中每个字母的使用频率是不同的.</p>
<img src="/blog/2020/09/22/P120/P120.png" class="">

<p>每两个字母的组合也有不同的频率.</p>
<img src="/blog/2020/09/22/P120/P120_1.png" class="">

<p>在这个情况下分析三种加密方式,通过三种的加密文有/没有这两种频率倾向来猜测加密种类.<br>一开始想着写个小代码来测频率,于是翻出了(上一篇文章的)旧代码想来写个C++也练下手.结果写的又丑又长,想着时间不打够就去找online的测试网站.<br>之后跟朋友对答案发现对方用python写了码,写两页就写完所有功能了,我…我的这么长还没测两个字母的频率呢…<br>然后在这里记录一下使用的辅助工具…!!很厉害.</p>
<p>首先是cryptool.</p>
<p><a href="https://www.cryptool.org/en/">https://www.cryptool.org/en/</a></p>
<p>这是款很老很老的软件但是很厉害,它里面包括了很多常见的加密方法,可以输入key来加密/解密.<br>最厉害的是里面还附带了[分析]这个功能,能一定程度的根据加密方式在不需要key的情况下猜测原文.也就是一键还原功能.<br>虽然准确率不是特别高但是非常好玩…<br>因为准确率不大行所以也用个这个网站帮忙.</p>
<p><a href="https://crypto.interactive-maths.com/frequency-analysis-breaking-the-code.html">https://crypto.interactive-maths.com/frequency-analysis-breaking-the-code.html</a><br><br><br><br><br>然后是Transposition cipher的网站.</p>
<p><a href="https://tholman.com/other/transposition/">https://tholman.com/other/transposition/</a></p>
<p>输入排列时每组的长度,然后直接根据拖动来调整字母位置,导出明文/密文.这个也相当好玩……<br><br><br><br><br><br><br><br><br><br></p>
<h2 id="最后是小代码"><a href="#最后是小代码" class="headerlink" title="最后是小代码"></a>最后是小代码</h2><p>使用语言C++14.<br>现在是数字母小代码.在names.txt放入想要数的段落(数英文only,大小写通用).<br>添加了跳过功能,可以隔着输入的数字来数字母,比如[abcd]如果跳跃2就是只数[ac].<br>也加入了从哪里数功能,跳过1[abcd]可以数[bcd].</p>
<br>
<br>
<br>
<br>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> * argv[])</span> </span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Instruction in case I forgot!&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;include a file call names.txt to include the words wanna count&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;if you go with ./a.out -n that means add a skip space that counting char&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;by default we count one char by one char&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;for example we input 2 by count [abc], then only a and c will be counted&quot;</span>&lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;also add a space that we start to counting on&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;we suggest this num should smaller than skip(or at least smaller than your file length)&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> theArray[<span class="number">26</span>];<span class="comment">//with 26 char</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">26</span>; i++) &#123;</span><br><span class="line">        theArray[i] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> skip = <span class="number">1</span>;<span class="comment">//we move 1 char to another char by default</span></span><br><span class="line">    <span class="keyword">int</span> ignore = <span class="number">0</span>;<span class="comment">//by default we start from beginning</span></span><br><span class="line">    <span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>( argc &gt; <span class="number">1</span> )&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i &lt; argc ; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(argv[i][<span class="number">0</span>] == <span class="string">&#x27;-&#x27;</span>)&#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(argv[i][<span class="number">1</span>] == <span class="string">&#x27;n&#x27;</span>)&#123;<span class="comment">//num</span></span><br><span class="line">                  cout &lt;&lt; <span class="string">&quot;add the num space you wanna skip &quot;</span> &lt;&lt; endl;</span><br><span class="line">                  string tempNum;</span><br><span class="line">                  cin &gt;&gt; tempNum;</span><br><span class="line">                  skip = <span class="built_in">stoi</span>(tempNum);</span><br><span class="line">                  cout &lt;&lt; <span class="string">&quot;skip :&quot;</span> &lt;&lt; skip &lt;&lt; endl;</span><br><span class="line">                  cout &lt;&lt; <span class="string">&quot;add the num you wanna ignore in the front &quot;</span> &lt;&lt; endl;</span><br><span class="line">                  cin &gt;&gt; tempNum;</span><br><span class="line">                  ignore = <span class="built_in">stoi</span>(tempNum);</span><br><span class="line">                  cout &lt;&lt; <span class="string">&quot;ignore :&quot;</span> &lt;&lt; ignore &lt;&lt; endl;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="comment">//end of argc</span></span><br><span class="line">&#125;</span><br><span class="line">    ifstream file&#123;<span class="string">&quot;names.txt&quot;</span>&#125;;</span><br><span class="line">    string s;</span><br><span class="line">    <span class="keyword">int</span> countRound = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(file &gt;&gt; s)&#123;</span><br><span class="line">            string tb = s;</span><br><span class="line">            <span class="keyword">int</span> tempStrLength = s.<span class="built_in">length</span>();</span><br><span class="line">            <span class="keyword">char</span> w[tempStrLength + <span class="number">1</span>];</span><br><span class="line">            <span class="built_in">strcpy</span>(w, s.<span class="built_in">c_str</span>());</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; tempStrLength; j = j + <span class="number">1</span>) &#123;</span><br><span class="line">              <span class="keyword">if</span> (ignore == <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span> (countRound == <span class="number">0</span>)&#123;</span><br><span class="line">                  <span class="built_in"><span class="keyword">switch</span></span>(w[j]) &#123;</span><br><span class="line">                      <span class="keyword">case</span> <span class="string">&#x27;a&#x27;</span>:</span><br><span class="line">                          theArray[<span class="number">0</span>]++;</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                      <span class="keyword">case</span> <span class="string">&#x27;A&#x27;</span>:</span><br><span class="line">                          theArray[<span class="number">0</span>]++;</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                      <span class="keyword">case</span> <span class="string">&#x27;b&#x27;</span>:</span><br><span class="line">                          theArray[<span class="number">1</span>]++;</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                      <span class="keyword">case</span> <span class="string">&#x27;B&#x27;</span>:</span><br><span class="line">                          theArray[<span class="number">1</span>]++;</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                      <span class="keyword">case</span> <span class="string">&#x27;c&#x27;</span>:</span><br><span class="line">                          theArray[<span class="number">2</span>]++;</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                      <span class="keyword">case</span> <span class="string">&#x27;C&#x27;</span>:</span><br><span class="line">                          theArray[<span class="number">2</span>]++;</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                      <span class="keyword">case</span> <span class="string">&#x27;d&#x27;</span>:</span><br><span class="line">                          theArray[<span class="number">3</span>]++;</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                      <span class="keyword">case</span> <span class="string">&#x27;D&#x27;</span>:</span><br><span class="line">                          theArray[<span class="number">3</span>]++;</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                      <span class="keyword">case</span> <span class="string">&#x27;e&#x27;</span>:</span><br><span class="line">                          theArray[<span class="number">4</span>]++;</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                      <span class="keyword">case</span> <span class="string">&#x27;E&#x27;</span>:</span><br><span class="line">                          theArray[<span class="number">4</span>]++;</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                      <span class="keyword">case</span> <span class="string">&#x27;f&#x27;</span>:</span><br><span class="line">                          theArray[<span class="number">5</span>]++;</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                      <span class="keyword">case</span> <span class="string">&#x27;F&#x27;</span>:</span><br><span class="line">                          theArray[<span class="number">5</span>]++;</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                      <span class="keyword">case</span> <span class="string">&#x27;g&#x27;</span>:</span><br><span class="line">                          theArray[<span class="number">6</span>]++;</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                      <span class="keyword">case</span> <span class="string">&#x27;G&#x27;</span>:</span><br><span class="line">                          theArray[<span class="number">6</span>]++;</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                      <span class="keyword">case</span> <span class="string">&#x27;h&#x27;</span>:</span><br><span class="line">                          theArray[<span class="number">7</span>]++;</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                      <span class="keyword">case</span> <span class="string">&#x27;H&#x27;</span>:</span><br><span class="line">                          theArray[<span class="number">7</span>]++;</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                      <span class="keyword">case</span> <span class="string">&#x27;i&#x27;</span>:</span><br><span class="line">                          theArray[<span class="number">8</span>]++;</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                      <span class="keyword">case</span> <span class="string">&#x27;I&#x27;</span>:</span><br><span class="line">                          theArray[<span class="number">8</span>]++;</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                      <span class="keyword">case</span> <span class="string">&#x27;j&#x27;</span>:</span><br><span class="line">                          theArray[<span class="number">9</span>]++;</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                      <span class="keyword">case</span> <span class="string">&#x27;J&#x27;</span>:</span><br><span class="line">                          theArray[<span class="number">9</span>]++;</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                      <span class="keyword">case</span> <span class="string">&#x27;k&#x27;</span>:</span><br><span class="line">                          theArray[<span class="number">10</span>]++;</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                      <span class="keyword">case</span> <span class="string">&#x27;K&#x27;</span>:</span><br><span class="line">                          theArray[<span class="number">10</span>]++;</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                      <span class="keyword">case</span> <span class="string">&#x27;l&#x27;</span>:</span><br><span class="line">                          theArray[<span class="number">11</span>]++;</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                      <span class="keyword">case</span> <span class="string">&#x27;L&#x27;</span>:</span><br><span class="line">                          theArray[<span class="number">11</span>]++;</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                      <span class="keyword">case</span> <span class="string">&#x27;m&#x27;</span>:</span><br><span class="line">                          theArray[<span class="number">12</span>]++;</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                      <span class="keyword">case</span> <span class="string">&#x27;M&#x27;</span>:</span><br><span class="line">                          theArray[<span class="number">12</span>]++;</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                      <span class="keyword">case</span> <span class="string">&#x27;n&#x27;</span>:</span><br><span class="line">                          theArray[<span class="number">13</span>]++;</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                      <span class="keyword">case</span> <span class="string">&#x27;N&#x27;</span>:</span><br><span class="line">                          theArray[<span class="number">13</span>]++;</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                      <span class="keyword">case</span> <span class="string">&#x27;o&#x27;</span>:</span><br><span class="line">                          theArray[<span class="number">14</span>]++;</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                      <span class="keyword">case</span> <span class="string">&#x27;O&#x27;</span>:</span><br><span class="line">                          theArray[<span class="number">14</span>]++;</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                      <span class="keyword">case</span> <span class="string">&#x27;p&#x27;</span>:</span><br><span class="line">                          theArray[<span class="number">15</span>]++;</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                      <span class="keyword">case</span> <span class="string">&#x27;P&#x27;</span>:</span><br><span class="line">                          theArray[<span class="number">15</span>]++;</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                      <span class="keyword">case</span> <span class="string">&#x27;q&#x27;</span>:</span><br><span class="line">                          theArray[<span class="number">16</span>]++;</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                      <span class="keyword">case</span> <span class="string">&#x27;Q&#x27;</span>:</span><br><span class="line">                          theArray[<span class="number">16</span>]++;</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                      <span class="keyword">case</span> <span class="string">&#x27;r&#x27;</span>:</span><br><span class="line">                          theArray[<span class="number">17</span>]++;</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                      <span class="keyword">case</span> <span class="string">&#x27;R&#x27;</span>:</span><br><span class="line">                          theArray[<span class="number">17</span>]++;</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                      <span class="keyword">case</span> <span class="string">&#x27;s&#x27;</span>:</span><br><span class="line">                          theArray[<span class="number">18</span>]++;</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                      <span class="keyword">case</span> <span class="string">&#x27;S&#x27;</span>:</span><br><span class="line">                          theArray[<span class="number">18</span>]++;</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                      <span class="keyword">case</span> <span class="string">&#x27;t&#x27;</span>:</span><br><span class="line">                          theArray[<span class="number">19</span>]++;</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                      <span class="keyword">case</span> <span class="string">&#x27;T&#x27;</span>:</span><br><span class="line">                          theArray[<span class="number">19</span>]++;</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                      <span class="keyword">case</span> <span class="string">&#x27;u&#x27;</span>:</span><br><span class="line">                          theArray[<span class="number">20</span>]++;</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                      <span class="keyword">case</span> <span class="string">&#x27;U&#x27;</span>:</span><br><span class="line">                          theArray[<span class="number">20</span>]++;</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                      <span class="keyword">case</span> <span class="string">&#x27;v&#x27;</span>:</span><br><span class="line">                          theArray[<span class="number">21</span>]++;</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                      <span class="keyword">case</span> <span class="string">&#x27;V&#x27;</span>:</span><br><span class="line">                          theArray[<span class="number">21</span>]++;</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                      <span class="keyword">case</span> <span class="string">&#x27;w&#x27;</span>:</span><br><span class="line">                          theArray[<span class="number">22</span>]++;</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                      <span class="keyword">case</span> <span class="string">&#x27;W&#x27;</span>:</span><br><span class="line">                          theArray[<span class="number">22</span>]++;</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                      <span class="keyword">case</span> <span class="string">&#x27;x&#x27;</span>:</span><br><span class="line">                          theArray[<span class="number">23</span>]++;</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                      <span class="keyword">case</span> <span class="string">&#x27;X&#x27;</span>:</span><br><span class="line">                          theArray[<span class="number">23</span>]++;</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                      <span class="keyword">case</span> <span class="string">&#x27;y&#x27;</span>:</span><br><span class="line">                          theArray[<span class="number">24</span>]++;</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                      <span class="keyword">case</span> <span class="string">&#x27;Y&#x27;</span>:</span><br><span class="line">                          theArray[<span class="number">24</span>]++;</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                      <span class="keyword">case</span> <span class="string">&#x27;z&#x27;</span>:</span><br><span class="line">                          theArray[<span class="number">25</span>]++;</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                      <span class="keyword">case</span> <span class="string">&#x27;Z&#x27;</span>:</span><br><span class="line">                          theArray[<span class="number">25</span>]++;</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                      <span class="keyword">default</span>:</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                  &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                countRound = countRound + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (countRound == skip)&#123;</span><br><span class="line">                  countRound = countRound - skip;</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                ignore = ignore - <span class="number">1</span>;</span><br><span class="line">              &#125;</span><br><span class="line">                index++;</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;<span class="comment">//end of file interface</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//we print all the content in the map</span></span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;a num: &quot;</span> &lt;&lt; theArray[<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;b num: &quot;</span> &lt;&lt; theArray[<span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;c num: &quot;</span> &lt;&lt; theArray[<span class="number">2</span>] &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;d num: &quot;</span> &lt;&lt; theArray[<span class="number">3</span>] &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;e num: &quot;</span> &lt;&lt; theArray[<span class="number">4</span>] &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;f num: &quot;</span> &lt;&lt; theArray[<span class="number">5</span>] &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;g num: &quot;</span> &lt;&lt; theArray[<span class="number">6</span>] &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;h num: &quot;</span> &lt;&lt; theArray[<span class="number">7</span>] &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;i num: &quot;</span> &lt;&lt; theArray[<span class="number">8</span>] &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;j num: &quot;</span> &lt;&lt; theArray[<span class="number">9</span>] &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;k num: &quot;</span> &lt;&lt; theArray[<span class="number">10</span>] &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;l num: &quot;</span> &lt;&lt; theArray[<span class="number">11</span>] &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;m num: &quot;</span> &lt;&lt; theArray[<span class="number">12</span>] &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;n num: &quot;</span> &lt;&lt; theArray[<span class="number">13</span>] &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;o num: &quot;</span> &lt;&lt; theArray[<span class="number">14</span>] &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;p num: &quot;</span> &lt;&lt; theArray[<span class="number">15</span>] &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;q num: &quot;</span> &lt;&lt; theArray[<span class="number">16</span>] &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;r num: &quot;</span> &lt;&lt; theArray[<span class="number">17</span>] &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;s num: &quot;</span> &lt;&lt; theArray[<span class="number">18</span>] &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;t num: &quot;</span> &lt;&lt; theArray[<span class="number">19</span>] &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;u num: &quot;</span> &lt;&lt; theArray[<span class="number">20</span>] &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;v num: &quot;</span> &lt;&lt; theArray[<span class="number">21</span>] &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;w num: &quot;</span> &lt;&lt; theArray[<span class="number">22</span>] &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;x num: &quot;</span> &lt;&lt; theArray[<span class="number">23</span>] &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;y num: &quot;</span> &lt;&lt; theArray[<span class="number">24</span>] &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;z num: &quot;</span> &lt;&lt; theArray[<span class="number">25</span>] &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">        cerr &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>数学笔记</category>
      </categories>
      <tags>
        <tag>Thank you Mr.goose</tag>
        <tag>编码</tag>
      </tags>
  </entry>
  <entry>
    <title>关于颜色的笔记 - 其二</title>
    <url>/blog/2021/02/13/P123/</url>
    <content><![CDATA[<p>接上次的进度(15/100).</p>
<span id="more"></span>
<br>
<br>
<br>

<p>老习惯,写新博文的时候会回顾一下旧的.<br>感叹了新的第一张就比上一次的屑啊(笑).</p>
<p>上次没有说,我私下喜欢用炒菜来比喻上色.<br>有很多的颜色差别:加很多很多调味料.<br>笔记里的加盐是【黑白差很大】【饱和很重】【相反色混在一起】之类的,引起视觉冲击的意思.</p>
<img src="/blog/2021/02/13/P123/P165.jpg" class="" width="250" height="250">

<br>
<br>
<br>

<h1 id="模"><a href="#模" class="headerlink" title="模"></a>模</h1><img src="/blog/2021/02/13/P123/P165_1.png" class="">

<p>久违的色彩背诵.因为太难而半途而废了(…).<br>左下角的笔记,虽然是夜晚室内亮灯的光线,发现有不同种的上色.<br>一种是右侧的,被亮光照的多些,亮面给人白色的感觉.这时候阴影也会重,饱和度很高的红作为明暗交接的地方,再暗一些的阴影就是黑.<br>另一种离光远一些,这时候染上的更多是灯的颜色.这里灯是黄色,所以整个人就变得黄粽黄粽.<br>(我猜白/蓝的灯整个人也会全身有那种颜色.)<br>不过这个头发的亮光是我乱加的.照片本身并没有那么跳的亮面,是我喜欢加盐.</p>
<br>
<br>
<br>

<img src="/blog/2021/02/13/P123/P165_5.png" class="">
<p>原来想练练最不擅长的绿色的,然后被草地的质感给难到(所以看起来像狗啃草).<br>找到了个用起来还算顺手的笔刷,用也是用笔刷做减法刷出来的,可以再熟悉熟悉.<br>相反色混在一起会变灰,所以照着临摹混色的时候会”脑子里看起来是红色的就混了往蓝里混红”而画出灰蓝色,偶尔相信大脑也蛮好玩的.<br>蓝绿加黄绿混在一起好好看…还可以再研究研究…<br>质感还是没想好,重点还是不能放在模仿原本的质感上,放在自己归纳表达比较好.<br>其他就是,就算是山看起来都是绿没有什么变化,还是能看出来的山坡山沟啊,打个线稿处理阴影笔刷size变化一点点,讲清楚比较好,不然看不出远近.</p>
<br>
<br>
<br>

<img src="/blog/2021/02/13/P123/P165_6.png" class="">
<p>这次的比较简单…因为没有处理得很细.<br>雪地也好,植被也好,注意多从大的颜色调子开始考虑.<br>雪地叠了层灰就有秋天(?)的感觉了,植被加了点黑也有点镜头前的感觉了.<br>临摹的海的颜色跟我想象中的不一样,这个蓝一点都不紫.</p>
<br>
<br>
<br>

<img src="/blog/2021/02/13/P123/P165_7.png" class="" title="说起来这是第一张">
<p>附录一张最初思考颜色时直接抄袭的笔记.<br><strong>肤色里竟然放了灰蓝!!</strong><br>刚开始注意到冷和暖互撞是件很好玩的事.</p>
<br>
<br>
<br>

<h1 id="摸"><a href="#摸" class="headerlink" title="摸"></a>摸</h1><blockquote>
<p>这次发现不单单是颜色,型也得练习起来…<br>上次画高架桑的宇宙人酱,脸的透视太差了.<br>的确如果型归纳不起来,在上色时无法很好的考虑体积是很困扰的.<br>唉,型的笔记不一定写出来,因为能力太差,看着都会糟心(…).</p>
</blockquote>
<img src="/blog/2021/02/13/P123/P165_2.png" class="">

<p>去年年底给二线画的交换.<br>只是单纯的爽了一下透视…人体功底太差了已经爽不出人体了草.<br>发现刷点杂线再模糊一下就可以获得一个30秒的烟花.<br>放大很不能看,但如果有小格的烟花需求可以实施一下这个骗术.</p>
<br>
<br>
<br>

<img src="/blog/2021/02/13/P123/P165_3.png" class="">

<p>一个月没画图.<br>这次多用了些上次记载的植物笔刷.<br>参考了lm7的图,背景的树会渐渐淡入天空的颜色.<br>绿色的草地暗的地方借助了蓝色,亮的地方走的是灰黄.</p>
<p>背景这样糊效果还行,近景可能不行,下次尝试近的自己画,远的用骗术吧.&lt;——这个人基本没素描过植物虽然.<br>不过颜色用的好死.可能是饱和度都全部太重,也可能是亮的地方没分好,都糊在了一次.<br><strong>&gt;&gt;&gt;要记得素描关系不单单有外形,还有明暗的分布…!&lt;&lt;&lt;&lt;</strong></p>
<p>把颜色分为亮面和暗面.不过哪面的饱和度高…至今没搞懂.<br><strong>咦,笔记写着写着,写出了新的迷茫!!!</strong></p>
<p>其他就是开始尝试增加质感,还有约式最喜欢的光斑.<br>一不小心加多了就会太咸…得注意.</p>
<p>U酱说钢琴小了,的确是.下次得找好图多比划一下.<br>3D模型是真的爽,什么时候云出时间来,除了买csp配件也要学学sketchUp.</p>
<br>
<br>
<br>

<img src="/blog/2021/02/13/P123/P165_4.png" class="">

<p>参考了Anna Ancher的图.<br>她的几张作品我是真的很喜欢很喜欢…想学……<br><strong>不过这次明明是参考但完全偷师大失败?!</strong></p>
<p>这次很在意的地方是…蓝色的影子!!<br>这个注意到不止一次了,很喜欢蓝色的影子,很好看很好看.<br>虽然天晴天阴,室内室外,灯光等等有关,影子的颜色不同.<br>这次想加入蓝色,人物是绿色和白色所以好混,但跟留音机的红相冲,没控制好.<br>不是说留音机是红色系不能加蓝,我喜欢冷和暖相撞,就是难!</p>
<p>其他的话,用笔刷叠了一层淡黄假装油画感.<br>淡黄和淡棕真是好用啊…</p>
]]></content>
      <categories>
        <category>绘图笔记</category>
      </categories>
      <tags>
        <tag>とりあえず絵を百枚描きましょう</tag>
      </tags>
  </entry>
  <entry>
    <title>sore家的obake和sore给我的</title>
    <url>/blog/2020/11/10/P125/</url>
    <content><![CDATA[<img src="/blog/2020/11/10/P125/P125.png" class="">
<span id="more"></span>

<br>
<br>
<br>
<br>

<blockquote>
<p>soresaki -&gt; <a href="https://www.instagram.com/sa_ka_na_4/">ig</a></p>
</blockquote>
<p>sore是在ig上遇到的一位小可爱//<br>之前他生日,忙忙然后隔了好久才补上了个小涂鸦.<br>以及换了推特头像,是找他画的麻醉~觉得他的画风特别适合麻醉,很喜欢…<br>很久都没有换推特头像了!!在个站也存一份.</p>
<br>
<br>

<img src="/blog/2020/11/10/P125/mazui.jpeg" class="" width="300" height="300" title="小麻醉uwu">

<p>相关图书馆编号:char05.</p>
]]></content>
      <categories>
        <category>朋友给的画</category>
      </categories>
      <tags>
        <tag>给朋友的画</tag>
        <tag>废弃工厂</tag>
      </tags>
  </entry>
  <entry>
    <title>(补)阿莼家的真由和莼神给我的兄妹(合掌)</title>
    <url>/blog/2020/11/12/P126/</url>
    <content><![CDATA[<img src="/blog/2020/11/12/P126/P126_5.PNG" class="">
<p>时间虽然是2020年11月,但图大多有点时间啦.</p>
<span id="more"></span>

<p>正好来整理一下.</p>
<p>阿莼我很喜欢的创作者,最初是初中的时候通过阳炎认识的.<br>一直作为小迷妹喜欢了很多年,到现在还获得了很多自家oc的同人,简直像梦一样(泣).</p>
<blockquote>
<p>aaniko -&gt; <a href="https://twitter.com/anaaosa_junn">twi</a></p>
</blockquote>
<p>这里收录一下莼给我的约稿生贺还有交换绘.</p>
<img src="/blog/2020/11/12/P126/P126_6.JPG" class="" width="300" height="300">
<img src="/blog/2020/11/12/P126/P126_7.JPG" class="" width="300" height="300">

<p>这是莼画的稿子,两张图是可以叠起来的,真的超级用心超级喜欢!!</p>
<img src="/blog/2020/11/12/P126/P126_4.PNG" class="" width="405" height="300">
<img src="/blog/2020/11/12/P126/P126_8.PNG" class="">

<br>
<br>
<br>
<br>
<br>
<br>

<p>然后是我画的一些阿莼家的.</p>
<img src="/blog/2020/11/12/P126/P126_2.png" class="">
<img src="/blog/2020/11/12/P126/P126_3.png" class="">

<img src="/blog/2020/11/12/P126/P126_1.gif" class="">
<p>最后一张还是很久之前的了…他家的oc我也非常喜欢,很丰富很可爱.</p>
<br>
<br>
<br>

<p>相关图书馆编号:char44,char70.</p>
]]></content>
      <categories>
        <category>朋友给的画</category>
      </categories>
      <tags>
        <tag>oc</tag>
        <tag>给朋友的画</tag>
        <tag>TokyoTL</tag>
      </tags>
  </entry>
  <entry>
    <title>她</title>
    <url>/blog/2020/08/03/P130/</url>
    <content><![CDATA[<img src="/blog/2020/08/03/P130/P130.png" class="">
<span id="more"></span>

<br>
<br>
<br>

<p>相关图书馆编号:char44.</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>oc</tag>
        <tag>卡尔马</tag>
      </tags>
  </entry>
  <entry>
    <title>徐子怡老师家的rika和他给我的兄妹</title>
    <url>/blog/2020/03/20/P128/</url>
    <content><![CDATA[<img src="/blog/2020/03/20/P128/P128_1.png" class="">
<span id="more"></span>

<img src="/blog/2020/03/20/P128/P128_2.png" class="">

<p>徐子怡 -&gt; <a href="https://xuziyi823.lofter.com/">lof</a></p>
<img src="/blog/2020/03/20/P128/P128_3.JPG" class="">
<img src="/blog/2020/03/20/P128/P128_4.JPG" class="">

<br>
<br>
<br>

<p>相关图书馆编号:char44,char70.</p>
]]></content>
      <categories>
        <category>朋友给的画</category>
      </categories>
      <tags>
        <tag>oc</tag>
        <tag>给朋友的画</tag>
        <tag>TokyoTL</tag>
      </tags>
  </entry>
  <entry>
    <title>海边的烟花与阿宅社交新闻</title>
    <url>/blog/2020/11/12/P127/</url>
    <content><![CDATA[<img src="/blog/2020/11/12/P127/P127_1.JPG" class="">
<p>解压涂涂家庭组,不过这次是想唠嗑.</p>
<span id="more"></span>

<p>给博客换了一次新的模版,每篇文章可以看编辑日期.<br>关于博客的内容搜索,功能,通知等等我也有在想啦.<br>个人博客不会有更新通知,可以知道哪篇有变动说不定是好事.<br>不过这次是把所有的都加了些tag,并没有新内容orz.</p>
<p>说起来……在老福特的时候,可能去年就渐渐把oc tag给删除了.<br>为了方便搜索,现在再加回来,有种“事到如今……”的感觉.就当作是自闭人在自家迈开了新步伐吧.</p>
<p>当阿宅快8个月了.没好好出门,脱离热闹不单是没有趣事那么简单,个人习惯和心境也被改变了很多.<br>最近头疼的事是不守时.<br>好久都没有早起惹.没有守时上课的需求,醒来后没有任何可以刺激爬起床的事情.<br>寂寞也没有办法.毕竟以前很大的热闹是通过只有一面之缘的人群来获得的.</p>
<p>死宅的社交:和U君在虚拟大草原上奔跑</p>
<img src="/blog/2020/11/12/P127/P127.jpeg" class="">
<p>(U君画的)</p>
<p>阿宅发现自己身体渐渐僵硬,买了健身环效果还不错.很久都没认识新的人了,去找学校社团奇怪活动.<br>这个学期回到了日本语小课堂,报名了一个与日本学生文化交流的活动.每周借这个机会跟小组成员尬聊一小时,虽然尬,但很开心.<br>毕竟为了聊天而聊天的机会,在这个新冠时代还蛮难得的.</p>
<p>文化交流,我们小组两位滑铁卢人,三位东京的妹子.<br>可惜滑铁卢组是有一位还没来过学校的厄瓜多尔新生,和我.<br>诶呦喂,社恐人虽然在加拿大呆有几年,交流本土特色还真是每次都会翻遍大脑所有的角落也找不多什么.<br>对不住,我没有好好融入本地.<br>过了个月学校又给我发邮件说留学生有跟本地人做文化交流的活动,因为想跟人说话,转头又报名了.<br>我,也许是文化三明治.</p>
<p>听大家讲身旁的事还是蛮有趣的.<br>他们的校服是都真的好看.看到了日本的高中毕业相册.有些学校社团很多有些并不是.毕业相册跟我的差很多,特别是气氛上,感觉在青春的同时还很认真.<br>一件一件事比较碎,这次写个top5有趣的事吧.</p>
<blockquote>
<p>top5: (日本)福袋可能也指的是服袋(发音差不多).新年的时候卖.看不到内容的一套衣服,价格很便宜所以很多人会买.<br>top4: (日本)お祭り的时候很多人抬的木轿子(?)可以当作小型教堂,里面供奉的是神明.<br>top3: (日本)学校的羽毛球同好会有150人左右的成员,真的在打球的只有二十个左右,其他人都是去一起喝酒(飲み会).<br>top2: (厄瓜多尔)只有大学和大学以外两种学校.从3岁到18岁可以在同一个学校上学.转学的话去考新学校的入学小测就行.<br>top1: (厄瓜多尔)学校的体育课会考铁人三项.</p>
</blockquote>
<p>铁人三项夺得第一.</p>
<br>
<br>
<br>

<p>相关图书馆编号:char02,char03.</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
        <tag>oc</tag>
        <tag>家庭组</tag>
      </tags>
  </entry>
  <entry>
    <title>冬日的一点阳光</title>
    <url>/blog/2020/11/15/P129/</url>
    <content><![CDATA[<img src="/blog/2020/11/15/P129/P129.png" class="">

<span id="more"></span>
<br>
<br>
<br>

<p>相关图书馆编号:char44,char47,char48.</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>oc</tag>
        <tag>卡尔马</tag>
        <tag>冬日组</tag>
      </tags>
  </entry>
  <entry>
    <title>在多伦多市中心迎接2020</title>
    <url>/blog/2020/11/22/P131/</url>
    <content><![CDATA[<p>年初的事啦.</p>
<span id="more"></span>

<p>整理手机图片的时候怎么也没想到是今年年初去downtown跨的年,大家的时间观念都出了问题.</p>
<br>

<p>每年downtown跨年都会放烟花,来加拿大有几年终于跟狐朋狗友约定在2019的尾巴去downtown凑个热闹.<br>跟室友旅游也只有春假去温哥华的记录.这次叫上了飞哥,来半天一夜的downtown之旅.<br>顺便一提这里的商店大多节假日会放假,年内最后一天还是热闹,乘着机会第一次三人一起出门购物,新年第一天整个城市就休息没地方可以玩了.</p>
<p>三人想了半天选了自助寿司,天妇罗🍤可是好吃,万物油炸之后脆脆的口感配上清淡酱油,带来清爽的高脂肪幸福…<br>是的,现在快相隔一年没吃日料了,我还是深爱着天妇罗.<br>我的大学生活单调,购物是一年一次去我们小镇唯一的商场购买给伯父伯母的圣诞礼物,顺便给自己买些必须的衣服.<br>每年绞尽脑汁买一些有点意思又希望能排得上用场的东西,电影音乐cd,烤箱手套,椅背坐垫…他们也许不会那么喜欢也只是想自己的钱花得值得.</p>
<img src="/blog/2020/11/22/P131/P131.jpg" class="" title="也会给自己买这样的礼物">
<p>为了省时也经常是一人行动,这么想想和室友购物还是第一次.<br>跟朋友购物有件很有意思的事情是每个人的消费水平和习惯不同.所以每个人的推荐和品味都很有意思.<br>这次飞哥给我们带来了礼物,每人一个陶瓷猫猫茶杯.室友开心的选了可爱猫猫,我的是冷漠猫猫,傻傻的脸我十分中意.</p>
<br>

<p>吃完饭回民宿休息,室友带了山寨的uno游戏牌.<br>好一个过年,uno都买不到正版的.<br>三个大学生凑在一起会做什么呢,也就聊着有的没的.<br>时间差不多就出门,人很多,跟着人流往广场前进.<br>多伦多市中心治安的确是有担忧的,在便利店看到明目张胆偷东西的人.保安也很有经验,售货员小姐姐也是.<br>人特别的多,快到广场的时候已经是挤在一起了.拍的视频也并不是最好的风景,佛系的室友三人组倒是非常满足了.</p>
<video width="500" controls>
  <source src="P130_firework.mov" type="video/mp4">
  Your browser does not support HTML video.
</video>

<p>三个大学生看完了烟花之后回民宿不舍得睡觉.难得的机会借着困意,发起真心话大冒险,聊着男子初中生会喜欢的恋爱与性相关话题.<br>不过说到这个比喻我也是很好奇,我学生时期没有集体住宿的经历,这种夜晚小话题是会在初中高中生之间进行的吗.如果是的话感觉人生错过了很有意思的时期.<br>真心话,我的性格想问他们一些在大学里迷茫艰难时期内心的经历,结果被吐槽“你是我们学校的招生办吗”.<br>嗨呀,两个不配合的坏人.内心明明是很有意思的话题.<br>之后也没想到那么久都没有机会三个人再一起聊聊天.<br>我们在作为室友的最后一天,那天隐隐有预感就录了音,也是在聊一些这个年龄特有的,虚无缥缈的小梦想.</p>
<video width="500" controls>
  <source src="P130_kirakira.mov" type="video/mp4">
  Your browser does not support HTML video.
</video>

<p>这个小视频是在宿舍时拍的,喜欢的画手做的“不加油吗”小贴纸.</p>
<br>

<p>这次就先聊到这里吧.</p>
]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>在数学草稿中游荡的小涂鸦</title>
    <url>/blog/2014/08/22/P133/</url>
    <content><![CDATA[<img src="/blog/2014/08/22/P133/P133_6.jpg" class="">
<span id="more"></span>

<img src="/blog/2014/08/22/P133/P133_1.jpg" class="" width="300" height="300">
<img src="/blog/2014/08/22/P133/P133_3.jpg" class="" width="300" height="270">
<img src="/blog/2014/08/22/P133/P133_4.png" class="">
<img src="/blog/2014/08/22/P133/P133_2.jpg" class="">
<img src="/blog/2014/08/22/P133/P133_5.jpg" class="" width="300" height="300">
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>同人</tag>
        <tag>vocaloid</tag>
        <tag>弹丸论破</tag>
      </tags>
  </entry>
  <entry>
    <title>请教了东云老师如何画背景</title>
    <url>/blog/2018/05/08/P136/</url>
    <content><![CDATA[<p>(感恩之心)</p>
<span id="more"></span>

<blockquote>
<p>透视的话从这个高度的EL来看的话如果能画成三点透视的话可能会更逼真，当然一点透视也没问题。<br>然后我用的是日语版，后面有的调整我不知道英语怎么说，ma哥你可能要查一下。<br>先把阴影画上，后面会把它用乘算改透明度来直接完成大阴影。<br>城市的话黄昏时彩度没那么高，我的话会从远处的开始画，颜色正常上，然后用レベル(level)補正调节灰度，调节色相，用トーンカーブ(tone curve)来调节总体色调。<br>トーンカーブ基本不是一次就能调好，可以多叠加几层。<br>然后楼和楼之间可以用偏淡黄的白来画点空气。<br>然后调成スクリーン(screen)调节透明度。<br>近的也会有，但不会那么明显。<br>远处的用色块画，越近的就画的越细也可以体现出远近感。<br>大概就是这样吧。<br>然后个人的一些小建议。<br>历史调到50，尽量用蒙版(mask)来修正。<br>之前的有点问题，黄昏的话阴影颜色可能深蓝偏紫色一点。<br>我晚上回去再看看有没有问题吧。</p>
</blockquote>
]]></content>
      <categories>
        <category>绘图笔记</category>
      </categories>
  </entry>
  <entry>
    <title>认真的读书和认真的记载 - 高中篇</title>
    <url>/blog/2016/03/29/P137/</url>
    <content><![CDATA[<blockquote>
<p>当时为了熟悉英语,做的每个月一本书挑战.<br>虽然没坚持多久,但姑且认真过一下下(…).</p>
</blockquote>
<span id="more"></span>

<h3 id="Gravity-Falls"><a href="#Gravity-Falls" class="headerlink" title="Gravity Falls"></a>Gravity Falls</h3><img src="/blog/2016/03/29/P137/P137_1_1.jpg" class="" width="400" height="500">
<p>这本粮…<br>其实我还没看完!!不过这次不是来做记录的而是来repo的!!<br>迪斯尼的人物抓的都好好.虽然是句废话,但是一点点胡闹一点点异想天开一点点夸张还有五十吨的糖……这就是迪斯尼啊!!<br>说人话就是Dipper特别的Dipper,Mable真是太Mable了!!(什么.</p>
<p>我来更新一下下……!!</p>
<img src="/blog/2016/03/29/P137/P137_1_2.jpg" class="" width="400" height="500">
<img src="/blog/2016/03/29/P137/P137_1_3.jpg" class="" width="400" height="500">
<img src="/blog/2016/03/29/P137/P137_1_4.jpg" class="" width="400" height="500">
<p>Mable的部分全程彩笔,Dipper是黑笔.</p>
<img src="/blog/2016/03/29/P137/P137_1_5.jpg" class="" width="400" height="500">
<p>Dipper会去收藏各种暗号的写法,一些超自然现象,以及如何鉴定那是否是超自然的液体生物的而不是Waddle的口水,他是不是超可爱…!!!<br>Mable我的印象中就是一个大写的”LET’S HAVE SOME FUUUUUUUUN!!!!”这人是引领时尚的先锋啊,还有日常黑Dipper(笑.<br>各种小镇奇怪的人物与怪兽都有收入一部分.包括Soos的实用(?)手工教程与Stan的”Is your money haunted?!???”的骗人玩意儿(笑.</p>
<img src="/blog/2016/03/29/P137/P137_1_6.jpg" class="" width="400" height="500">
<p>最后一张是大家都喜欢的Bill姥姥:)</p>
<p>不多概况了.挺值得一买的,这糖太甜了.虽然小科普知识没有太多的用处但是总会让人情不自禁的笑起来…!!<br>回想起我以前也是很喜欢收集奇奇怪怪的图案与暗码,啊迪斯尼我能追随你一辈子(大笑.</p>
<br>
<br>
<br>

<h3 id="It’s-kind-of-a-funny-story"><a href="#It’s-kind-of-a-funny-story" class="headerlink" title="It’s kind of a funny story"></a>It’s kind of a funny story</h3><img src="/blog/2016/03/29/P137/P137_2_1.jpg" class="" width="400" height="500">
<p>我是更新(…).</p>
<img src="/blog/2016/03/29/P137/P137_2_2.jpg" class="" width="400" height="300">
<p>这次的书大概讲个主人公因为学校压力太大然后抑郁想去跳河然后自己打了医院电话去精神病院住上了一段时间.<br>是的…跟我被书名骗了!!!!!我真心以为是comdy!!!!!<br>嘛.总之因为主人公的抑郁,这本书比起上本很强的叙事情来说更多的是心理的(就是自言自语)的描写吧.<br>语言还行不是很难只是…读上去有些累…为了突出男主的心情重复的说法很多.<br>我倒是不介意读读这种类型的…只是让我很心累的是非常套路的出现了两个妹纸.恋爱的套路真想要多点真诚啊…</p>
<p>总结.并不推荐这本.虽然Mrs.Collect说这作者还挺受欢迎的.<br>444页啊兄弟…读了两三个礼拜吧…?如果内容有趣点说不定能更快一点…!!<br>向下一本冲击x.</p>
<br>
<br>
<br>

<h3 id="The-catcher-in-the-rye"><a href="#The-catcher-in-the-rye" class="headerlink" title="The catcher in the rye"></a>The catcher in the rye</h3><img src="/blog/2016/03/29/P137/P137_3.jpg" class="" width="400" height="500">
<p>你好我是更新.</p>
<p>我是那个安心与信赖的赶不上一月两更的更新…这次只差了几个小时!!!有些不甘心….<br>这次的书是我们学校10年纪的语文必读的书,虽然summer school不一定是同一本啦总是拿来读读也是好的.也算是第一次读paperback.</p>
<p>这次的书讲述的是一位16岁(查了维基才发现他好年轻啊!!我以为是17)的少年,holden caulfield的三天之内的故事.</p>
<p>想写写故事概括却没法简单的做到…的原因是这本书是以holden的视角叙述的,整本书就是流水帐的形式,想到哪儿说到哪儿.前一秒才去了历史老师old spencer的家跟他讨论了自己被学校开除的事情一下秒又在讲自己把给橄榄球队的装备落在了地铁上害得学校队没法参赛的事情.所以前两章我读了两遍才找到作者的步调……</p>
<p>这人对世界那么点【生无可恋】的感觉,整本书也就那个基调.<br>他明明很会说话,也很会搭话,可以很简单的跟酒吧遇到的小姐姐满口胡言扯东扯西,但是却一直抱怨着周围的一切都很假.(作者用的词是phony)</p>
<blockquote>
<p>Phony – superficially acting a certain way only to change what others think of you</p>
</blockquote>
<p>wiki是这么讲的</p>
<p>老师很虚伪,室友其实也装,想到其实自己说只有一两面之缘也不怎么喜欢的人却也打个电话约去喝个酒来”make a conversation”打发下时间.</p>
<p>额……我应该先概括说一下这个人的三天内的生活.</p>
<p>在圣诞前夕被学校开除了跟室友打了一架因为他和自己喜欢的女人约会了然后想着离开学校,但是回去那么早会被父亲发现又被开除了所以回去了纽约打发时间.<br>住了一两个酒店晚上去一些很便宜的酒吧约一些朋友的朋友的朋友,喝完一家喝下一家.顺便回酒店的时候还被…性交易者的妹子与汉子骗了钱打了一顿.所以你可以看到这个人一边喝酒一边发现自己在流血…真是有些哭笑不得.<br>最后自己的支票被偷走了,没地方住了大晚上的又跑去那个中央公园呀考虑大冬天的鸭子跑到哪里去的问题.冻着要命怀疑自己要得上肺炎了最后想着见自己的妹妹一面又偷偷的跑到了家里碰上了父母又偷跑出去去了一个老师的家里.老师愿意收留他一晚上然后他半夜醒来发现老师在pet(也许是抚摸…?)他的头吓的他找了一个借口跑了,最后考虑着一直搭便车去北方,所以想见妹妹最后一面顺便把借的钱还给她.<br>在约好的时间后发现妹妹拽着行李箱去找他了于是他挺生气的又安慰妹妹说他不去北方了.</p>
<p>是未成年没错喝酒那时美国得21岁所以并不是一直能喝上酒.</p>
<p>这人的生活大概是不大行.撇开【exo me???这书是推荐给10年纪学生的必读书目????】以外,这本书以外的还是很有吸引人的地方.</p>
<p>它,讲了主人公明明接触很多人,跟很多人说过话,但觉得世界上每一个人会去关心他.事实上的确是吧,他会觉得累,虽然我不能理解他在累什么.<br>记得是第二天的时候,他疯狂的跟一位其实自己也没有那么喜欢的妹子说我想带你离开这个地方,去一个农场,谁也不认识我们,就去一个农场过日子就好.<br>妹子倒也是很正常的,她会考虑需要跟家人认识的朋友说离别,需要有工作,需要有经济来源来能开始新的生活.所以妹子受不了holden的疯狂所以离开了酒吧.那时候男主的确喝的很醉,妹子最后老晚了还爬起来接他电话还是有好心的.</p>
<p>啊……这么写起来觉得吧…我为什么读到最后觉得这本书还是挺好看的呢……<br>也许是因为他唯一爱着的也在身旁的妹妹吧,他们的互动很可爱.<br>说来笑话的是,一开始在书中出现的跟男主打了一架的室友啊,男主最后竟然还说会有一点点想念一点他们.那个可以把你打得满脸血的家伙哦?<br>明明有些人在书中的描写是很详细的,不是指对你好也不是指对你差,但是离开了某个地方之后, 我就觉得再也不见了.这时候你再说会想念,这真是最后一章的有趣结尾.<br>还有还有,这人说过:</p>
<blockquote>
<p>I mean how do you know what you’re going to do till you do it? The answer is, you don’t. I think i am, but how do I know? I swear it’s a stupid question.</p>
</blockquote>
<p>不愧是像浮萍一样的人.</p>
<p>就写这么点吧.如果暑假会学这本书的话,那就再写写.</p>
<p>ps.<br>昨儿是video blog的展示日,我非常喜闻乐见的又拖了一天(姚明脸.<br>做的是book report-那本it’s kind of a funny story.<br>果然再写一遍读后感还是没什么好写的…也许电影会好看一点,我截了一写片段到自己的视频里去.<br>同样是记述式的小说…差得真是多呢(笑.</p>
<br>
<br>
<br>


<h3 id="花の诗"><a href="#花の诗" class="headerlink" title="花の诗"></a>花の诗</h3><img src="/blog/2016/03/29/P137/P137_4_1.jpg" class="" width="400" height="400">
<img src="/blog/2016/03/29/P137/P137_4_2.jpg" class="" width="400" height="400">
<img src="/blog/2016/03/29/P137/P137_4_3.jpg" class="" width="400" height="510">
<img src="/blog/2016/03/29/P137/P137_4_4.jpg" class="" width="430" height="320">

<p>不是书感更新(.</p>
<p>淘到了本有趣的书.</p>
<p>昨儿附近有contents sale.就是有人要搬家了,会把家里的东西藏品收拾出来卖.<br>伯母一大早就出去了中午回来跟我讲有多少多少好看的罐子还买回来个七几年的缝纫机.提到了还有很多美术用的书都没人买,我十分后悔看了一上午极限挑战,看还有半小时收摊就拜托着她载我过去.<br>Contents sale一向很有意思.你真是猜不到对方那大半辈子攒了多少宝贝.上次很有趣的六只猫也是在那淘到的.<br>于是特喜欢的就是这两本,虽然是日文但是阻止不了它的有趣啊…!!<br>第一本是包装方法.真是讲究…有分吉事的结与凶事的结,以及各式各样的包花包瓶子包礼品等等的方式.<br>第二本好似是用花做出来的作品.还有一本是和纸做出来的作品集.以前都没有听说过呢hhhh.</p>
<p>这家人的书真的 真的 真的很多.地下室有一排得书架,卧室还有小的.没什么人买书实在太可惜了.不过奔着珍宝去的买书的群体的确不会多…<br>5p是我买的量.只算了我十块钱我的天…我感觉我在抢劫别人的书橱.经常在sale见到的一位工作人员(挺和蔼的中年男子)跟我开玩笑说你一定想要更多对不对.我一句sure都要脱口而出了好吗.<br>嘛…早知道再搬点了.有七几年的还是手写再硬刷的figure drawing带现代一点的hands drawing.<br>我还看到些关于film making,computer animation的书籍.简直是小图书馆.</p>
<br>
<br>
<br>

<h3 id="Twelfth-night"><a href="#Twelfth-night" class="headerlink" title="Twelfth night"></a>Twelfth night</h3><img src="/blog/2016/03/29/P137/P137_5.jpg" class="" width="380" height="500">

<p>顺便讲下这次的莎先生.<br>我借了本译文和原作一起看.<br>这次是喜剧,终于没有殉情没有复仇可喜可贺可喜可贺.<br>女主人公Viola是上层人物.和双胞胎哥哥(?)一起遇上了风暴船翻生死不明.<br>Viola被救上来后假扮成男生,在当地的一户有地位的人家里做着仆人的工作.并恋上了那里的男主人.<br>男主人叫做Duke,恋上了一位大小姐叫做Olivia.<br>于是Viola被派去帮Duke求婚.然后出现了喜闻乐见的三角恋.<br>期间Viola的双胞胎哥哥Sebastian被一位船长救出也来到了小镇上.然后然后不靠谱的是被Olivia小姐直接拉过去结婚了.<br>喂喂喂小姐姐没认出来也就算了这位小哥哥你怎么这么随便.<br>然后Duke公爵(也许)就大大的生气说要对Olivia的丈夫做出过分的事,Viola一脸疑惑我什么时候结的婚.<br>然后突然兄妹碰巧在争执中相遇了.然后大家都明白了这两人的身份.<br>Duke决定和Viola去结婚了.<br>……咦这个刚刚还说这要把自己的眼睛挖出来的人可以安心嫁嘛.</p>
<p>嘛整体还是比较有趣且轻松的.<br>一些仆人们的玩笑看的也很开心.<br>虽然莎先生的文章一如既往吐槽起来很吃力.</p>
<br>
<br>
<br>

<h3 id="Winne-the-pooh"><a href="#Winne-the-pooh" class="headerlink" title="Winne the pooh"></a>Winne the pooh</h3><img src="/blog/2016/03/29/P137/P137_6.jpg" class="" width="400" height="500">

<p>这个月看的其实是这本.<br>嘛…也是划水ww.毕竟儿童文学.</p>
<p>可以说是久仰大名了!!!A.A.Milne的这本.<br>毕竟很久之后才知道有原作的存在.<br>记得小时候去报刊亭买的小熊维尼杂志.<br>不记得价钱了,只记得会送小玩偶什么的.<br>然后偶尔会看书中发现小猪还有个名字是皮格列特之类的.当时觉得哇!!原来他们还有其他的名字!!维尼也是,但我不记得了.<br>现在记起来小猪是音译,或者当时杂志上写的是他祖父的名字吧.<br>迪斯尼还是挺遵循原作的,许多故事都有【啊,这个我以前看过】的影子.<br>整片故事是以Milne给Christopher Robin,就是克里斯多夫罗宾讲维尼的故事来展开的.<br>维尼是他的布偶熊,书里说是Edward bear.<br>Christopher会问,这就是故事的所有了吗?<br>Milne会说,不,还有关于你和维尼和小猪还有瑞比的.你还记得吗?<br>Christopher会说,嗯我记得.但是我试着去想起的时候,我就忘记了.<br>怎么说呢,挺温暖的.<br>虽说不知道维尼和罗宾的关系,但也能隐隐感觉到【啊…原来是这样啊.】<br>记得最早一集的小熊维尼是大家去城市看电影,然后逃回森林,大概暗示了这个吧.<br>维尼,书中经常叫他pooh bear,经常是傻傻的.他也自诩a bear of a little brain.<br>小猪,噢我前几个月才意识到他是男生.的确很胆小,但也是个好伙伴.<br>瑞比是最会打算的.书中说瑞比的兄弟姐妹特别多,不愧是兔子.<br>还有owl,我不记得译名是什么了.是百亩森林中除罗宾唯一会写字的.虽然他会把生日快乐写成hipy papy bthuthdth thuthda bthuthdy.Pooh会说it’s a nice long one.太可爱了.<br>还有伊尔,那位总是悒悒不乐然后尾巴掉下来的伊尔.<br>袋鼠妈妈和小豆是中途搬进来的.还有瑞比排外,不过最后大家还是成为了朋友的情节.<br>这本里跳跳虎没有出现,真是遗憾ಠ_ಠ.<br>说起来维尼这系列还有几本,不过貌似是诗歌的比较多,以为就这一本是原作…因为没有看到跳跳虎还准备去借借其他几本.<br>总结一下,作为书来说虽然有些年头了,但是是非常可爱温馨,节奏也缓慢的儿童文学.挺适合睡前一读.<br>迪斯尼也是把这几位角色诠释的很厉害哇.我的童年是小熊维尼真是幸福.<br>啊…好想把老动画再看一遍.</p>
]]></content>
      <categories>
        <category>读后感</category>
      </categories>
  </entry>
  <entry>
    <title>关于data的笔记 - Week2</title>
    <url>/blog/2020/11/28/P141/</url>
    <content><![CDATA[<p>两周的笔记一起摸,不愧是我.</p>
<span id="more"></span>

<h2 id="DA的过程"><a href="#DA的过程" class="headerlink" title="DA的过程"></a>DA的过程</h2><p>question -&gt; wrangle -&gt; explore -&gt; draw conclusion -&gt; communicate</p>
<p>wrangle:</p>
<ul>
<li>gather data</li>
<li>assess data to identify problems</li>
<li>clean data(modify, replace, move to ensure data is high quality and well-structured)</li>
</ul>
<p>explore:</p>
<ul>
<li>finding patterns</li>
<li>visualizing relationship</li>
<li>building intuition</li>
<li>remove outliers</li>
<li>create new and more descriptive features</li>
</ul>
<p>draw conclusion：</p>
<ul>
<li>and make prediction</li>
</ul>
<p>communicate:</p>
<ul>
<li>也是最重要的(…)</li>
<li>data visualization is very valuable</li>
</ul>
<h2 id="more-CSV-with-Jupyter-Notebooks"><a href="#more-CSV-with-Jupyter-Notebooks" class="headerlink" title="more CSV with Jupyter Notebooks"></a>more CSV with Jupyter Notebooks</h2><h3 id="matplotlib"><a href="#matplotlib" class="headerlink" title="matplotlib"></a>matplotlib</h3><p>关于用matplotlib画图.<br><a href="https://matplotlib.org/api/pyplot_api.html#matplotlib.pyplot.bar">example</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">% matplotlib inline</span><br><span class="line"></span><br><span class="line"><span class="comment"># two required arguments in pyplot&#x27;s bar function: the x-coordinates of the bars, and the heights of the bars.</span></span><br><span class="line">plt.bar([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">224</span>, <span class="number">620</span>, <span class="number">425</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment"># specify the x tick labels using pyplot&#x27;s xticks function, or by specifying another parameter in the bar function. The two cells below accomplish the same thing.</span></span><br><span class="line"><span class="comment"># plot bars</span></span><br><span class="line">plt.bar([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">224</span>, <span class="number">620</span>, <span class="number">425</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># specify x coordinates of tick labels and their labels</span></span><br><span class="line">plt.xticks([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment"># plot bars with x tick labels</span></span><br><span class="line">plt.bar([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">224</span>, <span class="number">620</span>, <span class="number">425</span>], tick_label=[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment"># Set the title and label axes like this.</span></span><br><span class="line">plt.bar([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">224</span>, <span class="number">620</span>, <span class="number">425</span>], tick_label=[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>])</span><br><span class="line">plt.title(<span class="string">&#x27;Some Title&#x27;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;Some X Label&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;Some Y Label&#x27;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>another example</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Use query to select each group and get its mean quality</span></span><br><span class="line">median = df[<span class="string">&#x27;alcohol&#x27;</span>].median()</span><br><span class="line">low = df.query(<span class="string">&#x27;alcohol &lt; &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(median))</span><br><span class="line">high = df.query(<span class="string">&#x27;alcohol &gt;= &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(median))</span><br><span class="line"></span><br><span class="line">mean_quality_low = low[<span class="string">&#x27;quality&#x27;</span>].mean()</span><br><span class="line">mean_quality_high = high[<span class="string">&#x27;quality&#x27;</span>].mean()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create a bar chart with proper labels</span></span><br><span class="line">locations = [<span class="number">1</span>, <span class="number">2</span>]</span><br><span class="line">heights = [mean_quality_low, mean_quality_high]</span><br><span class="line">labels = [<span class="string">&#x27;Low&#x27;</span>, <span class="string">&#x27;High&#x27;</span>]</span><br><span class="line">plt.bar(locations, heights, tick_label=labels)</span><br><span class="line">plt.title(<span class="string">&#x27;Average Quality Ratings by Alcohol Content&#x27;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;Alcohol Content&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;Average Quality Rating&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Use groupby to get the mean quality for each acidity level</span></span><br><span class="line">acidity_level_quality_means = df.groupby(<span class="string">&#x27;acidity_levels&#x27;</span>).quality.mean()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create a bar chart with proper labels</span></span><br><span class="line">locations = [<span class="number">4</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]  <span class="comment"># reorder values above to go from low to high</span></span><br><span class="line">heights = acidity_level_quality_means</span><br><span class="line"></span><br><span class="line"><span class="comment"># labels = [&#x27;Low&#x27;, &#x27;Medium&#x27;, &#x27;Moderately High&#x27;, &#x27;High&#x27;]</span></span><br><span class="line">labels = acidity_level_quality_means.index.<span class="built_in">str</span>.replace(<span class="string">&#x27;_&#x27;</span>, <span class="string">&#x27; &#x27;</span>).<span class="built_in">str</span>.title() <span class="comment"># alternative to commented out line above</span></span><br><span class="line"></span><br><span class="line">plt.bar(locations, heights, tick_label=labels)</span><br><span class="line">plt.title(<span class="string">&#x27;Average Quality Ratings by Acidity Level&#x27;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;Acidity Level&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;Average Quality Rating&#x27;</span>);</span><br></pre></td></tr></table></figure>

<h3 id="seaborn"><a href="#seaborn" class="headerlink" title="seaborn"></a>seaborn</h3><p>用seabron画图.<br><a href="https://seaborn.pydata.org/examples/index.html">example</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br></pre></td></tr></table></figure>

<p>examples</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">% matplotlib inline</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br><span class="line">sns.set_style(<span class="string">&#x27;darkgrid&#x27;</span>)</span><br><span class="line"></span><br><span class="line">wine_df = pd.read_csv(<span class="string">&#x27;winequality_edited.csv&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># get counts for each rating and color</span></span><br><span class="line">color_counts = wine_df.groupby([<span class="string">&#x27;color&#x27;</span>, <span class="string">&#x27;quality&#x27;</span>]).count()[<span class="string">&#x27;pH&#x27;</span>]</span><br><span class="line">color_counts</span><br><span class="line"></span><br><span class="line"><span class="comment"># get total counts for each color</span></span><br><span class="line">color_totals = wine_df.groupby(<span class="string">&#x27;color&#x27;</span>).count()[<span class="string">&#x27;pH&#x27;</span>]</span><br><span class="line">color_totals</span><br><span class="line"></span><br><span class="line"><span class="comment"># get proportions by dividing red rating counts by total # of red samples</span></span><br><span class="line">red_proportions = color_counts[<span class="string">&#x27;red&#x27;</span>] / color_totals[<span class="string">&#x27;red&#x27;</span>]</span><br><span class="line">red_proportions</span><br><span class="line"></span><br><span class="line"><span class="comment"># we&#x27;re missing a red wine value for a the 9 rating. Even though this number is a 0, we need it for our plot. Run the last two cells after running the cell below.</span></span><br><span class="line">red_proportions[<span class="string">&#x27;9&#x27;</span>] = <span class="number">0</span></span><br><span class="line">red_proportions</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># get proportions by dividing white rating counts by total # of white samples</span></span><br><span class="line">white_proportions = color_counts[<span class="string">&#x27;white&#x27;</span>] / color_totals[<span class="string">&#x27;white&#x27;</span>]</span><br><span class="line">white_proportions</span><br><span class="line"></span><br><span class="line">ind = np.arange(<span class="built_in">len</span>(red_proportions))  <span class="comment"># the x locations for the groups</span></span><br><span class="line">width = <span class="number">0.35</span>       <span class="comment"># the width of the bars</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># plot bars</span></span><br><span class="line">red_bars = plt.bar(ind, red_proportions, width, color=<span class="string">&#x27;r&#x27;</span>, alpha=<span class="number">.7</span>, label=<span class="string">&#x27;Red Wine&#x27;</span>)</span><br><span class="line">white_bars = plt.bar(ind + width, white_proportions, width, color=<span class="string">&#x27;w&#x27;</span>, alpha=<span class="number">.7</span>, label=<span class="string">&#x27;White Wine&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># title and labels</span></span><br><span class="line">plt.ylabel(<span class="string">&#x27;Proportion&#x27;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;Quality&#x27;</span>)</span><br><span class="line">plt.title(<span class="string">&#x27;Proportion by Wine Color and Quality&#x27;</span>)</span><br><span class="line">locations = ind + width / <span class="number">2</span>  <span class="comment"># xtick locations</span></span><br><span class="line">labels = [<span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;6&#x27;</span>, <span class="string">&#x27;7&#x27;</span>, <span class="string">&#x27;8&#x27;</span>, <span class="string">&#x27;9&#x27;</span>]  <span class="comment"># xtick labels</span></span><br><span class="line">plt.xticks(locations, labels)</span><br><span class="line"></span><br><span class="line"><span class="comment"># legend</span></span><br><span class="line">plt.legend()</span><br></pre></td></tr></table></figure>

<h3 id="sciPy"><a href="#sciPy" class="headerlink" title="sciPy"></a>sciPy</h3><p>用sciPy算数学相关_.</p>
<h4 id="random"><a href="#random" class="headerlink" title="random"></a>random</h4><p><a href="https://numpy.org/doc/stable/reference/random/generated/numpy.random.randint.html">doc</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">% matplotlib inline</span><br><span class="line"></span><br><span class="line"><span class="comment"># outcome of one coin flip</span></span><br><span class="line">np.random.randint(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># outcomes of ten thousand coin flips</span></span><br><span class="line">np.random.randint(<span class="number">2</span>, size=<span class="number">10000</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># mean outcome of ten thousand coin flips</span></span><br><span class="line">np.random.randint(<span class="number">2</span>, size=<span class="number">10000</span>).mean()</span><br><span class="line"></span><br><span class="line"><span class="comment"># outcome of one coin flip</span></span><br><span class="line">np.random.choice([<span class="number">0</span>, <span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># outcome of ten thousand coin flips</span></span><br><span class="line">np.random.choice([<span class="number">0</span>, <span class="number">1</span>], size=<span class="number">10000</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># mean outcome of ten thousand coin flips</span></span><br><span class="line">np.random.choice([<span class="number">0</span>, <span class="number">1</span>], size=<span class="number">10000</span>).mean()</span><br><span class="line"></span><br><span class="line"><span class="comment"># outcomes of ten thousand biased coin flips</span></span><br><span class="line">np.random.choice([<span class="number">0</span>, <span class="number">1</span>], size=<span class="number">10000</span>, p=[<span class="number">0.8</span>, <span class="number">0.2</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># mean outcome of ten thousand biased coin flips</span></span><br><span class="line">np.random.choice([<span class="number">0</span>, <span class="number">1</span>], size=<span class="number">10000</span>, p=[<span class="number">0.8</span>, <span class="number">0.2</span>]).mean()</span><br></pre></td></tr></table></figure>
<p>如果我们要一次进行多组数据,使用array,比如说一次扔三次硬币,重复多次.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># simulate 1 million tests of three fair coin flips</span></span><br><span class="line">tests = np.random.randint(<span class="number">2</span>, size=(<span class="built_in">int</span>(<span class="number">1e6</span>), <span class="number">3</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># sums of all tests</span></span><br><span class="line">test_sums = tests.<span class="built_in">sum</span>(axis=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># proportion of tests that produced exactly one head</span></span><br><span class="line">(test_sums == <span class="number">2</span>).mean()</span><br><span class="line"></span><br><span class="line"><span class="comment"># simulate 1 million tests of three biased coin flips</span></span><br><span class="line"><span class="comment"># hint: use np.random.choice()</span></span><br><span class="line">tests = np.random.choice([<span class="number">0</span>, <span class="number">1</span>], size=(<span class="built_in">int</span>(<span class="number">1e6</span>), <span class="number">3</span>), p=[<span class="number">0.6</span>, <span class="number">0.4</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># sums of all tests</span></span><br><span class="line">test_sums = tests.<span class="built_in">sum</span>(axis=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># proportion of tests that produced exactly one head</span></span><br><span class="line">(test_sums == <span class="number">2</span>).mean()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者是投骰子</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># simulate the first million die rolls</span></span><br><span class="line">first = np.random.choice(np.arange(<span class="number">6</span>), size=<span class="built_in">int</span>(<span class="number">1e6</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># simulate the second million die rolls</span></span><br><span class="line">second = np.random.choice(np.arange(<span class="number">6</span>), size=<span class="built_in">int</span>(<span class="number">1e6</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># proportion of tests where the 1st and 2nd die rolled the same number</span></span><br><span class="line">(first == second).mean()</span><br></pre></td></tr></table></figure>

<h4 id="binomial"><a href="#binomial" class="headerlink" title="binomial"></a>binomial</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment"># number of heads from 10 fair coin flips,扔十次0.5概率朝上的硬币,return朝上的次数</span></span><br><span class="line">np.random.binomial(<span class="number">10</span>, <span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># results from 20 tests with 10 coin flips,return一个array,每一个在array中的数字都是10个硬币中朝上的数量</span></span><br><span class="line">np.random.binomial(<span class="number">10</span>, <span class="number">0.5</span>, <span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># mean number of heads from the 20 tests</span></span><br><span class="line">np.random.binomial(<span class="number">10</span>, <span class="number">0.5</span>, <span class="number">20</span>).mean()</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">% matplotlib inline</span><br><span class="line"></span><br><span class="line"><span class="comment"># 画histgram可以得到符合binomial的dist图.</span></span><br><span class="line">plt.hist(np.random.binomial(<span class="number">10</span>, <span class="number">0.5</span>, <span class="number">1000000</span>));</span><br></pre></td></tr></table></figure>

<p>注:如果我们的数据在一个array里,我们可以用arr.mean()来计算mean.同理也有arr.std()和arr.var()可以计算standard deviation和variance.</p>
]]></content>
      <categories>
        <category>数学笔记</category>
      </categories>
      <tags>
        <tag>编码</tag>
        <tag>以头抢地(诚)</tag>
        <tag>data</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>一点点的生活片段</title>
    <url>/blog/2018/03/05/P135/</url>
    <content><![CDATA[<p>如题.</p>
<span id="more"></span>

<h2 id="2018-05-27"><a href="#2018-05-27" class="headerlink" title="2018-05-27"></a>2018-05-27</h2><img src="/blog/2018/03/05/P135/P135_1.jpg" class="">
<img src="/blog/2018/03/05/P135/P135_2.jpg" class="">
<img src="/blog/2018/03/05/P135/P135_3.jpg" class="">
<img src="/blog/2018/03/05/P135/P135_4.jpg" class="">
<img src="/blog/2018/03/05/P135/P135_5.jpg" class="">

<p>anime north 2018.<br>第一次去了多伦多的漫展…!很开心.<br>说起来喜欢日本的动画,只在中国的圈子和加拿大的圈子里认识过同好…很是神奇.</p>
<br>
<br>

<h2 id="2018-03-24"><a href="#2018-03-24" class="headerlink" title="2018-03-24"></a>2018-03-24</h2><img src="/blog/2018/03/05/P135/P135_9.jpg" class="">
<p>老弟来我们学校参加高中生机器人大会.<br>非常的酷.</p>
<br>
<br>

<h2 id="2018-03-09"><a href="#2018-03-09" class="headerlink" title="2018-03-09"></a>2018-03-09</h2><img src="/blog/2018/03/05/P135/P135_6.jpg" class="">
<img src="/blog/2018/03/05/P135/P135_7.jpg" class="">
<p>那段时期学校接连去世了三个学生,心情很复杂.<br>路过图书馆的时候看到有人在呼吁心理健康.</p>
<br>
<br>

<h2 id="2018-03-05"><a href="#2018-03-05" class="headerlink" title="2018-03-05"></a>2018-03-05</h2><img src="/blog/2018/03/05/P135/P135_8.jpg" class="">
<p>………圣诞老人这样对待小孩子是道德的沦丧,还是人性的泯灭.</p>
]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
        <tag>Thank you Mr.goose</tag>
      </tags>
  </entry>
  <entry>
    <title>U君帮我更新</title>
    <url>/blog/2020/12/06/P143/</url>
    <content><![CDATA[<img src="/blog/2020/12/06/P143/P143_1.png" class="">
<p>这次更新了下博客背景,乘机拜托U君帮我多画了几个小可爱().</p>
<span id="more"></span>

<p>U还多画了这个…狼狼和余芝好可爱!!!好可爱啊!!!!</p>
<img src="/blog/2020/12/06/P143/P143.png" class="">

<p>丹的起飞梗其实我以前也画过,笑死我了(靠).<br>雨未性转我愣了没认出来(靠),对不住U君,对不住雨未(…).</p>
<img src="/blog/2020/12/06/P143/P143_2.JPG" class="" width="300" height="400">
<p>那顺便备份下这个18年(?)U给我的性转两人,啊,可爱,真可爱.</p>
<blockquote>
<p>U -&gt; <a href="https://tototofoo.github.io/">blog</a></p>
</blockquote>
<br>
<br>
<br>

<p>相关图书馆编号:<br>char04,char05,char10,char31,char44,char45,char80,char99.</p>
]]></content>
      <categories>
        <category>朋友给的画</category>
      </categories>
      <tags>
        <tag>oc</tag>
        <tag>家庭组</tag>
        <tag>怪异专家与助手</tag>
        <tag>狼与兔</tag>
        <tag>废弃工厂</tag>
        <tag>湖底图书馆</tag>
        <tag>0421record</tag>
        <tag>メテオ</tag>
      </tags>
  </entry>
  <entry>
    <title>房子老师给我的麻醉</title>
    <url>/blog/2019/05/04/P144/</url>
    <content><![CDATA[<img src="/blog/2019/05/04/P144/P144_1.jpg" class="">
<span id="more"></span>

<p>还有加了围巾的版本!!甜甜的好喜欢……</p>
<img src="/blog/2019/05/04/P144/P144_2.jpg" class="">

<p>作为交换我画的他家oc(还玩了ae).</p>
<img src="/blog/2019/05/04/P144/P144_4.png" class="">
<img src="/blog/2019/05/04/P144/P144_3.gif" class="">

<blockquote>
<p>黄房子老师的微博：<br><a href="https://weibo.com/u/6454672121?topnav=1&wvr=6&topsug=1&ssl_rnd=1607290633.035">微博</a></p>
</blockquote>
<br>
<br>
<br>

<p>相关图书馆编号:char05.</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>给朋友的画</tag>
        <tag>废弃工厂</tag>
      </tags>
  </entry>
  <entry>
    <title>狼狼和兔兔</title>
    <url>/blog/2019/01/07/P145/</url>
    <content><![CDATA[<img src="/blog/2019/01/07/P145/P145.JPG" class="">
<span id="more"></span>

<br>
<br>
<br>

<p>虽然一张是我画的但只是想备份一下Uu画给我的…</p>
<p>第二张是Uu在19年生日送给我的…真的很喜欢很喜欢!!备份在一起了…!!</p>
<img src="/blog/2019/01/07/P145/P145_3.jpg" class="" width="200" height="200">
<img src="/blog/2019/01/07/P145/P145_2.jpg" class="" width="400" height="365">

<br>
<br>
<br>

<p>最后备份一下U画给我的oc问卷(😢)</p>
<img src="/blog/2019/01/07/P145/P145_4.JPG" class="" width="400" height="1150">

<blockquote>
<p>U -&gt; <a href="https://tototofoo.github.io/">blog</a></p>
</blockquote>
<br>
<br>
<br>

<p>相关图书馆编号:char02,char42,char44,char47,char50,char58,char70.</p>
]]></content>
      <categories>
        <category>朋友给的画</category>
      </categories>
      <tags>
        <tag>oc</tag>
        <tag>狼与兔</tag>
      </tags>
  </entry>
  <entry>
    <title>处于坐标原点的你</title>
    <url>/blog/2020/01/18/P146/</url>
    <content><![CDATA[<img src="/blog/2020/01/18/P146/P146.jpg" class="">
<span id="more"></span>

<img src="/blog/2020/01/18/P146/P146_1.JPG" class="">

<p>事情是这样的…我填了一个oc性格的表格,女主角夕阳在坐标轴中间.<br>然后,U君就…画了,画了,画了所有我那张表格的oc们.<br>惊到我了!!!<br>(里约哭泣……)</p>
<blockquote>
<p>U -&gt; <a href="https://tototofoo.github.io/">blog</a></p>
</blockquote>
<br>
<br>
<br>
<br>

<p>顺便一提个人非常喜欢Uu给余芝老师的发饰…</p>
<p>相关图书馆编号:<br>char02,char03,char05,char10,char30,char31,char44,char47,<br>char50,char55,char58,char80,char81,char82,char83.</p>
]]></content>
      <categories>
        <category>朋友给的画</category>
      </categories>
      <tags>
        <tag>oc</tag>
        <tag>在日落之前</tag>
      </tags>
  </entry>
  <entry>
    <title>U君家的公路组</title>
    <url>/blog/2019/03/13/P138/</url>
    <content><![CDATA[<img src="/blog/2019/03/13/P138/P138_1.png" class="">
<span id="more"></span>

<img src="/blog/2019/03/13/P138/P138.png" class="">

<p>讲真我第一次直接拿黑色往阴影上怼,我好虚().</p>
<p>我对这对意外印象挺深的()因为和U哥叭噗坑掉的(….)三人oc问卷第一次见到了这位同是逃课(?)的朋友.</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>给朋友的画</tag>
      </tags>
  </entry>
  <entry>
    <title>勇者一抬头:办证打卡</title>
    <url>/blog/2018/03/14/P139/</url>
    <content><![CDATA[<img src="/blog/2018/03/14/P139/P139.JPG" class="">
<p>这人第一次用unity做出的是这个玩意可还行.</p>
]]></content>
      <categories>
        <category>项目记录</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>雨未对你来说是怎样的存在?</title>
    <url>/blog/2021/10/03/P148/</url>
    <content><![CDATA[<img src="/blog/2021/10/03/P148/P148.png" class="">
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>oc</tag>
        <tag>怪异专家与助手</tag>
      </tags>
  </entry>
  <entry>
    <title>毕业一个人的旅行</title>
    <url>/blog/2021/09/27/P142/</url>
    <content><![CDATA[<img src="/blog/2021/09/27/P142/P142_1.png" class="" width="300" height="230" title="传说中的可丽饼">

<p>去了一趟蒙特利尔.</p>
<span id="more"></span>
<p>在滑铁卢的这四年只<a href="https://mazui3.com/blog/2019/05/14/P063/">旅游过一次</a>.<br>这几年焦虑,买必要衣物都会速战速决.<br>趁着考点在蒙特利尔,多留了几天看看这个城市.<br>认识的coop大佬经常去各个国家城市工作,也顺便世界到处游.想不浪费浏览机会也受到了他们的影响.<br>大佬校友让我看到了生命的可能性,真诚感谢.<br>我也得努力啊……!</p>
<br>
<br>
<br>

<h2 id="唐人街"><a href="#唐人街" class="headerlink" title="唐人街"></a>唐人街</h2><p>我对蒙特利尔的印象只有:是法语区.</p>
<p>出发前我弟警告我那地方真只有法语告示.英特网写着“不会法语在蒙特利尔生活很多年完全没有问题.”<br>好一个小马过河.</p>
<p>虽然应当优先体验地方特色,但两年没有出门,顺从本心和胃去了唐人街.</p>
<img src="/blog/2021/09/27/P142/P142_11.png" class="" title="墙绘一直是加拿大特色,蒙特利尔更是">
<p>跟卖小笼包的店长聊了会.<br>城市已经实施了疫苗护照,如果没有就没法堂食.<br>安省听说也有推出,但我不知道是否投入了使用.(我带了两针疫苗的发票)<br>店长抱怨每天都有人没有护照,”疫苗和口罩总得选一个吧.”<br>打探到蒙特利尔也有英语区.<br>店长说他们刚来的时候发现有地方的人完全不懂法语只说英语,过了桥又是法语区.<br>“说法语的人很抵触说英语,说英语的人很抵触说法语.”</p>
<p>于是在城市里乱逛的时候留意了一下路人使用的语言,八成法语,两成英语,还有少许遇上的中文和东南亚的语言(笑).<br>我弟说得没错,的确告示都是法语.店家虽然会先用法语问话,但挺多也会英语.<br>总感觉跟当地华人相处一样…<br>在这边认识华人,一般都会先问:”你习惯说中文还是说英文.”</p>
<br>
<br>

<h2 id="历史馆"><a href="#历史馆" class="headerlink" title="历史馆"></a>历史馆</h2><p>之后去了old montreal.<br>old montreal是第一批移民登陆的地方,建筑很有韵味,但现在装修得旅游气氛过重.<br><del>像我家乡的同里一样.</del></p>
<img src="/blog/2021/09/27/P142/P142_2.png" class="" title="街头">
<p>从左到右:</p>
<ul>
<li>猫猫餐厅.</li>
<li>超有名的教堂没赶上开门,但外墙的星星像是浮在空中一样也太厉害了吧.</li>
<li>教堂对面的广场.虽然没有开门,在广场歇脚时听到了报时用的钟声.</li>
<li>建筑防火楼梯真的多,惊讶竟然有人在防火楼梯中搭小阳台.</li>
</ul>
<p>附近的历史馆.</p>
<img src="/blog/2021/09/27/P142/P142_4.png" class="" title="不愧是移民国家,展出一角是各文化物品">
<p>历史馆东西不多.<br>我高中来得晚,完全错过义务教育的加拿大历史,所以对我来说值得一看.<br>还记得的:</p>
<ul>
<li>弹珠在两三百年前竟然是绅士的活动 <del>,原来我幼时趴在公园地上是一种绅士行为</del> .</li>
<li>最先登陆蒙特利尔的是法国人,并与当地人贸易.贸易的货物单位竟然是一整只海獭皮毛.</li>
<li>之后英国人攻进来,加拿大因此分为upper canada和lower canada.分别是现在的魁北克和安大略省.</li>
<li>蒙特利尔保留法语作为主要语言是经过投票的.</li>
<li>蒙特利尔办过奥林匹克.</li>
</ul>
<p>在观看小历史电影的时候,有一些迷茫.<br>几百年来的悲欢离合被活着的人浓缩概括进了小物存放在博物馆里,只能偷窥到一点点,无法感受跨越时间的真正的感情.<br>有机会也想多看看历史.</p>
<img src="/blog/2021/09/27/P142/P142_3.png" class="" title="神秘的海盗主题展厅">
<p><del>偷偷在这里讲一个秘密,旧版卡尔马写的是海盗的故事.太中二了就全改了.</del></p>
<br>
<br>

<h2 id="法式建筑"><a href="#法式建筑" class="headerlink" title="法式建筑"></a>法式建筑</h2><img src="/blog/2021/09/27/P142/P142_5.png" class="" title="城市一角">
<p>蒙特利尔不愧经历了时间的沉淀.<br>法式老住宅,上世纪金融大楼,本世纪的搞怪雕塑,什么都有.</p>
<img src="/blog/2021/09/27/P142/P142_7.png" class="" title="mcgill">
<p>路过mcgill大学去转了一圈.<br>在城市中间的大学真是羡慕阿……<br>法式小洋楼被收为学校用的大学真是羡慕阿…………<br>扭头就能看到城堡的大学真是羡慕阿……………………<br>从小山坡往下走,视觉差配上远处的尖角建筑,一瞬间幻觉到哈利波特片场参加魔法扫帚考试.</p>
<p>城市太好看,从各式的建筑到各色的鲜花,目不暇接.<br>原本计划用地铁但全选择步行,太值了.</p>
<br>
<br>

<h2 id="美术馆"><a href="#美术馆" class="headerlink" title="美术馆"></a>美术馆</h2><p>美术馆是肯定要去一趟的.</p>
<img src="/blog/2021/09/27/P142/P142_6.png" class="" title="拍照的位置和对面这两栋楼都是美术馆">
<p>一共有三栋楼,很震惊.<br>运气不好两栋都在装修,但一栋都看了四小时,你们藏品这么多的吗.</p>
<img src="/blog/2021/09/27/P142/P142_8.png" class="">
<img src="/blog/2021/09/27/P142/P142_9.png" class="">
<img src="/blog/2021/09/27/P142/P142_10.png" class="">
<p>一楼的展厅包括了印象派写实派和现代派各式的画作,印象派爱好者大喜.</p>
<p>三楼有很多藏品,中国的木雕宝床,日本的武士铠甲,埃及的木乃伊和棺材,等等等等,真不愧是移民国家…</p>
<br>
<br>
<br>
<br>
<br>

<p>路过唐人街时看到跟我母亲年轻差不多的小提琴卖艺者.<br>演奏的生日快乐歌字正腔圆,很是感动.<br>那条街还有个本地人模样的大叔,带的还是竖笛(recorder),他看起来还有点紧张.<br>这几年可能只有这一次出门机会,逛得匆忙,错过了很多.<br>但回想起看过这样可爱的人又心生暖意.</p>
<p>顺便一提博客里的[追风者]tag虽然是octag,但是为写旅游笔记而创造的.<br>如果有机会翻新凯姐姐的人设,假装一个凯姐姐世界旅行x.</p>
<br>
<br>
<br>

<h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><p>以及收录下大家给我的oc酱!!</p>
<img src="/blog/2021/09/27/P142/P142_13.jpg" class="" title="来自brtual">
<p>兽型松木实在是太好的文明了!!!!!!!<br>诶这个小眼神,帅气又可爱.<del>诶这个尾巴,手感一定很好.</del></p>
<img src="/blog/2021/09/27/P142/P142_14.png" class="" title="来自柚七">
<p>谢谢<a href="https://ikuuuuuuu.lofter.com/">柚七</a>画麻醉醉!!<br>麻醉醉好少女哦嘿嘿嘿嘿………</p>
<img src="/blog/2021/09/27/P142/P142_12.png" class="" title="游老师卡密">
<p>委托到<a href="https://twitter.com/stdio_nameraka">游老师</a>的东南西涂鸦.<br>不愧是游老师,这衣服一下就帅气高级起来了,太喜欢了.</p>
<p>感激不尽!!</p>
]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>空气演奏</title>
    <url>/blog/2020/12/11/P149/</url>
    <content><![CDATA[<img src="/blog/2020/12/11/P149/P149_1.jpeg" class="">
<p>《真的是期末季最后一次拿别人的图来混更》</p>
<span id="more"></span>

<p>委托了格跳老师的图……!!<br>委托的图有些不好意思备份,但格跳老师对我来说是比较特殊的存在.<br>他算是初中时期,在我画图这件事上一个启蒙的老师.</p>
<p>初中时期我还没接触太多网络,刚开始了解世界上画画有趣的人是从报刊亭每月的杂志.<br>同辈的朋友中,有追喜欢偏少女热血系的,也有追偏儿童搞笑系的.<br>小学的时候只看搞笑系的,买了之后全班都会传着看.初中时觉得一个月追一本不满足,于是尝试了些少女流行系的.那时候看到的就是格跳老师在漫友上投稿的漫画短篇.<br>格跳老师那时候的画法就是颜色很出彩的,拟水彩画法.我记得那漫画不长,就三话.故事的情节记不清了,记得有些悲伤也有暖心,漫友中最喜欢的就是老师的短篇.<br>不过之后再次认识老师是高中后接触了网络,因为西尾的同人而认识的…真的……很惊喜().再度喜欢上同一个画手的惊喜感.</p>
<p>所以这次有幸能委托上老师画自己的东西真的……是实现了常年以来的梦想……</p>
<blockquote>
<p>格跳 <a href="https://www.pixiv.net/users/139113">pixiv</a></p>
</blockquote>
<br>

<img src="/blog/2020/12/11/P149/P149_2.jpeg" class="" width="300" height="300">

<p>相关图书馆编号:char44,char70.</p>
]]></content>
      <tags>
        <tag>oc</tag>
        <tag>TokyoTL</tag>
      </tags>
  </entry>
  <entry>
    <title>2020的年终总结</title>
    <url>/blog/2020/12/28/P152/</url>
    <content><![CDATA[<p>还是想保留这个良好传统.朋友们,又到写年终总结这个神圣时刻了.<br>因为博客搬家,博文整理,这次是(除了15年闲谈)真正的第五篇.年底反省人生也到第五次了.</p>
<span id="more"></span>

<p>这次有满多想要讨论的话题.毕竟2020真是个不同的一年.<br>不过按照传统先读一次去年的总结,哪些想法达成了,哪些愿望被抛弃了,想着这些开始记载吧.</p>
<br>
<br>
<br>

<h2 id="1"><a href="#1" class="headerlink" title="1"></a>1</h2><p>果然第一个话题是学业.<br>原本的打算是在计算数学的专业下同时修到组合和优化.但这个计划在考虑将来出路和修优化课时被重新考虑了.<br>姑且有把课程都考及格但,<br>我没有很好的思考未来.<br>这是最大的问题.</p>
<p>绕点远路说吧.<br>有想要做的事情.这原本应该是件好事,毕竟有一个方向比完全迷路会好.<br>但自己不相信可以在想要做的事情上得到认可,不相信可以做好.<br>也就是常见的「不肯不给自己留退路,于是徐徐诺诺,最后一事无成」.<br>以至于原本的指路方向变成「知道自己走的是反方向而痛苦」.<br>花了很大很大的力气说服自己就算做不好,也是可以完成.<br>只要活着就能继续捡起来做,<br>但只要活着就能感受到背离目标的痛苦.</p>
<p>自信是建筑在完成事情的成功经历之上的.<br>至少还有解答的方向.</p>
<p>今年没有全力去学,浮躁.年底的我已经无法想象年初还有参加hackathon.<br>退化很多,注意力也逐渐失控,这是一个非常糟糕的倾向.<br>的确环境也是影响的一个因素,在学校能看到不同路但同作伴的战友们.<br>但接下来的时间得想办法达成「不考虑环境也能静下心来钻研和负责」.<br>得捡回滑铁卢人在半夜的SLC写笔记的感觉.一个人在空无和白噪下,能伴随着逻辑思考获得安心.</p>
<br>
<br>
<br>

<h2 id="2"><a href="#2" class="headerlink" title="2"></a>2</h2><p>真诚.<br>当初博客搬家的时候以真诚为话题浅浅地写下了决心.回过头看原来去年就思考着.<br>这个比去年有进步一些,把sns社群清空,下决心减少使用时间.<br>在过程中也遇到了新的困惑.<br>真诚得和自己的内心单独交谈.也就是说这是有一个人才能做的事情.<br>一个人就会产生孤独感,真正的问题是内心还不够强大.<br>因为今年大半都是网课,对我这个受环境影响很大的人来说困难了太多.<br>我拥有的只有一间借来的房间和网络.<br>环境…safe zone(或者说精神老家)也很重要.<br>网络像海.无法决定海浪的方向,只有海潮会把人卷走.<br>所以我想离网络远点,又被孤独所吞噬.<br>不过这也是迟到得学会解决的问题之一,毕竟人永远是孤独的.</p>
<p>新信息对于大脑来说是甜点,社交软件的时间轴有那么大的吸引力,因为它永远是新的.<br>大脑渴望着甜点,现代人是否已经无法像几十年前那样过空又淡的生活了.<br>干脆放弃了克制甜点渴求,想着也要学习如何休息.<br>休息的时候就好好休息,最近是翻出了经典老动画来看.<br>因为太好看一不小心会沉迷,至少比以前会虚无的刷几个小时sns社群好些,但大脑的甜食上瘾还真是个头疼的问题.</p>
<br>
<br>
<br>

<h2 id="3"><a href="#3" class="headerlink" title="3"></a>3</h2><p>谈论到死亡的时候,这片大地会露出它真正的模样.生育也是,只是还没那么明显.</p>
<p>不记得在博客里有没说过我喜欢“可能性”.<br>花了很大的力气把周围的事物整理成自己理解的逻辑,也是想要脚踏实地,害怕浪费可能性.<br>所以当……我已经解答出来的问题却成为了绊脚石,还是会泄气.<br>我明白这个情况叫做“现实”.也就是因为外部观念和规矩,或自己的成本,被阻挠的情况.<br>于是我想学会说谎,这是一种保全自己,并应付外部的方式.<br>结果输在了成本和心.<br>是不想改变自己.<br>这也许算年轻的倔强吧.<br>但如果好不容易理解出来的逻辑被自己随便破坏,我的大厦就崩塌了.</p>
<p>我只能向着我的信仰发誓,只有这个是不想让步.</p>
<br>

<p>所以结合这三点,迷路和真诚和让步…我想到的解决方案.<br>将里约这个名字还回去.继续活动的话就以麻醉的名字.准备大约明年四月的时候还回去.</p>
<p>虽然听起来没有实质的变化(笑)但.</p>
<p>很久前的博文有记载过,里约是我oc的名字.<br>是先有老兔,之后我拿了他的名字在网络上开始活动.<br>再往前追溯的话,署名还是丹,我也有用丹的身份社交过,真是从头到尾都藏在oc身后的人(笑).<br>我还记得那时候住在会在绿化带中种菜的老式小区,在那熟悉的楼道里,在我两点一线的日常中,对「要拿最喜欢的oc名字来活动」这非日常的事而兴奋不已.</p>
<p>我觉得是时候结束努力讨好世界这件事了.<br>用着喜欢oc的名字,做着以为能更靠近一些他们的事,遇见了以为是同道的朋友,却只在讨好他人,骗自己这是在靠近oc.<br>既然无法做到以憧憬的身份达成憧憬的未来,我也不该用这个名字.<br>承认人的孤独吧,承认了之后才会靠近自由.</p>
<!-- 我带着oc的傲慢,oc的固执.这么下了决定-->
<!-- 去欺骗吧,欺骗世界,对自己真诚,让立场倒转. -->
<p>真是决定了场危险的赌注.</p>
<br>
<br>
<br>

<h2 id="4"><a href="#4" class="headerlink" title="4"></a>4</h2><p>那么在分析完了自己的乐色,问题与可能的解决思路之后,我们来记载一下实在的进步与退步吧.</p>
<p>最大的开心就是博客搬家,也就是刚刚提到的safe zone的建立.<br>最初没想到自己能建成,遇到了神秘的bug,感谢U君的帮助.<br>建成之后的快乐是持续且长久的.<br>我终于可以把自己的心落在一个地方了.不用担心人潮,也不用担心爆炸.<br>现在还在搭第二个safe zone,遇到了些困难,不知道能做到哪一步.</p>
<img src="/blog/2020/12/28/P152/P152.jpeg" class="" title="看我的github的嗑oc记录">

<p>其他小快乐也是有的.<br>收到返事和彩葱的邀请第一次参了本,跟我仰慕的kami们在同一个册子里.<br>树哥一开心一周完结掉了一篇文,我也能快速的摸个鱼给树哥快乐一下.<br>这两条是建立在「以前的营业」和「画图的熟练度提升」.<br>这两点现在还会不会继续做是个问题…哈哈.<br>不过达成过也满足了啦.</p>
<p>退步是…之前说过了.学习力…<br>或者更广泛一些是全面的动力.于人的谈话,决定开始一件事第一步的迈出,未知事情的查找.<br>假扮成他人去做吧.<br>oc人的怪习惯甚至捏了两个形象帮助自己入戏(没救了啊),想到假扮的主意其实对我还…有点帮助,很神奇.<br>两个形象是哪两个就不说了,说出来好蠢!(你知道啊.jpg)</p>
<br>
<br>
<br>

<h2 id="5"><a href="#5" class="headerlink" title="5"></a>5</h2><p>今年的总结还是以跟朋友的对话为结尾吧.</p>
<p>在写这篇文章的中途跟室友通了次电话.<br>一个人不跟他人沟通地住着真的非常会变得极端,解剖同时又逃避着自己,直到跟室友通了次话再次看到了名为安定的日常:世界也不会毁灭,晚上也会有可口的饭菜.<br>室友说跟我打赌,赌我这辈子的什么时候会去读研究生.<br>我说好啊,本科重头再来倒还有可能,自己实在不是研究的料.<br>他在计划着肚子里的坏水想赌注呢,我说我赌赢了可以随便找一天你可以把所有事放下的日子陪我出去玩.<br>他就不好意思再倒坏水了,说那我赢了你练习给我烤蛋糕.<br>好神奇啊,明明看上去挺寻常的赌注,为什么现在记载的时候觉得遥不可及.<br>阻拦着的是疫情吗,还是学业,还是我开始不相信自己能成为想成为的大人这件事.</p>
<p>那就这么下注于未来也不坏吧.</p>
]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
        <tag>年终总结</tag>
        <tag>Thank you Mr.goose</tag>
      </tags>
  </entry>
  <entry>
    <title>宝箱</title>
    <url>/blog/2020/12/23/P151/</url>
    <content><![CDATA[<img src="/blog/2020/12/23/P151/P151_1.jpeg" class="">
<p>微积分及格了,在这里好日子里收录些别人给我的oc们!!(递上感恩之心)</p>
<span id="more"></span>

<p>很贪心,整理了旧图收录了不少.都想放在博客里面给大家看.<br>我滴快乐,及格,oc和偶尔的炸鸡,朴实而简单.</p>
<img src="/blog/2020/12/23/P151/P151_3.GIF" class="" width="300" height="300">
<blockquote>
<p>brutal -&gt; <a href="https://twitter.com/Brutal588">twi</a></p>
</blockquote>
<p>再次感谢brutal,真的很喜欢他给我画的oc!<br>很可爱很灵动,独特的魅力.大声说喜欢一万遍.</p>
<br>
<br>
<br>

<h2 id="笑顔"><a href="#笑顔" class="headerlink" title="笑顔"></a>笑顔</h2><img src="/blog/2020/12/23/P151/P151_2.jpeg" class="">
<img src="/blog/2020/12/23/P151/psc.jpeg" class="" width="400" height="366">
<blockquote>
<p>豆腐 -&gt; <a href="https://weibo.com/u/6010722754?topnav=1&wvr=6&topsug=1&ssl_rnd=1607921208.2343&is_all=1">weibo</a></p>
</blockquote>
<p>也谢谢豆腐跟我画交换的画!<br>一直想rua豆腐很久了(靠),豆腐的人物很扎实很喜欢,人也很有趣!</p>
<br>
<br>
<br>

<h2 id="玫瑰"><a href="#玫瑰" class="headerlink" title="玫瑰"></a>玫瑰</h2><img src="/blog/2020/12/23/P151/P151_4.png" class="" width="400" height="490">
<img src="/blog/2020/12/23/P151/P151_5.png" class="" width="300" height="300">
<blockquote>
<p>owzcean -&gt; <a href="https://www.instagram.com/owzcean/">ig</a></p>
</blockquote>
<p>鼓起勇气拜托了owzcean画哥哥…成年男子带美瞳的感觉…很,很有趣噗嗤(天啊这个人又在欺负哥哥).</p>
<br>
<br>
<br>


<h2 id="晴天的风"><a href="#晴天的风" class="headerlink" title="晴天的风"></a>晴天的风</h2><img src="/blog/2020/12/23/P151/P162_3.jpeg" class="">
<p>是高架老师画给我的麻醉醉!!!</p>
<blockquote>
<p>高架 <a href="https://twitter.com/kouka_oekaki">twi</a></p>
</blockquote>
<p>高架老师画图非常的认真,看着高架桑画图也能感受到动力.<br>对颜色和质感也很有自己的理解,还很会画萝莉!!!(…)<br>是非常佩服的画师……</p>
<br>
<br>
<br>

<h2 id="ada羊羊"><a href="#ada羊羊" class="headerlink" title="ada羊羊"></a>ada羊羊</h2><img src="/blog/2020/12/23/P151/P162_1.jpeg" class="">
<p>谢谢线线画给我的Ada羊羊!!!超适合超喜欢………………<br>线线画小动物好厉害啊!!<br>Ada给人的感觉软软的,跟羊羊毛绒绒的感觉很像…</p>
<blockquote>
<p>二线 <a href="https://twitter.com/shany1x">twi</a></p>
</blockquote>
<br>
<br>
<br>

<h2 id="天使"><a href="#天使" class="headerlink" title="天使"></a>天使</h2><img src="/blog/2020/12/23/P151/P151_8.png" class="">
<blockquote>
<p>湿 -&gt; <a href="https://tieenlysvaria.lofter.com/">lof</a></p>
</blockquote>
<p>这位仔仔没跟大家介绍过…因为还没实装!是一位小艺人.<br>谢谢湿老师画了画她…没想过还没实装就获得同人T T.</p>
<br>
<br>
<br>


<h2 id="小春日的生日"><a href="#小春日的生日" class="headerlink" title="小春日的生日"></a>小春日的生日</h2><p>委托了星乃桑给小春日生日画一张图…!!<br>很久没见到她了…很可爱,很开心.</p>
<img src="/blog/2020/12/23/P151/P171.png" class="">

<blockquote>
<p>星乃すぐはる <a href="https://twitter.com/suguharu_86">twi</a></p>
</blockquote>
<p>生日有被归档的是28位,每个月都有oc生日.<br>虽然今年没法随时给自己买小零食祝贺,但偶尔查看一下发现有oc生日,像是老朋友遇到了好事,一整天都变得特别了起来呢…</p>
<br>
<br>
<br>

<h2 id="涂鸦酱和油漆"><a href="#涂鸦酱和油漆" class="headerlink" title="涂鸦酱和油漆"></a>涂鸦酱和油漆</h2><img src="/blog/2020/12/23/P151/P147_1.JPG" class="">
<img src="/blog/2020/12/23/P151/P147_2.JPG" class="">
<img src="/blog/2020/12/23/P151/P147_3.JPG" class="" width="400" height="415">
<img src="/blog/2020/12/23/P151/P147_4.JPG" class="" width="400" height="415">

<p>宗杞的画风好可爱好喜欢………………一定要收录一下!!!<br>分别是涂鸦作案家,丹,图书管理员酱.</p>
<blockquote>
<p>宗杞 -&gt; <a href="https://alizoki.lofter.com/">lof</a></p>
</blockquote>
<br>
<br>
<br>

<h2 id="彩色胶带"><a href="#彩色胶带" class="headerlink" title="彩色胶带"></a>彩色胶带</h2><p>因为菌的画风很可爱很有意思就找他画了很多……</p>
<img src="/blog/2020/12/23/P151/P148_1.jpeg" class="" width="440" height="500">
<img src="/blog/2020/12/23/P151/P148_2.jpeg" class="" width="400" height="505">
<img src="/blog/2020/12/23/P151/P148_4.jpeg" class="" width="400" height="520">
<img src="/blog/2020/12/23/P151/P148_8.JPG" class="" width="400" height="520">
<img src="/blog/2020/12/23/P151/P148_3.JPG" class="" width="400" height="500">
<img src="/blog/2020/12/23/P151/P148_5.jpeg" class="" width="400" height="540">
<img src="/blog/2020/12/23/P151/P148_6.jpeg" class="" width="400" height="545">
<img src="/blog/2020/12/23/P151/P148_7.jpeg" class="" width="250" height="315">

<p>菌有给我寄原稿…!!胶带画实物看上去甜甜的,去dollarama买了画框摆起来,效果很好.</p>
<blockquote>
<p>菌 -&gt; <a href="https://www.instagram.com/matsu_zake/">ig</a></p>
</blockquote>
<br>
<br>
<br>

<p>相关图书馆编号:<br>char01,char03,char05,char10,char30,char31,char44,char45,char70,char72,char85,char99.</p>
]]></content>
      <categories>
        <category>朋友给的画</category>
      </categories>
      <tags>
        <tag>oc</tag>
        <tag>在日落之前</tag>
        <tag>狼与兔</tag>
        <tag>有猫的书店</tag>
        <tag>废弃工厂</tag>
        <tag>TokyoTL</tag>
        <tag>湖底图书馆</tag>
      </tags>
  </entry>
  <entry>
    <title>写真</title>
    <url>/blog/2021/01/01/P156/</url>
    <content><![CDATA[<img src="/blog/2021/01/01/P156/P156_1.png" class="">
<img src="/blog/2021/01/01/P156/P156_2.png" class="">

<p><strong>193f2917fb45eceb3721c025fbf8f410929376eff3459924755d7a615cda53dd</strong></p>
<span id="more"></span>

<br>
<br>
<br>
<br>
<br>

<p>说起来我提前给U君看这两张,震撼到我两次.</p>
<blockquote>
<p>U:诶颜色不错.<br>U:这是你oc吗？</p>
</blockquote>
<p><strong>&gt;&gt;&gt;&gt;&gt;&gt;这是你oc吗&lt;&lt;&lt;&lt;&lt;&lt;&lt;</strong></p>
<p>U君也说余芝和松木的区别越来越微妙了,我思考了三个小时憋出了这个.</p>
<img src="/blog/2021/01/01/P156/P156_3.png" class="" title="明明写了眼睛往上一点却没怎么往上(锤地)">
<p>作弊了,没有画马尾时期的松木,也好难!!<br>是谁!!连自己oc的大头都不会画!!!<br>原本想早日把图书馆整理到可以开门的程度,现在又考虑自己做更详细的oc笔记后再开门.<br>特别是序号是10的余芝老师!!<strong>余老师!!</strong><br><strong>图书馆的未来就靠你了!!(何)</strong></p>
<br>
<br>
<br>

<p>相关图书馆编号:char10,char44,char70.</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>oc</tag>
        <tag>卡尔马</tag>
        <tag>TokyoTL</tag>
      </tags>
  </entry>
  <entry>
    <title>关于颜色的笔记</title>
    <url>/blog/2020/12/18/P154/</url>
    <content><![CDATA[<p>真是打了个大胆的tag…</p>
<span id="more"></span>

<p>看了下文件,六月底的时候厌烦了只在画小人的自己.整理出喜欢的照片模仿着画了几张.<br>不过为期一周不到的色彩练习因为数学死线赶不上宣告停止.</p>
<p>下半年有空的时间因为想给oc站添砖加瓦,一直在画立绘和chibi.<br>形准一直是我苦手的,进度明明还差很多,又画烦了(看啊,这个人的专业力实在太低了),于是画了些以构图颜色为主的小涂鸦解压,尝试起来.</p>
<p>想攻克一直困恼着自己的难关,就好好写个笔记.把颜色的练习与心得都记下来.<br>先来个一百张,如果这样过了还是没有任何起色,那就不多想干脆当个快乐画手吧.</p>
<p>那么.</p>
<h2 id="2020-June"><a href="#2020-June" class="headerlink" title="2020-June"></a>2020-June</h2><p>因为六月底的第一批颜色练习有段时间了,当时想的东西大部分遗忘了.<br>(所以要好好记笔记啊.jpg)</p>
<img src="/blog/2020/12/18/P154/P154_1.jpeg" class="">
<p>第一张我记得那个灯光是运气好试出来的.<br>先白光再叠了个橙色上去.<br>那种雾气产生的厚度还没学会.</p>
<img src="/blog/2020/12/18/P154/P154_2.png" class="">
<p>第二张是不会画云.<br>影子倒是好画,我一般用很多选区工具.选区工具做影子还可以,做植物就有点尴尬.这张在上面再用笔刷加了点杂质.</p>
<img src="/blog/2020/12/18/P154/P154_3.png" class="">
<p>这张是不会画植物.植物尝试了两次,用了笔刷效果稍微好点但…一直用不好笔刷.</p>
<img src="/blog/2020/12/18/P154/P154_4.png" class="">
<p>这张让我记得黑色打底很好用…<br>灰色做地面也蛮好用的…最近喜欢上暖灰.但植物的颜色不简单.</p>
<br>
<br>
<br>

<h2 id="2020-Dec"><a href="#2020-Dec" class="headerlink" title="2020-Dec"></a>2020-Dec</h2><img src="/blog/2020/12/18/P154/P154_7.jpeg" class="">
<p>这次蛋糕参考了之前所做的黑色打光练习.<br>在黄色的光亮上再加一个红色的层来过滤出丰富度.<br>小火光是红底加白,再用黄色叠一个色.</p>
<br>
<br>

<img src="/blog/2020/12/18/P154/P154_5.png" class="">
<p>尝试画海浪.<br>笔刷姑且还能用,虽然也想找个更好的笔刷.<br>先是确定了沙滩和海的颜色,再中间过渡一下,再上海浪白.<br>海浪白下面加一点点阴影,混着脏蓝和脏紫一起.<br>下次最后再考虑一下这个阴影的处理能不能更立体点.<br>这次是没注意好整张图的明与暗,贪心了,后景也想亮前景也想亮,所以尴尬.</p>
<br>
<br>

<img src="/blog/2020/12/18/P154/P154_6.png" class="">
<p>尝试画植物.<br>植物比海浪难.也是没想好怎么处理叶子.<br>这次备注的植物笔刷在给树枝加杂质的效果还能用.用来画背景的叶子效果不喜欢.<br>在小人身上的光斑也画死了.下次可以试试先打screen或者overlay叠一层,再用随缘色感扣一下.<br>以及植物下次想试试把它想像成不明团状物体,先画出明暗再加笔刷纹理.</p>
<br>
<br>

<img src="/blog/2020/12/18/P154/P154_8.png" class="">
<p>是营业用颜色笔记…感觉稍微熟练点了.但还没把所有的颜色都完善过一次.<br>非营业用时特效和叠加图层用很多,然后再加点杂色(指变灰/加饱和/加相反色)这样加重调味料.</p>
<br>
<br>

<img src="/blog/2020/12/18/P154/P154_9.png" class="">
<p>这个笔刷糊大体的叶子感觉还不错…!!可以再试试.<br>笔刷图形不错,调了一下旋转的数据.<br>其他的话发现灰灰的蓝和粉和绿还蛮好看的.<br>不过棕灰的衣服差点被我画成垃圾袋…对颜色的计算和理解还得多多练习啊……</p>
]]></content>
      <categories>
        <category>绘图笔记</category>
      </categories>
      <tags>
        <tag>とりあえず絵を百枚描きましょう</tag>
      </tags>
  </entry>
  <entry>
    <title>赛博圣诞🎄</title>
    <url>/blog/2020/12/23/P155/</url>
    <content><![CDATA[<img src="/blog/2020/12/23/P155/P155_1.png" class="">
<p>感谢丹友情出演《郑重的一人圣诞》.</p>
<span id="more"></span>
<p>是谁,画不出图在改素材玩,是我.</p>
<blockquote>
<p>(-&gt;<a href="https://www.irasutoya.com/">素材的地址</a>).</p>
</blockquote>
<p>按照约定想拍摄圣诞夜景.可惜今年没法去镇上,天又冷,没拍到华丽的东西.</p>
<video width="500" controls>
  <source src="P155_5.mp4" type="video/mp4">
  Your browser does not support HTML video.
</video>
这个是最好看的.
第一次见可动的彩灯,有魔法的味道,还有见着雪花样式的灯光.不过我更中意这个小碎点.

<p>我绕着我家的街简单走了一圈,每家都有各式的特别彩灯.<br>有的一片刺眼绿,有的一片寒冷白,还有地狱红的拐杖灯.如果不是12月,还以为再过了次万圣节,可有意思了.</p>
<img src="/blog/2020/12/23/P155/P155_3.png" class="">
<p>给大家看还不错的神秘圣诞树.<br>华丽的灯加上疲惫的缠绕.有种认真的开头又半道放弃的韵味.</p>
<img src="/blog/2020/12/23/P155/P155_4.png" class="">
<p>这是认真的灯加上认真的缠绕.<br>这户是我们家邻居,每年都很用力地过节.<br>灯的气势很足,再加上铺满灯的大树,过出了方圆十里内最亮的城堡感,他家的小孩子一定很幸福.<br>我们也很幸福,我们在后院赏着他们家的灯过圣诞.</p>
<p>抱歉素材没有很多.有机会想去城市里也过一次.</p>
<img src="/blog/2020/12/23/P155/P155_2.png" class="" width="280" height="340">
<p>各位节日快乐快乐.</p>
<br>
<br>
<br>

<p>相关图书馆编号:char02,char03.</p>
]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
        <tag>家庭组</tag>
      </tags>
  </entry>
  <entry>
    <title>小狗贴贴</title>
    <url>/blog/2021/01/01/P157/</url>
    <content><![CDATA[<img src="/blog/2021/01/01/P157/P157.png" class="">
<blockquote>
<p>brutal -&gt; <a href="https://twitter.com/Brutal588">twi</a></p>
</blockquote>
<p>没想到会收到brutal桑给的兄妹生贺…!!!!感谢!!!!啊!!!!我来放博客里给大家看(???)</p>
<span id="more"></span>

<img src="/blog/2021/01/01/P157/P157_1.GIF" class="" width="300" height="300">

<p>还有还有brutal做的无限老兔T恤…!!<br>原来想上色的,但一直还没腾出时间来……<br>就先放放,想早日给大家看brutal桑画的可爱的画().</p>
<br>
<br>
<br>

<p>相关图书馆编号:char44,char70.</p>
]]></content>
      <categories>
        <category>朋友给的画</category>
      </categories>
      <tags>
        <tag>oc</tag>
        <tag>TokyoTL</tag>
      </tags>
  </entry>
  <entry>
    <title>2015的年终总结</title>
    <url>/blog/2015/12/31/P158/</url>
    <content><![CDATA[<blockquote>
<p>15年是生活作出重大变化的一年.意外地发现那年也有在年底感叹人生.<br>不出意外真的是很讨人厌小鬼的口气.<br>但姑且有孕育独立的勇气.<br>既然你都说了自己扭曲,那就为了不知是否会来到的哪天的后悔而上传这份记录吧.</p>
</blockquote>
<span id="more"></span>

<img src="/blog/2015/12/31/P158/P158_1.jpeg" class="">
<img src="/blog/2015/12/31/P158/P158_2.jpeg" class="">
<img src="/blog/2015/12/31/P158/P158_3.jpeg" class="">
<img src="/blog/2015/12/31/P158/P158_4.jpeg" class="">
]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
        <tag>年终总结</tag>
      </tags>
  </entry>
  <entry>
    <title>蒙受好意</title>
    <url>/blog/2021/10/06/P161/</url>
    <content><![CDATA[<img src="/blog/2021/10/06/P161/P161.png" class="" width="300" height="205">
<span id="more"></span>
<br>
<br>
<img src="/blog/2021/10/06/P161/P161_2.png" class="">
<img src="/blog/2021/10/06/P161/P161_1.png" class="">
加拿大的秋天总是短暂.

<p>还活着.</p>
<p>童年时缺失的部分,会得用很多时间一点一点补回来.<br>上周末去拜访朋友,朋友热情地带着我帮她室友遛狗.瞥见朋友生活的一角,一边赏秋一边思考生活为何物.</p>
<p>这一周体会到我打交道的人”没有那么坏也没那么友好”.<br>单说挺废话的.<br>没必要故意害人,所以人没那么坏.也不会为了他人牺牲自己很多,所以人没那么好.<br>也算是换位思考.比起”对于自己来说好还是坏”,明白对方按自己的角度来思考利害就能理解.</p>
<br>

<p>这周原本准备搬家,第一站选了滑铁卢,没想到下车时产生严重的滑铁卢ptsd.<br>看着校园和在读的学生,涌起四年来学业的苦涩,同时告诫自己不再年轻.<br>最后暂时放弃.</p>
<p>不过申请的打工的面试还是去了.<br>这是我人生第一次工作面试,废柴如我连打工都没做过.<br>面试学到不少东西.公司有相当成熟且严谨的流程和规矩,在填写表格和理解内容上HR姐姐帮了我不少.<br>遇到无法解决的事就该找相应的人员…学生时期会很在意是否能自己解决锻炼能力,但作为一个公司的运作,自己不能处理的事也是公司的一部分,所以上报上级也是重要的事.</p>
<p>总之新生活计划得再来一次.这次过于匆忙所以没有成功,计划得再努力一些才行.</p>
]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>青春疼痛悖论</title>
    <url>/blog/2021/07/02/P159/</url>
    <content><![CDATA[<p>（ﾉ´д｀）</p>
<span id="more"></span>

<img src="/blog/2021/07/02/P159/P159.jpg" class="">

<br>

<p>认知是单向前进的.</p>
<p>偶尔觉得在年少时感受到的疼痛也是如此.</p>
<p>因为没有牢靠的内心,所以会容易受伤.<br>但只有跨过了疼痛,才能获得牢靠的内心.</p>
<p>看一些他人的疼痛事物才会意识到,<br>啊,我已经拥有了对于那件事物能不会再受伤的自我保护理论了.<br>但在他人的情况再来一次,自己也不一定能做得更好.</p>
<p>这也是没有办法的事,也只能一直受伤.</p>
]]></content>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>关于R语言的笔记</title>
    <url>/blog/2021/01/13/P164/</url>
    <content><![CDATA[<p>先感谢stat341老师提供的R语言从入门到入土的教材.<br>这里比较屑,把tutorial的笔记直接复制上来.<br>之后在其他的stat课也会写R,毕竟stat不分家.希望都能整理起来.</p>
<span id="more"></span>
<p>那么我们就开始吧.</p>
<br>
<br>
<br>

<h2 id="Jan-13-Tutorial-1"><a href="#Jan-13-Tutorial-1" class="headerlink" title="Jan-13 Tutorial 1"></a>Jan-13 Tutorial 1</h2><p>R的运行跟sql有点像,可以选中部分代码再run.<br>Mac 快捷键是command + return; Win 是 ctrl + enter.</p>
<p>查看某个command,输入?command可以查看documentation.</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment">########################################</span></span><br><span class="line"><span class="comment">### STAT 341: Tutorial 1 -- R Basics ###</span></span><br><span class="line"><span class="comment">########################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#########################</span></span><br><span class="line"><span class="comment">### R as a Calculator ###</span></span><br><span class="line"><span class="comment">#########################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Addition</span></span><br><span class="line"><span class="number">2</span>+<span class="number">8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Subtraction</span></span><br><span class="line"><span class="number">2</span>-<span class="number">8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Multiplication</span></span><br><span class="line"><span class="number">2</span>*<span class="number">8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Division</span></span><br><span class="line"><span class="number">2</span>/<span class="number">8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Remainder / Modulus</span></span><br><span class="line"><span class="number">8</span> %% <span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Exponents</span></span><br><span class="line"><span class="number">2</span>^<span class="number">8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Square Root</span></span><br><span class="line"><span class="built_in">sqrt</span>(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Absolute Value</span></span><br><span class="line"><span class="built_in">abs</span>(-<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Exponential Function</span></span><br><span class="line"><span class="built_in">exp</span>(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Natural Logarithm</span></span><br><span class="line"><span class="built_in">log</span>(<span class="number">8</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Logarithm with any base</span></span><br><span class="line"><span class="built_in">log</span>(<span class="number">8</span>, base = <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Trigonometric functions</span></span><br><span class="line"><span class="built_in">sin</span>(<span class="built_in">pi</span>/<span class="number">2</span>)</span><br><span class="line"><span class="built_in">cos</span>(<span class="built_in">pi</span>)</span><br><span class="line"><span class="built_in">tan</span>(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># BEDMAS</span></span><br><span class="line"><span class="built_in">exp</span>((-(<span class="number">2</span>-<span class="number">5</span>)^<span class="number">2</span>)/(<span class="number">2</span>*<span class="number">3</span>)) / <span class="built_in">sqrt</span>(<span class="number">2</span>*<span class="built_in">pi</span>*<span class="number">3</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<br>
<br>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment">###########################</span></span><br><span class="line"><span class="comment">### Variable Assignment ###</span></span><br><span class="line"><span class="comment">###########################</span></span><br><span class="line">a &lt;- 2</span><br><span class="line">b &lt;- 8</span><br><span class="line">a+b</span><br><span class="line"></span><br><span class="line">a = <span class="number">2</span></span><br><span class="line">b = <span class="number">8</span></span><br><span class="line">a+b</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<br>
<br>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment">###############</span></span><br><span class="line"><span class="comment">### Vectors ###</span></span><br><span class="line"><span class="comment">###############</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Create a vector of numbers</span></span><br><span class="line">v1 &lt;- <span class="built_in">c</span>(<span class="number">1</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">9</span>, <span class="number">8</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create a vector of strings</span></span><br><span class="line">v2 &lt;- <span class="built_in">c</span>(<span class="string">&quot;STAT341&quot;</span>, <span class="string">&quot;computational statistics&quot;</span>, <span class="string">&quot;&amp;&quot;</span>, <span class="string">&quot;data analysis&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Find the length of a vector</span></span><br><span class="line"><span class="built_in">length</span>(v1)</span><br><span class="line"><span class="built_in">length</span>(v2)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create a vector that repeats the same element n times</span></span><br><span class="line"><span class="built_in">rep</span>(x = <span class="number">3</span>, times = <span class="number">7</span>)</span><br><span class="line"><span class="built_in">rep</span>(x = <span class="string">&quot;cat&quot;</span>, times = <span class="number">4</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create a vector that is an integer sequence</span></span><br><span class="line"><span class="number">1</span>:<span class="number">10</span></span><br><span class="line"><span class="number">22</span>:<span class="number">27</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Create a vector that is an arbitrary sequence</span></span><br><span class="line"><span class="comment"># 从 from 开始到 to, by是增加的值.</span></span><br><span class="line">seq(from = <span class="number">0</span>, to = <span class="number">1</span>, by = <span class="number">0.1</span>)</span><br><span class="line">seq(from = <span class="number">0</span>, to = <span class="number">1</span>, length.out = <span class="number">15</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>关于vector,跟所熟悉的其他语言的array不一样.<br>在其他语言中array第一个数据index是0,R在1.</p>
<br>
<br>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Indexing</span></span><br><span class="line">v1[<span class="number">1</span>]</span><br><span class="line">v1[<span class="number">2</span>]</span><br><span class="line">v1[<span class="built_in">length</span>(v1)]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Adding an element to a vector</span></span><br><span class="line"><span class="built_in">c</span>(v1, <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Removing an element</span></span><br><span class="line">v1[-<span class="number">3</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Sort a vector</span></span><br><span class="line">sort(v1)</span><br><span class="line">sort(v1, decreasing = <span class="literal">TRUE</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Scalar arithmetic with a vector</span></span><br><span class="line">v1 + <span class="number">3</span></span><br><span class="line">v1 - <span class="number">3</span></span><br><span class="line">v1 * <span class="number">3</span></span><br><span class="line">v1 / <span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Elementwise vector arithmetic</span></span><br><span class="line">v3 &lt;- 1:<span class="number">6</span></span><br><span class="line">v1 + v3</span><br><span class="line">v1 - v3</span><br><span class="line">v1 * v3</span><br><span class="line">v1 / v3</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<br>
<br>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment">####################################</span></span><br><span class="line"><span class="comment">### Numeric summaries of vectors ###</span></span><br><span class="line"><span class="comment">####################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># rnorm : random draw from normal distribution</span></span><br><span class="line">x &lt;- rnorm(n = <span class="number">100</span>, mean = <span class="number">0</span>, sd = <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Mean(should be close to 0)</span></span><br><span class="line">mean(x)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Variance(should be close to 1)</span></span><br><span class="line">var(x)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Standard Deviation(should be close to 1)</span></span><br><span class="line">sd(x)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Minimum</span></span><br><span class="line"><span class="built_in">min</span>(x)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Maximum</span></span><br><span class="line"><span class="built_in">max</span>(x)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Range</span></span><br><span class="line"><span class="built_in">range</span>(x)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Median</span></span><br><span class="line">median(x)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Arbitrary Quantiles</span></span><br><span class="line">quantile(x, probs = <span class="number">0.5</span>)</span><br><span class="line">quantile(x, probs = <span class="built_in">c</span>(<span class="number">0.05</span>, <span class="number">0.25</span>, <span class="number">0.75</span>, <span class="number">0.95</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># Rounding</span></span><br><span class="line"><span class="built_in">round</span>(x, digits = <span class="number">4</span>)</span><br><span class="line"><span class="built_in">round</span>(x, digits = <span class="number">2</span>)</span><br><span class="line"><span class="built_in">round</span>(x, digits = <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># General Summary</span></span><br><span class="line">summary(x)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>summary是一个很牛逼的function.根据输入的数据不同,output也会不同.</p>
<br>
<br>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment">################</span></span><br><span class="line"><span class="comment">### Matrices ###</span></span><br><span class="line"><span class="comment">################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Create a matrix</span></span><br><span class="line">M1 &lt;- matrix(data = v1, nrow = <span class="number">2</span>, ncol = <span class="number">3</span>, byrow = <span class="literal">TRUE</span>)</span><br><span class="line">M1</span><br><span class="line">M2 &lt;- matrix(data = v1, nrow = <span class="number">2</span>, ncol = <span class="number">3</span>, byrow = <span class="literal">FALSE</span>)</span><br><span class="line">M2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这里是将v1的数据作row或者column组成matrix.Default is by column.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Transpose a matrix</span></span><br><span class="line">t(M1)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Diagonal of a matrix</span></span><br><span class="line">A &lt;- matrix(data = rpois(n = <span class="number">9</span>, lambda = <span class="number">10</span>), nrow = <span class="number">3</span>, ncol = <span class="number">3</span>)</span><br><span class="line">A</span><br><span class="line">diag(A)</span><br><span class="line"></span><br><span class="line"><span class="comment"># rpois: random draw from poisson distribution.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Determinant of a matrix</span></span><br><span class="line">det(A)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Inverse of a matrix</span></span><br><span class="line">solve(A)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Matrix multiplication</span></span><br><span class="line">A %*% solve(A)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create an identity  matrix</span></span><br><span class="line">diag(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Scalar arithmetic with a matrix</span></span><br><span class="line">A+<span class="number">2</span></span><br><span class="line">A-<span class="number">2</span></span><br><span class="line">A*<span class="number">2</span></span><br><span class="line">A/<span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Elementwise Matrix Arithmetic</span></span><br><span class="line">B &lt;- matrix(data = <span class="number">1</span>:<span class="number">9</span>, nrow = <span class="number">3</span>, ncol = <span class="number">3</span>)</span><br><span class="line">B</span><br><span class="line">A+B</span><br><span class="line">A-B</span><br><span class="line">A*B</span><br><span class="line">A/B</span><br><span class="line"></span><br><span class="line"><span class="comment"># Indexing</span></span><br><span class="line">A[<span class="number">3</span>,<span class="number">2</span>]</span><br><span class="line">A[<span class="built_in">c</span>(<span class="number">1</span>,<span class="number">3</span>), <span class="built_in">c</span>(<span class="number">1</span>,<span class="number">3</span>)] <span class="comment">### 这个可以截取 row 1&amp;3 和 column 1&amp;3.</span></span><br><span class="line">A[<span class="number">1</span>,] <span class="comment">### return first row.</span></span><br><span class="line">A[,<span class="number">2</span>] <span class="comment">### return second column.</span></span><br><span class="line"></span><br><span class="line">A_1 &lt;- rbind(a,b) <span class="comment"># bind a and b as row vectors</span></span><br><span class="line"></span><br><span class="line">A_2 &lt;- cbind(a,b) <span class="comment"># bind a and b as column vectors</span></span><br></pre></td></tr></table></figure>
<p>%*%<br><br><br><br></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment">#######################</span></span><br><span class="line"><span class="comment">### Simple Logicals ###</span></span><br><span class="line"><span class="comment">#######################</span></span><br><span class="line"><span class="number">2</span> &gt; <span class="number">3</span></span><br><span class="line"><span class="number">2</span> &gt;= <span class="number">3</span></span><br><span class="line"><span class="number">2</span> &lt; <span class="number">3</span></span><br><span class="line"><span class="number">2</span> &lt;= <span class="number">3</span></span><br><span class="line"><span class="number">2</span> == <span class="number">3</span></span><br><span class="line"><span class="number">2</span> != <span class="number">3</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<br>
<br>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment">###########################</span></span><br><span class="line"><span class="comment">### Logicals and Vectors###</span></span><br><span class="line"><span class="comment">###########################</span></span><br><span class="line">v1 &gt; <span class="number">3</span></span><br><span class="line">v1 == <span class="number">5</span></span><br><span class="line">v1 &gt; <span class="number">3</span> | v1 &lt;= <span class="number">1</span></span><br><span class="line">v1 &gt; <span class="number">3</span> &amp; v1 &lt;= <span class="number">1</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<br>
<br>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment">########################</span></span><br><span class="line"><span class="comment">### Logical Indexing ###</span></span><br><span class="line"><span class="comment">########################</span></span><br><span class="line"></span><br><span class="line">which(v1 == <span class="number">5</span>)</span><br><span class="line">which(v1 == <span class="built_in">min</span>(v1))</span><br><span class="line">which(v1 == <span class="built_in">max</span>(v1))</span><br><span class="line">v1[which(v1 %% <span class="number">2</span> == <span class="number">0</span>)]</span><br><span class="line">v1[which(v1 %% <span class="number">2</span> != <span class="number">0</span>)]</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<br>
<br>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment">#####################</span></span><br><span class="line"><span class="comment">### IF Statements ###</span></span><br><span class="line"><span class="comment">#####################</span></span><br><span class="line"></span><br><span class="line">a &lt;- 6</span><br><span class="line"><span class="keyword">if</span>(a == <span class="number">5</span>)&#123;</span><br><span class="line">  print(<span class="string">&quot;a is equal to 5&quot;</span>)</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">  print(<span class="string">&quot;a does not equal 5&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">b &lt;- 3</span><br><span class="line"><span class="keyword">if</span>(b == <span class="number">5</span>)&#123;</span><br><span class="line">  print(<span class="string">&quot;b is equal to 5&quot;</span>)</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(b &gt; <span class="number">5</span>)&#123;</span><br><span class="line">  print(<span class="string">&quot;b is greater than 5&quot;</span>)</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(b &lt; <span class="number">5</span>)&#123;</span><br><span class="line">  print(<span class="string">&quot;b is less than 5&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<br>
<br>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment">#################</span></span><br><span class="line"><span class="comment">### FOR Loops ###</span></span><br><span class="line"><span class="comment">#################</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i <span class="keyword">in</span> <span class="number">1</span>:<span class="number">10</span>)&#123;</span><br><span class="line">  print(i)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i <span class="keyword">in</span> v1)&#123;</span><br><span class="line">  print(i)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i <span class="keyword">in</span> v2)&#123;</span><br><span class="line">  print(i)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i <span class="keyword">in</span> <span class="number">1</span>:<span class="number">3</span>)&#123;</span><br><span class="line">  <span class="keyword">for</span>(j <span class="keyword">in</span> <span class="number">1</span>:<span class="number">5</span>)&#123;</span><br><span class="line">    print(paste(<span class="string">&quot;(&quot;</span>, i, <span class="string">&quot;,&quot;</span>, j, <span class="string">&quot;)&quot;</span>, sep = <span class="string">&quot;&quot;</span>))</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<br>
<br>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment">#################################</span></span><br><span class="line"><span class="comment">### Probability Distributions ###</span></span><br><span class="line"><span class="comment">#################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The binomial distribution</span></span><br><span class="line">dbinom(x = <span class="number">5</span>, size = <span class="number">20</span>, prob = <span class="number">0.3</span>) <span class="comment">### d: pdf</span></span><br><span class="line">pbinom(q = <span class="number">5</span>, size = <span class="number">20</span>, prob = <span class="number">0.3</span>) <span class="comment">### p: cdf</span></span><br><span class="line">qbinom(p = <span class="number">0.5</span>, size = <span class="number">20</span>, prob = <span class="number">0.3</span>) <span class="comment">### q: quantile</span></span><br><span class="line">rbinom(n = <span class="number">10</span>, size = <span class="number">20</span>, prob = <span class="number">0.3</span>) <span class="comment">### r: generate random function</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The Poisson distribution</span></span><br><span class="line">dpois(x = <span class="number">4</span>, lambda = <span class="number">10</span>)</span><br><span class="line">ppois(q = <span class="number">4</span>, lambda = <span class="number">10</span>)</span><br><span class="line">qpois(p = <span class="number">0.5</span>, lambda = <span class="number">10</span>)</span><br><span class="line">rpois(n = <span class="number">10</span>, lambda = <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># The normal distribution</span></span><br><span class="line">plot(x = seq(-<span class="number">3</span>, <span class="number">3</span>, <span class="number">0.01</span>), y = dnorm(x = seq(-<span class="number">3</span>, <span class="number">3</span>, <span class="number">0.01</span>), mean = <span class="number">0</span>, sd = <span class="number">1</span>), type = <span class="string">&quot;l&quot;</span>, xlab = <span class="string">&quot;&quot;</span>, ylab = <span class="string">&quot;&quot;</span>, main = <span class="string">&quot;Standard Normal Distribution&quot;</span>, col = <span class="string">&quot;darkred&quot;</span>, lwd = <span class="number">2</span>)</span><br><span class="line">pnorm(q = <span class="number">1.96</span>, mean = <span class="number">0</span>, sd = <span class="number">1</span>)</span><br><span class="line">qnorm(p = <span class="number">0.975</span>, mean = <span class="number">0</span>, sd = <span class="number">1</span>)</span><br><span class="line">rnorm(n = <span class="number">10</span>, mean = <span class="number">0</span>, sd = <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">z &lt;- rnorm(<span class="number">1</span>,<span class="number">2</span>,<span class="number">0.25</span>) <span class="comment"># generate a normally-distributed r.v. with mean 2, sd 0.25</span></span><br><span class="line"></span><br><span class="line">u &lt;- rnorm(<span class="number">200</span>,<span class="number">2</span>,<span class="number">0.25</span>) <span class="comment"># generate 200 normally-distributed r.v.s</span></span><br><span class="line">mean(u) <span class="comment"># compute the mean</span></span><br><span class="line">sd(u) <span class="comment"># compute the standard deviation</span></span><br><span class="line"></span><br><span class="line">y &lt;- rnorm(<span class="number">3</span>,<span class="built_in">c</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">300</span>),<span class="number">1</span>) <span class="comment"># generate 3 r.v.s with means 1,2,and 300 respectively</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Student&#x27;s t-distribution</span></span><br><span class="line">plot(x = seq(-<span class="number">3</span>, <span class="number">3</span>, <span class="number">0.01</span>), y = dt(x = seq(-<span class="number">3</span>, <span class="number">3</span>, <span class="number">0.01</span>), df = <span class="number">25</span>), type = <span class="string">&quot;l&quot;</span>, xlab = <span class="string">&quot;&quot;</span>, ylab = <span class="string">&quot;&quot;</span>, main = <span class="string">&quot;t-Distribution with 25 degrees of freedom&quot;</span>, col = <span class="string">&quot;navyblue&quot;</span>, lwd = <span class="number">2</span>)</span><br><span class="line">pt(q = <span class="number">0</span>, df = <span class="number">25</span>)</span><br><span class="line">qt(p = <span class="number">0.90</span>, df = <span class="number">25</span>)</span><br><span class="line">rt(n = <span class="number">10</span>, df = <span class="number">25</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># The F-distribution</span></span><br><span class="line">plot(x = seq(<span class="number">0</span>, <span class="number">10</span>, <span class="number">0.01</span>), y = df(x = seq(<span class="number">0</span>, <span class="number">10</span>, <span class="number">0.01</span>), df1 = <span class="number">25</span>, df2 = <span class="number">10</span>), type = <span class="string">&quot;l&quot;</span>, xlab = <span class="string">&quot;&quot;</span>, ylab = <span class="string">&quot;&quot;</span>, main = <span class="string">&quot;F-Distribution with 25 and 10 degrees of freedom&quot;</span>, col = <span class="string">&quot;darkgreen&quot;</span>, lwd = <span class="number">2</span>)</span><br><span class="line">pf(q = <span class="number">2</span>, df1 = <span class="number">25</span>, df2 = <span class="number">10</span>)</span><br><span class="line">qf(p = <span class="number">0.90</span>, df1 = <span class="number">25</span>, df2 = <span class="number">10</span>)</span><br><span class="line">rf(n = <span class="number">10</span>, df1 = <span class="number">25</span>, df2 = <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># The chi-squared distribution</span></span><br><span class="line">plot(x = seq(<span class="number">0</span>, <span class="number">40</span>, <span class="number">0.1</span>), y = dchisq(x = seq(<span class="number">0</span>, <span class="number">40</span>, <span class="number">0.1</span>), df = <span class="number">10</span>), type = <span class="string">&quot;l&quot;</span>, xlab = <span class="string">&quot;&quot;</span>, ylab = <span class="string">&quot;&quot;</span>, main = <span class="string">&quot;Chi-Squared Distribution with 10 degrees of freedom&quot;</span>, col = <span class="string">&quot;orchid4&quot;</span>, lwd = <span class="number">2</span>)</span><br><span class="line">pchisq(q = <span class="number">10</span>, df = <span class="number">10</span>)</span><br><span class="line">qchisq(p = <span class="number">0.90</span>, df = <span class="number">10</span>)</span><br><span class="line">rchisq(n = <span class="number">10</span>, df = <span class="number">10</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<br>
<br>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment">#########################</span></span><br><span class="line"><span class="comment">### Working with Data ###</span></span><br><span class="line"><span class="comment">#########################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># R contains many datasets already that you can work with simply by calling their names</span></span><br><span class="line"><span class="comment"># To see a list of all such datasets use the following command:</span></span><br><span class="line">data()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这是一个R自带的数据库.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># We&#x27;re going to look at the &quot;ChickWeight&quot; dataset</span></span><br><span class="line">? ChickWeight</span><br><span class="line"></span><br><span class="line"><span class="comment"># But most of the time we need to load data into R from a file</span></span><br><span class="line">getwd()</span><br><span class="line">setwd(<span class="string">&quot;/Users/nstevens/Dropbox/Teaching/STAT_341/Tutorials/Tutorial 1/&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Read in a .csv file</span></span><br><span class="line">df_csv &lt;- read.csv(file = <span class="string">&quot;ChickWeight.csv&quot;</span>, header = <span class="literal">TRUE</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Read in a .txt file</span></span><br><span class="line">df_txt &lt;- read.table(file = <span class="string">&quot;ChickWeight.txt&quot;</span>, header = <span class="literal">TRUE</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Read in a .json file</span></span><br><span class="line">library(rjson)</span><br><span class="line">df_json &lt;- as.data.frame(fromJSON(file = <span class="string">&quot;ChickWeight.json&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># install.packages(&quot;rjson&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Let&#x27;s work with the data frame read from the csv file</span></span><br><span class="line">df &lt;- df_csv</span><br><span class="line"></span><br><span class="line"><span class="comment"># View the dataset in a spreadsheet window</span></span><br><span class="line">View(df)</span><br><span class="line"></span><br><span class="line"><span class="comment"># View the dataset in the console</span></span><br><span class="line">df</span><br><span class="line"></span><br><span class="line"><span class="comment"># Dimension of the data frame (rows/columns)</span></span><br><span class="line"><span class="built_in">dim</span>(df)</span><br><span class="line"></span><br><span class="line"><span class="comment"># View the top n rows of the data frame</span></span><br><span class="line">head(df, n = <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># View the bottom n rows of the data frame</span></span><br><span class="line">tail(df, n = <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Summary of the dataframe</span></span><br><span class="line">summary(df)</span><br><span class="line"></span><br><span class="line"><span class="comment"># &quot;Chick&quot; and &quot;Diet&quot; should be treated as categorical (not numeric) variables. In R</span></span><br><span class="line"><span class="comment"># a categorocal variable is called a &quot;factor&quot; variable. We should change this. But first</span></span><br><span class="line"><span class="comment"># let&#x27;s figure out how to access specific columns of a data frame.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Extracting columns that are named</span></span><br><span class="line">df$Chick</span><br><span class="line">df$Diet</span><br><span class="line"></span><br><span class="line"><span class="comment"># Extracting columns (in general) -- behaves like a matrix</span></span><br><span class="line">df[,<span class="number">3</span>]</span><br><span class="line">df[,<span class="number">4</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Confirm that the &quot;Chick&quot; and &quot;Diet&quot; variables are not treated as factors</span></span><br><span class="line">is.factor(df$Chick)</span><br><span class="line">is.factor(df$Diet)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Coerce them to become factors</span></span><br><span class="line">df$Chick &lt;- as.factor(df$Chick)</span><br><span class="line">is.factor(df$Chick)</span><br><span class="line"></span><br><span class="line">df$Diet &lt;- factor(df$Diet, levels = <span class="number">1</span>:<span class="number">4</span>, labels = <span class="built_in">c</span>(<span class="string">&quot;Diet 1&quot;</span>, <span class="string">&quot;Diet 2&quot;</span>, <span class="string">&quot;Diet 3&quot;</span>, <span class="string">&quot;Diet 4&quot;</span>))</span><br><span class="line">is.factor(df$Diet)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Sanity Check</span></span><br><span class="line">summary(df)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>关于factor: 有些明明写成数字但却是category的类型可以用factor function来转变.</p>
<br>
<br>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment">################</span></span><br><span class="line"><span class="comment">### Plotting ###</span></span><br><span class="line"><span class="comment">################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Univariate plots (for quantitative variables)</span></span><br><span class="line">hist(x = df$weight, xlab = <span class="string">&quot;Weight (grams)&quot;</span>, main = <span class="string">&quot;Histogram of Weight&quot;</span>)</span><br><span class="line">boxplot(x = df$weight, xlab = <span class="string">&quot;Weight (grams)&quot;</span>, main = <span class="string">&quot;Boxplot of Weight&quot;</span>)</span><br><span class="line"></span><br><span class="line">hist(x = df$Time, xlab = <span class="string">&quot;Time (days)&quot;</span>, main = <span class="string">&quot;Histogram of Time&quot;</span>)</span><br><span class="line">boxplot(x = df$Time, xlab = <span class="string">&quot;Time (days)&quot;</span>, main = <span class="string">&quot;Boxplot of Time&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Univariate plots (for categorical variables)</span></span><br><span class="line"><span class="comment"># First the table() function:</span></span><br><span class="line">table(df$Diet)</span><br><span class="line">barplot(table(df$Diet), main = <span class="string">&quot;Frequency Barplot of Diet&quot;</span>)</span><br><span class="line">barplot(table(df$Diet)/<span class="built_in">sum</span>(table(df$Diet)), main = <span class="string">&quot;Relative Frequency Barplot of Diet&quot;</span>)</span><br><span class="line"></span><br><span class="line">pie(x = table(df$Diet), main = <span class="string">&quot;Pie Chart of Diet&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Bivariate plots (for quantitative variables)</span></span><br><span class="line">plot(x = df$Time, y = df$weight, xlab = <span class="string">&quot;Time (days)&quot;</span>, ylab = <span class="string">&quot;Weight (grams)&quot;</span>, main = <span class="string">&quot;Scatter Plot of Weight vs. Time&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Bivariate plots (for quantitative and categorical variables)</span></span><br><span class="line">boxplot(df$weight ~ df$Diet, ylab = <span class="string">&quot;Weight (grams)&quot;</span>, main = <span class="string">&quot;Weight by Diet Type&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Multiple plots in one window</span></span><br><span class="line">par(mfrow = <span class="built_in">c</span>(<span class="number">1</span>,<span class="number">3</span>))</span><br><span class="line">hist(x = df$weight, xlab = <span class="string">&quot;Weight (grams)&quot;</span>, main = <span class="string">&quot;Histogram of Weight&quot;</span>)</span><br><span class="line">plot(x = df$Time, y = df$weight, xlab = <span class="string">&quot;Time (days)&quot;</span>, ylab = <span class="string">&quot;Weight (grams)&quot;</span>, main = <span class="string">&quot;Scatter Plot of Weight vs. Time&quot;</span>)</span><br><span class="line">boxplot(df$weight ~ df$Diet, ylab = <span class="string">&quot;Weight (grams)&quot;</span>, main = <span class="string">&quot;Weight by Diet Type&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Bivariate plots (for categorical variables)</span></span><br><span class="line"><span class="comment"># First the table() function:</span></span><br><span class="line">table(df$Diet, df$Chick)</span><br><span class="line">par(mfrow = <span class="built_in">c</span>(<span class="number">1</span>,<span class="number">1</span>))</span><br><span class="line">mosaicplot(x = table(df$Diet, df$Chick), xlab = <span class="string">&quot;Diet&quot;</span>, ylab = <span class="string">&quot;Chick ID&quot;</span>, main = <span class="string">&quot;Chick ID by Diet&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Look at another dataset which is a better illustration of this function</span></span><br><span class="line">? HairEyeColor</span><br><span class="line">HairEyeColor</span><br><span class="line">mosaicplot(x = HairEyeColor[,,<span class="number">1</span>], main = <span class="string">&quot;Male Hair and Eye Colour&quot;</span>)</span><br><span class="line">mosaicplot(x = HairEyeColor[,,<span class="number">2</span>], main = <span class="string">&quot;Female Hair and Eye Colour&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Adding lines to plots</span></span><br><span class="line">plot(x = rnorm(n = <span class="number">1000</span>, mean = <span class="number">0</span>, sd = <span class="number">1</span>), y = rnorm(n = <span class="number">1000</span>, mean = <span class="number">0</span>, sd = <span class="number">1</span>), xlab = <span class="string">&quot;&quot;</span>, ylab = <span class="string">&quot;&quot;</span>, main = <span class="string">&quot;&quot;</span>, pch = <span class="number">16</span>, xlim = <span class="built_in">c</span>(-<span class="number">3.5</span>, <span class="number">3.5</span>), ylim = <span class="built_in">c</span>(-<span class="number">3.5</span>, <span class="number">3.5</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># Diagonal Lines</span></span><br><span class="line">abline(a = <span class="number">0</span>, b = <span class="number">1</span>, col = <span class="string">&quot;red&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Lines with a specific slope/intercept</span></span><br><span class="line">abline(a = -<span class="number">1</span>, b = <span class="number">0.5</span>, col = <span class="string">&quot;green&quot;</span>, lwd = <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Horizontal and vertical lines</span></span><br><span class="line">abline(h = <span class="number">0</span>, col = <span class="string">&quot;blue&quot;</span>, lwd = <span class="number">2</span>, lty = <span class="number">2</span>)</span><br><span class="line">abline(v = -<span class="number">2</span>, col = <span class="string">&quot;purple&quot;</span>, lwd = <span class="number">2</span>, lty = <span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Line Segments</span></span><br><span class="line">segments(x0 = -<span class="number">2</span>, y0 = -<span class="number">3</span>, x1 = -<span class="number">1</span>, y1 = -<span class="number">3</span>, col = <span class="string">&quot;magenta&quot;</span>, lwd = <span class="number">3</span>, lty = <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Curves</span></span><br><span class="line">lines(x = seq(-<span class="number">3</span>, <span class="number">3</span>, <span class="number">0.1</span>), y = <span class="built_in">cos</span>(<span class="number">3</span>*seq(-<span class="number">3</span>, <span class="number">3</span>, <span class="number">0.1</span>)), col = <span class="string">&quot;orange&quot;</span>, lwd = <span class="number">4</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Adding a legend</span></span><br><span class="line">legend(<span class="string">&quot;bottomright&quot;</span>, legend = <span class="built_in">c</span>(<span class="string">&quot;Diagonal&quot;</span>, <span class="string">&quot;General Line&quot;</span>, <span class="string">&quot;Horizontal&quot;</span>, <span class="string">&quot;Vertical&quot;</span>, <span class="string">&quot;Segment&quot;</span>, <span class="string">&quot;Curve&quot;</span>),</span><br><span class="line">       col = <span class="built_in">c</span>(<span class="string">&quot;red&quot;</span>, <span class="string">&quot;green&quot;</span>, <span class="string">&quot;blue&quot;</span>, <span class="string">&quot;purple&quot;</span>, <span class="string">&quot;magenta&quot;</span>, <span class="string">&quot;orange&quot;</span>),</span><br><span class="line">       lwd = <span class="built_in">c</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>),</span><br><span class="line">       lty = <span class="built_in">c</span>(<span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># Add more points, but with a different colour and shape</span></span><br><span class="line">points(x = rnorm(n = <span class="number">100</span>, mean = -<span class="number">3</span>, sd = <span class="number">0.2</span>), y = rnorm(n = <span class="number">100</span>, mean = <span class="number">3</span>, sd = <span class="number">0.2</span>), col = <span class="string">&quot;cyan&quot;</span>, pch = <span class="number">17</span>)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>数学笔记</category>
      </categories>
      <tags>
        <tag>Thank you Mr.goose</tag>
        <tag>编码</tag>
        <tag>以头抢地(诚)</tag>
        <tag>data</tag>
        <tag>R</tag>
      </tags>
  </entry>
  <entry>
    <title>关于R语言的笔记 - R markdown</title>
    <url>/blog/2021/01/18/P163/</url>
    <content><![CDATA[<p>再次感谢stat341老师的手把手R入门教材,这次是R markdown的部分.</p>
<span id="more"></span>
<p>毕竟名字也叫markdown,跟markdown语言有类似,但不同也不少(废话).<br>不过记载的时候就遇到了一个问题.<br>因为hexo是用markdown来导出文件的,跟rmarkdown的语法有冲突.</p>
<p>稍微查了一下没找到解决办法,先用google drive顶着.<a href="https://drive.google.com/drive/folders/1Qt8Wb9kSDB_GNRDWeV222rvTsODXlk9s?usp=sharing">link.</a></p>
<br>

<p>用kint可以导出html/pdf/word.老师还自带了cheatsheet,感动北半球.</p>
<blockquote>
<p>R Markdown consult <a href="https://www.rstudio.com/wp-content/uploads/2015/02/rmarkdown-cheatsheet.pdf">this cheat sheet</a>.<br>Markdown formatting (not specific to R) consult this <a href="http://assemble.io/docs/Cheatsheet-Markdown.html">cheat sheet</a>.<br>For a comprehensive overview of various LaTeX commands, <a href="http://webhome.auburn.edu/~tamtiny/Symbols.pdf">see this cheat sheet</a>.<br><a href="http://guessthecorrelation.com/">神秘小游戏</a>.</p>
</blockquote>
]]></content>
      <categories>
        <category>数学笔记</category>
      </categories>
      <tags>
        <tag>Thank you Mr.goose</tag>
        <tag>编码</tag>
        <tag>以头抢地(诚)</tag>
        <tag>data</tag>
        <tag>R</tag>
      </tags>
  </entry>
  <entry>
    <title>关于SQL的笔记 - 续</title>
    <url>/blog/2021/01/31/P167/</url>
    <content><![CDATA[<p>个人用笔记,因为太长了所以分成了两份.<br><a href="https://mazui3.github.io/blog/2020/11/24/P134/">上一回</a>.</p>
<span id="more"></span>
<br>
<br>
<br>
<br>

<div class="note ">
            <p>Note:sql的常用数据格式<br>Bigint:          -1* 10(18) ~ 1* 10(18) \(&lt;——Big Int 10^18)<br>BLOB:            Binary Large OBject 2(64) -1  \(&lt;——最大数字2^64 - 1)<br>Boolean:        True or False<br>CHAR(500) :       500 \(500个字符)<br>Date/DateTime/Time:  ‘2020-07-25 15:25:25.666’ YYYY-MM-DD HH:MM:SS.SSS<br>Decimal:          123.456<br>Double:     1* 10(-308) ~ 1 * 10(308)  / -1 * 10(308) ~ -1 * 10(-308)<br>Float:      1* 10(-38) ~ 1 * 10(38)      / -1 * 10(38) ~ -1 * 10(-38)<br>INT/Integer : 0 ~ 65535<br>String:            length &lt;= 4000<br>Text:               length&gt; 4000 \(mySql and sqlite)<br>CLOB: Char Large Object   length &gt; 4000<br>VARCHAR(500) : real length &lt;= 500 \(不管多少长度都给500)<br>Real:     approximation of a real number</p>
          </div>

<p>注:sql中首先生成table,table中是数据格式,然后在import数据到table中.<br>可以在table中用双击的方式来更改格式.</p>
<br>
<br>

<h2 id="printf"><a href="#printf" class="headerlink" title="printf"></a>printf</h2><p>在sqlite里面only.printf(“%X.YF”, expression),第一个%没有意义,X为整数位保留的数据,Y为小数位保留的数据,F为format.<br><strong>没有四舍五入,是硬截.</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">printf(&quot;%.2f%&quot;, (high<span class="operator">-</span>low)<span class="operator">/</span>(<span class="keyword">open</span><span class="operator">+</span><span class="keyword">close</span>)<span class="number">2100</span>) <span class="keyword">as</span> vol <span class="comment">--123.567 = 123.56(整数位不变,小数位取两位,f为float,最后一个%为加上的char)</span></span><br><span class="line">round(<span class="number">123.456</span>, <span class="number">2</span>) <span class="operator">=</span> <span class="number">123.46</span></span><br><span class="line">printf(&quot;%.2f&quot;, <span class="number">123.456</span>) <span class="operator">=</span> <span class="number">123.45</span></span><br></pre></td></tr></table></figure>

<br>
<br>
<br>

<h2 id="Transaction"><a href="#Transaction" class="headerlink" title="Transaction"></a>Transaction</h2><p>可以理解为C语言里的try和catch.如果一个命令fail了,保护其他的/原数据库不会造成影响.</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">/</span><span class="operator">/</span><span class="keyword">all</span> statement <span class="keyword">between</span> will be performed <span class="keyword">by</span> <span class="keyword">one</span> unit</span><br><span class="line"><span class="keyword">BEGIN</span> TRANSACTION;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> widgetSales ( inv_id, quan, price ) <span class="keyword">VALUES</span> ( <span class="number">1</span>, <span class="number">5</span>, <span class="number">500</span> );</span><br><span class="line">UPDATE widgetInventory <span class="keyword">SET</span> onhand <span class="operator">=</span> ( onhand <span class="operator">-</span> <span class="number">5</span> ) <span class="keyword">WHERE</span> id <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">END</span> TRANSACTION;</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">BEGIN</span> TRANSACTION;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> widgetInventory ( description, onhand ) <span class="keyword">VALUES</span> ( <span class="string">&#x27;toy&#x27;</span>, <span class="number">25</span> );</span><br><span class="line"><span class="keyword">ROLLBACK</span>;<span class="operator">/</span><span class="operator">/</span> if we <span class="keyword">rollback</span> before <span class="keyword">end</span> transaction, nothing happened</span><br></pre></td></tr></table></figure>

<p>Aside: transaction makes things faster also.</p>
<br>
<br>
<br>

<h2 id="Triggers"><a href="#Triggers" class="headerlink" title="Triggers"></a>Triggers</h2><p>will trigger when certain condition meet. Also highly depends on different system.</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> newWidgetSale AFTER <span class="keyword">INSERT</span> <span class="keyword">ON</span> widgetSale</span><br><span class="line">    <span class="keyword">BEGIN</span></span><br><span class="line">        UPDATE widgetCustomer <span class="keyword">SET</span> last_order_id <span class="operator">=</span> NEW.id <span class="keyword">WHERE</span> widgetCustomer.id <span class="operator">=</span> NEW.customer_id;</span><br><span class="line">    <span class="keyword">END</span></span><br><span class="line">;</span><br></pre></td></tr></table></figure>

<p>we can also use trigger to prevent an update(using rollback).//using before update</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> updateWidgetSale BEFORE UPDATE <span class="keyword">ON</span> widgetSale</span><br><span class="line">    <span class="keyword">BEGIN</span></span><br><span class="line">        <span class="keyword">SELECT</span> RAISE(<span class="keyword">ROLLBACK</span>, <span class="string">&#x27;cannot update table &quot;widgetSale&quot;&#x27;</span>) <span class="keyword">FROM</span> widgetSale</span><br><span class="line">            <span class="keyword">WHERE</span> id <span class="operator">=</span> NEW.id <span class="keyword">AND</span> reconciled <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">END</span></span><br><span class="line">;</span><br><span class="line"></span><br><span class="line"><span class="keyword">BEGIN</span> TRANSACTION;</span><br><span class="line">UPDATE widgetSale <span class="keyword">SET</span> quan <span class="operator">=</span> <span class="number">9</span> <span class="keyword">WHERE</span> id <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line"><span class="keyword">END</span> TRANSACTION;</span><br></pre></td></tr></table></figure>

<p>and timestamps.</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> widgetSale;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> widgetCustomer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> widgetCustomer ( id <span class="type">integer</span> <span class="keyword">primary</span> key, name TEXT, last_order_id <span class="type">INT</span>, stamp TEXT );</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> widgetSale ( id <span class="type">integer</span> <span class="keyword">primary</span> key, item_id <span class="type">INT</span>, customer_id <span class="type">INTEGER</span>, quan <span class="type">INT</span>, price <span class="type">INT</span>, stamp TEXT );</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> widgetLog ( id <span class="type">integer</span> <span class="keyword">primary</span> key, stamp TEXT, event TEXT, username TEXT, tablename TEXT, table_id <span class="type">INT</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> widgetCustomer (name) <span class="keyword">VALUES</span> (<span class="string">&#x27;Bob&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> widgetCustomer (name) <span class="keyword">VALUES</span> (<span class="string">&#x27;Sally&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> widgetCustomer (name) <span class="keyword">VALUES</span> (<span class="string">&#x27;Fred&#x27;</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> widgetCustomer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> stampSale AFTER <span class="keyword">INSERT</span> <span class="keyword">ON</span> widgetSale <span class="operator">/</span><span class="operator">/</span><span class="keyword">using</span> after <span class="keyword">insert</span> <span class="keyword">to</span> <span class="keyword">create</span> stamps</span><br><span class="line">    <span class="keyword">BEGIN</span></span><br><span class="line">        UPDATE widgetSale <span class="keyword">SET</span> stamp <span class="operator">=</span> DATETIME(<span class="string">&#x27;now&#x27;</span>) <span class="keyword">WHERE</span> id <span class="operator">=</span> NEW.id;</span><br><span class="line">        UPDATE widgetCustomer <span class="keyword">SET</span> last_order_id <span class="operator">=</span> NEW.id, stamp <span class="operator">=</span> DATETIME(<span class="string">&#x27;now&#x27;</span>)</span><br><span class="line">            <span class="keyword">WHERE</span> widgetCustomer.id <span class="operator">=</span> NEW.customer_id;</span><br><span class="line">        <span class="keyword">INSERT</span> <span class="keyword">INTO</span> widgetLog (stamp, event, username, tablename, table_id)</span><br><span class="line">            <span class="keyword">VALUES</span> (DATETIME(<span class="string">&#x27;now&#x27;</span>), <span class="string">&#x27;INSERT&#x27;</span>, <span class="string">&#x27;TRIGGER&#x27;</span>, <span class="string">&#x27;widgetSale&#x27;</span>, NEW.id);</span><br><span class="line">    <span class="keyword">END</span></span><br><span class="line">;</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> widgetSale (item_id, customer_id, quan, price) <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">1995</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> widgetSale (item_id, customer_id, quan, price) <span class="keyword">VALUES</span> (<span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1495</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> widgetSale (item_id, customer_id, quan, price) <span class="keyword">VALUES</span> (<span class="number">3</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2995</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> widgetSale;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> widgetCustomer;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> widgetLog;</span><br><span class="line"><span class="comment">-- restore database</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TRIGGER</span> IF <span class="keyword">EXISTS</span> newWidgetSale;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TRIGGER</span> IF <span class="keyword">EXISTS</span> updateWidgetSale;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TRIGGER</span> IF <span class="keyword">EXISTS</span> stampSale;</span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> widgetCustomer;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> widgetSale;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> widgetLog;</span><br></pre></td></tr></table></figure>

<br>
<br>
<br>

<h2 id="Subselect"><a href="#Subselect" class="headerlink" title="Subselect"></a>Subselect</h2><p>把select当作select的source.</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> co.Name, ss.CCode <span class="keyword">FROM</span> (</span><br><span class="line">    <span class="keyword">SELECT</span> SUBSTR(a, <span class="number">1</span>, <span class="number">2</span>) <span class="keyword">AS</span> State, SUBSTR(a, <span class="number">3</span>) <span class="keyword">AS</span> SCode,</span><br><span class="line">      SUBSTR(b, <span class="number">1</span>, <span class="number">2</span>) <span class="keyword">AS</span> Country, SUBSTR(b, <span class="number">3</span>) <span class="keyword">AS</span> CCode <span class="keyword">FROM</span> t</span><br><span class="line">  ) <span class="keyword">AS</span> ss</span><br><span class="line">  <span class="keyword">JOIN</span> Country <span class="keyword">AS</span> co</span><br><span class="line">    <span class="keyword">ON</span> co.Code2 <span class="operator">=</span> ss.Country</span><br><span class="line">;</span><br></pre></td></tr></table></figure>

<br>
<br>
<br>

<h3 id="VIEW"><a href="#VIEW" class="headerlink" title="VIEW"></a>VIEW</h3><p>view: a saved query.</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> id, album_id, title, track_number,</span><br><span class="line">  duration <span class="operator">/</span> <span class="number">60</span> <span class="keyword">AS</span> m, duration <span class="operator">%</span> <span class="number">60</span> <span class="keyword">AS</span> s <span class="keyword">FROM</span> track;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> trackView <span class="keyword">AS</span></span><br><span class="line">  <span class="keyword">SELECT</span> id, album_id, title, track_number,</span><br><span class="line">    duration <span class="operator">/</span> <span class="number">60</span> <span class="keyword">AS</span> m, duration <span class="operator">%</span> <span class="number">60</span> <span class="keyword">AS</span> s <span class="keyword">FROM</span> track;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> trackView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> a.title <span class="keyword">AS</span> album, a.artist, t.track_number <span class="keyword">AS</span> seq, t.title, t.m, t.s</span><br><span class="line">  <span class="keyword">FROM</span> album <span class="keyword">AS</span> a</span><br><span class="line">  <span class="keyword">JOIN</span> trackView <span class="keyword">AS</span> t</span><br><span class="line">    <span class="keyword">ON</span> t.album_id <span class="operator">=</span> a.id</span><br><span class="line">  <span class="keyword">ORDER</span> <span class="keyword">BY</span> a.title, t.track_number</span><br><span class="line">;</span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">VIEW</span> IF <span class="keyword">EXISTS</span> trackView;</span><br></pre></td></tr></table></figure>


<br>
<br>
<br>

<h2 id="Subquery"><a href="#Subquery" class="headerlink" title="Subquery"></a>Subquery</h2><p>也就是Nested(嵌套)query.</p>
<blockquote>
<p>SQL allows you to embed a query into another query, subquery can be uncorrelated or correlated</p>
</blockquote>
<div class="note ">
            <p>Subquery的结构中,整体的叫parent/main query,其中的子query叫nested/inner query.<br>(当作subset来理解.)<br>什么时候要使用nested query:无法用and和or做一次查询得出结论,得使用多次查询.(第一次的查询的结果用于第二次查询.)</p>
          </div>

<p>Uncorrelated subquery:</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> card_num <span class="keyword">from</span> clean_data</span><br><span class="line"><span class="keyword">where</span> Fraud<span class="operator">=</span><span class="string">&#x27;Yes&#x27;</span> <span class="keyword">and</span> MCC_desc <span class="operator">=</span> <span class="string">&#x27;Transportation&#x27;</span> <span class="keyword">and</span></span><br><span class="line">card_num <span class="keyword">in</span> (<span class="keyword">select</span> card_num <span class="keyword">from</span> clean_data <span class="keyword">where</span> Fraud <span class="operator">=</span> <span class="string">&#x27;Yes&#x27;</span> <span class="keyword">and</span> MCC_desc <span class="operator">=</span> <span class="string">&#x27;Grocery&#x27;</span>); <span class="comment">-- 如果没有主query副query也可以独立运行</span></span><br></pre></td></tr></table></figure>

<p>Correlated Subquery:</p>
<p>A sub-query that uses values from the outer query. In this case the inner<br>query has to be executed for every row of outer query.</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> disk.multiple_financial <span class="keyword">as</span> a <span class="keyword">where</span> <span class="keyword">exists</span></span><br><span class="line">(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> disk.multiple_rating <span class="keyword">as</span> b <span class="keyword">where</span> a.id<span class="operator">=</span>b.id <span class="keyword">and</span> a.year<span class="operator">=</span>b.year <span class="keyword">and</span> b.df<span class="operator">=</span><span class="number">1</span>); <span class="comment">-- 不建议用correlated subquery因为run得很慢</span></span><br></pre></td></tr></table></figure>

<p>Comparison的时候:<br>When a subquery might return multiple values, you must use one of the conditional operators ANY or ALL to modify a comparison operator in the WHERE or HAVING clause immediately before the subquery. For example, the following WHERE clause contains the less than (&lt;) comparison operator and the conditional operator ANY:</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">where</span> dateofbirth <span class="operator">&lt;</span> <span class="keyword">ANY</span> &#123;subquery...&#125;</span><br><span class="line"><span class="keyword">where</span> dateofbirth <span class="operator">&lt;</span> <span class="keyword">ALL</span> &#123;subquery...&#125;</span><br></pre></td></tr></table></figure>

<p>other example:这里的使用是两个select套在一起.查询两个表.</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> column1, ... ,columnN</span><br><span class="line"><span class="keyword">FROM</span> tableA</span><br><span class="line"><span class="keyword">WHERE</span> column1 <span class="keyword">IN</span> (<span class="keyword">SELECT</span> columnN</span><br><span class="line"><span class="keyword">FROM</span> tableB</span><br><span class="line"><span class="keyword">WHERE</span> ...)</span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tmp3 <span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> col_trans</span><br><span class="line"><span class="keyword">where</span> customer_id <span class="keyword">in</span> (</span><br><span class="line">    <span class="keyword">select</span> customer_id <span class="keyword">from</span> customer</span><br><span class="line">    <span class="keyword">where</span> jurisdiction <span class="operator">=</span> <span class="string">&#x27;Canada&#x27;</span></span><br><span class="line">      <span class="keyword">and</span> industry <span class="operator">=</span> <span class="string">&#x27;Financial&#x27;</span></span><br><span class="line">)</span><br><span class="line">;</span><br></pre></td></tr></table></figure>
<p>注意这里前一个where和后一个select是对应的,不然会出现return和需求的column个数不对.<br>不一定需要内容一样,但return的column数得相同.</p>
<p>有时可以用join代替,先join再查询.但建议使用subquery,运算速度会快(提升性能).<br>在数量对应不上的时候,我们可以用or来拆开子query.</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tmp9 <span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> col_trans</span><br><span class="line"><span class="keyword">where</span> security_id <span class="keyword">in</span> (</span><br><span class="line"><span class="keyword">select</span> security_id <span class="keyword">from</span> sec</span><br><span class="line"><span class="keyword">where</span> security_type <span class="operator">=</span> <span class="string">&#x27;Equity&#x27;</span> <span class="keyword">and</span> price <span class="operator">&lt;=</span> <span class="number">30</span></span><br><span class="line">) <span class="keyword">or</span> security_id <span class="keyword">in</span> (</span><br><span class="line"><span class="keyword">select</span> security_id_2 <span class="keyword">from</span> sec</span><br><span class="line"><span class="keyword">where</span> security_type <span class="operator">=</span> <span class="string">&#x27;Equity&#x27;</span> <span class="keyword">and</span> price <span class="operator">&lt;=</span> <span class="number">30</span></span><br><span class="line">)</span><br><span class="line">;</span><br></pre></td></tr></table></figure>
<p>或者用union合并.</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tmp10 <span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> col_trans</span><br><span class="line"><span class="keyword">where</span> security_id <span class="keyword">in</span> (</span><br><span class="line"><span class="keyword">select</span> security_id <span class="keyword">from</span> sec <span class="keyword">where</span> security_type <span class="operator">=</span> <span class="string">&#x27;Equity&#x27;</span> <span class="keyword">and</span> price <span class="operator">&lt;=</span><span class="number">30</span></span><br><span class="line"><span class="keyword">union</span></span><br><span class="line"><span class="keyword">select</span> security_id_2 <span class="keyword">from</span> sec <span class="keyword">where</span> security_type <span class="operator">=</span> <span class="string">&#x27;Equity&#x27;</span> <span class="keyword">and</span> price <span class="operator">&lt;=</span><span class="number">30</span></span><br><span class="line">)</span><br><span class="line">;</span><br></pre></td></tr></table></figure>


<br>
<br>
<br>

<h2 id="WITH"><a href="#WITH" class="headerlink" title="WITH"></a>WITH</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">WITH</span> cte_name <span class="keyword">AS</span> (<span class="keyword">SELECT</span> statement)</span><br><span class="line">  [, cte_name2 <span class="keyword">AS</span> (<span class="keyword">SELECT</span> statement)]</span><br><span class="line"><span class="keyword">SELECT</span> ... <span class="keyword">FROM</span> cte_name [<span class="keyword">inner</span> <span class="keyword">join</span> cte_name2]</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> ... <span class="keyword">FROM</span> (<span class="keyword">SELECT</span> statement) <span class="keyword">AS</span></span><br><span class="line">subquery_name</span><br></pre></td></tr></table></figure>
<p>Note: WITH clause is mostly equivalent to a subquery.<br>WITH RECURSIVE is more useful, provide the ability to do hieracrchical/recursive queries</p>
<h2 id="autoincrement"><a href="#autoincrement" class="headerlink" title="autoincrement"></a>autoincrement</h2><p>用于自动添加从1开始的不重复column内容.可以用为增加新的primary key.</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="string">&#x27;table_name&#x27;</span>&#123;</span><br><span class="line">  ‘id’ <span class="type">integer</span> <span class="keyword">primary</span> key autoincrement</span><br><span class="line">&#125;;</span><br><span class="line">但注意,在这样生成的表中.如果一开始的id为<span class="number">1</span><span class="number">-20.</span>有数据删除再添加,新的数据会从<span class="number">21</span>开始.</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>数学笔记</category>
      </categories>
      <tags>
        <tag>编码</tag>
        <tag>以头抢地(诚)</tag>
        <tag>data</tag>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>关于R语言的笔记 - 续</title>
    <url>/blog/2021/02/02/P165/</url>
    <content><![CDATA[<script async
  src="//mathjax.rstudio.com/latest/MathJax.js?config=TeX-MML-AM_CHTML">
</script>
<p>接着<a href="https://mazui3.github.io/blog/2021/01/13/P164/">上一回</a>的笔记.<br>上次收录了些基础语法,这次是case study.</p>
<span id="more"></span>

<p>R和python中的pandas有不少相似之处.<br><br><br><br><br><br></p>
<h2 id="Tutorial-2-Pokemon-Analysis"><a href="#Tutorial-2-Pokemon-Analysis" class="headerlink" title="Tutorial 2: Pokémon Analysis"></a>Tutorial 2: Pokémon Analysis</h2><p>In this document we begin to take a look at the <code>pokemon.csv</code> dataset introduced in the first lecture. This exercise is intended to provide additional exposure to R and Markdown.</p>
<p><strong>Load in the data and summarize it</strong></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">setwd(<span class="string">&quot;/Users/nstevens/Dropbox/Teaching/STAT_341/Winter_2021/Tutorials/Tutorial 2/&quot;</span>)</span><br><span class="line">poke &lt;- read.csv(file = <span class="string">&quot;pokemon.csv&quot;</span>, header = <span class="literal">TRUE</span>)</span><br></pre></td></tr></table></figure>

<p>Now that we’ve loaded the data, let’s look at a summary of it:</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">summary(poke)</span><br></pre></td></tr></table></figure>

<p>For purposes of the tutorial, let’s examine the <code>base_happiness</code>, <code>speed</code>, <code>height_m</code> and <code>weight_kg</code> variates more closely. Here are the values of these variates for the first 15 Pokémon:</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">head(x = poke[,<span class="built_in">c</span>(<span class="number">4</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>)], n = <span class="number">15</span>)</span><br></pre></td></tr></table></figure>

<p>Let’s construct a <code>$4 \times 4$</code> matrix of plots that visually summarize these:</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">poke_df_for_plot &lt;- poke[,<span class="built_in">c</span>(<span class="number">4</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>)]</span><br><span class="line">header &lt;- <span class="built_in">names</span>(poke_df_for_plot)</span><br><span class="line">par(mfrow = <span class="built_in">c</span>(<span class="number">4</span>,<span class="number">4</span>))</span><br><span class="line"><span class="keyword">for</span>(i <span class="keyword">in</span> <span class="number">1</span>:<span class="number">4</span>)&#123;</span><br><span class="line">  <span class="keyword">for</span>(j <span class="keyword">in</span> <span class="number">1</span>:<span class="number">4</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(i == j)&#123;</span><br><span class="line">      hist(poke_df_for_plot[,i], main = <span class="string">&quot;&quot;</span>, xlab = header[i], col = <span class="string">&quot;dodgerblue3&quot;</span>)</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      plot(x = poke_df_for_plot[,i], y = poke_df_for_plot[,j],</span><br><span class="line">           xlab = header[i], ylab = header[j],</span><br><span class="line">           pch = <span class="number">16</span>, col = adjustcolor(col = <span class="string">&quot;dodgerblue4&quot;</span>, alpha.f = <span class="number">0.3</span>))</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Since <code>base_happiness</code> takes on just a handful of integer values, let’s <em>jitter</em> this variate to try and make the plots more informative.</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">poke_df_for_plot$base_happiness &lt;- jitter(poke_df_for_plot$base_happiness, factor = <span class="number">3</span>)</span><br><span class="line">par(mfrow = <span class="built_in">c</span>(<span class="number">4</span>,<span class="number">4</span>))</span><br><span class="line"><span class="keyword">for</span>(i <span class="keyword">in</span> <span class="number">1</span>:<span class="number">4</span>)&#123;</span><br><span class="line">  <span class="keyword">for</span>(j <span class="keyword">in</span> <span class="number">1</span>:<span class="number">4</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(i == j)&#123;</span><br><span class="line">      hist(poke_df_for_plot[,i], main = <span class="string">&quot;&quot;</span>, xlab = header[i], col = <span class="string">&quot;dodgerblue3&quot;</span>)</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      plot(x = poke_df_for_plot[,i], y = poke_df_for_plot[,j],</span><br><span class="line">           xlab = header[i], ylab = header[j],</span><br><span class="line">           pch = <span class="number">16</span>, col = adjustcolor(col = <span class="string">&quot;dodgerblue4&quot;</span>, alpha.f = <span class="number">0.3</span>))</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Let’s also calculate the correlations between these variables:</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">cor(poke[,<span class="built_in">c</span>(<span class="number">4</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>)])</span><br></pre></td></tr></table></figure>


<p><strong>Questions:</strong></p>
<ol>
<li>Do faster Pokémon tend to be happier?</li>
<li>Do taller Pokémon tend to be happier?</li>
<li>Do heavier Pokémon tend to be happier?</li>
</ol>
<p><strong>Answers:</strong></p>
<ol>
<li>No</li>
<li>No</li>
<li>No</li>
</ol>
<p><strong>Who is the tallest Pokémon?</strong></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># this is the maximum height:</span></span><br><span class="line"><span class="built_in">max</span>(poke$height_m)</span><br><span class="line"><span class="comment"># this is the row in the dataset in which the maximum height is found:</span></span><br><span class="line">which(poke$height_m == <span class="built_in">max</span>(poke$height_m))</span><br><span class="line"><span class="comment"># this is the corresponding Pokémon:</span></span><br><span class="line">poke$name[which(poke$height_m == <span class="built_in">max</span>(poke$height_m))]</span><br></pre></td></tr></table></figure>

<p>Note that in the code above, rather than the call</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">which(poke$height_m == <span class="built_in">max</span>(poke$height_m))</span><br><span class="line"><span class="comment"># we could have equivalently used</span></span><br><span class="line">which.max(poke$height_m)</span><br></pre></td></tr></table></figure>

<p><strong>Which are the 10 heaviest Pokémon?</strong></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># these are the weights sorted from largest to smallest</span></span><br><span class="line">sort(x = poke$weight_kg, decreasing = <span class="literal">TRUE</span>)</span><br><span class="line"><span class="comment"># these are the 10 largest recorded weights</span></span><br><span class="line">sort(x = poke$weight_kg, decreasing = <span class="literal">TRUE</span>)[<span class="number">1</span>:<span class="number">10</span>]</span><br><span class="line"><span class="comment"># these are the rows containing the 10 largest recorded weights</span></span><br><span class="line">which(poke$weight_kg &gt;= sort(x = poke$weight_kg, decreasing = <span class="literal">TRUE</span>)[<span class="number">10</span>])</span><br><span class="line"><span class="comment"># these are the corresponding Pokémon</span></span><br><span class="line">poke$name[which(poke$weight_kg &gt;= sort(x = poke$weight_kg, decreasing = <span class="literal">TRUE</span>)[<span class="number">10</span>])]</span><br></pre></td></tr></table></figure>

<p><strong>Construct a histogram of <code>hp</code> with the mean identified</strong></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">hist(x = poke$hp, col = <span class="string">&quot;mistyrose&quot;</span>, main = <span class="string">&quot;Histogram of HP&quot;</span>, xlab = <span class="string">&quot;HP&quot;</span>)</span><br><span class="line">abline(v = mean(poke$hp), col = <span class="string">&quot;navyblue&quot;</span>, lwd = <span class="number">2</span>)</span><br><span class="line">text(x = <span class="number">70</span>, y = <span class="number">200</span>, labels = paste(<span class="string">&quot;Mean = &quot;</span>, <span class="built_in">round</span>(mean(poke$hp), <span class="number">2</span>)),</span><br><span class="line">     col = <span class="string">&quot;navyblue&quot;</span>, pos = <span class="number">4</span>)</span><br></pre></td></tr></table></figure>

<p><strong>Plot the influence (<code>$\Delta$</code>) of each Pokémon on the average <code>hp</code></strong></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">y &lt;- poke$hp</span><br><span class="line">delta &lt;- (y-mean(y))/(<span class="built_in">length</span>(y)-<span class="number">1</span>)</span><br><span class="line">par(mfrow = <span class="built_in">c</span>(<span class="number">1</span>,<span class="number">2</span>))</span><br><span class="line">plot(delta,</span><br><span class="line">     main = <span class="string">&quot;Influence for Average HP&quot;</span>, ylab = bquote(Delta),</span><br><span class="line">     pch = <span class="number">16</span>, col = adjustcolor(<span class="string">&quot;mediumvioletred&quot;</span>, <span class="number">0.3</span>))</span><br><span class="line">plot(y, delta,</span><br><span class="line">     main = <span class="string">&quot;Influence vs. HP&quot;</span>, ylab = bquote(Delta), xlab = <span class="string">&quot;HP&quot;</span>,</span><br><span class="line">     pch = <span class="number">16</span>, col = adjustcolor(<span class="string">&quot;mediumvioletred&quot;</span>, <span class="number">0.3</span>))</span><br></pre></td></tr></table></figure>

<p><strong>Which two Pokémon have the largest influence?</strong></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">poke$name[which(delta &gt; <span class="number">0.2</span>)]</span><br></pre></td></tr></table></figure>

<p><strong>Which two Pokémon have the highest HP?</strong></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">poke$name[order(poke$hp, decreasing = <span class="literal">TRUE</span>)][<span class="number">1</span>:<span class="number">2</span>]</span><br></pre></td></tr></table></figure>

<p><strong>What are the unique types of Pokémon?</strong></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">unique(poke$type1)</span><br></pre></td></tr></table></figure>

<p><strong>How many Pokémon of each <code>type1</code> are their?</strong></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">table(poke$type1)</span><br></pre></td></tr></table></figure>

<p><strong>Calculate the average happiness for each <code>type1</code> of Pokémon</strong></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">aggregate(x = poke$base_happiness,</span><br><span class="line">          by = <span class="built_in">list</span>(Type = poke$type1),</span><br><span class="line">          FUN = mean)</span><br></pre></td></tr></table></figure>

<br>
<br>
<br>

<h2 id="Tutorial-3-Pokemon-Analysis-continue"><a href="#Tutorial-3-Pokemon-Analysis-continue" class="headerlink" title="Tutorial 3: Pokémon Analysis - continue"></a>Tutorial 3: Pokémon Analysis - continue</h2><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">library(knitr)</span><br><span class="line">opts_chunk$set(tidy.opts=<span class="built_in">list</span>(width.cutoff=<span class="number">70</span>),tidy=<span class="literal">TRUE</span>)</span><br><span class="line">poke &lt;- read.csv(<span class="string">&quot;/Users/nstevens/Dropbox/Teaching/STAT_341/Winter_2021/Tutorials/Tutorial 3/pokemon.csv&quot;</span>, header = <span class="literal">TRUE</span>)</span><br></pre></td></tr></table></figure>

<br>
<br>

<h3 id="1"><a href="#1" class="headerlink" title="1"></a>1</h3><p>Create a <code>$1 \times 3$</code> plot which includes:</p>
<ul>
<li>A histogram of <code>speed</code></li>
<li>A histogram of <code>weight_kg</code></li>
<li>A scatterplot of <code>speed</code> vs. <code>weight_kg</code></li>
</ul>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">par(mfrow = <span class="built_in">c</span>(<span class="number">1</span>,<span class="number">3</span>))</span><br><span class="line">hist(x = poke$speed, main = <span class="string">&quot;Histogram of Speed&quot;</span>, xlab = <span class="string">&quot;Speed&quot;</span>,</span><br><span class="line">     col = adjustcolor(col = <span class="string">&quot;darkorchid&quot;</span>, alpha = <span class="number">0.4</span>))</span><br><span class="line">hist(x = poke$weight_kg, main = <span class="string">&quot;Histogram of Weight&quot;</span>, xlab = <span class="string">&quot;Weight (kg)&quot;</span>,</span><br><span class="line">     col = adjustcolor(col = <span class="string">&quot;navyblue&quot;</span>, alpha = <span class="number">0.4</span>))</span><br><span class="line">plot(x = poke$weight_kg, y = poke$speed,</span><br><span class="line">     main = <span class="string">&quot;Scatterplot of Speed vs. Weight&quot;</span>, xlab = <span class="string">&quot;Weight (kg)&quot;</span>, ylab = <span class="string">&quot;Speed&quot;</span>,</span><br><span class="line">     pch = <span class="number">16</span>, col = adjustcolor(col = <span class="string">&quot;firebrick&quot;</span>, alpha = <span class="number">0.4</span>))</span><br></pre></td></tr></table></figure>

<br>
<br>

<h3 id="2"><a href="#2" class="headerlink" title="2"></a>2</h3><p>Find a range of <code>$\alpha$</code> values that would help to “symmetrize” the <code>speed</code> distribution. Plot the histogram of <code>$T_&#123;\alpha&#125;(\texttt&#123;speed&#125;)$</code> using the value of <code>$\alpha$</code> that seems most appropriate.</p>
<p>(也就是第一个作业里的Power Transformations)<br>第一张图是right-skewed, bump is towards the lower value, consider alpha value less than 1.</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">powerfun &lt;- <span class="keyword">function</span>(x, alpha) &#123;</span><br><span class="line">  <span class="keyword">if</span>(<span class="built_in">sum</span>(x &lt;= <span class="number">0</span>) &gt; <span class="number">0</span>) stop(<span class="string">&quot;x must be positive&quot;</span>)</span><br><span class="line">  <span class="keyword">if</span> (alpha == <span class="number">0</span>)</span><br><span class="line">    <span class="built_in">log</span>(x)</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (alpha &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    x^alpha</span><br><span class="line">  &#125; <span class="keyword">else</span> -x^alpha</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">par(mfrow = <span class="built_in">c</span>(<span class="number">1</span>,<span class="number">9</span>), mar = <span class="built_in">c</span>(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>))</span><br><span class="line">alpha &lt;- seq(from = <span class="number">1</span>, to = -<span class="number">1</span>, by = -<span class="number">0.25</span>)</span><br><span class="line"><span class="keyword">for</span>(i <span class="keyword">in</span> <span class="number">1</span>:<span class="built_in">length</span>(alpha))&#123;</span><br><span class="line">  hist(x = powerfun(x = poke$speed, alpha = alpha[i]),</span><br><span class="line">       main = bquote(alpha == .(alpha[i])), xlab = <span class="string">&quot;&quot;</span>,</span><br><span class="line">       col = adjustcolor(col = <span class="string">&quot;darkorchid&quot;</span>, alpha = <span class="number">0.4</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Based on the figure above, <code>$\alpha = 0.5$</code> seems to do the best job. Here is a plot of the square-root-transformed <code>speed</code> data:</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">par(mfrow = <span class="built_in">c</span>(<span class="number">1</span>,<span class="number">1</span>))</span><br><span class="line">hist(x = powerfun(x = poke$speed, alpha = <span class="number">0.5</span>),</span><br><span class="line">     main = <span class="string">&quot;Histogram of Square-Root-Transformed Speed Data&quot;</span>,</span><br><span class="line">     xlab = <span class="built_in">expression</span>(<span class="built_in">sqrt</span>(Speed)), col = adjustcolor(col = <span class="string">&quot;darkorchid&quot;</span>, alpha = <span class="number">0.4</span>))</span><br></pre></td></tr></table></figure>

<br>
<br>

<h3 id="3"><a href="#3" class="headerlink" title="3"></a>3</h3><p>Find a range of <code>$\alpha$</code> values that would help to “symmetrize” the <code>weight</code> distribution. Plot the histogram of <code>$T_&#123;\alpha&#125;(\texttt&#123;weight&#125;)$</code> using the value of <code>$\alpha$</code> that seems most appropriate.</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">par(mfrow = <span class="built_in">c</span>(<span class="number">1</span>,<span class="number">9</span>), mar = <span class="built_in">c</span>(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>))</span><br><span class="line">alpha &lt;- seq(from = <span class="number">1</span>, to = -<span class="number">1</span>, by = -<span class="number">0.25</span>)</span><br><span class="line"><span class="keyword">for</span>(i <span class="keyword">in</span> <span class="number">1</span>:<span class="built_in">length</span>(alpha))&#123;</span><br><span class="line">  hist(x = powerfun(x = poke$weight_kg, alpha = alpha[i]),</span><br><span class="line">       main = bquote(alpha == .(alpha[i])), xlab = <span class="string">&quot;&quot;</span>,</span><br><span class="line">       col = adjustcolor(col = <span class="string">&quot;navyblue&quot;</span>, alpha = <span class="number">0.4</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Based on the figure above, <code>$\alpha \in [0,0.25]$</code> looks good. Let’s refine our search:</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">par(mfrow = <span class="built_in">c</span>(<span class="number">1</span>,<span class="number">6</span>), mar = <span class="built_in">c</span>(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>))</span><br><span class="line">alpha &lt;- seq(from = <span class="number">0.25</span>, to = <span class="number">0</span>, by = -<span class="number">0.05</span>)</span><br><span class="line"><span class="keyword">for</span>(i <span class="keyword">in</span> <span class="number">1</span>:<span class="built_in">length</span>(alpha))&#123;</span><br><span class="line">  hist(x = powerfun(x = poke$weight_kg, alpha = alpha[i]),</span><br><span class="line">       main = bquote(alpha == .(alpha[i])), xlab = <span class="string">&quot;&quot;</span>,</span><br><span class="line">       col = adjustcolor(col = <span class="string">&quot;navyblue&quot;</span>, alpha = <span class="number">0.4</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Based on the plots above, choosing <code>$\alpha = 0.1$</code> seems like it should work well. Here is a plot of this power-transformed <code>weight</code> data:</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">par(mfrow = <span class="built_in">c</span>(<span class="number">1</span>,<span class="number">1</span>))</span><br><span class="line">hist(x = powerfun(x = poke$weight_kg, alpha = <span class="number">0.1</span>),</span><br><span class="line">     main = <span class="string">&quot;Histogram of Power-Transformed Weight Data&quot;</span>,</span><br><span class="line">     xlab = bquote(Weight^<span class="number">0.1</span>), col = adjustcolor(col = <span class="string">&quot;navyblue&quot;</span>, alpha = <span class="number">0.4</span>))</span><br></pre></td></tr></table></figure>

<br>
<br>

<h3 id="4"><a href="#4" class="headerlink" title="4"></a>4</h3><p>Cast the ‘optimal power transformation’ problem in the univariate setting as an implicitly defined attribute problem and determine the optimal <code>$\alpha$</code> values for both the <code>speed</code> and <code>weight</code> data. Construct histograms of these optimally-power-transformed variates.</p>
<p>Let <code>$\alpha$</code> be the attribute of interest, and let <code>$t_u = T_&#123;\alpha&#125;(y_u)$</code> be the power-transformed observation for unit <code>$u$</code>. Let us also define the objective function to be minimized as the absolute value of Pearson’s moment coefficient of skewness for the transformed data: <code>$\rho(\alpha;\mathcal&#123;P&#125;) = \left|\frac&#123;\frac&#123;1&#125;&#123;N&#125;\sum_&#123;u \in \mathcal&#123;P&#125;&#125;\left(t_u-\bar&#123;t&#125;\right)^3&#125;&#123;[SD(t)]^3&#125;\right|$</code></p>
<p>Thus the problem of finding the optimal <code>$\alpha$</code> reduces to the following optimization problem: <code>$\widehat&#123;\alpha&#125; = \operatorname*&#123;arg min&#125;_&#123;\alpha \in \mathbb&#123;R&#125;&#125;\rho(\alpha;\mathcal&#123;P&#125;)$</code></p>
<p>In <code>R</code> let’s define <code>$\rho(\alpha;\mathcal&#123;P&#125;)$</code> and then use the <code>nlminb</code> function to minimize it.</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">rho_skew &lt;- <span class="keyword">function</span>(theta, y)&#123;</span><br><span class="line">  t &lt;- powerfun(y, alpha = theta)</span><br><span class="line">  skew &lt;- mean((t - mean(t))^<span class="number">3</span>) / sd(t)^<span class="number">3</span></span><br><span class="line">  <span class="built_in">return</span>(<span class="built_in">abs</span>(skew))</span><br></pre></td></tr></table></figure>

<p>Let’s find the  optimal <code>$\alpha$</code> for the <code>speed</code> data and plot the resulting histogram:</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">min1 &lt;- nlminb(start = <span class="number">1</span>, objective = rho_skew, y = poke$speed)</span><br><span class="line">print(min1)</span><br><span class="line">hist(x = powerfun(x = poke$speed, alpha = min1$par),</span><br><span class="line">     main = <span class="string">&quot;Histogram of Optimally Power-Transformed Speed Data&quot;</span>,</span><br><span class="line">     xlab = <span class="string">&quot;T(Speed)&quot;</span>, col = adjustcolor(col = <span class="string">&quot;darkorchid&quot;</span>, alpha = <span class="number">0.4</span>))</span><br><span class="line">mtext(text = bquote(<span class="string">&quot;(&quot;</span> ~ alpha == .(min1$par) ~ <span class="string">&quot;)&quot;</span>), side = <span class="number">3</span>)</span><br></pre></td></tr></table></figure>

<p>Let’s find the  optimal <code>$\alpha$</code> for the <code>weight</code> data and plot the resulting histogram:</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">min2 &lt;- nlminb(start = <span class="number">1</span>, objective = rho_skew, y = poke$weight_kg)</span><br><span class="line">print(min2)</span><br><span class="line">hist(x = powerfun(x = poke$weight_kg, alpha = min2$par),</span><br><span class="line">     main = <span class="string">&quot;Histogram of Optimally Power-Transformed Weight Data&quot;</span>,</span><br><span class="line">     xlab = <span class="string">&quot;T(Weight)&quot;</span>, col = adjustcolor(col = <span class="string">&quot;navyblue&quot;</span>, alpha = <span class="number">0.4</span>))</span><br><span class="line">mtext(text = bquote(<span class="string">&quot;(&quot;</span>~ alpha == .(min2$par) ~ <span class="string">&quot;)&quot;</span>), side = <span class="number">3</span>)</span><br></pre></td></tr></table></figure>

<p>Notice that in both cases the “optimal <code>$\alpha$</code>“ was not far from the values we determined using Bump Rule #1. In general, although we can always find an optimal power transformation algorithmically (like we did above), the ladder heuristc tends to work pretty well.</p>
<br>
<br>

<h3 id="5"><a href="#5" class="headerlink" title="5"></a>5</h3><p>Find a range of <code>$\alpha_x$</code> and <code>$\alpha_y$</code> values that would help to “linearize” the relationship between <code>$T_&#123;\alpha_y&#125;(\texttt&#123;speed&#125;)$</code> and <code>$T_&#123;\alpha_x&#125;(\texttt&#123;weight&#125;)$</code>. Plot the scatterplot of <code>$T_&#123;\alpha_y&#125;(\texttt&#123;speed&#125;)$</code> vs. <code>$T_&#123;\alpha_x&#125;(\texttt&#123;weight&#125;)$</code> using the values of <code>$\alpha_y$</code> and <code>$\alpha_x$</code> that seem most appropriate.</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">alpha_x &lt;- seq(from = <span class="number">1</span>, to = -<span class="number">1</span>, length.out = <span class="number">5</span>)</span><br><span class="line">alpha_y &lt;- seq(from = <span class="number">1</span>, to = -<span class="number">1</span>, length.out = <span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">corMat &lt;- matrix(<span class="number">0</span>, nrow = <span class="built_in">length</span>(alpha_x), ncol = <span class="built_in">length</span>(alpha_y))</span><br><span class="line"></span><br><span class="line">par(mfrow = <span class="built_in">c</span>(<span class="built_in">length</span>(alpha_x),<span class="built_in">length</span>(alpha_y)), mar = <span class="built_in">c</span>(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1.5</span>,<span class="number">1</span>))</span><br><span class="line"><span class="keyword">for</span>(i <span class="keyword">in</span>  <span class="number">1</span>:<span class="built_in">length</span>(alpha_x))&#123;</span><br><span class="line">  <span class="keyword">for</span>(j <span class="keyword">in</span> <span class="number">1</span>:<span class="built_in">length</span>(alpha_y))&#123;</span><br><span class="line">    plot(x = powerfun(poke$weight_kg, alpha = alpha_x[i]), y = powerfun(poke$speed, alpha = alpha_y[j]),</span><br><span class="line">         main = bquote(alpha[x] == .(alpha_x[i]) ~ <span class="string">&quot;, &quot;</span> ~ alpha[y] == .(alpha_y[j])),</span><br><span class="line">         xlab = <span class="string">&quot;&quot;</span>, ylab = <span class="string">&quot;&quot;</span>, xaxt = <span class="string">&quot;n&quot;</span>, yaxt = <span class="string">&quot;n&quot;</span>,</span><br><span class="line">         pch = <span class="number">16</span>, col = adjustcolor(col = <span class="string">&quot;firebrick&quot;</span>, alpha = <span class="number">0.4</span>))</span><br><span class="line">    corMat[i,j] &lt;- cor(powerfun(poke$weight_kg, alpha = alpha_x[i]), powerfun(poke$speed, alpha = alpha_y[j]))</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">print(corMat)</span><br></pre></td></tr></table></figure>

<p>The plot and matrix of correlations above suggest that <code>$\alpha_x=0$</code> and <code>$\alpha_y=0$</code> provide power transformations such that the relationship between <code>$T_&#123;\alpha_y&#125;(\texttt&#123;speed&#125;)$</code> and <code>$T_&#123;\alpha_x&#125;(\texttt&#123;weight&#125;)$</code> is <em>most linear</em>. Further refinement of the <code>$\alpha$</code>‘s is definitely possible, but a log-transformation is nice and easy to interpret so let’s go ahead with it:</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">par(mfrow = <span class="built_in">c</span>(<span class="number">1</span>,<span class="number">1</span>))</span><br><span class="line">plot(x = powerfun(poke$weight_kg, alpha = <span class="number">0</span>), y = powerfun(poke$speed, alpha = <span class="number">0</span>),</span><br><span class="line">         main = <span class="string">&quot;Scatterplot of Log-Transformed Variates&quot;</span>,</span><br><span class="line">         xlab = <span class="string">&quot;log(Weight)&quot;</span>, ylab = <span class="string">&quot;log(Speed)&quot;</span>,</span><br><span class="line">         pch = <span class="number">16</span>, col = adjustcolor(col = <span class="string">&quot;firebrick&quot;</span>, alpha = <span class="number">0.4</span>))</span><br></pre></td></tr></table></figure>

<br>
<br>

<h3 id="6"><a href="#6" class="headerlink" title="6"></a>6</h3><p>Cast the ‘optimal power transformation’ problem in the bivariate setting as an implicitly defined attribute problem and determine the optimal <code>$\boldsymbol\alpha$</code> value to “straighten” the scatterplot of <code>speed</code> versus <code>weight</code>. Construct a scatterplot using the optimally-power-transformed variates.</p>
<p>Let <code>$\boldsymbol\alpha = (\alpha_x, \alpha_y)$</code> be the attribute of interest, and let <code>$t_u = T_&#123;\alpha_y&#125;(y_u)$ and $v_u = T_&#123;\alpha_x&#125;(x_u)$</code>. Let us also define the objective function to be minimized as the negative of the absolute value of the correlation coefficient between the transformed variates (since we actually want to maximize this): <code>$\rho(\boldsymbol\alpha;\mathcal&#123;P&#125;) = -\left|\frac&#123;\sum_&#123;u \in \mathcal&#123;P&#125;&#125;(v_u-\bar&#123;v&#125;)(t_u-\bar&#123;t&#125;)&#125;&#123;\sqrt&#123;\sum_&#123;u \in \mathcal&#123;P&#125;&#125;(v_u-\bar&#123;v&#125;)^2&#125;\sqrt&#123;\sum_&#123;u \in \mathcal&#123;P&#125;&#125;(t_u-\bar&#123;t&#125;)^2&#125;&#125;\right|$</code></p>
<p>Thus the problem of finding the optimal <code>$\boldsymbol\alpha$</code> reduces to the following optimization problem: <code>$\widehat&#123;\boldsymbol\alpha&#125; = \operatorname*&#123;arg min&#125;_&#123;\boldsymbol\alpha \in \mathbb&#123;R&#125;^2&#125;\rho(\boldsymbol\alpha;\mathcal&#123;P&#125;)$</code></p>
<p>In <code>R</code> let’s define <code>$\rho(\boldsymbol\alpha;\mathcal&#123;P&#125;)$</code> and then use the <code>nlminb</code> function to minimize it.</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">rho_cor &lt;- <span class="keyword">function</span>(alpha, x, y)&#123;</span><br><span class="line">  alphax &lt;- alpha[<span class="number">1</span>]</span><br><span class="line">  alphay &lt;- alpha[<span class="number">2</span>]</span><br><span class="line">  <span class="built_in">return</span>(-<span class="built_in">abs</span>(cor(x = powerfun(x, alpha = alphax), y = powerfun(y, alpha = alphay))))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Let’s find the  optimal <code>$\boldsymbol\alpha$</code> for the scatterplot of <code>speed</code> versus <code>weight</code> and plot the resulting optimally transformed data:</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">min3 &lt;- nlminb(start = <span class="built_in">c</span>(<span class="number">1</span>,<span class="number">1</span>), objective = rho_cor, x = poke$weight_kg, y = poke$speed)</span><br><span class="line">print(min3)</span><br><span class="line">plot(x = powerfun(poke$weight_kg, alpha = min3$par[<span class="number">1</span>]), y = powerfun(poke$speed, alpha = min3$par[<span class="number">2</span>]),</span><br><span class="line">         main = <span class="string">&quot;Scatterplot of Optimally Power-Transformed Data&quot;</span>,</span><br><span class="line">         xlab = <span class="string">&quot;T(Weight)&quot;</span>, ylab = <span class="string">&quot;T(Speed)&quot;</span>,</span><br><span class="line">         pch = <span class="number">16</span>, col = adjustcolor(col = <span class="string">&quot;firebrick&quot;</span>, alpha = <span class="number">0.4</span>))</span><br><span class="line">mtext(text = bquote(<span class="string">&quot;(&quot;</span> ~ alpha[x] == .(min3$par)[<span class="number">1</span>] ~ <span class="string">&quot; , &quot;</span> ~ alpha[y] == .(min3$par[<span class="number">2</span>]) ~ <span class="string">&quot;)&quot;</span>), side = <span class="number">3</span>)</span><br></pre></td></tr></table></figure>

<p>Notice the “optimal correlation” is 0.1431949, which is not so different from the one we found (0.14163987) using Bump Rule #2<br>– and our transformations are much more easily interpreted. In general, although we can always find an optimal power transformation algorithmically (like we did above), the ladder heuristc tends to work pretty well.</p>
]]></content>
      <categories>
        <category>数学笔记</category>
      </categories>
      <tags>
        <tag>Thank you Mr.goose</tag>
        <tag>编码</tag>
        <tag>以头抢地(诚)</tag>
        <tag>data</tag>
        <tag>R</tag>
      </tags>
  </entry>
  <entry>
    <title>关于Excel的笔记</title>
    <url>/blog/2021/10/15/P166/</url>
    <content><![CDATA[<img src="/blog/2021/10/15/P166/P160_.png" class="">
<p>简陋版.</p>
<span id="more"></span>

<h1 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h1><div class="note ">
            <p>ctrl+ home 可以快速回表格的A1.</p>
          </div>

<div class="note ">
            <img src="/blog/2021/10/15/P166/P166_1.png" class="" width="330" height="220" title="绿色的toolbar"><p>常用功能可以右键放到quick access toolbar.</p>
          </div>

<div class="note ">
            <p>快捷键F1 -&gt; help</p>
          </div>

<div class="note ">
            <p>在execel中variable type是数字的会靠右,其他会靠左.<br>日期会识别成数字type.甚至可以date+100来计算100天后的日期.</p>
          </div>

<div class="note ">
            <p><strong>ctrl + Y</strong> for redo</p>
          </div>

<div class="note ">
            <img src="/blog/2021/10/15/P166/P166_2.png" class="" width="330" height="150">用dialogue box launcher to change text format.
          </div>

<div class="note ">
            <p>execel自动format排版.<br><img src="/blog/2021/10/15/P166/P166_3.png" class=""><br>左上的小三角是全选,点击两个column/row之间的boundary可以自动排版.</p>
          </div>

<div class="note ">
            <img src="/blog/2021/10/15/P166/P166_4.png" class="">insert新row,不单单可以全表insert新row,还可以选中想要的部分表格再insert, shift cells down.
          </div>

<div class="note ">
            <p>我们可以hide the column.顺便一提用自动排版会把hidden的column一键找出来.</p>
          </div>

<div class="note ">
            <p>make a copy -&gt; ctrl + drag<br>move -&gt; just drag<br>move and insert a row -&gt; shift + drag</p>
          </div>

<div class="note ">
            <p>我们可以set print area.在print前更改page layout.<br>print short key -&gt; ctrl + p</p>
          </div>

<div class="note ">
            <p>(选中数据)alt + F1 -&gt; create a column chart</p>
          </div>

<div class="note ">
            <p>create chart in a separate sheet -&gt; F11 key</p>
          </div>

<div class="note ">
            <p>小tip之可以freeze panes,比如保留info的column, scroll down查看数据时更加方便.</p>
          </div>

<div class="note ">
            <p>小tip之group sheet.如果一个excel文件中有多个同排版的sheet,可以group后一起处理(比如字体格式变更).</p>
          </div>

<div class="note ">
            <p>整理数据时也可以用filter看表格中的数据一共有的类型.</p>
          </div>

<br>
<br>
<br>

<h1 id="function"><a href="#function" class="headerlink" title="function"></a>function</h1><div class="note ">
            <p>autofill, 比较牛逼的一种自动检测sum, short cut是 <strong>alt + =</strong></p>
          </div>

<div class="note ">
            <p>xlookup或者vlookup,hlookup可以通过id查询另一个column里的对应值.<br>单纯的寻找我们可以使用find and select选项.<br>(可以把vlookup当作left join)</p><p>在使用vlookup的时候,要注意锁住(用$ sign)查找对应用的range.</p>
          </div>

<div class="note ">
            <p>sort in excel.<br>ctrl + A, 全选(会通过旁边是否有null的column来判断全表的内容)<br>ctrl + .(period) move the active cell around the corner of the range.<br>home tap有sort and filter, data tap里也有.</p>
          </div>

<div class="note ">
            <p>chart里没有null的数据.<br>insert -&gt; pivot table</p>
          </div>

<br>
<br>
<br>

<h1 id="pivot-table"><a href="#pivot-table" class="headerlink" title="pivot table"></a>pivot table</h1><p>关于pivot table.<br>可以快速计算table中的各个数据属性.<br>Row和Column是用来分析的数据属性,value是值.<br>比如我想知道countryside和city中的商品数据.<br>则按coutryside和city的location作为column,商品种类作为rows.<br>value可以选很多种,可以选任何一个column再选择count则是商品的贩卖数量,选总贩卖金额则是sum等.<br>最后加filters,用某个category的column来筛选数据.</p>
<p>注:可以在上方工具栏的design上选择subtotal选项.pivot table会默认给一个total,可以去掉.</p>
<div class="note ">
            <p>ctrl + ⬆️ -&gt; 最上的一行<br>ctrl + ⬇️ -&gt; 最下的一行</p><p>要implement一整列的数据这样的快捷键很方便.</p>
          </div>

<div class="note ">
            <p>比较数字大小,可以增加filter,用sort排序来看大小.</p>
          </div>

<br>
<br>
<br>

<h1 id="quiz"><a href="#quiz" class="headerlink" title="quiz"></a>quiz</h1><p>来自于Nov18收到的测试题.考的是基本操作,搜到的方法收集如下.</p>
<ol>
<li>Highlight all Numbers greater than 80. 使用<a href="https://www.excel-easy.com/data-analysis/conditional-formatting.html">Conditional formatting.</a></li>
</ol>
<ol start="2">
<li><p>Remove the “-“ from the phone numbers.<a href="https://exceljet.net/formula/clean-and-reformat-telephone-numbers">1</a><a href="https://www.extendoffice.com/documents/excel/4286-excel-convert-phone-number-to-digits.html">&amp;2</a>.</p>
</li>
<li><p><a href="https://www.extendoffice.com/documents/excel/2412-excel-count-cells-between-two-values.html">How To Count Number Of Cells Between Two Values Or Dates In Excel?</a></p>
</li>
</ol>
<ol start="4">
<li><p><a href="https://www.excel-easy.com/examples/substring.html">Substring.</a></p>
</li>
<li><p><a href="https://www.ablebits.com/office-addins-blog/2015/09/29/using-excel-find-replace/">Change value.</a></p>
</li>
</ol>
<ol start="6">
<li><p><a href="https://www.youtube.com/watch?v=XAAes_7ondA">How to Use Excel to Match Up Two Different Columns</a></p>
</li>
<li><p>Date<br>Excel DATE Function<br><a href="https://exceljet.net/excel-functions/excel-date-function">https://exceljet.net/excel-functions/excel-date-function</a></p>
</li>
</ol>
<p>Calculate the difference between two dates<br><a href="https://support.microsoft.com/en-us/office/calculate-the-difference-between-two-dates-8235e7c9-b430-44ca-9425-46100a162f38">https://support.microsoft.com/en-us/office/calculate-the-difference-between-two-dates-8235e7c9-b430-44ca-9425-46100a162f38</a></p>
<p>How to split text string in Excel by comma, space, character or mask<br><a href="https://www.ablebits.com/office-addins-blog/2016/06/01/split-text-string-excel/">https://www.ablebits.com/office-addins-blog/2016/06/01/split-text-string-excel/</a></p>
<p>date difference<br><a href="https://exceljet.net/excel-functions/excel-datedif-function">https://exceljet.net/excel-functions/excel-datedif-function</a></p>
]]></content>
      <categories>
        <category>数学笔记</category>
      </categories>
      <tags>
        <tag>以头抢地(诚)</tag>
        <tag>excel</tag>
      </tags>
  </entry>
  <entry>
    <title>手作饼干与阿宅社交新闻</title>
    <url>/blog/2021/02/23/P171/</url>
    <content><![CDATA[<img src="/blog/2021/02/23/P171/P171.jpg" class="">
<p>感谢飞哥提供的手作小饼干,女子力满满的飞哥也十分有魅力.</p>
<span id="more"></span>
<br>
<br>
<br>

<p>这个学期也回到了日本语小课堂,因为新冠见不到人也再度报名了文化交流会.<br>也再度发生加拿大日本文化交流小组里没有加拿大人…<br>加拿大,不愧是移民国家.</p>
<p>这次是一位法国人和两位日本人.<br>法国小哥coop(工作实习)的时候去过四个月日本,研究了四个月日本的食物,是会把纳豆作为早饭吃的人,被日本朋友吐槽是个口味日本人.<br>法国小哥的祖上是罗马尼亚人,所以以下记载的法国不一定完全是法国,还是罗马尼亚的习惯.</p>
<p>我也好想吃日本食物……</p>
<p>这次是每周两次找话题每个人介绍.一次日语一次英语.<br>虽然日语还没好到可以日常交流,但日本朋友能用自己的语言介绍更轻松地介绍是很开心的.<br>也列一个top5,再加上一些杂杂的话题.</p>
<p><strong>top5(法国和日本):温泉.</strong><br>好羡慕啊!!当日本朋友介绍了日本温泉之后,法国小哥也介绍了温泉.<br>日本朋友甚至推荐了个温泉漫画,<a href="https://ja.wikipedia.org/wiki/%E3%83%86%E3%83%AB%E3%83%9E%E3%82%A8%E3%83%BB%E3%83%AD%E3%83%9E%E3%82%A8">Thermae Romae</a>.讲的是古代的罗马人穿越到日本来泡温泉.<br>我这辈子还没泡过温泉…!!十分的羡慕……</p>
<p><strong>top4(法国):圣诞节.</strong><br>圣诞节前两周会有christmas market.卖一些食物和手艺品.<br>让我在意的是其中会卖mulled wine,是一种热饮.<br>材料:红酒或白葡萄酒,肉桂,豆蔻,八角,丁香,枫糖浆或蜂蜜.<br>香料太多了,这种饮料的味道我是实在想象不到!</p>
<p><strong>top3(法国):圣诞节是最大的节日.其次是复活节.</strong><br>复活节有一种小游戏.每个人拿一个复活蛋,然后碰撞看哪个人的蛋先碎.<br>因为有那么点神秘所以印象很深.</p>
<p><strong>top2(日本):箱根(Hakone)的旅游介绍之旅馆实在是太好看了……</strong><br>宾馆和旅馆是两种不同的概念.之前看影视作品的时候多多少少有注意到,才知道称呼本身就不一样.<br>宾馆是我们经常知道的宾馆.旅馆是和风的建筑,榻榻米的地板,餐点会送到房间里,还会有石头形状的浴缸.<br>箱根因温泉而出名,然而看到旅馆照片的时候我差点脱口而出,如果能入住旅馆我能呆好几天根本不会出门旅行!</p>
<p><strong>top1(法国):早饭吃牛奶米饭.</strong><br>这件事是闲聊的时候知道的.问起早饭吃什么,法国小哥说昨天中午吃剩的米饭加上牛奶作为早饭.<br>日本朋友:牛奶怎么可以加米饭!<br>法国小哥:你们亚洲人有没有搞错,这明明是米饭最美味的吃饭!!</p>
<blockquote>
<p><a href="https://www.food.com/recipe/milk-rice-134877">Rice with milk.</a><br>可以用剩饭加牛奶煮,推荐是直接用牛奶煮米饭.常见调味料是盐,糖.法国小哥会加肉桂粉.</p>
</blockquote>
<br>
<br>
<br>

<!-- 除了上文谈到的,法国小哥也介绍了些传统食物,我在这里记载一下名字:
【Salată de boeuf】【salata de vinete】【Mititei】【Risotto】-->

<p>最后记载一下有一次的会议淡了喜欢的影视作品(动画main).<br>我试图收起自己的宅宅属性,于是讲了虹猫蓝兔与李小龙的功夫哲学.<br>法国小哥喜欢的是jump系,老作品喜欢灌篮高手,新作品电锯人也有在看.<br>还推荐了个设定里加拿大是天堂的漫画,<a href="https://ja.wikipedia.org/wiki/%E3%83%B4%E3%82%A3%E3%83%B3%E3%83%A9%E3%83%B3%E3%83%89%E3%83%BB%E3%82%B5%E3%82%AC">Vinland Saga</a>.<br>(上个学期也有人在日本语小教室里推荐这个,记下了.)<br>日本朋友一位宅龄只有半年,推荐的是会长是女仆大人和四月是你的谎言.<br>另一位朋友推荐了迪斯尼系的电影与宫崎骏动画,很经典了.<br>最后谈到了白箱,是部讲做动画的动画.</p>
<blockquote>
<p>我:啊我有看过白箱呢.<br>日本朋友:连白箱你都知道,那你蛮宅的.<br>(在这里暴露?!?!)</p>
</blockquote>
<p>下一周大家约定讲动画以外的影视作品,这也太难为我这个宅宅了.</p>
<!-- [除夕的钟](https://ja.wikipedia.org/wiki/%E9%99%A4%E5%A4%9C%E3%81%AE%E9%90%98). -->
<!-- Réveillon -->
]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>情绪与风</title>
    <url>/blog/2021/02/22/P172/</url>
    <content><![CDATA[<img src="/blog/2021/02/22/P172/P172.jpg" class="">
<p>收录一下灰桑画给我的图!!!</p>
<p>谢谢灰桑赐予我的宝贝…太喜欢灰的水彩了……<br>包含着温柔的感情……的感觉!!!</p>
<span id="more"></span>

<img src="/blog/2021/02/22/P172/P182_1.jpg" class="">
<p>谢谢灰!!谢谢灰!!!</p>
<img src="/blog/2021/02/22/P172/P182_2.jpg" class="">
<p>谢谢灰!!!!!!</p>
<br>
<br>
<br>


<p>相关图书馆编号:char30,char31,char44,char45.</p>
]]></content>
      <categories>
        <category>朋友给的画</category>
      </categories>
      <tags>
        <tag>oc</tag>
        <tag>怪异专家与助手</tag>
        <tag>狼与兔</tag>
      </tags>
  </entry>
  <entry>
    <title>在春假踏上的寻找自我的旅途 - 伤物语</title>
    <url>/blog/2021/04/02/P175/</url>
    <content><![CDATA[<blockquote>
<p>没有让大家都幸福的办法,倒是有让大家都不幸的方法.</p>
</blockquote>
<p>这是好作品补全计划的第三部,第二部选的作品太长了,正在绝赞拖稿中.<br>这也是部被剧透了就会影响观感的作品,read me之后马上就是剧透,还请多注意.</p>
<span id="more"></span>

<br>
<br>

<p>列了不少想好好拜读的作品,没计划写伤物语.<br>这几天企鹅罐和阳炎宣布了十周年企划,一瞬间获得了淳朴又简单的生存快乐.顺便怀念青春就把另一部,这部伤物语,我中二起点的作品读了一遍.<br>十年后回来再读的感悟挺不一样,想百余字快速记载下难得的感慨.</p>
<p>我是初中的时候了解到物语,和西尾维新这位鬼才小说人的.<br>物语以外或多或少也看了些,大多是初中空闲时读的.西尾有别称人形打印机,他写的多又快,的确没读完几个系列,不算合格粉丝.<br>当初他的作品印象是,很容易被吸他小说中的冒险,一口气冲进非日常世界.他小说我看起来也快,记得工作日的时候一天也能读一本,那时候真的有好好写作业吗.</p>
<br>
<br>

<p>这次回顾的时候,即使是二周目,还记得结局与伏笔,也能感受体验到冒险感.<br>故事的节奏很好,每个章节之间的停顿恰到好处.<br>小说主体是对话和第一视角,阿良良木的心里活动,换个说法的话,是由阿良良木自己跟自己的对话与阿良良木和他人的对话构成.<br>也许这也是轻小说的快节奏与代入感的来源吧.去除很复杂的东西,用爽快的描写切出剧情.<br>狂笑就写了很多笑声,打斗就用想象力来平铺满画面,(写黄段子就写了四页来描写胖次).<br>也就轻小说会这么乱来吧.<br>虽然大家都说西尾废话很多,的确啦,不过我觉得这样的文字量可以达成控制观众在某段剧情,某段情感上停留时间的效果.也就是之前说的节奏.</p>
<br>
<br>

<hr>
<p>故事的结构,这次看就很清楚了.<br>主要角色有四,感情浓重的主要人物有三,是羽川,阿良良木和kissshot.<br>第四位是忍野,对我来说是故事和立场辅助,当然也在这个故事中有很大的作用.<br>忍野的立场是中立,某种意义上阿良良木(和羽川)和kissshot负责引出矛盾,忍野负责控制平衡和解决矛盾.<br>伤物语比较短,也是时间线的第一部,所以没有复杂的前情提要.</p>
<p>伤物语给的矛盾,想要探讨的事很干净.<br>我将其称为 <strong>食物链矛盾</strong> 和 <strong>伪善(无法承担后果的善良)矛盾</strong> .这点从日常的两人中,阿良良木的善良和羽川翼的善良上体现.<br>食物链矛盾则是设定上的吸血鬼会吃人而呈现.</p>
<p>剧情也简单,也有转折和伏笔,小却五脏俱全.</p>
<p><strong>起因</strong> ,<br>主角阿良良木对濒死的吸血鬼kissshot同情,想将自己的性命献出来拯救kissshot,被卷入非日常.<br><strong>冒险的动机</strong> ,<br>kisshot被夺走四肢(吸血鬼的力量),将阿良良木变成自己的吸血鬼眷属,让他替自己取回四肢,并答应事成之后将他变回人类.<br><strong>转折</strong> ,<br>取回四肢后阿良良木和kissshot交心,却目击kisshot进食人类,意识到了自己行为的矛盾,在羽川的帮助下决定将kissshot消灭.<br><strong>回收伏笔</strong> ,<br>kissshot最初就期盼死亡,也最初准备让阿良良木杀死自己而变回人类.<br><strong>西尾式结局</strong> ,<br>阿良良木没能杀死kissshot,也没成为人类.</p>
<br>
<br>

<p>阿良良木的善是一切的起点.他的善意简单也很有大众感.对弱者,对濒死的kissshot给予帮助,却没思考过后果.<br>这之后带来了矛盾,他最初的共情导致人死亡.看阿良良木的善与羽川的善的区别,能明白阿良良木的善的危险之处.<br>不过在回收伏笔的剧情中,他明明决定站在人类方去杀死kissshot,却因kissshot的人情味再次共情而无法做到.<br>他的确是善良的,到结局会向忍野问出:希望你告诉我让大家都幸福的方法,这样单纯的善.<br>第二次的共情就很有意思.也许是再次的软弱,也许这次是了解到后果的共情.</p>
<p>羽川在非日常冒险中作为普通人陪伴在主角身旁的角色,也辅助人类视角的逻辑.<br>她的善和阿良良木的善是不一样的.她是过考虑后果还着坚持自身的善意.<br>对羽川的描写是优等生,她的善说的很清楚,也有似侵略一样的可怕.<br>阿良良木对她来说是仅说过一次话的同校生.当阿良良木被卷入非日常时,她不但注意到,还拼上的命去帮忙.<br>但只对阿良良木才会做到这个程度.<br>她的自我定位很清楚:</p>
<blockquote>
<p>这不是自我牺牲,是自我满足.<br>如果你知道我的真面目肯定会大失所望.</p>
</blockquote>
<p>她被非日常吸引了,也被非日常的阿良良木吸引了.所以她做的善是从自身出发来考虑的,她自己很清楚这一点.<br><em>(初中时代的我是单纯的班长厨,明明根本没注意到羽川的可怕之处,简直是伪厨.)</em></p>
<p>kissshot的位置(对于人类来说)是反派,是矛盾的来源,但她本就想死一直没能做到,也最初就想好了要为阿良良木去死.<br>她作为吸血鬼,是食物链矛盾和善意矛盾的呈现.<br>但kisshot也带有不同的情,不是刻板的反派.<br>kissshot的人情味将矛盾再次加深.</p>
<p>所以由羽川来戳穿kissshot的(想扮反派骗阿良良木杀她的)目的,这个剧情我觉得很有意思.<br>(立场上正正好,故事剧情上也正正好.)<br>吸血鬼相关的非日常设定也没一开始全部说出,随着剧情的走向伴着角色的目的而揭露,也正正好.<br>(设定服务剧情的感觉呢.)</p>
<blockquote>
<p>羽川她是说戳穿的原因是阿良良木被骗很可怜.<br>羽川真是个狠人啊…如果她的完全是为了阿良良木,她也没有引导以”阿良良木变成人类”这个对他最好的结局来考虑.<br>她的善意也是否包括了想要kissshot的这份自我牺牲心意被知晓,还是希望阿良良木自身去了解和面对一切呢.</p>
</blockquote>
<p>忍野身上当然也有独特的善,他的哲学非常西尾.<br>如果说羽川是侵略性的,那他就是跟羽川完全相反.<br>不过这次大量的内容没有放在忍野身上,我觉得他这次帮助更大的是对故事的整体走向.作为怪异的专家也是(西尾式)人生前辈给故事上了层保险.</p>
<p>最后的结局,忍野提议的是将不幸分散,大家一起承担.<br>kissshot没能去死,阿良良木没能变回人类.<br>但也可以说,kissshot没能让阿良良木变回人类,阿良良木也没能拯救kissshot.<br>这个结局真的很西尾啊!!<br>没有“一切都没有留下后果,只剩美好回忆”,留下的只有伤口.</p>
<blockquote>
<p>互相伤害的我们，在一起互舔伤口。<br>受伤的我们，彼此寻求慰藉。<br>「如果你的生命明天到了尾声，那我活到明天便足够；如果你今天为我活了下来，那我也会活在当下。」</p>
</blockquote>
<p>这段真的是可以列入帅酷大全的中二台词.</p>
<p>西尾曾经讲过没必要在故事中寻找能给生活帮助的人生哲学,只觉得读了个故事就可以了.<br>所以这个结局是西尾对善的无奈,还是西尾自己相信的一种善,就仁者见仁了.</p>
<br>
<br>
<br>

<p>这次记载是时隔十年我才把这个鲜明的立场对立看清.当年全被剧情大暴走和班长杀必死吸引走.<br>不愧是西尾.<br>能把不同人差别大的设定如此自然的在剧情中体现,又擦碰出走向的火花,真是好啊.</p>
<br>

<p>不过自己十年前就在看这么狂的东西,我的人生是不是冥冥中就定下了怪人的路线…</p>
]]></content>
      <categories>
        <category>读后感</category>
      </categories>
      <tags>
        <tag>好作品补全计划</tag>
      </tags>
  </entry>
  <entry>
    <title>关于bash的笔记 - 简陋版</title>
    <url>/blog/2021/03/14/P176/</url>
    <content><![CDATA[<p>真的很简陋.用于唤醒遗忘的记忆.</p>
<span id="more"></span>

<br>
<br>
<br>

<p>#copy</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cp fileName directory</span><br></pre></td></tr></table></figure>

<p>#delete</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rm fileName</span><br></pre></td></tr></table></figure>

<p>#newFolder</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir directoryName</span><br></pre></td></tr></table></figure>

<p>#move</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mv fileName directoryName</span><br></pre></td></tr></table></figure>

<p>还可以用mv来改名.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mv oldFilename newFilename</span><br></pre></td></tr></table></figure>

<p>#create</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">touch fileName</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>数学笔记</category>
      </categories>
      <tags>
        <tag>Thank you Mr.goose</tag>
        <tag>编码</tag>
        <tag>以头抢地(诚)</tag>
        <tag>bash</tag>
      </tags>
  </entry>
  <entry>
    <title>草莓和病院服</title>
    <url>/blog/2021/03/14/P177/</url>
    <content><![CDATA[<img src="/blog/2021/03/14/P177/P177_1.jpg" class="">

<p>收录一下brutal桑给我画的图!!!</p>
<blockquote>
<p>brutal桑的个站 -&gt; <a href="https://brutal588.github.io/">link</a></p>
</blockquote>
<span id="more"></span>

<img src="/blog/2021/03/14/P177/P177_2.jpg" class="">
<p>brutal桑给我画的小情侣!!!真的真的很喜欢…好少女好可爱…<br>真的非常感谢brutal桑给我画的图(语言贫乏)…!!兄妹那张也好喜欢好喜欢的…</p>
<br>
<br>

<img src="/blog/2021/03/14/P177/P187_1.jpeg" class="">
<p>brutal桑画的fune酱,实在是太可爱了!!<br><em>这个人薅到这么多可爱的图,实则有罪(没有反省).</em></p>
<img src="/blog/2021/03/14/P177/P187_2.jpeg" class="">
<img src="/blog/2021/03/14/P177/P187_3.jpeg" class="">
<img src="/blog/2021/03/14/P177/P187_4.jpeg" class="">

<br>
<br>
<br>

<p>相关图书馆编号:char30,char31,char42.</p>
]]></content>
      <categories>
        <category>朋友给的画</category>
      </categories>
      <tags>
        <tag>oc</tag>
        <tag>狼与兔</tag>
      </tags>
  </entry>
  <entry>
    <title>好作品补全计划 - 银之匙</title>
    <url>/blog/2021/02/26/P173/</url>
    <content><![CDATA[<p>前言:<br>去年的年底的想法.</p>
<p>之前一直以”因为要把时间都用在学业和私活上”,而不敢尝试会花时间成本的娱乐.<br>放弃了打游戏和动画,只有画图的时候会搜游戏实况来看.<br>结果画图都不怎么画了,却一直用手机上的短小娱乐而逃避真正要干的事情.<br>所以干脆把手机删了基本所有的娱乐app,在饭后翻出经典的番来看.<br>目标是久仰大名的动画,娱乐就好好娱乐,然后去干活.</p>
<p>以前高中的时候以”不管什么书都拿来练习英语吧”的目的写过读后感.<br>就再续这个tag.<br>目的是“不管什么作品都好好的去享受,去体会,然后写感悟吧”.</p>
<p>当然感悟会非常的私人,也会因为见识很窄而片面.<br>所以把tag命名为好作品补全,对好作品的定义是:<br><strong>有觉得好的部分,有享受到了的部分</strong> 的作品,并不是指全部肯定的一部作品才能作为好作品.</p>
<p>第一部就从跟朋友聊到的《银之匙》开始吧.</p>
<span id="more"></span>

<br>
<br>
<br>

<p>银之匙这个名字是从作者另一部有名作品,钢之炼金术师而了解到的.<br>所以当知道这部番剧讲的是农业高中生的故事,还蛮意外的.</p>
<p>第一季讲的故事是,生为城市孩子的八轩勇吾因为逃避升学与父母的压力,入学名为虾夷高农的一所农业高中的乳畜系.<br>以八轩的视角,讲诉了包括青春与烦恼,人与动物之间关系的思考,人与父母关系的思考,人与人之间的关系,这样一系列的生活故事.</p>
<p>记忆深处还有一部番是以农业学校为背景的,叫萌菌物语.<br>不过凭借印象做比较,银之匙的重点放在了生活,并不是科普农业知识.</p>
<br>
<br>

<p>这部作品给我的感觉是,会在辛苦的生活中尽力的去享受,也会在快乐的同时努力去拼搏.<br>故事里有很多漫画式搞笑桥段,但也会直面青春中的苦恼和疼痛.将甜和苦融合在一起,所以会说这部番是生活故事.这时候我觉得”经历”本身,才是生活的哲学.</p>
<p>以城市孩子来重新思考人与动物的关系是非常有趣的一部分.</p>
<p>比如第一集所讲的剧情是,八轩一开始无法接受鸡蛋是从肛门中生出的事实.但在一天实习的疲惫之后,吃到生鸡蛋拌饭,一边感叹好吃一边说到“从肛门里竟然会产生这么好吃的东西,鸡真的好厉害”.<br><em>鸡蛋是从鸡屁股来的事情原来不是常识吗!</em></p>
<p>以及第一季可以作为主线的剧情,八轩在教学中的对营养不良的猪仔产生了感情,为其取名为猪肉饭.八轩因经济动物的命运而烦恼和思考,最后得出自己的答案,在猪肉饭成为商品的时候将其买下.</p>
<p>单听这样的剧情概括的确有那么点莫名其妙呢!<br>但作者想说的话都在台词之中,我概括不出来,于是截了很多图.</p>
<p>直接说结论的话,结局作者并没有给一个明确的答案.<br>但是作者多次在故事中鼓励这个思考并探索的过程.</p>
<img src="/blog/2021/02/26/P173/P173_8.png" class="">
<img src="/blog/2021/02/26/P173/P173_9.png" class="">
<img src="/blog/2021/02/26/P173/P173_10.png" class="">
<img src="/blog/2021/02/26/P173/P173_11.png" class="">
<img src="/blog/2021/02/26/P173/P173_12.png" class="">
<img src="/blog/2021/02/26/P173/P173_13.png" class="">
<img src="/blog/2021/02/26/P173/P173_14.png" class="">


<br>
<br>

<p>八轩经历过升学失败,看到了因为抢夺母乳失败而发育不良的小猪产生了同情.</p>
<img src="/blog/2021/02/26/P173/P173_1.png" class="">
<img src="/blog/2021/02/26/P173/P173_2.png" class="">
<img src="/blog/2021/02/26/P173/P173_3.png" class="">
<img src="/blog/2021/02/26/P173/P173_4.png" class="">
<img src="/blog/2021/02/26/P173/P173_5.png" class="">
<img src="/blog/2021/02/26/P173/P173_6.png" class="">
<img src="/blog/2021/02/26/P173/P173_7.png" class="">

<p>于是给猪仔取了名,因为同学说如果要取得取个食品的名字不然会伤心,所以取名为猪肉饭.<br>(他在同意给猪仔取名为食品的时候,也是表示没有抗拒食用,想开始好好投入感情和思考吧.)</p>
<p>故事主题是以时间为线的.几个事情被时间拆成了小事件,互相推动互相影响.<br>(生活番在这种叙述方式上也很吸引人呢.)<br>所以在猪肉饭成长的就三个月中,有很多其他的经历使八轩思考.</p>
<p>在暑假时去同学家打工,遇到了第一次解剖动物.</p>
<img src="/blog/2021/02/26/P173/P173_15.png" class="">
<img src="/blog/2021/02/26/P173/P173_16.png" class="">
<img src="/blog/2021/02/26/P173/P173_17.png" class="">
<img src="/blog/2021/02/26/P173/P173_18.png" class="">
<img src="/blog/2021/02/26/P173/P173_19.png" class="">
<img src="/blog/2021/02/26/P173/P173_20.png" class="">
<img src="/blog/2021/02/26/P173/P173_21.png" class="">

<p>这一段对感情的描写算是个小高潮.是跨越自己不愿面对的一个坎.<br>合掌的情节不但是表明下定决心,也是显示八轩的(尊重动物的同时也尊重食肉的)决定,恰到好处.</p>
<br>
<br>
<br>

<p>同学家的爷爷是一辈子跟家禽打交道的人.<br>这段谈话很有意思.<br>来半开玩笑式的回答也是很漫画式的.</p>
<img src="/blog/2021/02/26/P173/P173_26.png" class="">
<img src="/blog/2021/02/26/P173/P173_27.png" class="">
<img src="/blog/2021/02/26/P173/P173_28.png" class="">
<img src="/blog/2021/02/26/P173/P173_29.png" class="">
<img src="/blog/2021/02/26/P173/P173_30.png" class="">
<img src="/blog/2021/02/26/P173/P173_31.png" class="">

<br>
<br>
<br>

<p>同时作者不但是鼓励思考,也会鼓励不同的答案.</p>
<img src="/blog/2021/02/26/P173/P173_22.png" class="">
<img src="/blog/2021/02/26/P173/P173_23.png" class="">
<img src="/blog/2021/02/26/P173/P173_24.png" class="">
<img src="/blog/2021/02/26/P173/P173_25.png" class="">

<p>所以在后面这段,提及素食主义的情节时,我觉得作者没有否定素食主义.</p>
<img src="/blog/2021/02/26/P173/P173_32.png" class="">
<img src="/blog/2021/02/26/P173/P173_33.png" class="">
<img src="/blog/2021/02/26/P173/P173_34.png" class="">

<p>作者在这个故事里也讨论过“逃避”这个选择,甚至肯定了一些为了生存的逃避.能回避掉问题也是选择的一种.<br>这里我觉得只是单纯的,故事的主人公没选择成为素食主义者而已.</p>
<br>
<br>
<br>

<p>情节中我比较诧异的是.<br>八轩暑假结束回学校后,猪肉饭快到出货的日期,但个人比其他的猪小一圈.所以八轩给猪肉饭加饭,努力让猪肉饭成为更符合出货品质的猪.<br>(也许是明白了同学的爷爷所想传输的,饲养者的爱.)</p>
<img src="/blog/2021/02/26/P173/P173_35.png" class="">
<img src="/blog/2021/02/26/P173/P173_36.png" class="">

<p><em>不得不说,这一段真的很日式之《虽然你的行为从结果论来说狗屁不通但精神却十分地感染人》.</em><br><em>这种桥段我并不讨厌,不愧是日本人.</em></p>
<img src="/blog/2021/02/26/P173/P173_37.png" class="">
<img src="/blog/2021/02/26/P173/P173_38.png" class="">
<img src="/blog/2021/02/26/P173/P173_39.png" class="">
<img src="/blog/2021/02/26/P173/P173_40.png" class="">

<p>所以也就有了这一段只看结果会不明所以的决定.<br>买下成为肉的猪肉饭.</p>
<p>说实话这段剧情我是有紧张…<br>如果八轩买的是活着的猪肉饭那这就是部俗片,作者一直在描述面对困难的情节,是不可能决定那样看似温柔但实则逃避的选择的.<br>但要买下变成肉的猪肉饭也是在我意料之外的.<br>我所理解的是,这是八轩接受了猪变成肉,也是以饲养员的角度,以会吃肉的人的角度来陪变成肉的猪肉饭一程.</p>
<img src="/blog/2021/02/26/P173/P173_41.png" class="">

<p>之后八轩把变成肉的猪肉饭做成培根.<br>“变小了呢.”&lt;——这句台词无法分析原因但我很喜欢!!!!</p>
<img src="/blog/2021/02/26/P173/P173_42.png" class="">
<img src="/blog/2021/02/26/P173/P173_43.png" class="">
<img src="/blog/2021/02/26/P173/P173_44.png" class="">
<img src="/blog/2021/02/26/P173/P173_45.png" class="">
<img src="/blog/2021/02/26/P173/P173_46.png" class="">
<img src="/blog/2021/02/26/P173/P173_47.png" class="">
<img src="/blog/2021/02/26/P173/P173_48.png" class="">

<p>这一段是大家在等熏培根.<br>虽然也是用开玩笑的形式说的台词,但我擅自把八轩这句当作作者的回答了.<br><strong>“如果我是猪肉饭的话被怎么吃都会讨厌的.”</strong><br>八轩明白在食物链中投入感情的矛盾,他接受了这一点.他同时接受自己的感情和接受自己在食物链的位置.<br>用我自己的三观来解释,是接受自己”是坏人”这一点,贯彻,并没想被原谅.最后就算是这样也会继续以饲养者的身份去关爱家畜.</p>
<img src="/blog/2021/02/26/P173/P173_49.png" class="">
<p>这就是他所品尝到的猪肉饭的味道.</p>
<br>
<br>
<br>

<img src="/blog/2021/02/26/P173/P173_50.png" class="">
<img src="/blog/2021/02/26/P173/P173_51.png" class="">
<img src="/blog/2021/02/26/P173/P173_52.png" class="">
<img src="/blog/2021/02/26/P173/P173_53.png" class="">

<p>生命的重量啊…<br>所以即使最后作者的总结中并没有给明确的答案.我也擅自获得了自己理解中的答案.<br>认真烦恼后正视的答案都是好的,我是这么觉得的.</p>
<br>
<br>
<br>

<p>单单截图果然会破坏很多生活感.还是推荐大家自己去看看番,看看原作漫画.很多细小的地方,角色的烦恼和决心真的很感染人.</p>
<p>我个人在补这部番的时候也被感动…虽然没有去日剧跑,也去厨房刷了几个碗…</p>
<br>
<br>
<br>

<p>总结:<br>作者能写出这样的作品想必也是内心强大的人.<br>有着足够丰富的生活经验与知识,能制造出来那样的日常感.<br>并将自己的信念慢慢汇入角色的生活,真的非常有魅力.<br>怎么说呢,真的有人生导师的感觉.</p>
<br>
<br>
<br>
<br>
<br>
<br>

<p>最后是憋了一整个博文的阿宅发言.<br><em>这部番剧我还很开心的是,主角是我喜欢的眼镜男生!眼镜男生真的很好,棕发男生也非常的好.谢谢大家.</em></p>
]]></content>
      <categories>
        <category>读后感</category>
      </categories>
      <tags>
        <tag>好作品补全计划</tag>
      </tags>
  </entry>
  <entry>
    <title>隧道</title>
    <url>/blog/2021/02/11/P169/</url>
    <content><![CDATA[<p>杂谈.</p>
<span id="more"></span>
<p>新年好.<br><br><br><br><br><br></p>
<p>虽然我自己不怎么过节日,也因为太久没出门而感受不到半点节日气氛.但因为太久没更新了,逼自己找个借口说话.</p>
<p>查看了下github记录.<br>自从去年六月开始就没这么久停止更新,动力都消失到太平洋里去…<br>一半因为迷茫一半因为环境,这好似是个长长的隧道,撤退和前进都是不见头的隧道.<br>浑浑噩噩过了一整周,今早查看学校平台的时候发现自己错过了个大考试.<br>如果是大一的时候肯定是当头一击…现在却感叹了声”啊果然会这样啊”.</p>
<p>果然会这样的啊.</p>
<p>下午干脆放置了学习,打开了快一个月没动过的ps.上一次打开还是因为想给U桑改图……</p>
<br>
<br>
<br>
<img src="/blog/2021/02/11/P169/P169_2.png" class="">
临摹錦織敦史的脸练习.以后也想多临摹临摹做做笔记.
把自己当作从零再来…

<br>
<br>

<img src="/blog/2021/02/11/P169/P169_1.png" class="">
<p>信使两人组的再设计,后辈很会做手工,把她手作的包包设计补上了.<br>otter的名字改为<a href="https://www.thebump.com/b/ota-baby-name">ota</a>,之后有颜色的角色也会结合出生地区再度考虑一下名字.</p>
<br>
<br>
<br>

<p>不说话会容易失去自我…这是最近发现的一件事情.<br>如果只是阅览,没有好好做到反馈,就会错以为阅览的事物是属于自己的,获得如此空虚且短暂的感足感.</p>
<p>我翻找4年前,考学这事时的博客,却发现对于那件大事根本没留下日记.<br>我在猜想.<br>在记录的时候是否也在伪装自己.可能还没到这种程度,在记录的时候是否也只想体面自己.<br>后悔和愚蠢,我的差劲并没有得以记录.最近也可能是这样.<br>不能逃避啊…</p>
<br>
<br>
<br>

<p>相关图书馆编号:<br>char01,char04,char10,char30,char60,char85,char8A,char93,char94.</p>
]]></content>
      <tags>
        <tag>oc</tag>
        <tag>在日落之前</tag>
        <tag>残局象棋</tag>
        <tag>信使组</tag>
      </tags>
  </entry>
  <entry>
    <title>仁慈ddl(伪)与阿宅社交新闻</title>
    <url>/blog/2021/03/18/P179/</url>
    <content><![CDATA[<p>感谢灰酱给我画的ddl!!嘿嘿(?)</p>
<img src="/blog/2021/03/18/P179/P179_1.png" class="">
<span id="more"></span>
<img src="/blog/2021/03/18/P179/P179_2.jpg" class="" width="300" height="300" title="这张当作头像用了,嘿嘿">
<img src="/blog/2021/03/18/P179/P179.gif" class="" width="300" height="300" title="还有我自己画的超度.gif">

<br>
<br>
<br>

<p>大家好,这次也来记载一下文化交流小组中的有趣事.<br>聊到兴趣爱好的时候,法国小哥说很喜欢汉字,亚洲那么多人都会用汉字感觉很牛逼,自己也爱背汉字.<br>这是什么实用的爱好!如果这样的爱好我以前也有,也不会落到学生时期十有九次语文会重默.<br>所以有次话题是绕口令的时候,我准备了点字谜(因为没人会中文嘛).日本朋友会心一笑,法国小哥一脸懵逼.<br>果然字谜太难了吗(笑).<br>感谢日本朋友分享的绕口令,这里记载一下.真的很有趣,谢谢两位.</p>
<h2 id="绕口令"><a href="#绕口令" class="headerlink" title="绕口令"></a>绕口令</h2><ul>
<li><p>生麦 生米 生卵</p>
<blockquote>
<p>なまむぎ なまごめ なまたまご</p>
</blockquote>
</li>
<li><p>となりの客はよく柿食う客だ</p>
<blockquote>
<p>となりのきゃくは よくかきくう きゃくだ</p>
</blockquote>
</li>
<li><p>東京 特許 許可局 局長 急遽 許可 却下</p>
<blockquote>
<p>とうきょうとっきょきょかきょくきょくちょう きゅうきょきょか きゃっか</p>
</blockquote>
</li>
<li><p>バス ブス ガイドバスガス 爆発(ばくはつ)</p>
</li>
<li><p>この竹垣(たけがき)に竹立(たけた)てかけたのは竹立てかけたかったから竹立てかけた</p>
</li>
<li><p>カエルぴょこぴょこ、三(み)ぴょこぴょこ、合わせてぴょこぴょこ六(む)ぴょこぴょこ</p>
</li>
</ul>
<br>
<br>
<br>

<h2 id="音乐分享"><a href="#音乐分享" class="headerlink" title="音乐分享"></a>音乐分享</h2><p>这次的主题是音乐.<br>大家都用Spotify呢…只有我用Youtube听歌…<br>用了Youtube的hexo插件来记载大家的playlist.</p>
<blockquote>
<p>我纠结了下明明一直在听jpop但为了文化交流要不要加点我所知的中文歌,结果第一个推荐中文歌的是法国小哥.<br>先生您是不是英特网冲浪过于上手了!</p>
</blockquote>
<h3 id="日本朋友的playlist"><a href="#日本朋友的playlist" class="headerlink" title="日本朋友的playlist"></a>日本朋友的playlist</h3><p>韩国系:</p>
<iframe src="https://www.youtube.com/embed/wTowEKjDGkU" allowfullscreen frameborder="0" height="480," width="640," allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe>

<iframe src="https://www.youtube.com/embed/_yXEnhyOTQo" allowfullscreen frameborder="0" height="480," width="640," allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe>

<iframe src="https://www.youtube.com/embed/2S24-y0Ij3Y" allowfullscreen frameborder="0" height="480," width="640," allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe>

<p>日语系:<br>King Gnu</p>
<iframe src="https://www.youtube.com/embed/ony539T074w" allowfullscreen frameborder="0" height="480," width="640," allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe>

<p>YOASOBI果然很有人气呢.</p>
<iframe src="https://www.youtube.com/embed/Y4nEEZwckuU" allowfullscreen frameborder="0" height="480," width="640," allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe>

<p>GReeeeN</p>
<iframe src="https://www.youtube.com/embed/EuzL-RpBmmA" allowfullscreen frameborder="0" height="480," width="640," allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe>

<iframe src="https://www.youtube.com/embed/q37sCyHqeqE" allowfullscreen frameborder="0" height="480," width="640," allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe>
<blockquote>
<p>喜欢GReeeN的朋友喜欢正统系(?)多一些呢.<br>其他的歌是同kpop那种现代时尚系呢.</p>
</blockquote>
<iframe src="https://www.youtube.com/embed/iFtJDvpvtOs" allowfullscreen frameborder="0" height="480," width="640," allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe>

<iframe src="https://www.youtube.com/embed/8HleM0glzdE" allowfullscreen frameborder="0" height="480," width="640," allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe>

<iframe src="https://www.youtube.com/embed/UC_qla6FQwM" allowfullscreen frameborder="0" height="480," width="640," allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe>
<blockquote>
<p>giga以这种方式上榜了呢(笑).</p>
</blockquote>
<p>英语系:</p>
<iframe src="https://www.youtube.com/embed/FsJWSDe44Uk" allowfullscreen frameborder="0" height="480," width="640," allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe>

<iframe src="https://www.youtube.com/embed/5S-1rG3bgAA" allowfullscreen frameborder="0" height="480," width="640," allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe>

<br>
<br>
<br>

<p>不过说起来,我提起日语歌会想起あったかいんだから这首,给人快乐的正统歌.<br>日本朋友提起了这首歌原本是个小品而来的.<br>～如果成为女孩子重生成为偶像的话～</p>
<iframe src="https://www.youtube.com/embed/EaBb192fp4Q" allowfullscreen frameborder="0" height="480," width="640," allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe>
<p>作为梗歌竟然如此好听?!?!</p>
<br>
<br>
<br>

<h3 id="法国小哥的playlist"><a href="#法国小哥的playlist" class="headerlink" title="法国小哥的playlist"></a>法国小哥的playlist</h3><p>法国小哥的法国歌推荐.</p>
<blockquote>
<p>法国小哥:我们的口味差好多啊.<br>我:我什么都听嘿嘿嘿(分享的很开心).</p>
</blockquote>
<p>法国小哥推荐的歌手Angèle.</p>
<iframe src="https://www.youtube.com/embed/Hi7Rx3En7-k" allowfullscreen frameborder="0" height="480," width="640," allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe>
<blockquote>
<p>这个歌手感觉很自由,很喜欢.</p>
</blockquote>
<!--D6Wi3SmmnAE-->

<p>Clara Luciani.</p>
<iframe src="https://www.youtube.com/embed/85m-Qgo9_nE" allowfullscreen frameborder="0" height="480," width="640," allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe>

<p>Maëlle.</p>
<iframe src="https://www.youtube.com/embed/UVz3xR1X9RU" allowfullscreen frameborder="0" height="480," width="640," allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe>

<p>时间更旧一点的歌.</p>
<iframe src="https://www.youtube.com/embed/RMWBriHwVrI" allowfullscreen frameborder="0" height="480," width="640," allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe>

<iframe src="https://www.youtube.com/embed/6EbBbezVtUQ" allowfullscreen frameborder="0" height="480," width="640," allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe>
<blockquote>
<p>这首老歌味好重啊!!!劲起来了!!!(等等)</p>
</blockquote>
<iframe src="https://www.youtube.com/embed/NN2mxivM8Bo" allowfullscreen frameborder="0" height="480," width="640," allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe>

<p>然后是法国小哥的亚洲歌推荐.</p>
<blockquote>
<p>你果然也是jpop爱好者.</p>
</blockquote>
<p>法国小哥很喜欢ゲスの極み乙女这个乐队.</p>
<iframe src="https://www.youtube.com/embed/Wooi39K0pXg" allowfullscreen frameborder="0" height="480," width="640," allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe>

<!--eVMNFM8r7S0-->

<iframe src="https://www.youtube.com/embed/EaYQhvwXGs4" allowfullscreen frameborder="0" height="480," width="640," allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe>
<blockquote>
<p>很喜欢川谷絵音的样子.</p>
</blockquote>
<iframe src="https://www.youtube.com/embed/Qfk0NWwJpeE" allowfullscreen frameborder="0" height="480," width="640," allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe>
<blockquote>
<p>突然想起这个人说过自己喜欢灌篮高手.<br>你也是老作品爱好者吗.</p>
</blockquote>
<!--kQ9gbYURKy4 -->

<iframe src="https://www.youtube.com/embed/qX7pFYH9O04" allowfullscreen frameborder="0" height="480," width="640," allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe>

<iframe src="https://www.youtube.com/embed/xAsYJhM6m0Q" allowfullscreen frameborder="0" height="480," width="640," allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe>
<blockquote>
<p>这首好正统！</p>
</blockquote>
<!--qZq-q75KeMw-->

<iframe src="https://www.youtube.com/embed/h-kQw4JqCHE" allowfullscreen frameborder="0" height="480," width="640," allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe>

<iframe src="https://www.youtube.com/embed/22PF83zIW0k" allowfullscreen frameborder="0" height="480," width="640," allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe>

<iframe src="https://www.youtube.com/embed/ApXoWvfEYVU" allowfullscreen frameborder="0" height="480," width="640," allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe>

<br>
<br>
<br>

<h3 id="我滴playlist"><a href="#我滴playlist" class="headerlink" title="我滴playlist"></a>我滴playlist</h3><p>思来想去,流行乐选择了椎名林檎和古川本舗.</p>
<iframe src="https://www.youtube.com/embed/-tgNbt59GUU" allowfullscreen frameborder="0" height="480," width="640," allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe>

<blockquote>
<p>最近真滴很喜欢的<a href="https://open.spotify.com/track/7peqk2lb1z7YekvnSMryJL">宗教.</a></p>
</blockquote>
<iframe src="https://www.youtube.com/embed/xHOIuReWe4w" allowfullscreen frameborder="0" height="480," width="640," allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe>

<p>还选了一首vocaloid(老阿宅了).</p>
<iframe src="https://www.youtube.com/embed/ZB75e7vzX0I" allowfullscreen frameborder="0" height="480," width="640," allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe>

<p>然后就是宅宅歌了呢!</p>
<blockquote>
<p>阿宅当然是不敢贴恋爱循环的.</p>
</blockquote>
<iframe src="https://www.youtube.com/embed/cNplZrRSjeI" allowfullscreen frameborder="0" height="480," width="640," allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe>

<iframe src="https://www.youtube.com/embed/EL-D9LrFJd4" allowfullscreen frameborder="0" height="480," width="640," allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe>

<p>渡边作品的曲子选了两首,想了想还也翻出了企鹅罐的这首.</p>
<blockquote>
<p>选的根本不是正统anisong(草).</p>
</blockquote>
<iframe src="https://www.youtube.com/embed/Vk_KkbBpTb0" allowfullscreen frameborder="0" height="480," width="640," allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe>

<p>为文化交流了猜猜我还准备了些什么曲子.</p>
<p>是周杰伦!</p>
<iframe src="https://www.youtube.com/embed/bu7nU9Mhpyo" allowfullscreen frameborder="0" height="480," width="640," allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe>

<p>和邓丽君!(草)</p>
<iframe src="https://www.youtube.com/embed/LE6vRCpcbb8" allowfullscreen frameborder="0" height="480," width="640," allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe>
<blockquote>
<p>原来想贴万青的,因为自己了解没有特别深,还是作罢.</p>
</blockquote>
<p>最后留了首英文的给OK Go!</p>
<iframe src="https://www.youtube.com/embed/LgmxMuW6Fsc" allowfullscreen frameborder="0" height="480," width="640," allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe>

<br>
<br>
<br>

<p>最后日本朋友推荐了个<a href="https://www.youtube.com/watch?v=yBmPDPCd_ls&t=4273s&ab_channel=asmrsoupe">学习用bgm</a>.<br>哈利波特的图书馆……感觉很有趣……</p>
<!--https://zh.wikipedia.org/wiki/%E8%A5%BF%E7%BA%BF%E6%97%A0%E6%88%98%E4%BA%8B-->
<!--https://zh.wikipedia.org/wiki/%E6%B0%B8%E9%81%A0%E7%9A%840-->
<!--https://zh.wikipedia.org/wiki/%E6%B2%92%E6%9C%89%E5%87%BA%E5%8F%A3%E7%9A%84%E6%B5%B7-->

<br>
<br>
<br>

<p>相关图书馆编号:char06.</p>
]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
        <tag>oc</tag>
        <tag>DDL</tag>
      </tags>
  </entry>
  <entry>
    <title>提拉米苏</title>
    <url>/blog/2021/03/14/P178/</url>
    <content><![CDATA[<img src="/blog/2021/03/14/P178/P178.png" class="">
<p>吃完了才想着要不记一下于是只有小涂鸦了.</p>
<p>提拉米苏的意思是意大利语的cheer me up,这件事是去美国人的邻居请客吃饭时知道的,她做的苹果派也好好吃……</p>
<p>跟着伯母做过几次,因为提拉米苏不需要烤箱,我个人觉得是比较简单的蛋糕类型.<br>提拉米苏的精髓是mascarpone的奶酪和手指饼干(finger biscuits).<br>先是蛋黄与奶油与糖做成提拉米苏的奶油.</p>
<blockquote>
<p>四个鸡蛋黄配30克糖打匀.<br>可以隔水加热,因为饮食习惯很多不喜欢生鸡蛋.<br>打300克的奶油.再加入一盒的250克的奶酪打匀.<br>蛋黄与奶酪的混合分几次打匀.</p>
</blockquote>
<p>咖啡混一点点朗姆酒浸手指饼干作为基地,铺做好的奶油.<br>每一层之上铺可可粉.最后放冰箱凉一凉就可以吃惹.</p>
]]></content>
      <categories>
        <category>炸厨房笔记</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
        <tag>民以食为天</tag>
      </tags>
  </entry>
  <entry>
    <title>电脑角落的涂鸦与oc tag翻新</title>
    <url>/blog/2021/04/05/P181/</url>
    <content><![CDATA[<img src="/blog/2021/04/05/P181/P181_1.png" class="" title="蕃与约翰">
<p>图片乱,翻出了去年的小涂鸦来唠一唠oc相关.</p>
<span id="more"></span>

<p>从老博客人流量变多开始,渐渐失去在人群前说oc的勇气.<br>搬家后明明解除了在地铁口摆地摊的紧张感,对oc的心理障碍(?)没法一下消除.<br>这次除了小涂鸦外,想着给oc的tag重新整理与说明一下下.</p>
<br>
<br>

<hr>
<img src="/blog/2021/04/05/P181/P181_3.png" class="" title="模仿照片画夜晚">

<p>oc并没有全部决定好名字,有些oc决定好了名字却因为各种原因(心理障碍x)而无法率直地说出来.<br>整理的时候每位决定了图书馆编号,之后在博文可能手动打上文字tag,可以使用博客搜索功能.<br>比如这次的:</p>
<p><strong>char8A</strong> 蕃,<strong>char4F</strong> 约翰,<strong>char44</strong> 松木,<strong>char55</strong> 凉,<strong>char10</strong> 余芝.</p>
<p>～图书馆编号可能更改～<br><em>希望自己不要改太多……更正起来要点命orz…</em></p>
<br>
<br>
___
<img src="/blog/2021/04/05/P181/P181_2.png" class="" title="松木和凉">

<p>现在博客里的故事tag有:</p>
<p><a href="https://mazui3.github.io/blog/tags/0421record/"><strong>0421record</strong></a></p>
<blockquote>
<p>余老师爬山小故事.<br>0421record中只有余芝有图书馆编号,char10.</p>
</blockquote>
<p><a href="https://mazui3.github.io/blog/tags/%E5%8D%A1%E5%B0%94%E9%A9%AC/"><strong>卡尔马</strong></a></p>
<blockquote>
<p>卡尔马三年前做过一次<a href="https://mazui3.github.io/blog/2018/06/24/P032/">草稿整理</a>.</p>
</blockquote>
<p><a href="https://mazui3.github.io/blog/tags/%E5%9C%A8%E6%97%A5%E8%90%BD%E4%B9%8B%E5%89%8D/"><strong>在日落之前</strong></a></p>
<blockquote>
<p>在架空世界中发生的故事.</p>
</blockquote>
<p><a href="https://mazui3.github.io/blog/tags/%E7%8B%BC%E4%B8%8E%E5%85%94/"><strong>狼与兔</strong></a></p>
<blockquote>
<p>一对小情侣的故事.<br>兔兔的图书馆编号是char30,狼狼是char31.</p>
</blockquote>
<p>新添故事tag:<br><a href="https://mazui3.com/blog/tags/%E5%8F%B8%E7%A9%BA%E8%A7%81%E6%83%AF%E7%9A%84RPG%E5%A4%A7%E5%86%92%E9%99%A9/"><strong>司空见惯的RPG大冒险</strong></a></p>
<blockquote>
<p>如题,以RPG游戏为框架写的故事.</p>
</blockquote>
<p><strong>×子与〇太</strong></p>
<blockquote>
<p>一个包含了青春与遗憾的小故事.</p>
</blockquote>
<p>有些角色虽然属于某个故事内,但有时涂鸦只想摸点跟故事无关的,于是增加人物关系tag方便检索!</p>
<br>
<br>

<p>原本就有的:<br><a href="https://mazui3.github.io/blog/tags/%E5%AE%B6%E5%BA%AD%E7%BB%84/"><strong>家庭组</strong></a></p>
<blockquote>
<p>家庭组没有故事tag.<br>经常画的三位编号是char02里约,char03丹和char04宾果.</p>
</blockquote>
<p><a href="https://mazui3.github.io/blog/tags/DDL/"><strong>DDL</strong></a></p>
<blockquote>
<p>ddl也没有故事,是单独的角色(～吉祥物～).<br>图书馆编号char06.</p>
</blockquote>
<p><a href="https://mazui3.github.io/blog/tags/%E3%83%A1%E3%83%86%E3%82%AA/"><strong>メテオ</strong></a></p>
<blockquote>
<p>图书馆编号char60.</p>
</blockquote>
<br>
<br>

<p>注:可能会乱入没有图书馆编号的角色,如以前朋友的角色或不再出场的角色.<br>所以人物关系tag&gt;&gt;人物编号的情况是可能的…!</p>
<hr>
<img src="/blog/2021/04/05/P181/P181_4.png" class="" title="余老师与花束">


<p>这次新加的.<br><a href="https://mazui3.github.io/blog/tags/%E5%86%AC%E6%97%A5%E7%BB%84/"><strong>冬日组</strong></a></p>
<blockquote>
<p>冬日组的角色属于卡尔马.<br>冬日组里出现的蓝色麻花辫女孩子是货币研究社的社长,图书馆编号char47.</p>
</blockquote>
<p><a href="https://mazui3.github.io/blog/tags/%E6%80%AA%E5%BC%82%E4%B8%93%E5%AE%B6%E4%B8%8E%E5%8A%A9%E6%89%8B/"><strong>怪异专家与助手</strong></a></p>
<blockquote>
<p>角色属于卡尔马.<br>绿色长头发的女孩子叫雨未,是助手.<br>图书馆编号char45.</p>
</blockquote>
<p><a href="https://mazui3.github.io/blog/tags/%E8%BF%BD%E9%A3%8E%E8%80%85/"><strong>追风者</strong></a></p>
<blockquote>
<p>角色有在卡尔马内出场.<br>追风者是图书馆编号char58,凯的笔名.</p>
</blockquote>
<p><a href="https://mazui3.github.io/blog/tags/TokyoTL/"><strong>TokyoTL</strong></a></p>
<blockquote>
<p>角色属于卡尔马.<br>戴眼镜的男孩子的编号是char70.</p>
</blockquote>
<p><a href="https://mazui3.github.io/blog/tags/%E6%9C%89%E7%8C%AB%E7%9A%84%E4%B9%A6%E5%BA%97/"><strong>有猫的书店</strong></a></p>
<blockquote>
<p>角色属于卡尔马.<br>身上经常有涂鸦颜料的女孩子图书馆编号是char72.</p>
</blockquote>
<p><a href="https://mazui3.github.io/blog/tags/HomePacker/"><strong>HomePacker</strong></a></p>
<blockquote>
<p>Homeparcker是独立的故事tag.<br>主角阿怜暂时没收录进图书馆.</p>
</blockquote>
<p><a href="https://mazui3.github.io/blog/tags/%E6%B9%96%E5%BA%95%E5%9B%BE%E4%B9%A6%E9%A6%86/"><strong>湖底图书馆</strong></a></p>
<blockquote>
<p>角色属于日落.<br>现任图书管理员(少女)的编号是char01.<br>Ada是char99.</p>
</blockquote>
<p>[残局象棋]</p>
<blockquote>
<p>角色属于日落.<br>经常穿礼服的蓝头发女孩子叫做蕃,编号是char8A.</p>
</blockquote>
<p><a href="https://mazui3.github.io/blog/tags/%E4%BF%A1%E4%BD%BF%E7%BB%84/"><strong>信使组</strong></a></p>
<blockquote>
<p>角色属于日落.<br>前辈Ota图书馆编号是char93.<br>后辈Phoebe图书馆编号是char94.</p>
</blockquote>
<p><a href="https://mazui3.github.io/blog/tags/%E5%BA%9F%E5%BC%83%E5%B7%A5%E5%8E%82/"><strong>废弃工厂</strong></a></p>
<blockquote>
<p>麻醉醉的tag.<br>麻醉没有故事,编号是char05.</p>
</blockquote>
<br>
<br>
___

<img src="/blog/2021/04/05/P181/P198.png" class="" title="夕阳">

<br>

<p>～tag可能会更改～<br><em>博主真的不怎么会取名字,</em> 但有用(靠).<br>现在可能还难对上号,之后在博文内补上图书馆编号……会清晰点也说不定.</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>oc</tag>
        <tag>在日落之前</tag>
        <tag>卡尔马</tag>
        <tag>0421record</tag>
      </tags>
  </entry>
  <entry>
    <title>十月三十一号</title>
    <url>/blog/2021/11/01/P183/</url>
    <content><![CDATA[<img src="/blog/2021/11/01/P183/P183_1.png" class="" title="メくん的拉面">
<span id="more"></span>

<div class="note ">
            <p>万圣节记载也到第四次了,这次记流水账.</p>
          </div>

<div class="note default no-icon">
            <p><strong>01:58</strong><br>摸鱼在看柯南剧场版cut.感觉像拜访老朋友.<br>小时候看柯南只把他当作小大人,现在才察觉是小学生样的高中生,剧情一下就全新体验(?).</p>
          </div>

<div class="note primary no-icon">
            <p><strong>04:01</strong><br>整理以头抢地(诚)笔记.</p>
          </div>

<div class="note info no-icon">
            <p><strong>08:37</strong><br>从在人群中揣测谁是基德的梦中醒来.<br><del>只有梦中才能有些许安宁(?)</del></p>
          </div>

<div class="note success no-icon">
            <p><strong>10:40</strong><br>跟メくん在车站碰面,很久都没有与人拥抱了,感觉跟抱树哥赐名的miniso玩偶一样柔软.</p>
          </div>

<div class="note warning no-icon">
            <p><strong>11:48</strong><br>メくん帮我挑选面试用衣服.<br>メくん说我适合narumi的发型.<br>mall里也有穿着着南瓜沙袋的小姐姐,和给婴儿车里小孩子带深夜恐怖电影式面具的妈妈.<br>收获メくん亲手制作的饼干,之后吃了很好吃.</p>
          </div>

<img src="/blog/2021/11/01/P183/P183_3.jpg" class="" title="打一个光污染特效表示我心中的地位">

<div class="note danger no-icon">
            <p><strong>04:13</strong><br>跟メくん聊一些有的没的.聊友情和家庭以及最近喜欢的角色.<br>一起吃的拉面很好吃,特别是天妇罗.天妇罗虽然是油炸但陪着清淡的酱油真是白吃不腻.</p>
          </div>

<div class="note danger no-icon">
            <p><strong>04:18</strong><br>跟メくん分别,想着再次见面可能是几个月也可能是几年后了.メくん的手软软的.</p>
          </div>

<div class="note default no-icon">
            <p><strong>06:20</strong><br>回到伯父伯母家,负责接trick or treat看门发糖.一边整理笔记一边等敲门.</p>
          </div>

<div class="note primary no-icon">
            <p><strong>06:25</strong><br>第一组来拜访的是三人组,看上去很会交际的小姐姐,眼睛很大,化妆很用心,最年长的穿着丝布粉红裙,头上也戴着很大的粉红蝴蝶结.</p>
          </div>

<div class="note primary no-icon">
            <p><strong>06:25</strong><br>第二组是穿着单色紧身衣的小男生和小女生,穿成谁没看出来.<br>第三组是爸爸领着来拜访的小牛仔,孩子还小甚至没敢说话.</p>
          </div>

<div class="note info no-icon">
            <p><strong>06:31</strong><br>第四组是一人来的印度裔小男生,穿着披风.家长在远处的drive way朝我喊了声谢谢.</p>
          </div>

<div class="note info no-icon">
            <p><strong>06:43</strong><br>第五组来了五个人,年龄大小差很多,浩浩荡荡.<br>拿了过腰的布袋子,是有经验的trickor(?).最高的小姐姐染的头发是紫带绿很好看.</p>
          </div>

<div class="note success no-icon">
            <p><strong>06:50</strong><br>第六组来了三个小男生.<br>一位打扮成满脸血浆的僵尸.<br>一位是把脸抹黑了画出白色的骷髅头,配着衣服画出骨架.<br>一位胖胖的小男生胸前挂了个大号一元纸板.挺用心的.</p>
          </div>

<div class="note success no-icon">
            <p><strong>06:57</strong><br>第七组来了(可能是女子高中组)五人组,有一位花了小丑式花脸,话说现在已经是穿羽绒服的日子了吗.</p>
          </div>

<div class="note warning no-icon">
            <p><strong>06:59</strong><br>第八组来了四位大孩子和一位小小绿恐龙.大孩子里我只认出白色带孔的杀人魔面具.</p>
          </div>

<div class="note warning no-icon">
            <p><strong>07:01</strong><br>第九组来了位羽绒服外背着翅膀的小仙女和小小超人.</p>
          </div>

<div class="note warning no-icon">
            <p><strong>07:05</strong><br>第十组来了两位小男生穿着大热狗和戴着红色的炫酷龙面具.</p>
          </div>

<div class="note danger no-icon">
            <p><strong>07:08</strong><br>第十一组来了两位小男生.<br>一位穿着全身黑和剑道(?)面具配镰刀的死神,面具下还能照出紫光,好厉害的道具.另一位是棕色小熊睡衣.</p>
          </div>

<div class="note danger no-icon">
            <p><strong>07:15</strong><br>第十二组是三位女生.两位牛仔女孩带着红色丝巾,另一位穿着树懒睡衣.</p>
          </div>

<div class="note default no-icon">
            <p><strong>07:44</strong><br>第十三组是两位女孩和一位小男生.<br>一位女孩穿着印着狗狗照片的外套,外套好似打拳时的护服…把自己给笑到(</p>
          </div>

<div class="note default no-icon">
            <p><strong>07:15</strong><br>第十四组和第十五组是四位小女生和一对兄妹(?).<br>前面的小女生有位穿着蓬蓬白色公主裙,后面的妹妹则是蓬蓬红配黑礼裙,哥哥带着杀人魔面具.</p>
          </div>

<div class="note primary no-icon">
            <p><strong>07:51</strong><br>第十六组是三位大男生,两位带着小尖角带亮片的女巫帽,另一位是牛仔帽.</p>
          </div>

<div class="note info no-icon">
            <p><strong>08:18</strong><br>第十七组是南瓜面具和杀人魔面具小男生,小男生反着考我问题,我没听懂(靠).<br>最后一组是小熊维尼和跳跳虎睡衣的高中生组,我也想要那样的睡衣…</p>
          </div>

<div class="note success no-icon">
            <p><strong>10:28</strong><br>吃了和メくん一起买的蛋糕.<br>小蛋糕店里面的short cake和tart都超级美丽,撒糖豆的生日蛋糕味和抹茶味都是经典中的经典.<br>因为看到了草莓味的想到了哥哥于是没有按熟悉的口味购买(?).<br>甚至带着谷子拍阿宅式照片.</p>
          </div>

<img src="/blog/2021/11/01/P183/P183_2.jpg" class="" title="大一时用过甜食试图召唤爱吃甜食的抽卡角色…">

<div class="note warning no-icon">
            <p><strong>02:43</strong><br>整理笔记,回复邮件,听着魔卡少女樱的bgm边写这篇博文.</p>
          </div>
]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>关于颜色的笔记 - 四季</title>
    <url>/blog/2021/04/20/P184/</url>
    <content><![CDATA[<img src="/blog/2021/04/20/P184/P184.png" class="">
<p>借了brutal家的ellow来做了个色彩练习❄️.</p>
<span id="more"></span>

<br>
<br>
<br>

<p>最近很喜欢b站叫东馆方案的视频主做的绘画视频,非常干货且实用,有听几十分钟顶自己摸一年的效果(x).</p>
<p>这次是看了关于<a href="https://www.bilibili.com/video/BV1Gb4y1X7MA">白平衡</a>的知识,想自己也试试.<br>不过画着画着回到了自己的老习惯上,没直接用ry.<br>除了白平衡外,视频主有分别分析过不同环境下的颜色,比如<a href="https://www.bilibili.com/video/BV1Q4411o7zG">正午</a>与<a href="https://www.bilibili.com/video/BV1Q4411o76c">多云</a>.<br>思路很受教…照着他的思路去看自己的照片练习也有不同的想法了.</p>
<p>不过照片练习会暂时停一段时间!<br>自己只在摸颜色,形准的欠缺已经火烧眉毛…再不磨磨形体要画不出东西了…orz.</p>
]]></content>
      <categories>
        <category>绘图笔记</category>
      </categories>
      <tags>
        <tag>とりあえず絵を百枚描きましょう</tag>
      </tags>
  </entry>
  <entry>
    <title>好作品补全计划 - 小息</title>
    <url>/blog/2021/04/24/P186/</url>
    <content><![CDATA[<p>原本一个月前就想写的本系列第二篇(avg游戏读后感)一直卡壳.<br>脑内越发回响素子姐姐的名台词.在博客里记载下…<br><em>这个系列会不会在两篇后就腰斩啊x.</em></p>
<span id="more"></span>
<p>台词来源于攻壳机动队第一季第十二集.<br><br><br><br><br><br></p>
<img src="/blog/2021/04/24/P186/001.png" class="">
<img src="/blog/2021/04/24/P186/002.png" class="">
<img src="/blog/2021/04/24/P186/003.png" class="">
<img src="/blog/2021/04/24/P186/004.png" class="">
<img src="/blog/2021/04/24/P186/005.png" class="">
<img src="/blog/2021/04/24/P186/006.png" class="">
<img src="/blog/2021/04/24/P186/008.png" class="">
<img src="/blog/2021/04/24/P186/009.png" class="">
<img src="/blog/2021/04/24/P186/010.png" class="">
<img src="/blog/2021/04/24/P186/011.png" class="">
<img src="/blog/2021/04/24/P186/012.png" class="">
<img src="/blog/2021/04/24/P186/013.png" class="">
<img src="/blog/2021/04/24/P186/014.png" class="">
<img src="/blog/2021/04/24/P186/015.png" class="">
<img src="/blog/2021/04/24/P186/016.png" class="">
<img src="/blog/2021/04/24/P186/017.png" class="">
<img src="/blog/2021/04/24/P186/018.png" class="">
<img src="/blog/2021/04/24/P186/019.png" class="">
]]></content>
      <categories>
        <category>读后感</category>
      </categories>
      <tags>
        <tag>好作品补全计划</tag>
      </tags>
  </entry>
  <entry>
    <title>关于stat的笔记 - distribution</title>
    <url>/blog/2021/04/20/P185/</url>
    <content><![CDATA[<script async
  src="//mathjax.rstudio.com/latest/MathJax.js?config=TeX-MML-AM_CHTML">
</script>
<p>为stat330附录的distribution公式.</p>
<span id="more"></span>
<p>更新:感谢stat340老师赞助的公式版本.</p>
<br>
<br>

<h2 id="Summary-of-Discrete-Distributions"><a href="#Summary-of-Discrete-Distributions" class="headerlink" title="Summary of Discrete Distributions"></a>Summary of Discrete Distributions</h2><img src="/blog/2021/04/20/P185/P185_7.png" class="">
<img src="/blog/2021/04/20/P185/P185_1.png" class="">
<img src="/blog/2021/04/20/P185/P185_2.png" class="">

<h2 id="Summary-of-Continuous-Distributions"><a href="#Summary-of-Continuous-Distributions" class="headerlink" title="Summary of Continuous Distributions"></a>Summary of Continuous Distributions</h2><img src="/blog/2021/04/20/P185/P185_8.png" class="">
<img src="/blog/2021/04/20/P185/P185_3.png" class="">
<img src="/blog/2021/04/20/P185/P185_4.png" class="">
<img src="/blog/2021/04/20/P185/P185_5.png" class="">
<img src="/blog/2021/04/20/P185/P185_6.png" class="">
]]></content>
      <categories>
        <category>数学笔记</category>
      </categories>
      <tags>
        <tag>Thank you Mr.goose</tag>
        <tag>以头抢地(诚)</tag>
        <tag>data</tag>
        <tag>statistics</tag>
      </tags>
  </entry>
  <entry>
    <title>夏威夷技术学校枪支限定版</title>
    <url>/blog/2021/11/16/P187/</url>
    <content><![CDATA[<img src="/blog/2021/11/16/P187/P187.png" class="" title="2021年竟然画了工藤前辈">
<span id="more"></span>
<p>日记.</p>
<p>伯父跟我和我弟提考个枪证的事几次,这周末去学枪支.<br>理由:<em>年轻人学点总会有用.</em><br>他聊到他们那个年代大学军训还会打真枪呢,一人有十来发,原来还有那样的时代.</p>
<br>
<br>

<p>考枪证大多学枪支基本介绍和法律.<br>从canon和火药开始讲起,随着顺序讲步枪散弹枪手枪.<br>枪支的操作也是安全措施为主,拿到枪时一定要check没有子弹,枪体没问题.五秒前从同伴手上拿到也得做安全check.<br>有句话印象很深: <strong>当拥有了枪支后,每天24小时一周7天都得为枪支负责.</strong><br>讲重要的安全措施时老师随口就能提到不同的血与泪的惨案,还拿出了炸开花的来复枪枪管.<br>也讲到普通会有人因为他人拥有枪支而恐惧和歧视,警官也可能会故意刁难罚款等等.<br>也许这就是枪支的重量(抽象)吧.</p>
<p>关于枪支.<br>打猎步枪了解了来福,散弹,半自动.手枪了解到了半自动和左轮.<br>步枪比想象的要重,手枪的子弹比想象中的要小.<br>很多年前设定了松木的备用手枪就是左轮,所以使用左轮的时候有点激动.<br>不过左轮没有保险,可以故意少放一颗子弹作为保险措施.<br>因为两天的课全程都在培养安全意识,拿起枪的时候比起稀奇,更多是一份“这真的很重要绝对不能出错”的认真.</p>
<p>在等考试的时候听老师跟学员聊天.<br>冬天的时候打枪作为运动挺流行,加入俱乐部,打射击的比赛.去林场打猎,跟着老猎人学动物肉类处理之类的.<br>老师讲一千发的手枪子弹一周就能打完.<br>这就是加拿大的冬天吗.<br>不过对于我这种各种意义上漂泊不定的人太早了(笑).</p>
<br>
<br>

<p>顺便一提用 <em>流动的水没有形状,漂流的风找不到踪迹,任何案件的推理都取决于心.</em> 当作tag不是因为读到了什么哲理,只觉得这句话很有趣.</p>
]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
        <tag>流动的水没有形状,漂流的风找不到踪迹,任何案件的推理都取决于心.</tag>
      </tags>
  </entry>
  <entry>
    <title>因为很可爱所以画了</title>
    <url>/blog/2021/04/26/P188/</url>
    <content><![CDATA[<img src="/blog/2021/04/26/P188/P188.png" class="" title="是大家的マスタング大佐">

<span id="more"></span>

<br>

<img src="/blog/2021/04/26/P188/P188_1.png" class="" width="300" height="135" title="附录兄弟呆毛心灵感应(何">
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>同人</tag>
        <tag>ハガレン</tag>
      </tags>
  </entry>
  <entry>
    <title>半年画一次的同人</title>
    <url>/blog/2021/06/17/P191/</url>
    <content><![CDATA[<img src="/blog/2021/06/17/P191/P191_4.png" class="" title="模写03最后一集的名微笑">

<p>在晚上失去(入)意识(睡)前的临摹与涂鸦与吐槽合集.<br>内容以看过所有的剧情为前提,所以还请注意剧透!</p>
<span id="more"></span>

<br>

<p>03后半是动画原创剧情,09是原作剧情.<br>两部都是各有亮点的,非常值得一看的作品.<br>可惜我不大擅长把两部一部当作原作,一部当作同人来对待.<br>下意识的对比两部作品中传达的信息与角色的命运,越是喜欢,感情越深…心也越受伤!!!(何)</p>
<p>虽然不会再开一个好作品计划的坑来从头聊起,但对于这部作品的碎碎念还是很多的.</p>
<br>
<br>
<br>

<img src="/blog/2021/06/17/P191/P191_1.png" class="" title="03剧场版">
<p>这是我的第一张ハガレン.<br>原作的画风很有特点,角色大多是方一些或者圆一些的脸,跟自己的作画安全区非常不一样,每次画都在挣扎(笑).</p>
<p>翻评论大多人说03的人物刻画比09好,结局没有09好.我大体保持同意意见.</p>
<div class="note info no-icon">
            <p>插播题外话,我私底下把一个故事分为两层逻辑,<strong>故事逻辑</strong> 与 <strong>现实逻辑</strong>.<br>故事逻辑即在故事这舞台中的逻辑.比如人物因为掉了早餐吃坏了肚子,生理不适而迟到,错过了大魔王炸学校而逃过一劫.<br>现实逻辑即作者本人所操控的神之手之下的逻辑,比如有想要表达的内容,而刻画故事的发展.<br>明明如果人物救助路过的美少女也能逃过一劫,作者选择了吃坏肚子.<br>也许没有太多的意义上的逻辑影响,只是单纯的作者不想给人物美少女缘分.</p>
          </div>

<br>
<br>

<p>结局时阿尔救爱德,爱德救阿尔的剧情在故事逻辑上没有问题,但在钢炼整体对逝者的态度上,现实逻辑不够有说服力.<br>03对门的设定的确非常的弱,跟原设定的”真理”相悖.<br>(暴言)甚至觉得有“你们就想做个现代paro剧场版吧”的嫌疑.<br>于是这个现代paro剧场版也骗了我很多的眼泪.</p>
<p>无论是03还是09,都讲述的是少年长大的故事.<br>爱德华(和阿尔)都是比较明显的勇者系角色.<br>03对于”成长”的描写,是带有一点”大人的灰色”的,是苦涩的.<br>从第一次在第五研究所给爱德华对于人命重量的难题开始,逐步讲述勇者系角色所持有的“正义”的考验.<br>所以整个03中一个不同的价值观就是<span style="color:#45abe6">“世界并不完美”</span>.</p>
<p>我个人是很喜欢故事中对于灰色的描写的!但这喜欢的前提是<span style="color:#45abe6">“现实逻辑的完整”</span>.<br>面对矛盾,故事中的人物努力思考,努力破局的剧情一向都是精彩的.<br>但如果这个矛盾不够有力,那矛盾所带来的苦涩就会变得荒唐,人物的努力就会被削弱意义.</p>
<p>03的剧场版,让我流泪最多(…)的地方是爱德华没能留在自己的世界.<br>怎么说呢,因为剧场版本身的篇幅限制,无法做到用更多的时间培养角色之间的感情,也无法推进太多的故事.<br><span style="font-size:12px">所以挺多剧场版变成了 <strong>重要人物出来耍个酷(粉丝福利),然后不会影响到原本主线剧情(我们还会重新编),然后在欢声笑语下感觉发生了很多却又什么都没发生</strong> 就结束了.</span></p>
<p>03虽然是续作,它补全了tv版结局,但没能逃开太多这个套路.<br>结局很完整,兄弟的确团聚了,人造人也完美的死亡退场,事件结束.<br>从故事逻辑说,爱德华因为勇者系责任心,回到门后世界.<br>爱德华这个举动跟门后世界的阿尔以及他爹的努力相悖,也跟温蒂为代表的”同伴”的愿望相悖.<br>这一点的确符合”世界并不完美”(故事逻辑),但从现实逻辑上我所难过的是……<br><span style="color:#45abe6">为什么要剥夺爱德华的世界呢.</span><br>门后的世界的确因为那个世界的阿尔而使爱德华开始珍重,开始留念.<br>但爱德华这辈子再也见不到跟观众一起冒险了四十来集的同伴,对于爱德华来说照顾了自己整个冒险的同伴,就这样告别,的确是有落寞的.</p>
<hr>
<img src="/blog/2021/06/17/P191/P191_2.png" class="" title="爱德华的中分好难画">
<p>这是第一张自己画风画的ハガレン.<br>画完后察觉到了爱德华应该更加有自信与气场.<br>完全没琢磨过神态啊(笑).</p>
<p>最初看到阿尔的时候,想着”呜啊这个人设要画大长篇作者是何方神圣…”.<br>去少许看了点牛姨其他的作品更加感叹了.<br>牛姨不愧是实力系漫画人…不说阿尔那盔甲,牛姨各式身材各式年龄都能画,不如说她挺喜欢画有个性的角色的.<br>我太窄小了.</p>
<hr>
<img src="/blog/2021/06/17/P191/P191_3.png" class="" title="03第27集">
<p>03快乐的地方的确也是人物的刻画.<br>包括09中一些故事逻辑上03做的更好.<br>(也更坏)<br>比如休斯注定会早些退场,加入了很多爱德华兄弟与休斯的感情建立.<br>斯卡背负的东西沉重,让他有了一个并不正义却自我救赎的退场.</p>
<p>09中师傅的出场的确有一点点“是时候介绍这个角色了”的刻意感.<br>毕竟爱德华兄弟冒险这么多年了,找石头这么多年了,竟然没跟师傅打过照面.<br>03的改编特别可爱和温情,又感觉”啊把兄弟打包回家这件事师傅的确做得出”.<br>像是打包什么大型行李一样的,太可爱了.</p>
<hr>
<img src="/blog/2021/06/17/P191/P191_5.png" class="" title="模写09大佐名场景">
<p>我是先看09的,09的角色也特别可爱,带了一点喜剧人的亲和感,毕竟牛姨真的很擅长写搞笑段子.<br>09和03中大佐这形象所带来的感觉差还挺大.</p>
<blockquote>
<p>友:没觉得09大佐傻了点吗.</p>
</blockquote>
<p>的确.<br><strong>但他真的可爱啊!!</strong></p>
<p>能感觉到牛姨对角色的喜爱.是一种包容的,全面的喜爱.<br>大佐作为另一种意义的男主角(?),他有信赖的下属,支持他的亲友(惨遭故事转折剧情杀),一起演间谍戏的养母.</p>
<p>不过其他角色的伙伴也一个带一个(?),于是故事到后期有全明星的感觉了.<br><del>坏处也有啊,因为角色太多,叙事线也多.一边演了很多戏份,另一边还没推进!看得很急!</del><br>可能长篇故事就得思考这些吧.</p>
<br>
<br>
<br>

<p>这次就先谈这些吧.不知道还会不会再涂涂.<br>无论是03还是09,爱德华阿尔他们的冒险都包含着勇气和生存动力.<br>虽然勇者系故事有着勇者系框架弊端,但作为一个故事来说已经足够了.</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>同人</tag>
        <tag>ハガレン</tag>
      </tags>
  </entry>
  <entry>
    <title>Never give up</title>
    <url>/blog/2021/05/03/P192/</url>
    <content><![CDATA[<img src="/blog/2021/05/03/P192/P192.png" class="" title="老兔在零下十度的水里为你打气">
<p><a href="https://www.youtube.com/watch?v=KxGRhd_iWuE&ab_channel=Ryuujin131">Never give up.</a></p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>oc</tag>
        <tag>家庭组</tag>
      </tags>
  </entry>
  <entry>
    <title>制作记录_UnderlakeLibrary</title>
    <url>/blog/2021/04/30/P189/</url>
    <content><![CDATA[<p>为oc小网站制作过程的记录.<br>图书馆本体<a href="www.mazui3.net">🌟</a>.</p>
<img src="/blog/2021/04/30/P189/P189_1.png" class="" title="我宣布用十来个图层画叶子成为不会轻易使出的杀手锏">

<span id="more"></span>

<br>

<p>原计划是爬山小故事和图书馆一起发布,但时间用完了就先发布吧.<br><del>内心暗暗地也觉得没人会来看爬山小故事,一起发布和分别发布没有区别…</del></p>
<br>
<br>
<br>

<p>这是第一次为自己的项目写项目记录!是进步!<br>但也的确漏洞要多少有多少啊哈哈…</p>
<p>最大的问题是计划与安排.<br>跟学校的大作业一样,作业是越写越多的.<br>把作业分成ABC三部分,估计每份写一天,结果上手了A发现A又可以分123,以此递进…<br>所以要从房子的框架开始搭起,不然在小的地方可以磨上一整天毫无进度.<br>不过这也是老生常谈了吧…</p>
<br>
<br>

<hr>
<p>关于网页.<br>选用的是wordpress+模版.所以效果好看省事.<br>host为了省钱租了三年,去年8月底购入的,这发布的好慢啊(笑).<br>搭博客时发现自己的水平(和耐心)有限,也想试试其他的搭建方法.</p>
<p>关于图书馆本体.<br>最初的计划是分为【封面】【角色】【故事】【告知】【关于】几个页面.</p>
<br>

<h2 id="封面"><a href="#封面" class="headerlink" title="封面"></a>封面</h2><p>这次画了一周.<br>封面的目标是1.好看,2.要画完.<br>去年的大图画高楼透视结果画了一个月.画到打开文件就伴随着心酸与苦楚.<br>为保证完成,选择了无透视,像色彩练习一样拼几张小图.<br>虽然用上了色彩练习的经验,内心踏实一些,但练习只背诵了色彩,并没有处理过多细节,所以画的也挺头大…<br>(叶子虽然花了大力气但还行,海浪画了三次实在处理不会水.)<br>还是要练更多记更多呢……</p>
<br>

<h2 id="角色"><a href="#角色" class="headerlink" title="角色"></a>角色</h2><p>这次添加了10位角色.<br>依旧绘画技术差,在图上困扰了很久.<br>除了图以外,文案也很想让人吐槽.<del>我中文一点都不中文也不是一天两天了.</del></p>
<p><strong>问</strong>:【副标题】和【About】和【Description】有什么区别.<br><strong>答</strong>:是【吐槽】和【表面的一言以概】和【详细的内情设定】.<br><strong>问</strong>:但只看内容分不清啊.<br><strong>答</strong>:我也分不清!なんとなく.<br>就是这样自己电波的地方会给阅读带来困难,得注意才行…</p>
<br>

<h2 id="故事"><a href="#故事" class="headerlink" title="故事"></a>故事</h2><p>鸽了.很痛心.</p>
<br>

<h2 id="告知"><a href="#告知" class="headerlink" title="告知"></a>告知</h2><p>为了此页面特地注册了两个账号.发布会混着用【管理员】和【麻醉】两个名字来发布.</p>
<p>顺便一提这次<del>作弊</del>标注了4月21号发布的公告,正式发到各个平台是4月30号.<br>于是<del>作弊</del>决定四月的最后一个星期是图书馆纪念日.<br><del>(非常厚脸皮的设定了用于自己推进oc借口的纪念日.)</del><br>顺便顺便一提,管理员酱的诞生日是8月15号.图书馆竟然一年就有两个纪念日.</p>
<br>

<h2 id="关于"><a href="#关于" class="headerlink" title="关于"></a>关于</h2><p>黑底白字看着有点眼睛疼所以选了灰字.也许哪天又会改成白字.<br>就是会这样在排版上纠结很久,得小心.<br>感谢U酱的gif!!!真的好喜欢!!!</p>
<br>
<br>
<br>

<p>在校对角色设定时更改了管理员酱的发型.</p>
<img src="/blog/2021/04/30/P189/P189_2.png" class="" title="发型修改">
<p>原本两侧的杂毛画起来挺好玩的,但怎么想都不科学,于是痛失标志卖点.<br>管理员酱是陪我很久的oc了,包括雨未松木也好,都有偷偷的更改一些细节.<br>管理员酱的条纹袜虽然封面没画,但立绘因不舍得而保留.</p>
<br>
<br>
<br>

<p>最后是下一次更新的计划.<br>想法有很多,而且杂.<br>设置新的导航页面,用于下载的页面,增加新角色和订阅功能等等.<br><strong>但!</strong><br>为保证这次丢人避免重蹈覆辙,锦上添花的东西放在一边,把房子的框架建造起来.<br>最深处,最重要的东西…之类的!</p>
<p>唉,希望下次更新不要胎死腹中(flag竖了起来).</p>
]]></content>
      <categories>
        <category>项目记录</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
        <tag>oc</tag>
      </tags>
  </entry>
  <entry>
    <title>关于颜色的笔记 - 便签贴</title>
    <url>/blog/2021/04/30/P190/</url>
    <content><![CDATA[<p>记载下自己画图时的过程与思考.</p>
<span id="more"></span>

<br>

<p>上色习惯有两种,A是先铺好固有色,照着环境给物体染上环境色.<br>B的过程反过来.</p>
<h2 id="1"><a href="#1" class="headerlink" title="1"></a>1</h2><p>这张用的是A套餐.</p>
<img src="/blog/2021/04/30/P190/P190_1.png" class="" title="铺色">
<p>用gradient tool选了两个颜色.一个从上到下的亮色,一个从下到上的暗色.</p>
<img src="/blog/2021/04/30/P190/P190_2.png" class="" title="加过度色">
<p>这一步完全是个人习惯,有时会一起叠一个颜色…这样颜色间的关系会更柔和一点…<br>(没有体积塑造相关的道理.)</p>
<img src="/blog/2021/04/30/P190/P190_3.png" class="" title="加阴影颜色">
<p>因为画的是大晴天.这次阴影特别想加蓝,于是想办法把蓝往上糊.</p>
<img src="/blog/2021/04/30/P190/P190_4.png" class="" title="扣亿下">

<p>总结:绿色的衣服在铺色时选重了,重画了一遍.<br>因为后加阴影,注意选色要选淡.<br>虽然有处理颜色间的关系…毕竟是分别选的,容易不和谐.A套餐容易画油,而且笨重.<br>好处是思考用力少.</p>
<h2 id="2"><a href="#2" class="headerlink" title="2"></a>2</h2><p>这张用的是B套餐.<br>全图在<a href="https://mazui3.github.io/blog/2021/01/01/P156/">link</a>.</p>
<img src="/blog/2021/04/30/P190/P190_5.png" class="" title="铺色">

<p>B套餐的坏处是思考用力多,而且控制不好固有色.<br>因为选色时就是从“选择好看的颜色”而开始的,所以<del>随便魔改固有色的话</del>最后的成品容易画好看.</p>
<br>
<br>

<h2 id="3"><a href="#3" class="headerlink" title="3"></a>3</h2><p>这张是选了A套餐,因为原设全是白色于是画成了B套餐的效果.</p>
<img src="/blog/2021/04/30/P190/P190_6.png" class="">

<p>铺色时脑子想的是右边这张美丽的<a href="http://artrussia.ru/en/bato_dugarzhapov/picture/4336">白色阳伞女士</a>.<br><strong>这个用蓝画的白色!!!!实在是太好看了!!!!渴望刻在DNA里!!!!!</strong><br>但我紫色用色骚(饱和度重),于是俗.</p>
<br>
<br>

<h2 id="4"><a href="#4" class="headerlink" title="4"></a>4</h2><p>这张是B套餐却画出了A套餐的效果……</p>
<img src="/blog/2021/04/30/P190/P190_7.png" class="" title="给莼老师的生贺">

<p>B套餐果然还得多练练(多练练).<br>这张想参考写真中朦胧的感觉,结果一个模糊叠上去画面一下变油…<br>很是难过!</p>
<br>
<br>
<br>

<p>总结,以后“绝对要画好看”的图用A套餐,练习时的图尽量用B套餐.<br>特别是带背景的图,用B套餐多多思考环境色和固有色的计算,如果能找个规律出来就好了.</p>
]]></content>
      <categories>
        <category>绘图笔记</category>
      </categories>
      <tags>
        <tag>とりあえず絵を百枚描きましょう</tag>
      </tags>
  </entry>
  <entry>
    <title>oc小草稿导航页面</title>
    <url>/blog/2021/08/08/P199/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="c059dc2161f6967da4bdaba968f4df7964f60c67977ec5e2af28af3a03716128">02157dcb419f60b8d140c86885c9069105ad060d7dc0bdc0440eb7c67d87a052e78e3f32b9c96d5e3f94e408bd20ff89310a5a77a81982769af23b09da19576428f1c5ef962e31db0d4e492523f7f51096a7499cb13b6690b2a593207c40e7ce2f7ee1a0884f1dd4bb16836b30304295c7e683e721ba4e1149695b419ca2632d117415313947937fbd021edcb978374637cddd0aeb77c98e8e00d373ad9472ca54e6e9a4fc389cdabad9b026c48cc3c083780a54cc8225eff8e345aff3962ff76df37c3eb9b47782884a7cdd2b153579286bf5039eea31975a23ec2a7a80e50677e09e76a14fd683a997bbc4b7c5fdc7c559b48934c883798852ee8f0cd6ccbfbcb98d1e94cf6e2b8a5a0122055a1b26877a1b4b8906a5a7858c57b02bed4644184ff536d6edaabd26528cf9cbd33642f2b950f1ce5d64615f7d4ed1e8dd25fef783fc26b8e102769f3844f537a725affc5ce48373ad2bfc918e5c0be2799516297b20b81605bc3f1384e72b2f843e866da208a724f8a2cf2399237ef34bfa2eef2ff6efb4d692bfa3a7c47f36d44d4cfb6e4f81cba4f524c0f199d587941e9ed4c3f1fce142557cb71719c97b9e15e1f713e7e6ff4d95661f19beb15207aac851373b086874c514ab2cfc53de85e659d8db80f15f773014ce5050778644ba031d24283bcedfa8aa56ed61c1c16aec471f8f99e922c6b2883ba7c99801bde2f206c28c63a44cd1473ea55c3143f342609443aaf93597188212717e8302643817ff27f0025def38238d82890b74d75be67a232b258ac2071f928f0cdfb5b4ec408fde2ddbf8d0532afce0777b1166b8bf71f26a6e1e10a04a230659317db3815488df50ea78db7bb36fa50c8e60d97f811aeaf3d3e1b1f1b8025adfadd85e2927fab43caa333ae5a6521f98351054ddeef61a994bba76d7f6f599322cbab85dc6c346491d0330bd03d1716ccb98480bcb08716f48e33644d084935e6d46a275e360f9f42c8f8a54316e0c2d4592752c9513e19d8f7891d751558ddc05fa3d6bbad481712ea4cb8e293015f31ef26bde2e900244f2497f8bb2f0890e355a95b188d336adf1393266b8d019dfb71cb842b9175cb682c5313efe5f15318a4bd467a55d48bc3fd6f647c3903dea4f2b2b0c1cd0f90c87209235723842fe8235ccb611b3301619059e19e2ec228e46f1b5ff8729673b97d75fd054d1bae89c42915678ff710d8158453a39471204fb931c346944f2670c5c4e971cf6a99f42dc7695e78f50766a32bd11d3fc8c1887ff260134c5dfcfe7781ecb42f772f93793a5ed3e67159dc72eed259b6cfb9aba3a7b6ff4fdd7717bcbd2177ed17b6543f5a62ab89c6b9bea8493ff1bb8a03176b52a2aa76c9d71af33e985fc0c5dda9a904886eb56d986a8ac1db323e60f0015d4f6fcafa36599400f16412b0883ebe223ffbbcf91107fa11c7ccbe26665bd510a567e28e5ae7b1fa57e24a2283561fdd4d88cc79896a455e17c17d0603f52f737e046f13f4bb0fed0cf61efd3f6110cd3239e08c5b4e70c5ce896ef73d1ba90312152bef01d930b47aa782eaf327190f10eb19f12fb29628671e393ba8e857377a9e36e1f69ddd9b07a96df6ed970ad2e63f58720534af4769d6f6ac764ec7f1cc2f864cff25c740b7b7868b62989c98fec7fb487b3f01633c3537a3f083e2b9cf6ef14fb0a269a6aca50e8c0dddd28e54138fd296c8e24b51de8bbe0e5fc0337598c5ea01b9cdf77289a169ae12c599d614e8810c62d189d133f6f378fe1845eec8fc9669a4608872454d8c30b575c0c02a5366e378063ec82747714a44b4b1549f11f48a1df4097245e24d4a7cfeda0f550fb757244eb62811c2acdc909d3bc7813d690e3ace5d67799d63ebe87979a9951023b58a2d3d5f6c31ccdca297060689763e7687a6045eb1e5710aa7e7df728244f15de7b6404eb43db5d7bc7443c0ead618ea1136289f0dc8a62c5ced2a5efc44494da826a21708f92835fe8f1b5697b1189803629ee149d4e04e49951f4184b796a91cfb6a735aac08f4aad7fbdbf32367f685ca7c54dc8b2e1c1e3842d38b2e4b9443cb2b2144e30c788d8fab9a9f3c5e331b3a381e8f0b51835b1a69d8bb6a338e6d3d8aed8e3651df1d0cfd62a0707335b930973277377bc23b634d91f27abe8d49301eda7b82dfe213279bd855a4c6f1d83f978293a2f1f5bb4855b76b19a43e6cf250f01b930daa1d68e2c98746f99e6a94cc21beaf2f8ab6e3e7630126ea18cce927a386fd976cd099a84bc5458e796c2f2fe674efa4f43b5170c03f90cd406dcde43cf37a7c4585e8731f6bf444bd98355efd5e5d0b87655dcd2c8d9f5a62c262baad617a93ffde65cc3e68c78e39c1a68d645f8da92a0549c78faac2c171264295bb8c61268fe6e41d80c13b2e7d21373ba9681ea6c90016cdb0dd3cb0d12c5266b7d313ccace539759bb81bf96f212e86227764fca52eecd92371f747e65a900c94fd2d567f9c46d99d9566f109d46b10cd6906dc7c34f6965bcb7930662ec994a92c71afaa44f03560ce43fc666ef497862b04fe73734d82acbbb6af7486bf54cce0705d541bbd67852b35dfcc3850bffef99a2c4eb5d1b46d03448</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-shrink">
      <input class="hbe hbe-input-field hbe-input-field-shrink" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-shrink" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-shrink">密码:在图书馆老兔穿的t恤(3^n).Rio cant __?</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/blog/lib/hbe.js"></script><link href="/blog/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>oc</tag>
      </tags>
  </entry>
  <entry>
    <title>关于奇怪技巧的笔记 - 简易透视</title>
    <url>/blog/2021/08/23/P197/</url>
    <content><![CDATA[<img src="/blog/2021/08/23/P197/P197_2.png" class="" title="回忆">
<p>其实只想存放余老师的背影.</p>
<span id="more"></span>

<br>
<br>

<p>这个偷懒方式的确用了很久,原来没有记载过…</p>
<img src="/blog/2021/08/23/P197/P197_1.png" class="">
<p>用MagicaVoxel捏出建议模型.</p>
<img src="/blog/2021/08/23/P197/P197_3.png" class="">
<p>用钢笔工具找消失点.</p>
<img src="/blog/2021/08/23/P197/P197_4.png" class="">
<p>对比消失点画其他透视.</p>
<p>MagicalVoxel官网-&gt;<a href="https://ephtracy.github.io/">link</a>.</p>
<p>以前还试过直接用gradient map上颜色,线都不描.很是好玩…</p>
]]></content>
      <categories>
        <category>绘图笔记</category>
      </categories>
      <tags>
        <tag>oc</tag>
        <tag>0421record</tag>
      </tags>
  </entry>
  <entry>
    <title>制作记录_UnderlakeReadingRoom</title>
    <url>/blog/2021/05/13/P195/</url>
    <content><![CDATA[<p>补一个博客制作记录.<br><a href="https://mazui3.github.io/blog/2020/08/13/P111/">乔迁公告</a>还是去年八月,和管理员的生日是同一个月w.<br>原因是修修改改的东西,自己都忘掉了才发现没有备份制作方法,于是补上.<br><del>已经忘了的就没法备份了.</del></p>
<span id="more"></span>

<br>
<br>

<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>使用的是Hexo(引擎)+Next(主题)的组合.网络上有很多教程就不贴了.<br>也尝试过其他主题,选择Next的原因是使用人数多,方便寻找debug方法.<br>给自己定的规定是:<strong>不要在博客的细节花很多时间</strong>.<br>我的博客是为了记载的内容而存在,如果在外貌上花很多时间就是本末倒置.<br>(也因为内心没有余裕来慢慢调修啦…能因为博客学一些js和css也是好事.)</p>
<br>
<br>
<br>
___

<h2 id="在next上的更改"><a href="#在next上的更改" class="headerlink" title="在next上的更改"></a>在next上的更改</h2><br>

<h3 id="bgm"><a href="#bgm" class="headerlink" title="bgm"></a>bgm</h3><p>bgm感谢brutal的帮助.<br>类似教程的<a href="https://www.cnblogs.com/Guhongying/p/10461970.html">链接</a>.<br>next方便下载安装pjax,可以达成全站bgm不切换的效果,但pjax跟其他很多东西冲突,于是关闭了.<br>使用的是网易云自带的音乐播放代码…因为方便.</p>
<p>我的音乐(next &gt; layout &gt; _macro &gt; sidebar.swig):</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!--网易云插件--&gt;</span><br><span class="line">&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=330 height=86 src=&quot;//music.163.com/outchain/player?type=2&amp;id=465530020&amp;auto=0&amp;height=66&quot;&gt;&lt;/iframe&gt;</span><br></pre></td></tr></table></figure>

<br>
___

<h3 id="圆角"><a href="#圆角" class="headerlink" title="圆角"></a>圆角</h3><p>文字框的边框更改成圆角.<br>我使用的是pisces主题.<br>可以在source  &gt; css &gt; variables &gt; Pisces.styl更改以下相关设定.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$box-shadow-inner                 = initial;</span><br><span class="line">$box-shadow                       = initial;</span><br><span class="line"></span><br><span class="line">$border-radius-inner              = 16 px;</span><br><span class="line">$border-radius                    = 16 px;</span><br></pre></td></tr></table></figure>
<p>border-radius-inner和radius是圆角设定.单位是px,我更改成了16px.</p>
<p>文章的宽也是那里调整的.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$content-desktop-large        = 1000px;</span><br></pre></td></tr></table></figure>

<br>
___

<h3 id="点击效果"><a href="#点击效果" class="headerlink" title="点击效果"></a>点击效果</h3><p>鼠标点击出小糖豆的效果是附加js代码.<br>附上教程<a href="https://www.jianshu.com/p/924b3eea4fa6">链接</a>和<a href="https://tding.top/archives/58cff12b.html">链接</a>.</p>
<br>
___

<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>添加了图片.<br>在source &gt; css &gt; main.styl增加以下设定.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">body &#123;</span><br><span class="line">    background:url(/images/图片名称);</span><br><span class="line">    background-repeat: repeat;</span><br><span class="line">    background-attachment:fixed; //不重复</span><br><span class="line">    background-size: contain;      //填充</span><br><span class="line">    background-position:0% 100%;</span><br><span class="line">&#125;                  </span><br></pre></td></tr></table></figure>

<br>
<br>
___

<h3 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h3><p>使用 LocalSearch 搜索功能<br>安装搜索插件： hexo-generator-searchdb</p>
<p>在博客根目录下执行以下命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>

<p>安装完成，编辑博客配置文件：_config.yml</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure>

<p>Next 主题自带搜索设置，编辑主题配置文件：_config.yml<br>找到文件中 Local search 的相关配置，设为 true</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Local search</span><br><span class="line">local_search:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure>

<br>
<br>

<hr>
<h3 id="字体颜色"><a href="#字体颜色" class="headerlink" title="字体颜色"></a>字体颜色</h3><p>是用普通<span style="color:#64c0f5">html</span>实现的.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;span style=&quot;color:#64c0f5&quot;&gt;</span><br><span class="line">要改变颜色的部分.</span><br><span class="line">&lt;/span&gt;</span><br></pre></td></tr></table></figure>

<p>同理,改变size也是</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;span style=&quot;font-size:12px&quot;&gt;</span><br><span class="line">要改变size的部分.</span><br><span class="line">&lt;/span&gt;</span><br></pre></td></tr></table></figure>

<br>
<br>
___

<h3 id="代码复制"><a href="#代码复制" class="headerlink" title="代码复制"></a>代码复制</h3><p>hexo next主题代码框自带复制功能,在config中更改即可.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">copy_button:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure>
<p>代码block并且可以更改style.Next自带了mac式特效.</p>
<p>代码框的阴影可以在themes &gt; next &gt; source &gt; css &gt; _common &gt; scaffolding &gt; highlight &gt; copy-code.styl 中修改box-shadow有关数值.</p>
<br>
<br>

<hr>
<h3 id="日历"><a href="#日历" class="headerlink" title="日历"></a>日历</h3><p>没搞懂,这里是<a href="https://www.lbb.cool/4218094367.html">最粗暴的教程</a>.<br>试过很多都不好使.<br>有位大佬自己编写了后,另一位大佬根据next更改的插件<a href="https://github.com/icecory/theme-next-calendar">在这里.</a>但自己都没试成功.</p>
<hr>
<h2 id="便利贴格式"><a href="#便利贴格式" class="headerlink" title="便利贴格式"></a>便利贴格式</h2><div class="note ">
            <p>Next自带的这样的note格式.<br>相关<a href="https://theme-next.js.org/docs/tag-plugins/note">doc</a>.</p>
          </div>
<p><del>谢谢你next!!</del></p>
<br>
<br>
___

<h2 id="添加的插件"><a href="#添加的插件" class="headerlink" title="添加的插件"></a>添加的插件</h2><ul>
<li><p>bilibili的插件,<a href="https://github.com/Z4Tech/hexo-tag-bilibili">hexo-tag-bilibili</a>.<br>以前预览都没问题,但最近视频打不开.<br>不知道是网速的问题还是插件的问题,还没检查过.</p>
</li>
<li><p>youtube的插件,<a href="https://github.com/quocvu/hexo-tag-youtube-responsive">hexo-tag-youtube-responsive</a>.<br>除了render的时候会出现神秘bug外,不影响使用…</p>
</li>
<li><p>相关博文的插件,<a href="https://github.com/tea3/hexo-related-popular-posts">hexo-related-popular-posts</a>.<br>算法是tag重合率,文章的重合率没有调试成功.<br>效果不够好,因为tag重合的情况下推选的一直是最旧的博文.</p>
</li>
<li><p>字数统计,<a href="https://github.com/next-theme/hexo-word-counter">hexo-word-counter</a>.<br>next中半附带这个插件,先npm下载了直接在config中调整.</p>
</li>
</ul>
<p><a href="https://co5.me/2018/180613-wordcount.html">附带网页</a>.</p>
<p>顺便一提觉得”Symbols count in article”太长了,可以在next &gt; language &gt; en.yml(用的是英语系统)把对应的字符删减.<br>也可以在next的config里设置.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">separated_meta: false</span><br><span class="line">item_text_post: false</span><br><span class="line">item_text_total: false</span><br><span class="line">awl: 2 //中文</span><br><span class="line">wpm: 300 //阅读速度吧</span><br></pre></td></tr></table></figure>

<p>在 layout &gt; _partials &gt; footer.swig中可以增加总字数自主设定.</p>
<ul>
<li>加密,<a href="https://github.com/D0n9X1n/hexo-blog-encrypt/blob/master/ReadMe.zh.md">hexo-blog-encrypt</a>.<br><del>因为好玩所以加了.</del></li>
</ul>
<br>
<br>
___

<h2 id="图册"><a href="#图册" class="headerlink" title="图册"></a>图册</h2><p>图册功能可以<a href="https://co5.me/2018/181025-gallery.html#%E6%A8%A1%E6%9D%BF%E6%96%87%E6%A1%A3">参考文章</a>.<br>不过我的next版本不一样,以下代码放在了source  &gt; css &gt; schemes &gt; Pisces &gt; layout.styl里面.<br>(我猜测在pisces下的styl里都行)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.gallery-list &#123;</span><br><span class="line">	display: flex;</span><br><span class="line">	flex-direction: row;</span><br><span class="line">	flex-wrap: nowrap;</span><br><span class="line">	align-items: flex-start;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>并在md文件中添加css,实现的相册图片格式代码.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;div class=&quot;gallery-page&quot;&gt;</span><br><span class="line">	&lt;div class=&quot;gallery-list&quot;&gt;</span><br><span class="line">		&lt;div class=&quot;gallery-column&quot;&gt;</span><br><span class="line">			&lt;img src=&quot;img/图片1.xxx&quot;&gt;</span><br><span class="line">			&lt;img src=&quot;img/图片2.xxx&quot;&gt;</span><br><span class="line">			&lt;img src=&quot;img/图片3.xxx&quot;&gt;</span><br><span class="line">		&lt;/div&gt;</span><br><span class="line">		&lt;div class=&quot;gallery-column&quot;&gt;</span><br><span class="line">			&lt;img src=&quot;img/...&quot;&gt;</span><br><span class="line">		&lt;/div&gt;</span><br><span class="line">		&lt;div class=&quot;gallery-column&quot;&gt;</span><br><span class="line">			&lt;img src=&quot;img/..x&quot;&gt;</span><br><span class="line">		&lt;/div&gt;</span><br><span class="line">	&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>

<br>
<br>
___

<h2 id="友联美化"><a href="#友联美化" class="headerlink" title="友联美化"></a>友联美化</h2><p>参考<a href="https://enfangzhong.github.io/2019/12/08/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8F%8B%E9%93%BE%E9%A1%B5%E9%9D%A2/">这篇文章</a>以及<a href="https://tding.top/archives/73ce4e7.html">这篇文章</a>.<br>添加新的swig文件并设置新页面种类link.</p>
<br>
<br>
___

<h2 id="评论系统和更改域名"><a href="#评论系统和更改域名" class="headerlink" title="评论系统和更改域名"></a>评论系统和更改域名</h2><p>评论系统尝试过两种,之前使用的是gitalk,现在使用的是disqus.</p>
<p>hexo next装这两个很方便,都以及装好了只要更改config文件即可.可以<a href="https://guanqr.com/tech/website/hexo-theme-next-comments/">参考文章</a>.</p>
<p>要注意的是,虽然hexo可以当作<strong>生成网页文件</strong>的编译器,但博文中的链接hexo是默认使用”网页链接”,而不是“文件链接”.<br>不是<strong>相对的位置</strong>,而是需要再度确认好发布时的地址的.<br>(比喻:不是”我家旁边旁边那条河”而得说出“黄浦江”这个地址来.)</p>
<p>我在更新导航页面的第一次尝试是把hexo的文件生成,新建了blog文件夹并放进去,负责管理格式的css什么的完全没有连接上内容.<br>这里需要在hexo的config里设置.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># URL</span><br><span class="line">## If your site is put in a subdirectory, set url as &#x27;http://yoursite.com/child&#x27; and root as &#x27;/child/&#x27;</span><br><span class="line">url: https://mazui3.com/blog</span><br><span class="line">root: /blog/</span><br></pre></td></tr></table></figure>

<p>注意,如果不装评论系统,单纯的更改成’<a href="http://yoursite.com/blog&#39;%E4%B9%9F%E6%98%AF%E5%8F%AF%E4%BB%A5%E7%9A%84">http://yoursite.com/blog&#39;也是可以的</a>.</p>
<p>同时更改了域名,需要在github和购买域名的地方都设置一下.<a href="https://dev.to/nickymarino/pointing-a-github-pages-repo-to-a-hover-domain-105e">参考教程</a>.<br>(我用的是hover.)<br>其中要check 可能会按时间而变动的github <a href="https://docs.github.com/en/github/authenticating-to-github/keeping-your-account-and-data-secure/about-githubs-ip-addresses">id address</a>并在域名的地方更改.</p>
<p>绑完之后(当然需要一点时间),用github.io的地址还是新绑的.com的地址都可以进入网站了.</p>
<p>但按着教程装disqus除了必要的<strong>short name</strong>以外,还需要告知disqus你要装评论的网页是什么.</p>
<img src="/blog/2021/05/13/P195/P195_1.png" class="" title="website url">
<p>如果不把’<a href="http://yoursite.com/blog&#39;%E6%94%B9%E6%88%90%E7%9C%9F%E6%AD%A3%E7%9A%84,%E5%B7%B2%E7%BB%8F%E7%A1%AE%E8%AE%A4%E5%A5%BD%E7%9A%84%E5%9C%B0%E5%9D%80%E5%B0%B1%E4%B8%8D%E8%A1%8C">http://yoursite.com/blog&#39;改成真正的,已经确认好的地址就不行</a>.<br>包括我这里使用了https而不是http,也会绑不上.</p>
<br>
<br>
___

<h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><p>hexo的原理是用markdown文件交给hexo渲染.<br>博文文件中使用了markdown和css/html的语法.理论上想要的效果都用css/html code出来也不是不行.</p>
<p>举例,空行这件事我是用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;br&gt;</span><br></pre></td></tr></table></figure>
<p>来偷懒的…!!<del>正常的方法应该不是这样吧…</del></p>
<p>同理,借助mathjax的代码,可以增加latax.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script async</span><br><span class="line">  src=&quot;//mathjax.rstudio.com/latest/MathJax.js?config=TeX-MML-AM_CHTML&quot;&gt;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>项目记录</category>
      </categories>
      <tags>
        <tag>编码</tag>
      </tags>
  </entry>
  <entry>
    <title>制作记录_MathsocCartnoons</title>
    <url>/blog/2021/06/12/P200/</url>
    <content><![CDATA[<p>关于第一次认真画漫画是给学校打工这件事.</p>
<span id="more"></span>
<p>很抱歉一个月没更新!!<br>还活着.</p>
<br>

<p>我们系有个把数学小知识画成漫画的神秘小项目,在滑铁卢那么久了也想参加一次.<br>不过我觉得数学小知识跟漫画真的挺不搭.<br>内容抽象需要大量的文字,又不像生物或者是物理会有一些图像来说明.</p>
<p>但,来都来了嘛!<br>于是这次记载下过程与心得.</p>
<br>
<br>
<br>

<p>我记得U前辈说过打分镜的时候先从分布对话下手,受教良深.<br>给的文案密密麻麻有两页…估计要四页才能排完字.<br>打完四页的草稿后缩缩减减凑成了三页.</p>
<blockquote>
<p>反馈说一定要挤进三页于是约房间里传出”这个可以砍!!这个也可以删!!”的嚎叫。</p>
</blockquote>
<p>页漫的限制在以页为单位…<del>当只缩到三页半的时候感觉真挺绝望</del>.<br>这次是把脑子里最想保留的格子留下,再前后补上对话.<br>这小漫画还有一点会在意.<br><strong>图解和证明一定不能被阻挡.</strong><br>如果只是画人,可能自由度大一些?</p>
<img src="/blog/2021/06/12/P200/P200_1.png" class="" title="是约最苦手也最爱的透视">
<img src="/blog/2021/06/12/P200/P200_2.png" class="" title="超人pose构图了结果画不出来草">
<img src="/blog/2021/06/12/P200/P200_3.png" class="" title="最后一格用的是插画的脑子呢">

<p>我不知道打分镜的流程应该是怎样…<br>不过下文跟我这次画的东西没关系,我只是整了三页初学者玩意,但不唠嗑就很难受!</p>
<p>画之前看了一部叫做 <strong>历经弦音(shiori experience)</strong> 的漫画.<br>那部漫画表现力特别特别的强,透过画面可以感受到躁热的空气与蓬勃的感情.<br>大概是“原来漫画可以这样画啊”…的级别.<br><del>不过那部题材是音乐,甚至可以做到整一话不带一个字,实在不适合当这部密密麻麻科普的参考orz.</del><br>但留意起就可以注意到漫画特别的叙事和节奏…</p>
<p>包括钢炼09动画中有几个片段很在意.<br>明明是很酷的勇者对着反派宣言的场景,动画中因为反派的名字太长,在宣言中竟嗅到了尴尬的气氛.<br>发现漫画原作中反派的名字用了日文特色的 <strong>一词两读法</strong> 来喊话,而动画将两读法都喊出来了,太长,有那么点勇者达拉崩吧的味道.</p>
<p>阅读消耗时间,动画的时间钉死,漫画的时间是以格分布的.<br>所以一个格子中两人的对话如果直接搬到动画上,节奏会有冲突.<br><strong>反派为什么要等勇者说完话!!</strong></p>
<br>
<br>
<br>

<blockquote>
<p>因为这次要给学校的人看过程,所以难得画了草稿…!</p>
</blockquote>
<img src="/blog/2021/06/12/P200/P200_4.png" class="" title="约果不其然又被透视难到">
<img src="/blog/2021/06/12/P200/P200_5.png" class="" title="画到这页的时候发现约的一人千面和千人一面又严重了">
<img src="/blog/2021/06/12/P200/P200_6.png" class="" title="偷懒改成了两个qq脑袋">

<br>
<br>
<br>

<p>最后是上色.</p>
<img src="/blog/2021/06/12/P200/P200_7.png" class="" title="这胡闹一样的桌子颜色">
<img src="/blog/2021/06/12/P200/P200_8.png" class="" title="因为感觉空又没画背景,于是条纹笔刷救场">
<img src="/blog/2021/06/12/P200/P200_9.png" class="" title="同理网点笔刷真的很爽">

<p>上色跟插画的感觉很不一样!!<br><span style=" font-size:2em;"><strong>上色跟插画的感觉很不一样!!</strong></span></p>
<p><strong>其之一:</strong><br>以为自己可以从以前的旧图中整理一个简陋色卡快速上色,太年轻了.<br>我流上色还喜欢混色,但如果每个小人都混色那必定不现实.<br>混了两笔肤色之后就用起铺色叠加大法.</p>
<p><strong>其之二:</strong><br>只有自己上手时才注意到,以前从没在意彩漫对话框是什么颜色的!<br>很难得的碰过海报,海报上的文字与背景颜色次次打架.<br>彩漫不但字和对话框颜色会打架…还会跟背景颜色和周围其他对话框颜色打架!!</p>
<br>

<p>如你所见这次基本没考虑背景的实物色.毕竟只有三张,触碰的东西少.<br>每格的选色特别彩,因为怕对话框是一个颜色,格子还是一个颜色会不会太无聊……<br>如果加上场景和环境色……一定会更难想吧……</p>
<br>
<br>
<br>

<p>总计时不算加字:分镜一天半+线稿一天+上色一天.力气需要最多的是分镜.</p>
<p>还是挺有趣的经验…<br>这次给了要求的配色卡,如果是画自己的东西,很想试试用很多的印象派色.<br>当然这是有下一次画漫画机会的话了.</p>
<p><del>顺便一提第一张第一格桌上的笔袋是老兔独家赞助的.</del></p>
]]></content>
      <categories>
        <category>项目记录</category>
      </categories>
      <tags>
        <tag>Thank you Mr.goose</tag>
      </tags>
  </entry>
  <entry>
    <title>发布报告_流落之所</title>
    <url>/blog/2021/07/16/P203/</url>
    <content><![CDATA[<img src="/blog/2021/07/16/P203/P203_3.png" class="">
<p>流落之所发布了,<a href="https://www.bilibili.com/video/BV1UV411H7KG">B站link.</a><br>曲子超棒,决森的pv也做的超棒,希望大家都去看(都去看).<br>(因为作曲选择了匿名,我这里也把以前写的名字替换一下.)</p>
<p>在发布博客的时候,其实悄咪咪地把在lofter草稿躺了很多年的<a href="https://mazui3.github.io/blog/2019/06/18/P085/">制作经历</a>发布了,所以这篇文章是名为发布报告的……额,心情日记.</p>
<span id="more"></span>
<img src="/blog/2021/07/16/P203/P203_1.png" class="" title="线">

<p>这次是真的发布了.<br>心情很复杂呢.<br><strong>心情真的很复杂呢！！！！</strong></p>
<p>…我当年画脑袋怎么像冬瓜一样长.<br>(结果第一句是吐槽.)</p>
<br>
<br>
<br>

<h2 id="回想"><a href="#回想" class="headerlink" title="回想"></a>回想</h2><div class="note ">
            <p>老衲刚刚向土地倾诉了一下忏悔.</p>
          </div>

<p>我们来开反省会吧.</p>
<p>最近这段时间没有发布作品,也没有社交,正好拼命逃避peer pressure.<br>但对真真正正在意的东西无法避开这种pressure.<br>从另一个角度来看也是好事…(叹气)</p>
<p>19年的夏天我回国修了一个暑假.也是大学生涯唯一的暑假.<br>我飞机落地的那天,家人查出重病.<br>还因为自己能力不足,原本的实习也没去.<br>一边帮家人跑腿,一边学了unity和做完了这个pv.<br>做完的时候,已经知道做出来的成品不够好,不够匿名桑喜欢的标准.<br>匿名还安慰我说,现在入了门再学(视频制作)下去,一定可以更好的呀.<br>真的很感恩感激.<br>当时具体是怎么想的已经记不清了.<br>一半是想逃离AE,一半是焦躁.<br>那段时间不知道做什么好.<br>说实话,我不知道…<br>的确在滑铁卢这几年就没空余时间,但那时候转专业被拒没想过未来的第二选择.<br>然后我就逃跑了.我从这个项目逃跑了.<br>学unity一半是处于兴趣,一半是跟代码有关.<br>那时候还在各个平台普通的更新.<br>时常有想做的东西,于是就去做.也就是创作欲.<br>这个pv的大坑让我感到痛苦,明明喜欢搞创作,但搞创作的成本又会无力承担.<br>现在回想起来是能力不足的一种.没能平衡回馈和成本.<br>我那时候没有估算出自己的能力以及学习成本,也没能把事情结束.结束是很重要的事,从一开始计划的时候就得思考结束.</p>
<p>那时的矛盾放在现在还是存在.<br>真正想要的东西,需要的成本.<br>反而说经历了这么一次,”啊好想做个故事pv啊-&gt;结果花了一年”的经历,会更加在意实现成本了.</p>
<p>也许就是这样的.<br>一边想要搞自己想要的东西,如果搞不了会痛苦,搞了也会痛苦.<br>唉,学习的过程也同时是认知自己能力的过程,不也是一种青春悖论…</p>
<br>
<br>
<br>

<h2 id="躲不开的感情"><a href="#躲不开的感情" class="headerlink" title="躲不开的感情"></a>躲不开的感情</h2><div class="note ">
            <p>是否后悔?</p>
          </div>

<p><strong>恭喜一万再生达成,丢人次数也超过一万人了呢!!(草啊)</strong></p>
<p>算是怀念的曲子.<br>从demo开始构想,到之后分镜,画图实现.<br>听的次数太多了,每个细节记得清楚,换了手机之后没存文件,明明两年都没听到了.<br>(匿名新加了一些合声也能听出来.)<br>不如说歌过于熟悉但自己的画太久没见产生了很奇妙的感觉.</p>
<p>把这个委托搞砸我是否后悔.<br>有难受的地方,疼还是疼的,心很疼.<br>没搞好,还拖欠人家那么久.对不起两位,也对不起设计的角色.<br>回去读了遍18-19年写的制作记录.<br>…这个人做的还挺开心的啊.</p>
<p>嘛,因为这份心情搞得我躁动不安,这个问题也问了自己很多次.<br>我本身是很少后悔的人.<br>因为就算有更好的选择,如果整件事都没有发生,那就无法收获到现在所拥有的事物.</p>
<p>如果是yes or no的问题的话.<br>我做不到后悔…只是会懊恼.</p>
<p>只能积攒更多的逻辑,用逻辑打败魔法(何).</p>
<p>心好痛啊可恶！！!</p>
<br>
<br>
<br>

<img src="/blog/2021/07/16/P203/P203_2.png" class="">
]]></content>
      <categories>
        <category>项目记录</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
        <tag>oc</tag>
      </tags>
  </entry>
  <entry>
    <title>关于奇怪技巧的笔记 - cutout &amp; trance contour</title>
    <url>/blog/2021/07/07/P202/</url>
    <content><![CDATA[<img src="/blog/2021/07/07/P202/P202_1.png" class="" title="图倒是画好了">
<p>这要说回我又一次没能赶上的老兔生贺.</p>
<span id="more"></span>
<br>
<br>

<p>事情是这个样子的.</p>
<p>挺久前翻到个很酷的网站<a href="https://www.webdesignmuseum.org/">web design museum</a>.里面有各个时代的网页,包括存放着90年代很有时代感的网页设计.<br>第一念头就是,<em>这好适合老兔!</em><br>第二念头是,<em>下一年的老兔生贺恶搞个旧网站样式吧!</em></p>
<p>再来是github更新,不让用hexo自带的command更新网站.<br>那用hexo生成网页文件,再手动更新github,正好方便给博客加个封面.<br>既然有这么个机会,就真的把老兔恶搞封面做成博客封面吧!<br><span style="font-size:25px"><br>然后绝赞踩死线失败.<br></span></p>
<p>……这次我也会再来一周健身环谢罪的.</p>
<br>

<p>话扯远了,这次图颜色较多,是自己的舒适区之外(我真的有舒适区吗),颜色画得糊,所以头疼.<br>于是一个个尝试ps特效,想起 <em>trance contour</em> 这个自动生成线稿功能.<br>我流线稿是一层overlay再下垫一层normal,从<a href="https://www.pixiv.net/artworks/65740610">四年前</a>碰巧碰巧发现“哇线稿可以加特效诶!”就一直沿用至今.<br>叠一层overlay线稿(或者其他特效)会让图更重一点.</p>
<img src="/blog/2021/07/07/P202/cutout_0.jpeg" class="" title="很喜欢彩色的线">

<p>这是一次初次实验,感觉挺好玩的!</p>
<img src="/blog/2021/07/07/P202/cutout_5.jpeg" class="" title="左:before&amp;右:after">

<p>保守opacity调低了很多.颜色也尝试从原本的颜色调成了黑色再叠.<br>清晰度的确上涨了.</p>
<p>Trance contour生成的是彩线白底的图层,csp的brightness to opacity虽然好用,是会自动将彩色变黑色的.<br>如果要在ps里直接扣掉白色,可以使用colour range,选择白色再选区删除.<br>(这些都是临时抱佛脚查的,以前一直把ps当作windows画图在用(?))</p>
<br>
<br>

<p>线稿挺有意思所以又尝试了一次.</p>
<img src="/blog/2021/07/07/P202/cutout_1.jpeg" class="" title="原图">
<img src="/blog/2021/07/07/P202/cutout_2.jpeg" class="" title="cutout">
<img src="/blog/2021/07/07/P202/cutout_3.jpeg" class="" title="加线">
<img src="/blog/2021/07/07/P202/cutout_4.jpeg" class="" title="整体效果">
<p>曾经看到有人说,照片转图片主要是“减少信息量”.<br>所以cutout好用,cutout原理是将图片归纳成几个level的颜色.但trance contour又能把线的信息分开来处理,想着合在一起会不会适合.<br>同样cutout的原理可以适用于用colour range分别选区并调整,但粗略的尝试了一下,效果没有很理想,还需考虑.</p>
<br>

<p>最后手一痒,尝试加了只雨未.</p>
<img src="/blog/2021/07/07/P202/P201_9.png" class="" title="附录的睡前昏迷涂鸦">
<p>我的颜色和型都是一点一点又找参考又扣出来的,对不起雨未,只有涂鸦了.</p>
]]></content>
      <categories>
        <category>绘图笔记</category>
      </categories>
  </entry>
  <entry>
    <title>生存报告</title>
    <url>/blog/2021/07/07/P201/</url>
    <content><![CDATA[<img src="/blog/2021/07/07/P201/P201_6.png" class="">
<p>图书馆角色更新(大嘘).</p>
<p>(认真)<br>是疫情宅家下薅下来的生活片段.</p>
<span id="more"></span>

<br>
<br>

<h2 id="报告"><a href="#报告" class="headerlink" title="报告"></a>报告</h2><p>因疫情宅家已经突入第二年了.<br>上一次写日记是三月份,好家伙,的确是没有生活,也就没写日记.<br>开学前有封学校相关的邮件一直拖着没有回,下决心解决一些拖延的问题,终于回复了,好家伙,一看已经三个月了.</p>
<p>我的拖延问题很严重,因为”不敢去和生人说话”或“不敢去做从未试过的事”可以将事情拖上一年半载.<br>所导致的结果是对自己的厌恶以及后悔,(甚至金钱的损失),会越积越多.<br>最近(六月中)时在看本叫做 <em>《少有人走过的路》</em> 的书,对我现在的状况还挺有帮助.<br>书讲的是一位心理医生以医生的角度来分析自己的病人,里面讨论了各种心智不成熟的例子和其原因.<br>因为从来都没考虑过一些心理疾病的原因,了解到一些案例时,甚至产生了“被原谅”的感觉.<br>当然这里的“被原谅”,并不是指“自己没有错”.而是指了解到了原因,才会去分析和直视问题.<br>感到难过或焦虑,是否是自己的处事而累计的问题,亦或是他人的处事而造成了问题,并非全部归结于一句“这是矫情”.<br>我想拖延也是问题的一种,如果真的希望自己的内心能够变强,也得从一点点积累的小事开始做起.</p>
<p>下面稍微聊点有的没有的.</p>
<br>
<br>
<br>

<h2 id="靓仔必备打碟"><a href="#靓仔必备打碟" class="headerlink" title="靓仔必备打碟"></a>靓仔必备打碟</h2><p>竟然画了点画.</p>
<img src="/blog/2021/07/07/P201/P201_1.png" class="" width="280" height="280" title="(豆腐)演唱:刘德华">
<img src="/blog/2021/07/07/P201/P201_2.png" class="" width="280" height="280" title="(菌)作曲:mili">
<img src="/blog/2021/07/07/P201/P201_3.png" class="" width="280" height="280" title="(宗杞)舞台:akb48">

<p>“以朋友印象画成CD”的三张小涂鸦.<br>这个主题…画的时候超开心的,一提笔脑子里的梗就蓬勃而出.<br>我喜欢不同种的音乐,有机会特别特别想给oc或者其他朋友画…</p>
<br>
<br>
<br>

<h2 id="谢谢你-任天堂"><a href="#谢谢你-任天堂" class="headerlink" title="谢谢你,任天堂"></a>谢谢你,任天堂</h2><p>也许在博客中记载过因为动森而入了switch.</p>
<img src="/blog/2021/07/07/P201/P201_4.png" class="" width="320" height="300" title="我滴动森初恋">
<p>过了这么久动森早吃灰了,但健身环竟然还在用.</p>
<img src="/blog/2021/07/07/P201/P201_9.jpeg" class="" title="一份游戏四份体验">

<p>健身环我练到114级了朋友们!<br>一年了朋友们!<br>当然没能每天都练,四月时因为图书馆的制作没赶上死线跟自己生气而打了一周的健身环,结果一年没正常的月经都正常了,真的很可怕.</p>
<p>说起来我这个人真是各种各样的意味上没有认真生活啊…<br>我亲爱的室友曾带我去学校旁的一个VR游戏体验馆玩过,大概是两年前吧,给我印象不错.<br>除了一些很酷的打怪探险类VR游戏,玩的最开心的是和室友的联机雪球和音游切方块.<br>(室友特地先下机录了一段我太极式带着游戏机打音游的视频,这是什么感天动地好损友.)<br>当时就想能在游戏里运动就好了,但VR比较晕.任天堂的健身环虽然没有那么多游戏性,但正正好.</p>
<br>
<br>
<br>

<h2 id="摘了十分钟的豆就中暑的人竟然就是我"><a href="#摘了十分钟的豆就中暑的人竟然就是我" class="headerlink" title="摘了十分钟的豆就中暑的人竟然就是我"></a>摘了十分钟的豆就中暑的人竟然就是我</h2><p>说到虽然健身环成了daily routine,但身体体质并没有变好…!<br>伯母喜好种植,申请上了块小菜地.安省疫情好了些,我也就乘机去参观且帮忙.</p>
<img src="/blog/2021/07/07/P201/P201_7.png" class="" title="草莓花">
<img src="/blog/2021/07/07/P201/P201_8.png" class="" title="像小山一样的植物">

<p>挺酷的.<br>在高速旁的地方,一小片地,里面每个人分有约一间房间大小的面积,公用几个水龙头.<br>隔壁的菜农邻居什么都有种,还有专门种植鲜花的,大家打理得都漂亮.</p>
<p>难得跟植物打交道,在植被间见到小虫反应是“这个我在动森中见过诶”.这可能是现代人特有反应了吧.<br>只记得有白色的瓢虫,超小号甲虫等.心里上了年纪,虽然稀奇,可惜没产生太多兴奋.</p>
<p>时隔一年,啊也可能是五六年的体力活.只是采摘了豆,太阳一晒甚至失去了站立的力气.<br>对不起我的好伯母,明明是想来帮忙的.</p>
<br>
<br>
<br>

<h2 id="东南西"><a href="#东南西" class="headerlink" title="东南西"></a>东南西</h2><p>难得说一下东南西的事情.<br><del>发现自己搞了图书馆后,可以带着我角色恶搞我网站,这么会这么爽.</del></p>
<img src="/blog/2021/07/07/P201/P201_5.png" class="" title="Donna West">

<p>以东南西为名字的角色不止一位,多用在游戏捏人或和朋友跑剧本.<br>有日本籍姓东名Nancy的,有中国籍姓东名西南的.<br>Donna West是音译成了东南西,特点是四颗痣.<br>头发是染的,原发色是金黄.<br>最近(六月下)做了个有点意思的梦.从其他的地方凑来了oc写了个草稿小剧本,东南西是其中一位.</p>
<p>东南西的初次登场是和树哥和旧友跑团.<br>两位的角色叫 <strong>诸葛不亮</strong> (不愧是树哥)和 <strong>乔治十七</strong> .<br>朋友捏了两位190的大汉,恶搞的简介里讲的中国佬和英国佬指的就是他们.<br>我完全按癖好捏了个身材矮小的萌妹,除了身材外,各个数值都矮得可怜(本真五边形废物).<br>被卷入的奇奇怪怪事件指的是,</p>
<div class="note ">
            <p>调查现场,一开门一具尸体.除了精神力down down down外,什么线索都没查出来.<br>最后直接被送去见last boss,夜晚降临,恶灵出现,气氛可足了.<br>明明捏了个黑客模版,结果抱着电脑在美国农村着火的麦地里狂奔逃命.<br>最后守秘人(主持人)的树哥掐指一算这个废物真的横竖都是死.<br>于是大发慈悲用神之力(魔改剧本)驱鬼,东南西在剧本里就一个到此一游.</p>
          </div>

<p>某种意义上是被神眷顾的角色.</p>
<br>
<br>
<br>

<h2 id="谢谢大家的礼物"><a href="#谢谢大家的礼物" class="headerlink" title="谢谢大家的礼物"></a>谢谢大家的礼物</h2><p>最后以大家给的生日贺图结尾吧.</p>
<img src="/blog/2021/07/07/P201/bday_1.GIF" class="" title="谢谢U大人">
<p>谢谢U大人让我又见到了兄妹(磕头).<br>U说他有看在我的博客,在这里说点有的没的.</p>
<p>U对我来说是意义很重大的朋友,也是意义很重大的网友.<br>跟U认识太久了,U酱见证了我的幼稚,弱小与任性,感谢这么多年来的包容…</p>
<p>去年跟U的对话还留着.</p>
<div class="note ">
            <p>内心想要一份余力.</p>
          </div>
<div class="note ">
            <p>有时候人需要面对自己最诚恳的愿望.</p>
          </div>
<p>一年了没有做到!<br>我很抱歉.<br>有的时候会不知道如何面对你.<br>很多年前还在lofter跟大家一起玩的时候,每次更新会期待是否会有某几个创作前辈的小心心,U君是其中的一个.<br>一年了,我还在适应网络的环境更改和现实中的人生改变.<br>U酱拥有了新的社会身份我很开心!虽然我不知道你是否过得比以前更好更快乐.无论你怎么做决定,我都会以朋友的身份支持你.<br>我希望在你的面前我也能维持个人形,因为喜欢U前辈,同样不希望我的状态让他人产生坏心情.<br>如果能做得到,我再向以前那样找你留言吧.</p>
<br>
<br>
<br>

<img src="/blog/2021/07/07/P201/bday_2.GIF" class="" title="谢谢brutal大人">
<p>谢谢brutal画的无口二人组,回信在邮件里写过了,所以不再多话.<br>我会好好珍惜的,图也好这份缘分也好.</p>
<br>
<br>
<br>

<img src="/blog/2021/07/07/P201/bday_3.png" class="" title="谢谢灰大人">
<p>灰酱特地那天为我画的…很是感动……<br>🥺灰酱画的也是兄妹,灰酱懂我……<br>我在学识和思考广度上都很差,谢谢灰的包容.<br>有机会也想给灰画画!我也希望灰能开心一些…</p>
<br>
<br>
<br>

<img src="/blog/2021/07/07/P201/bday_4.png" class="" title="蛋糕">
<p>有吃甜甜的.<br>原本今年不想要蛋糕,伯父一家的家庭定番是蛋糕蜡烛许愿唱歌,一个都没能少.蛋糕挺好吃的,感激感谢.</p>
<p>我把握不好距离.<br>也许前年开始,渐渐回避在公众场合提自己生日,或很私人很私人的事.<br>如果把人与人的距离按百分制来理解的话,我不能很好的处理和接受10分的好意和50分的好意.<br>话展开来又会变长,就当作是自我认知的问题吧.<br>所以也会提老兔的生日而不是”我的我”的生日,也是我变扭的一个地方.<br>但为“我而我”收到了生日祝贺,真的很开心,也想接受,也会珍惜.</p>
<p>我果然还是想活下去的.<br>既然这么决定,那得从生存需求一个个考虑.</p>
<br>
<br>
<br>

<p>附录:</p>
<p>博客的更新会再度减缓.<br>画钢炼小涂鸦的那篇博文,临摹意外地费时间,也贪心想画更多可爱的角色,断断续续才凑出那么几张.产生了“虽然画图的是我,但更新速度不是自己能控制的啊”的错觉.<br>让更新速度就这样随缘也不坏…<br>给学校画的小漫画也好,这次的特效小笔记也好,都是因为努力其他的死线而掉落的更新.<br>所以只要更用力一点的生活,也没必要为了保持更新速度而更新了.</p>
<p>不过这句话是借口还是真的如此也得过段时间才能知晓呢.</p>
]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>制作记录_Mazui&#39;s Website</title>
    <url>/blog/2021/08/08/P204/</url>
    <content><![CDATA[<p>以及混进了杂谈.</p>
<img src="/blog/2021/08/08/P204/P204.png" class="" width="200" height="200">

<span id="more"></span>

<h2 id="这次的更新"><a href="#这次的更新" class="headerlink" title="这次的更新"></a>这次的更新</h2><p>更新了导航页面.</p>
<img src="/blog/2021/08/08/P204/P204_3.png" class="">
<img src="/blog/2021/08/08/P204/P204_4.png" class="">

<p>这是原本的计划图.<br>之前的博文里讲到是想仿照老网站做,排版也想极简并老式点.<br>最后输给了不想写css的欲望(靠).所以使用了inky偷懒,排版也就沿用了inky.</p>
<p>导航页面是很久前就想制作的,一来是把必要的信息放在这个中文的博客里也不方便阅读,二来是两个网页不方便寻找.<br>怎么做也想过挺多.<br>自己的技术力还不足,搜索过一些制作导航页的平台,除了这次使用的potofu也有相中其他的.<br>但导航页内容不多,hard code一下也不是不行.<br>我弟是年轻有为code码师,一直都想着委托他给我code一次.<br>很荣幸收到了他给我做的雏形,结果他code完的码想做一些改动,我改不会他的css文件.<br><em>场面一度十分尴尬.</em><br>思考再三决定弃用了他的雏形,他最近在准备大学入学也挺忙.</p>
<p>说到inky吧.<br>虽然最初决定用inky是为了减少工作量,但在读documentation的时候看到random的function觉得这是个好东西.<br><strong>所以我们来写个互动吧.</strong><br><strong>于是工作量增加了呢.</strong></p>
<p>……也是经常的事情了.</p>
<p>网页有除了home外的4个页面.<br>逻辑写的是:如果在任何的页面跳转5次(就是会阅读重复的内容的话),回到home时会触发老兔找你猜拳的选项.</p>
<p>计划的是没那么容易触发的彩蛋…</p>
<p>这次是因为“老兔生日特别企划”而让老兔在导航页看板的.<br>结果迟了一个月……明明是麻醉名义的网站,既然做都做了,那就忘了麻醉实装老兔吧.<br>老兔也可爱嘛(靠).</p>
<br>
<br>
<br>

<h2 id="老兔生贺"><a href="#老兔生贺" class="headerlink" title="老兔生贺"></a>老兔生贺</h2><p>终于可以谈这个头图了.</p>
<p>头图里藏了只有我才会懂的梗,一个个解释来.</p>
<img src="/blog/2021/08/08/P204/P204_6.png" class="" title="logo房子和台灯">

<p>台灯是我高中时期房间的台灯,而logo积木得说到…在老兔之前的了,小学?三?四年级？<br>我弟暑假都会来我们家过一个月,我去他家过一个月.在我家和他度过的这些时间里几乎每年都会搭积木玩.<br>搭积木,编故事,一年结束之后第二年积木(小镇)是得重搭但人物大多会继承下来.<br>积木是正版和山寨混合着,会拼大半个客厅.</p>
<br>

<img src="/blog/2021/08/08/P204/P204_5.png" class="">
<p>(用美图秀秀拼的土土的图,找贴纸太好玩了…谢谢你美图秀秀…)</p>
<p>算是最初最初的oc.</p>
<p>(老兔大概是五年级写起来的,因为六年级那个暑假我弟问我讲故事,我会偷懒把写完的老兔故事小册子扔给他,太屑了.)</p>
<img src="/blog/2021/08/08/P204/P204_7.png" class="" title="水枪">
<p>这里老兔背后的是宾果的水枪.旁边的星空灯没有特别的含义,只是自己馋了很多年都没有买.<br>顺便一提宾果这身衣服款式出自于我的雨伞…</p>
<br>

<img src="/blog/2021/08/08/P204/P204_8.png" class="" title="鸭子盆栽">

<p>鸭子盆栽出自于丹的第一张<a href="https://mazui3.com/blog/2015/12/29/P012/">立绘图</a>,之前的丹人设只是玩偶.</p>
<p>顺便一提这张立绘图里报纸里的sweet olive local指的是老兔丹所居住的小村落.<br>low-key是世界观里的一个神秘艺人.<br>mestery logo town(好家伙拼错了.)指的也是logo积木所拼出来的oc故事.</p>
<br>

<img src="/blog/2021/08/08/P204/P204_9.png" class="" title="圣诞树靠枕">
<p>这个是比较近的梗了.去年年底的赛博圣诞.</p>
<p>丹怎么老在看书……?</p>
<br>
<br>
<br>

<p>还有一点点图书馆的更新.</p>
<h2 id="麻醉衣服更新"><a href="#麻醉衣服更新" class="headerlink" title="麻醉衣服更新"></a>麻醉衣服更新</h2><img src="/blog/2021/08/08/P204/P204_2.png" class="">

<p>原本只想画最右边那身,看到了松松垮垮小外套觉得会适合麻醉.<br>中间是飞哥说想做视频,思考的麻醉搞笑艺人服装(亮片西装!).<br>顺便重制了老兔围巾🧣更改了麻醉的页面.</p>
<p>背景是之前测试contour时使用的线稿,比想象的快捷方便,真是偷懒好手.</p>
<br>

<h2 id="报刊亭"><a href="#报刊亭" class="headerlink" title="报刊亭"></a>报刊亭</h2><img src="/blog/2021/08/08/P204/P204_13.png" class="">
<p>报刊亭的设定原本是打算等待meteo的更新一起做的.<br>等待pv师的时间比预计的长于是作罢…<br>暂时只有meteo的表情包.</p>
<p>计划是制作表情包和壁纸.<br>暂时没有制作有实物/金钱交易的物件的打算.<br>但也想……通过wordpress的woocommerce插件,让来图书馆的难得的客人能有什么东西记住图书馆的时间长一点……所以这么决定了.</p>
<p>表情包有机会还会再画,壁纸……现在只向喜欢的绘师约了图.</p>
<p>比起报刊亭……图书馆本体还有数不清的图想要画…所以先更新到这里.jpg</p>
<br>

<h2 id="草莓蛋糕"><a href="#草莓蛋糕" class="headerlink" title="草莓蛋糕"></a>草莓蛋糕</h2><p>更新了旧图.</p>
<p>一来是把ada的页面扣了一下旧图.<br>二来是把兄妹这两年的生日扣了一下<a href="https://mazui3.net/strawberryshortcake/">图配了文案实装进了图书馆</a>.</p>
<p>现在以及最近都没有在图书馆里讲兄妹的计划,但<br><strong>我太喜欢兄妹了！！！</strong><br>的喜欢藏不住啊…</p>
<p>不过之后如果有画暂时不会实装的oc小插画,都可以配个文案装在图书馆里当作小彩蛋.<br>不限于兄妹,小彩蛋做了之后再拿网页地址出谜题也是有趣的.</p>
<p>虽然事到如今才说啊…<br>无论怎样的彩蛋系脑洞,成本都是相当大的.<br>毕竟就是不打算给人递到鼻子面前才算彩蛋嘛…这也是得纳入考虑的.</p>
<br>
<br>
<br>

<p>混一点点的杂谈.</p>
<h2 id="摸"><a href="#摸" class="headerlink" title="摸"></a>摸</h2><p>最近低产.</p>
<img src="/blog/2021/08/08/P204/P204_1.png" class="" title="给b酱的生贺">

<br>
<br>
<br>

<h2 id="谢谢"><a href="#谢谢" class="headerlink" title="谢谢!"></a>谢谢!</h2><p>最后贴一些收到的宝贝嘿嘿嘿(?).</p>
<img src="/blog/2021/08/08/P204/P204_10.png" class="" width="300" height="300" title="雨未!!">
<p>从122px老师那里收到了pixiv fanbox的应援感谢,小粉丝疯狂流泪.</p>
<img src="/blog/2021/08/08/P204/P204_11.jpeg" class="" width="325" height="300" title="酷酷的爱德华">
<p>从星乃老师得到的爱德华点图.超级喜欢的…谢谢星乃,谢谢爱德华(?).<br>虽然也很喜欢看兄弟在一起时的图,但没敢点阿尔(靠).</p>
<p>最后是毕生的宝物.</p>
<img src="/blog/2021/08/08/P204/P204_12.jpeg" class="">
<p>在bcy随缘的营业既然被抽中k大点评了…!!!<br>真的很激动,很感谢.<br>语言在这里一刻真是好苍白啊.<br>有被肯定的激动,也有被指导后的感动.这两方都对我意义极其重大.<br>盘算着开新的绘画笔记系列.</p>
<p>不过最近还有些不得不去面对的事,还需要一点时间………</p>
<p>这次就先聊到这里吧.</p>
]]></content>
      <categories>
        <category>项目记录</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
        <tag>oc</tag>
        <tag>家庭组</tag>
        <tag>废弃工厂</tag>
        <tag>ハガレン</tag>
      </tags>
  </entry>
  <entry>
    <title>乔迁一年记录</title>
    <url>/blog/2021/08/12/P205/</url>
    <content><![CDATA[<img src="/blog/2021/08/12/P205/P205.png" class="" title="丹和路牌">

<p>博客一周年了.恭喜恭喜.</p>
<span id="more"></span>

<p>图书馆的管理员生日是8月5号,当初也想赶它生日但又是一个滑铲失败…<br>喜欢的点子放置一两年也是常有的事,只能安慰自己late better than never.<br>搭博客也是如此,一年后的前两天才把导航页和评论系统搞好,不愧是我.</p>
<p>从15开始使用老福特,那时刚留学,开始是模仿着网络好友写学习笔记.<br>后来也画画图,蒙受错爱,观众逐渐变多,没法平衡“回馈”和“创作”这两件事.<br>搬家后花了一年来调整对于“记录”这件事的心态,最近逐渐稳定.</p>
<br>
<br>

<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>博客跟营业平台,甚至跟学习用老福特也不一样.<br>今年新增加了笔记种类,发布了27篇.<br>实际上这些笔记自己也有在使用,很有动力!一边使用一边修改,很有帮助.</p>
<p>画只增加了12篇草.<br>项目记录增加了5篇.<br>日记也只增加了6篇.没有生活.</p>
<p>已经感觉是很久之前的事了,但0.00version的图书馆是今年发布的.<br>将图作为“使用素材”之后就大大减少了单纯作为画的发布.</p>
<p>今天阅览了pixiv fanbox一直都很想赞助的两位画手,还在ig开了一个读别人博文的小活动,难得难得的被感染到了“人的气息”,或者说“他人对画图的热爱”.</p>
<p>……纯粹的热爱,思考,学习,并持续表达.这也许是自己所欠缺的东西.</p>
<p>曾经思考过自己喜欢的东西.<br>听说狗狗只能看到两种颜色,而昆虫能看到十来种.我所喜欢的颜色也只是人类能看懂的颜色.我所喜欢的情感也只是人类能理解到的情感.<br>所以与人相处是必要的,但如何相处就是门学问了.</p>
<br>
<br>

<h2 id="将来"><a href="#将来" class="headerlink" title="将来"></a>将来</h2><p>未来的打算没有做很多,手上还有些最近很想做的东西,先做完再说.<br>有点奢侈的愿望是在家隔离一年半了,好想普通的逛超市啊……<br>在大学宿舍的时候,每次买家具都会非常开心,从内心深处涌出来的快乐,完全无法想象搬出去后的生活.<br>现在反而觉得有自己的房间还能时常跟韩国炸鸡店的店主点头微笑的日子很遥远了呢…<br>写博客倒是能留下点痕迹.<br>能拼出个大概,不然感觉没有活过.<br>从这个意义上还得谢谢博客,今后也会按写博客的方式来努力生活的.</p>
<p>想要把它作为一个常态,思考,记录,总结并重复.</p>
<p>谢谢所有来看的朋友.</p>
<br>
<br>
<br>
<br>

<h2 id="omake"><a href="#omake" class="headerlink" title="omake"></a>omake</h2><p>博客之小废话.</p>
<img src="/blog/2021/08/12/P205/P205_1.png" class="" title="四老兔">

<h3 id="1"><a href="#1" class="headerlink" title="1"></a>1</h3><p>导航页说的“reading room,version2.00”指的是老福特(0.00)和博客模版更改(1.00).<br>在next前用过其他模版,没有截图留念.<br>最初想搭建网站是18年,想hard code一个图书馆和阅览室出来,停留在0421的小网页尝试上.</p>
<h3 id="2"><a href="#2" class="headerlink" title="2"></a>2</h3><p>搬家时整理SNS记录发现年终总结竟然可以追随到2015.<br>不过那时候的自己太过中二小鬼根本读不懂在写什么.</p>
<h3 id="3"><a href="#3" class="headerlink" title="3"></a>3</h3><p>我真的很喜欢<a href="https://mazui3.com/blog/tags/%E6%A0%91%E5%93%A5%E6%98%AF%E7%A5%9E/">树哥的文</a>.<br>最喜欢的是萧笙芋高考落榜小故事,读过无数遍闭着眼睛还能想起情节.但TAT系列里唯独那个小故事没有整理出电子记录.<br><em>大意了.</em></p>
<h3 id="4"><a href="#4" class="headerlink" title="4"></a>4</h3><p>因为健忘+自我认知少许障碍,在最初搬家整理记录的时候,经常产生“这是我的人生吗”,“我竟然这么活过啊”的感叹.<br>自我认知障碍不是好事,得多加注意.</p>
<h3 id="4-5"><a href="#4-5" class="headerlink" title="4.5"></a>4.5</h3><p>也许一半是不想承认以前的自己真的好中二.</p>
<h3 id="4-5-5"><a href="#4-5-5" class="headerlink" title="4.5.5"></a>4.5.5</h3><p>现在也很中二.</p>
<img src="/blog/2021/08/12/P205/P205_2.gif" class="" title="谢谢brutal画的庆祝图！！谢谢谢谢！！">
]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
        <tag>oc</tag>
        <tag>家庭组</tag>
      </tags>
  </entry>
  <entry>
    <title>家</title>
    <url>/blog/2021/08/23/P206/</url>
    <content><![CDATA[<img src="/blog/2021/08/23/P206/P206_1.gif" class="" width="300" height="300" title="小gif还挺可爱">

<p>今日搬宿舍.</p>
<span id="more"></span>

<p>最后一学期的成绩也出来了.<br>擦着边及的格,很是惊险.<br>没拿到分的时候又经常做恶梦,梦到自己的成绩单搞丢了跑到南非去找…<br>在滑铁卢的时候压力的显现不是繁忙,而且生理.<br>当年考完博弈论的走回家,十来分钟的路心累到非得在路边休息几次.<br>现在结课一周多还没什么实感.</p>
<img src="/blog/2021/08/23/P206/P206_2.gif" class="" width="300" height="300" title="校长">
<p>整理资料时翻学校的毕业checklist,还有一打上个学期网络毕业时使用的小gif.<br>插播着小gif来写份杂谈.</p>
<br>
<br>

<h2 id="家"><a href="#家" class="headerlink" title="家"></a>家</h2><p>我们学校大一推荐住宿,大二往后大多自主租房.<br>宿舍指的是从大二开始跟室友合租的房子.<br>当年我们都不会也没有车,目标是就近,价格随意.<br>两个人都舍不得住可以看晚霞的高档公寓,选的是个旧房子.<br><del>旧到入住没个把月客厅天花板漏水漏出一个大洞……</del></p>
<p>因为新冠的原因这房子我也只住了两年,一年没见回去收拾,感想:<br><strong>怎么如此纸醉金迷.</strong></p>
<img src="/blog/2021/08/23/P206/P206_10.jpg" class="" title="2019年回国前拍的">
<p>房间不大,一面靠树的窗.<br>桌子很大,两台电脑左右放还能有位置放书.<br>最初搬进时跟室友去买家具.<br>室友选的是价格实惠,毕竟毕业后多半会扔.<br>我加点钱选择舒适第一,添了办公椅和大书架.把高中时期在伯父家的个人物品统统带走,想把“属于我的我”都安置到小房间里.</p>
<p>想要一个safe space.<br>想要一个…回来就可以回复san值的,属于自己的,一个家.</p>
<p>这次总结是:方向错了.</p>
<p>想要自己的safe space,不是只把“悠稳的和平”带来的安全错觉带进自己的space.<br>是自己的能力给space给予安全.</p>
<p>一言以概之:想要房子.</p>
<br>
<br>

<p>有很多充满回忆的东西.</p>
<img src="/blog/2021/08/23/P206/P206_13.jpg" class="" title="刚入学时获得的明信片">
<blockquote>
<p>When school work is killing you but then you remember that you’re that much closer to your dream job.</p>
</blockquote>
<p>这心灵鸡汤大一的时候可是喜欢.<br>之后渐渐感觉到“努力学习学校并不会直接保证你幸福”的gap…<br>永远是自己(因学校)拥有了能力,自己因能力去获得想要的东西.<br>想起高中的时候贴在英语教室里的memes:</p>
<blockquote>
<p>～Independent work, forever alone.～</p>
</blockquote>
<br>
<br>

<img src="/blog/2021/08/23/P206/P206_11.jpg" class="" title="彩虹旗和一元店的假花">
<p>彩虹旗是和上任室友跟学校去多伦多参加pride parade获得的.<br>墙上贴了很多兄妹…纸醉金迷指的也是这个.<br>哇pride parade算是我第一次见市面.<br>本意是支持性取向多元,参加的团体有公司,学校,各种团体组成的队伍.<br>我们走规定好的路线游行,两边有非常多的人群来欢呼庆祝.<br>有举着“I love my man and so do I love my woman”牌子的性取向多元的小姐姐,大多也是性取向单一来支持多元的人们.<br>让我印象很深的是,游行的人们中有动物保护主义者.<br>印着自己关在笼子里的海报,大概是反对家禽的组织吧.<br>我对世界的理解还没达到反对家禽成为素食的程度,不过当时只是想“这跟性取向没有关系嘛”.<br>渐渐体会到人活着就会有思考,立场显示以及诉说的需求.<br>而人数量一旦变多,立场的起点永远不会单纯.<br>但并不后悔去pride parade,是很珍贵很感激的体验.</p>
<br>
<br>

<img src="/blog/2021/08/23/P206/P206_12.jpg" class="" title="搬空">
<p>三年前刚搬进来的时候,没有家具,连床垫都无.<br>夏日的树影,傻坐着的我.<br>躺着硬床板,铺上朋友送的拼图地板睡了三天,真像是我会做出来的事情.</p>
<br>
<br>

<img src="/blog/2021/08/23/P206/P206_14.jpg" class="" title="钥匙">
<p>谢谢你,陪我风里雨里的房间.</p>
<br>
<br>

<h2 id="杂物"><a href="#杂物" class="headerlink" title="杂物"></a>杂物</h2><img src="/blog/2021/08/23/P206/P206_3.gif" class="" width="300" height="300" title="Mr.goose">
<p>搬完整理杂物.</p>
<img src="/blog/2021/08/23/P206/P206_16.jpg" class="" title="笔筒">
<p>是充满回忆的笔筒.<br>笔筒本体是以前一起打游戏的宅宅朋友从日本的西尾展帮忙代购的.<br>没有冰箱于是贴在笔筒上的冰箱贴是(大学唯一的旅游之)跟室友去温哥华留念的.</p>
<br>
<br>

<img src="/blog/2021/08/23/P206/P206_17.jpg" class="" title="同人本">
<p>(纸醉金迷的)同人本,没有了解过原作却因为喜欢画师而买的fgo和钢炼的本子.<br>甚至想着“这么有名气迟早会去看的吧”.<br>钢炼今年补完了,很是喜欢,fgo至今还没.<br>有很多“觉得不错”的事情都没去做,也没有那么多空闲的明天w.</p>
<br>
<br>

<img src="/blog/2021/08/23/P206/P206_20.jpg" class="" title="手链">
<p>U大人给我的生日礼物和自己高中时做的手链.好久不见,很快乐.<br>很多东西都留着,交换的明信片,通信记录什么的.<br>原生老家是不扔东西主义,幼年学车用的破铜烂铁都还留着.<br>伯父伯母家是极简主义,有衣服两年没穿就扔.<br>知道了这边到处都有旧衣物捐献的投放点,昨天整理出了一大旅行箱的旧衣服全处理掉.<br>心情…很快乐.<br>那些和他人的痕迹还没学会放手.</p>
<br>
<br>

<h2 id="滑铁卢"><a href="#滑铁卢" class="headerlink" title="滑铁卢"></a>滑铁卢</h2><img src="/blog/2021/08/23/P206/P206_7.gif" class="" width="300" height="300">
<p>我幻想过很多次离开滑铁卢的场景.<br>太久了.</p>
<p>幻想过拥有了自己的车,把所有的东西都塞进去,大骂着“告辞我就是waterlooser”然后扬长而去.<br>幻想过申报要两份毕业证书,一份保存一份用来在夜晚的大马路上烧.</p>
<p>大学给我看到了很多以前不可能想象到的可能性,我的不后悔主义还是会感激他告诉我这世界有趣的地方.<br>但同时一言以概之,大学带走了我生存渴望.<br>真是心情复杂的旅途w.</p>
<br>
<br>

<div class="note ">
            <p>得有推翻一切的勇气.</p>
          </div>

<p>大学学科中遇到的难题像是一种……格式塔错觉.如果没有“完全做到”,就无法产生质变,就无法达成.<br>经常会有一道题目,做一整天也没有进展.回定义再度思考,像在沙滩上地毯式搜索掉落的家门钥匙,漫长又没有保证,还没有回去的路.</p>
<div class="note ">
            <p>逻辑是指引的灯.</p>
          </div>

<p>所以这到底算是个什么旅途嘛.<br>我没有全身心地去活自己的大学,这点的确有可惜.<br>有因为本心去找社团,没有深交但了解到还有身在科学系的原画大佬,接动画外包的计算机小哥.<br>也因为旧时的愿望去参加game jam,了解到游戏制作不是速成的东西,看到了各种闪耀的大神,自己也第一次完成了什么.</p>
<p>就这样吧.</p>
<p>因为困难,时常会有死亡冲动.<br>也因为是相信逻辑,明白自己遇到的是生理性冲动.<br>越是去思考,越渴望真诚.<br>这个课题没有随波逐流的选择,只有我一个人.</p>
<br>
<br>

<img src="/blog/2021/08/23/P206/P206_21.png" class="" title="来自雀的生日礼物">
<p>雀给我画的这个,现在心境上允许自己发在博客里了.<br>谢谢雀!</p>
<blockquote>
<p>另附<a href="https://open.spotify.com/playlist/1cKl6erjyg3Rh0deqQNF97">学校推荐的神秘歌单.</a></p>
</blockquote>
<img src="/blog/2021/08/23/P206/P206_6.gif" class="" width="300" height="300">

<p>十月份去拿毕业证书,现在就暂时停笔.</p>
]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
        <tag>Thank you Mr.goose</tag>
      </tags>
  </entry>
  <entry>
    <title>更新报告_0.00ver以上1.00ver未满</title>
    <url>/blog/2021/09/17/P207/</url>
    <content><![CDATA[<img src="/blog/2021/09/17/P207/P207_5.png" class="" width="225" height="200">

<p>上篇<a href="https://mazui3.com/blog/2021/08/08/P204/">制作报告</a>的dlc拓展版.</p>
<span id="more"></span>

<p>接上次.</p>
<br>
<br>
<br>
<br>

<h2 id="草莓蛋糕"><a href="#草莓蛋糕" class="headerlink" title="草莓蛋糕"></a>草莓蛋糕</h2><img src="/blog/2021/09/17/P207/P207_2.png" class="" title="竟然配的是裙子">

<p>上次制作页面时改旧图,顺手摸妹妹冬装.画到一半暂停惨遭遗忘…<br>记忆中哥哥的衣品很差,妹妹也不是追求打扮的人,两人平时穿得素.<br>哥哥开始打扮是有伴侣之后的事了(被打扮x).</p>
<br>
<br>

<h2 id="热闹起来的报刊亭"><a href="#热闹起来的报刊亭" class="headerlink" title="热闹起来的报刊亭"></a>热闹起来的报刊亭</h2><img src="/blog/2021/09/17/P207/P207_1.png" class="" title="很乱的报刊亭,有那味了">

<p>传了两份壁纸.</p>
<p>这次素材画的很喜欢…</p>
<img src="/blog/2021/09/17/P207/P207_4.png" class="" width="318" height="300">

<p>兰花画了余老师当素材,主题是朦胧的记忆.因为太糊扣出花本身来用.<br>(图就另为他用惹)</p>
<img src="/blog/2021/09/17/P207/P207_6.png" class="" title="这个肩膀和脖子画得也太糟了">

<p>ddl也是,扣两小时半身感觉神情还行,人体和细节又搞不好,遂采用十分钟qq人.<br>开始画图书馆素材图时经常画两张丢一张.实则感受到自己能力短板.</p>
<br>
<br>

<h2 id="Koi-feat-Meteo"><a href="#Koi-feat-Meteo" class="headerlink" title="Koi feat.Meteo"></a>Koi feat.Meteo</h2><p>Me酱的第一首翻唱终于发布了.</p>
<img src="/blog/2021/09/17/P207/P207_3.png" class="" width="300" height="255">

<p>我的ae炸了很久也没重装,这次选择了委托他人.<br>委托比我想象的…复杂很多.<br>得多考虑对方的风格,有效沟通自己想要的效果,早些把自己的素材全部都整理好.<br>如果自己做可以一边做pv一边补素材.这些都得考虑进去.</p>
<div class="note ">
            <p>将自己的工作量分配给他人,并不是真正的“转移”工作.<br>更像是…借用了他人的双手,将自己的东西做出来.<br>(“我”得在那里完全明白对方的作业.)</p>
          </div>

<p>所以,得<strong>从他人的角度</strong>来思考制作本身.</p>
<ol>
<li>我需要知道些什么才能做到分析他人的角度?</li>
<li>我是否有让对方完全理解我的期望?</li>
</ol>
<p>这次委托的对象是位年轻的pv师.(大概率)没有委托经验,经常和他人做合作向小视频.<br>对方的风格:文字向pv,喜欢中速或快速的pv,喜欢酷一点的特效.</p>
<p>我没有处理好的:</p>
<ol>
<li>恋是一首慢速的歌曲.</li>
<li>我可能并不需要那么多字的特效.</li>
<li>我没有预测到对方的工作习惯.</li>
</ol>
<p>在pv制作完两个小节后敲定了制作风格,为了间奏想着重新修改下图片和增加差分,结果对方没有保存源文件,以至于新增加的差分图是修正过的,但原本的无法修改.<br>当然这些都可以沟通解决,只是<strong>我没有注意到</strong>对方没有保留源文件,同乐句的小节继续制作下去了.<br>救命啊……然后花了比预计更多的时间才意识到对方是否有理解,对方是否能更正.<br>和人合作真的是一门学问…</p>
<p><a href="https://coconala.com/">另一位pv师在使用的委托网页.</a>&lt;-下次说不定可以试试.</p>
<br>
<br>

<h2 id="Logo"><a href="#Logo" class="headerlink" title="Logo"></a>Logo</h2><img src="/blog/2021/09/17/P207/P207_7.jpg" class="" title="高中刻的藏书票">

<p>某种意义上这是第一任图书馆logo…x<br>logo的委托也比我想象得复杂.<br>有段时间想学习制作pv所以关注了不少pv师,但logo是完全不知道去哪里委托.</p>
<img src="/blog/2021/09/17/P207/P207_9.png" class="" width="300" height="300" title="交稿的logo">
<p>meteo的logo是在skeb上遇到的,做vtuber logo的作者.<br>形状很喜欢,我调了个颜色.</p>
<img src="/blog/2021/09/17/P207/P207_8.jpg" class="" width="300" height="300" title="未使用的logo">
<p>这是第二版的logo,在米画师上委托的,做烫金logo的作者.<br>总觉得还差了些什么,没有采用.</p>
<img src="/blog/2021/09/17/P207/P207_10.jpg" class="" title="委托方正在制作的">
<p>第三版的半成品.</p>
<p>委托这种东西不单单得有预算还得懂行啊…<br>至少得有基础审美,才能选择和看懂委托.<br><del>不然就是渴望五彩缤纷黑的甲方了.</del></p>
<br>
<br>

<h2 id="0421record"><a href="#0421record" class="headerlink" title="0421record"></a>0421record</h2><img src="/blog/2021/09/17/P207/P207.png" class="" width="300" height="200" title="迷之素材">

<p>在做了(心虚).</p>
<br>
<br>

<h2 id="杂谈"><a href="#杂谈" class="headerlink" title="杂谈"></a>杂谈</h2><p>自从自己搞了个人网站之后,如果看到有大佬也做了个站,很喜欢顺着别人的友情link逛着玩.</p>
<p>让我印象深的有三次.</p>
<p>第一次是顺着使用hexo的个站,看到了很多信息技术,数据统计的大佬文章.<br>还有位大佬从初中开始就收集各个国家的广播平台频率,真是太酷了.</p>
<br>

<p>第二次是顺着<a href="https://www.122pxsheol.com/p/index.html">122px老师的个站</a>,我非常敬佩的创作者,看到了很多韩国朋友们,很精致,很可爱的网站们…<br>不过大多是需要登录才可以观看,感觉像朋友间的手帐日记交换…いいね…</p>
<br>

<p>最后一次是顺着<a href="https://cowbelltiara.sakura.ne.jp/">秋津たいら老师的个站</a>,插画家的网站.<br>刚打开的时候很吃惊,底端写着1998-2020.<br>咦,指的是1998年出生吗,那跟我一样.<br>不是诶!!是1998年开始运营网站呢!!好强啊!!<span style="font-size:25px"><strong>好强啊!!!!</strong></span><br>那样的创作者的友情链接是十个里面九个打不开了.<br>(也是呢…)<br>能打开的有只在2010更新了两次,也有从97年开始到20年的.<br>有四十岁以上的画萌妹的大人,也有画同人的初中生.<br>画也各个不同,有画商业成人黄油的,有上世纪galgame萌妹画风的.<br>怎么说呢,原本是想了解大佬们对个人网站的想法的,很多写了生活很忙工作很要命,一不小心看到的是别人的人生痕迹.<br>看着他人停止了有几年的news页面,感叹时间有时真是残忍的存在(…).</p>
<p>自己下决心搬家删号,也何尝不是感到时间的危机…</p>
<br>
<br>

<p>这次的更新杂谈就到这里,祝愿还能有下一次.<br>图书馆1.00ver都吐不出来就停更的话也<a href="https://www.nicovideo.jp/watch/sm20331479">太没出息了</a>.</p>
]]></content>
      <categories>
        <category>项目记录</category>
      </categories>
      <tags>
        <tag>oc</tag>
        <tag>メテオ</tag>
      </tags>
  </entry>
  <entry>
    <title>海</title>
    <url>/blog/2021/08/26/P208/</url>
    <content><![CDATA[<img src="/blog/2021/08/26/P208/P208.png" class="">
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>oc</tag>
        <tag>卡尔马</tag>
      </tags>
  </entry>
  <entry>
    <title>oc旧图log</title>
    <url>/blog/2021/09/18/P211/</url>
    <content><![CDATA[<img src="/blog/2021/09/18/P211/P211.png" class="" title="女主角合集中笑得最灿烂的竟然是男人">
<p>神秘旧图大合集.</p>
<span id="more"></span>
<p>这个合集是准备建造图书馆时整理的部分旧图.<br>最后图书馆决定全部制作新图,这些图就搁置了.<br>附录-&gt;<a href="https://mazui3.com/blog/2021/04/05/P181/">oc的tag简介</a>.</p>
<br>
<br>

<h1 id="画着开心图"><a href="#画着开心图" class="headerlink" title="画着开心图"></a>画着开心图</h1><img src="/blog/2021/09/18/P211/P211_21.jpg" class="" title="2015的松木与雨未">
<p>完全不记得为什么写了aloha和め.</p>
<br>

<img src="/blog/2021/09/18/P211/P211_1.png" class="" title="2015的大夏天突然想喝可可">

<br>

<img src="/blog/2021/09/18/P211/P211_20.png" class="" title="2015的家庭组">
<p><del>送孩子上大学.</del></p>
<br>

<img src="/blog/2021/09/18/P211/P211_45.jpeg" class="" title="2015的阿蕃涂鸦">
<p>远处的小小人是朋友家的孩子.<br>尝试画日落的世界,竟然连透视线都保留了.</p>
<br>

<img src="/blog/2021/09/18/P211/P211_14.jpg" class="" title="2016年的冬日组万圣🎃">
<p>记忆深处有着还写了个,木柑子在社团把头套着绳子准备吓人结果解不开结,的小片段…</p>
<br>

<img src="/blog/2021/09/18/P211/P211_11.jpg" class="" title="2016的老兔和刚诞生的夕阳">

<img src="/blog/2021/09/18/P211/P211_9.jpg" class="" title="2017的把红色格子衫当作披风的老兔">
<p>原来老兔和水桶拖把这么早就结下了孽缘.</p>
<br>

<img src="/blog/2021/09/18/P211/P211_33.jpg" class="" title="大概是2016的松木涂鸦">

<br>

<img src="/blog/2021/09/18/P211/P211_36.jpg" class="" title="大概是2016的表格涂鸦">
<p>凉和夕阳.<br>那时候画凉好幼啊…<br>那次也第一次画了哥哥,被U前辈误解成松木的男朋友(草).</p>
<br>

<img src="/blog/2021/09/18/P211/P211_44.jpg" class="" title="2016的夕阳">
<p><del>码头代言人夕阳阳.</del></p>
<br>

<img src="/blog/2021/09/18/P211/P211_4.jpg" class="" title="大概是2018的小裙子松木">
<p>竟然画过如此清纯的松木背影.</p>
<img src="/blog/2021/09/18/P211/P211_5.png" class="" title="松木与雨未">
<p>服装是来自与委托亡老师的礼服,粉色小裙子松木太让人震惊了(褒义).</p>
<br>

<hr>
<br>
<br>

<h1 id="笔记用图"><a href="#笔记用图" class="headerlink" title="笔记用图"></a>笔记用图</h1><br>
<br>

<h2 id="狼与兔"><a href="#狼与兔" class="headerlink" title="狼与兔"></a>狼与兔</h2><img src="/blog/2021/09/18/P211/P211_13.jpg" class="" width="315" height="300" title="2017的贴贴">
<img src="/blog/2021/09/18/P211/P211_37.jpg" class="" title="2017的初设">
<img src="/blog/2021/09/18/P211/P211_41.png" class="" title="2018的更新">
<img src="/blog/2021/09/18/P211/P211_34.png" class="" title="2020的立绘">
<p>狼狼与兔兔的立绘其实是图书馆中第一个绘制的,但重新计划的时候狼与兔的故事延后了,取代之选择的是余老师.</p>
<br>
<br>

<h2 id="司空见惯的RPG大冒险"><a href="#司空见惯的RPG大冒险" class="headerlink" title="司空见惯的RPG大冒险"></a>司空见惯的RPG大冒险</h2><img src="/blog/2021/09/18/P211/P211_66.png" class="" title="大概是2018的初设">
<p>这张图我找得好苦…<br>死鱼眼勇者桑和吵闹同伴.</p>
<br>
<br>

<h2 id="废弃工厂"><a href="#废弃工厂" class="headerlink" title="废弃工厂"></a>废弃工厂</h2><img src="/blog/2021/09/18/P211/P211_38.png" class="" title="营养土">
<p><a href="https://mazui3.com/blog/2018/12/30/P046/">麻醉的设定中</a>没有收录的.<br>营养土的设定跟麻醉还挺合适.但我个人不萌黑皮,于是再也没画过.</p>
<br>
<br>


<h2 id="×子与〇太"><a href="#×子与〇太" class="headerlink" title="×子与〇太"></a>×子与〇太</h2><img src="/blog/2021/09/18/P211/P211_25.jpg" class="" title="也许是2015的×子与〇太">
<img src="/blog/2021/09/18/P211/P211_26.jpg" class="">
<p>初设.<br>最初的人设是土气的班长和脱线的同桌，加入一点点的超能力和青春冒险.</p>
<img src="/blog/2021/09/18/P211/P211_31.jpg" class="" title="五分钟X子与〇太封面构想">
<img src="/blog/2021/09/18/P211/P211_32.png" class="" title="测试用立绘">
<p>那年尝试了橙光游戏引擎.<br>RPG maker也用过,甚至画完了〇太行走图再搁置的.</p>
<img src="/blog/2021/09/18/P211/P211_23.png" class="" title="2018的成年有希子">
<p>×子与〇太是有真名的,只不过在他们的故事中没有讲到.</p>
<br>
<br>

<h2 id="卡尔马"><a href="#卡尔马" class="headerlink" title="卡尔马"></a>卡尔马</h2><h3 id="犬"><a href="#犬" class="headerlink" title="犬"></a>犬</h3><img src="/blog/2021/09/18/P211/P211_47.jpeg" class="" title="百合熊岚的同人企划">
<img src="/blog/2021/09/18/P211/P211_46.jpeg" class="" title="2015的三谷">
<p>三谷是卡尔马的角色,那年带着她去参加了企划.<br>那时elfartworld刚开始流行,我也开了号,结果忘了密码,现在黑历史无法删除orz.<br>(可以说是图书馆前身…)</p>
<br>
<br>

<h3 id="怪异专家与助手"><a href="#怪异专家与助手" class="headerlink" title="怪异专家与助手"></a>怪异专家与助手</h3><img src="/blog/2021/09/18/P211/P211_28.jpg" class="" title="2015的松木与雨未">
<p>当时画的就是,松木短裤,雨未长裙.<br>现在也习惯那样画.</p>
<img src="/blog/2021/09/18/P211/P211_19.jpg" class="" title="2015的旗袍雨未">
<p>因为<a href="https://mazui3.com/blog/2018/04/30/P092/">U大师绘制的旗袍雨未</a>过于震惊(再次),忍不住欺负了一下.</p>
<img src="/blog/2021/09/18/P211/P211_56.jpg" class="" title="2015的能力设定">
<p>那年认定主人公一定要有神奇道具,于是安装了四次元口袋(…).<br>武器也挑选了很久,从梯子到防火器都试过(迷).</p>
<img src="/blog/2021/09/18/P211/P211_55.jpg" class="" title="吉他">

<img src="/blog/2021/09/18/P211/P211_6.jpeg" class="" title="2019的礼服松木与雨未">
<p>这身有记载过,是修正版本.</p>
<br>

<h3 id="旧版卡尔马"><a href="#旧版卡尔马" class="headerlink" title="旧版卡尔马"></a>旧版卡尔马</h3><img src="/blog/2021/09/18/P211/P211_2.jpg" class="" title="2016的大哥和二姐">
<p>是的,在旧版卡尔马中有中国组四人.</p>
<img src="/blog/2021/09/18/P211/P211_17.jpg" class="" title="2016的整合涂鸦">
<p>是的,里面出现了熟悉的面孔和不熟悉的发型…<br>在旧版卡尔马中中国组的四人是松木的朋友.</p>
<p>二姐叫做凯,笔名为追风者.<br>在<a href="https://mazui3.com/blog/2016/11/19/P019/">好太太汤面</a>中友情客串过.</p>
<img src="/blog/2021/09/18/P211/P211_18.png" class="" title="追风者的logo">
<p>凯姐姐是我家为数不多参加了中国高考的oc(?),大学选了法律系却天天翘课到处旅游.<br>追风者的名字是她写旅行游记的笔名.<br>今年年初委托了数制作追风者的logo,谢谢小数数!</p>
<img src="/blog/2021/09/18/P211/P211_30.jpg" class="" title="凯姐姐旧立绘">


<br>

<h3 id="冬日不会再来"><a href="#冬日不会再来" class="headerlink" title="冬日不会再来"></a>冬日不会再来</h3><img src="/blog/2021/09/18/P211/P211_54.jpg" class="" title="2016的冬日组">
<p>木柑子头上戴的是纸船(重要).</p>
<img src="/blog/2021/09/18/P211/P211_7.jpg" class="" title="校服木柑子">
<img src="/blog/2021/09/18/P211/P211_12.jpg" class="" title="2017的私服木柑子">
<p>木柑子的蓝色头发是初三的时候染的.</p>
<br>

<h3 id="Re-2"><a href="#Re-2" class="headerlink" title="Re:2"></a>Re:2</h3><img src="/blog/2021/09/18/P211/P211_27.jpg" class="" title="2016的成年松木">
<p>时间线上妹妹和哥哥有快六年没见面了,阿妹突然造访了在读大学的哥哥宿舍,还带了自己的儿子(自称).<br><strong>震惊哥哥三十年!!</strong></p>
<img src="/blog/2021/09/18/P211/P211_40.png" class="" title="office lady松木">
<p>这身衣服意外地可爱.</p>
<br>

<img src="/blog/2021/09/18/P211/P211_45.jpg" class="" title="弗涅的补充设定">
<p>弗涅的天线苦恼了很久,最后画了很没设计感的一种.</p>
<br>

<img src="/blog/2021/09/18/P211/P211_22.jpg" class="" title="2018的薇拉初设">
<p>这位角色的名字是第一次公开说…是凉的大姐.<br>是一位可靠冷漠重情的人.<br>头发是淡淡的黄.</p>
<br>

<img src="/blog/2021/09/18/P211/P211_43.jpg" class="" title="2017的艾玛初设">
<p>艾玛初设时就设定了独特的耳饰.<br>再设定时想要更神秘一点,于是加入超大的帽子.</p>
<br>

<h3 id="TokyoTL"><a href="#TokyoTL" class="headerlink" title="TokyoTL"></a>TokyoTL</h3><img src="/blog/2021/09/18/P211/P211_42.jpg" class="" title="幼年的哥哥是强势type">
<p>(大概是)2017的兄妹生贺.<br>那时确定阿妹幼年是马尾.</p>
<img src="/blog/2021/09/18/P211/P211_53.jpg" class="" title="大概是2016的哥哥涂鸦">
<p>初中后的哥哥弱气了不少.</p>
<img src="/blog/2021/09/18/P211/P211_98.png" class="" title="2019的成年哥哥">
<p>这张倒是没公开发,哥哥成年手上有伤.是一种命运(?).</p>
<br>

<h3 id="魔法师"><a href="#魔法师" class="headerlink" title="魔法师"></a>魔法师</h3><img src="/blog/2021/09/18/P211/P211_60.jpg" class="" title="高中生ver">
<p><del>骗人的,其实是为朋友随手画的角色,因为手癖而画得十分像魔法师.</del><br><a href="https://mazui3.com/blog/2018/04/30/P091/">关于她</a>.</p>
<br>
<br>

<h2 id="在日落之前"><a href="#在日落之前" class="headerlink" title="在日落之前"></a>在日落之前</h2><h3 id="校园组"><a href="#校园组" class="headerlink" title="校园组"></a>校园组</h3><img src="/blog/2021/09/18/P211/P211_48.jpeg" class="" title="2015的冰熊小姐">
<img src="/blog/2021/09/18/P211/P211_24.jpg" class="" title="2016的冰熊小姐">
<p>冰熊小姐是很青春的人呢…</p>
<img src="/blog/2021/09/18/P211/P211_8.jpg" class="" title="2018的校服夕阳">
<p>这张是思考夕阳第二年的校服设计.<br>还挺喜欢的,不过好软啊.</p>
<br>

<h3 id="蕃"><a href="#蕃" class="headerlink" title="蕃"></a>蕃</h3><img src="/blog/2021/09/18/P211/P211_3.jpg" class="" title="葬礼服蕃">
<p>蕃这个角色有很多衣服,很难…</p>
<img src="/blog/2021/09/18/P211/P211_39.png" class="" title="大概是2018的设定">
<p>蕃和她的朋友光.</p>
<br>

<h3 id="王女"><a href="#王女" class="headerlink" title="王女"></a>王女</h3><img src="/blog/2021/09/18/P211/P211_49.jpg" class="" title="2015的王女">
<img src="/blog/2021/09/18/P211/P211_51.jpg" class="" title="补充设定">
<img src="/blog/2021/09/18/P211/P211_50.jpg" class="" title="王女的王冠是动态的">
<p>王女的裙子修过几次,无法舍去黑色的神秘长布.</p>
<br>

<h3 id="管理员"><a href="#管理员" class="headerlink" title="管理员"></a>管理员</h3><img src="/blog/2021/09/18/P211/P211_15.jpg" class="" title="2016的图书馆两人组">
<p>图书馆管理员(少女)先诞生.<br>带着日落的世界观参加了企划,临时整理出王女,大臣担当的蕃,兔,居民担当的christ和cindy,以及图书馆管理员(正太)这几位角色.<br>捏小正太的时候没细想,<del>没想到设定最后还圆回来了一刚.</del></p>
<img src="/blog/2021/09/18/P211/P211_52.jpg" class="" title="2015的设定补充">
<p>正太很烦,少女无口.<br>(只有在少女面前提正太的时候,会露出烦躁的神色x.)</p>
<br>

<h3 id="Pheobe"><a href="#Pheobe" class="headerlink" title="Pheobe"></a>Pheobe</h3><img src="/blog/2021/09/18/P211/P211_50.png" class="" width="300" height="300">
<p>Pheobe的包包<a href="https://mazui3.com/blog/2021/02/11/P169/">上次</a>改成猫头鹰了.</p>
<br>
<br>

<h2 id="家庭组"><a href="#家庭组" class="headerlink" title="家庭组"></a>家庭组</h2><img src="/blog/2021/09/18/P211/P211_23.jpg" class="" title="2017的猫小姐">
<p>家庭组的世界观有动物与植物两种类的居民.<br>猫小姐是老兔的朋友.</p>
<br>
<br>

<h2 id="不成形小故事"><a href="#不成形小故事" class="headerlink" title="不成形小故事"></a>不成形小故事</h2><img src="/blog/2021/09/18/P211/P211_16.jpg" class="" title="2016的笨蛋人口贩子和黑道大小姐的挚友">
<p>在<a href="https://mazui3.com/blog/2021/08/08/P199/">某锁文</a>中讲过自己挺多oc小故事来源自梦.<br>这份也是如此.<br>在地下车库遇上了笨手笨脚留下目击证人的人口贩子,我以为小女孩要跑路,结果她超淡定的跟着人口贩子和被绑架的倒霉目击人一起开车走了.<br>…您是传说中的二次元超早熟神秘幼女吗.<br>这位小女孩人狠不话多,身世迷,不知道为什么是黑道大小姐的朋友.<br>跟黑道大小姐一起被死对头黑帮绑架,那位人口贩子出现解救她们.幼女超冷谈的抱怨太慢.<br>愿称呼一声先生……(?).</p>
<br>
<br>
<br>
<br>


<img src="/blog/2021/09/18/P211/P211_99.jpg" class="" width="250" height="200" title="哥哥团子">
<p>谢谢阅读我这些废话.</p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>oc</tag>
        <tag>家庭组</tag>
        <tag>在日落之前</tag>
        <tag>残局象棋</tag>
        <tag>卡尔马</tag>
        <tag>冬日组</tag>
        <tag>怪异专家与助手</tag>
        <tag>追风者</tag>
        <tag>狼与兔</tag>
        <tag>废弃工厂</tag>
        <tag>TokyoTL</tag>
        <tag>湖底图书馆</tag>
        <tag>司空见惯的RPG大冒险</tag>
        <tag>×子与〇太</tag>
      </tags>
  </entry>
  <entry>
    <title>关于data的笔记2.0 - Week1(连载中)</title>
    <url>/blog/2021/10/05/P210/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="d66fc09a7aff1fb265af36291168ce5eaa15ffdee254c946adf0357f6ee7106d">6702ac8591e9b25480c46177f55a44897c0cebe8a86f525d3ea90a3df7dfd4421e88c067b2f1c0aa3ee0b9cc9e532ef9202b3d1d779445c41c5263c633a3356b4aa5b2afd8a88c655c17ba5a5c6b635e94cba786d9abfe1dee04ca75757ba62e1701f3da930281a058acbebdcc1ad07e368322f7f7d84845fbb1c1f10eef122ab042139302ca5de70643d8212cfd894daae9a0304493a527a659692c4c5c4229a96cb558b26af986ecfba7fc1920ad11452cbc45b50a945742aa068d4890ae60b32416a181741aa898f39ac46ebf7f2ab3dd0635f7709c5f21ebf491f46b7054a6d3f9effffee41d0686ac3c0b0440257e53463652c4f5348547dd2e380275701be07fddf952242be420d06543d004a2a968ea588306644815ba791663e89457b68973d916a563f3f255821161a44ca774f735757821097027d32f770f59a8c678bcf3b248fcecc6471b250f455dfb9e824ebfc2063d86c58904b3781b7d6a5542769a8cf6cfb9edbf63b5621e17d7e91e908cbb8d5004a5a6b2fe2df293d265399dd4daa028ac65290a0cbaf913c84984e881fab6e11f127d97a5855c16e495297669203d65c8330d9a67303c91678ae27834cb9c2ede24bf65354a8bcb42b614efd9eec1956faf5a2a3a210e1a6500cd647be5255a27cb5abe5440ccc493843d92d16d5651554f94074f609a580dfed94e55b440413ebafed7807053163883390c55dca26e5d519608a7e1c21d5d48294708f2d9ea9ef2683f4ae5c1ac16b8b70ab167b6a46a18e5e11e9d983c6f343d407183ce10463b992f83f48fc4897c269e3934640835d840207328897215cd22909482362b8cbf306b7cb7fc4556095e81b27736a3e1e2a3da686e7e1d20c73997b57acca12f8b72528320dd1d37b0818d46790ab8a6d41ad4166a13960125c22685b4c719685644fc2573b8bb20f261667a12e36992c3e9425b521d637c02861c0942bb87ed58acda4e0871be9cbfab2a32fbdc2aab173b18ba04b63bf130be85f1891974c2a6333a95eecf237b3e9d48319508a16e81fb67b2098a20c268e408a8224ab5e7e45928d9e51899ef2b0152b01fb6f6979725ae531a5ced1540a5395b0e59ac9c745ee141355825a85e28813e0442e1169081294cada730af37e6a6438bde52aecef2fc1dfc79629fd80cac2199a27089a31a4c770114423ab501c0d7b060e176b98686ece92a0ea5cc3ff2d4f6fe45d60c0812241a903d72c63455205e890e22f76a9c990453985b25a2136da97b20aacad782dfac6eeda08f053b6d2ffe1dadfb6361d7f3e5f97bf4c6a9fb67fa4f2c5861f7e8784a8926d82a5b2d262e63ede5d4bbaa5ffc4f1dc80f2119bc9e644ec5eac84db54aadcf8a99b288d4d0e4d1f3796308972664e2eaccdb483a72e77b3f03e57681d26e906b2ea3d1ba7e81348b70c2bd721a61a2a80ea54df18287c0c533d3c85436905119e6898814a3d36d284eb698b26259768db5db12f8f2946d18a4c59ab728a40286dedc1a29994f250dd3ce784ee8a471ff6bfbefb87b881b469be0bec4f7e4acea39e0716e5325ec2c51e6671080ea6f78367f02ae6cf706117b56e8577986b35347d4ca280cda1e72e1b102b3dec22cf3ce41c99602dd0fedc804504dc58b32c7faeace95aa90509b7e5d586f284d127bcab3729f7e1f621cecdc465e2920ab2d6a77413932e247d0f4d8382b4d4829507fa3968e21a3d046c81ffbbe57cfa32533c138010f26e90e4ed98522db7dce7fc7fd663f0ffc837946ac3fa7a96fe29fe238086d15b0df41960f2710e0d4113dadd7022cba7be85900e591c8e6a088ba3a62a4d788c0858c2c70b4c5d04b7674afc68d55245e60d02aeb8f0cb6ed99a5c639981d6cd0f6211a1b0ab2ee1a514daa2736d0431ba54d8e73772578dfdd4d0fa00c69df294d3fdc5ca67bb18fb7ab5705d9fb4841919e3ad5a8463c9e356664db5ebc3a0a7d80ee7a1148dacb4c90c6c9d7f0a69bdd7be39be029a7fea74a414c6b59ac85ba72ebe9301c358a6d5202188250a8d427d98ca1a0ca5b01c8b9182bbc9b2074c546bb2c928a761966ed6b3f41b3dd0ec1b326c4bed9db762034349a27c6c4da9fc92b0e6ab175ea9351bb67971953280cfbe942efceb40e715222a00188385bb5c626c7eede066b72a9872f2bad193bd5c6305a9324c6f70c1b9352e91a045108d1182572eafe14d70f26acd97bac6ce864ab95ca9004f0cee87d87916d8d6025e7a2627c7f072e43e8cf746fc7d958463df38ba42cd0acdf6921fd1e2f87e1d04fff20c0c56952050e6d050277a43d0fe2881b6d6308913849a0bf3f67e9b6b5d7b8f088665bb29375191d6f68ae94ab75dba46b521e718274ea0010644855325c5d968e88ca0cf7ac1f6805a1c0cfddd7078394cbf37e4b24ea37840f94d872663b142f6a8cb3d8be75e4c607a82caff049162ab5c664486129ee359b14d9658ff531842dc6955ddcd6299b20e6e5a8d6dd48eaf0a55cb1379063bf2eaaa19d579bc4af8db7aef953a41bc596ace7dcf1d6c93f783b261c9bb925ae784da6e71aeb570d0902a0e9e876e60b9a80e912267037ac06473016fd64567797f2bea0a5b3155a03820e93415875483a8e576a069a1fc8260269d65ffec6a12b96747ba3e8d2d9dfad17053efc843bcbb67535936aa73429eb32b03a7f233f58c9664b85eb292be0c580a31827b5428cf5cc4f5ec8d3c3f451130a8d4aab0fc4e2b977d5ac6acf27321527cab8a48f4af39c280d5800bdfd97d159e3775e3e2b3f351c71ba1c828205aa574830450cfbb18b00ad63356d1b846fa8cde208fcae06fca6728eb7fec0b5eb45d869d3326dca9514564a16455f20ff3b0a1d426d4e9873492a5e56686571986d7f7befb2dc743264a6a6ba24caf2893f5ed8c5f80a8dcb68e8bb9e1ea533e68b78a7923828156f7556cd6af4394bee41828607e97ef43520dc06660011303dc849ff36f2437cab30a299977398acf91802e472c095e34ddfeb623e1c1a917c0e665a63dd0cca96d3044316f66c85cc4afca596e2ac3a83040f5193e78b39b2acadcbc4424908b51b660ed87fbc99524eb77c844b47dfceaf23eb42b8afffaeb4ea73f9e07b09d5603207156f22fd3f208a16ed5717fa0093fda576d9c6b1501fc442f4e46a63387f11f77672f96436532145d70434ec998086ad812974acea0eff1ba706f812a33cd6bd81fc995fb3d69bccf3a1b26139f15864dfdc7e85bb6a4e11b7376b6b01bc9630ae0cd69941caf2e509456a4647a1abf1231b3092209bea2bf9787fc4588889ad71884de12f3c8e77118fe65a851ea0c74312d716f5ae4c13101a205fb2966ce221f4abff6e27fb08a6092bf59c2ef605d24aed9e1feb7a36d7ae99023fd89c927abeba81b8de6d9fdf37ba35c1c3d84fcbee367c9a1a9112761e5d522db02e5435f10fb3644317af3417463e866cf90ad866a59bf6acd340ee03634b9f6c241d43b8e47e6fd9a99d603a867d2bfd9ca749e3e7ae450644e717bc6dc9b6ed429f4bd6648238fd50cfafc538bacaa5978cf2fe486d6192fb55a6eb1130b2ee02f4088133e6ec5295018cc0d077843ade503215d6fcff5bf682ebf5aa3f6b1c697b506c44db4de49d586b0abcc11a695f958f617f536de2e6616a63f410404579d98fc89c3067ad5feb71ddb5e11159f6f25119b0b6f4367e56dd4164ac9e408727b5e00ce6860bbe7f0edb164e402538b3ca158ede90b523cefb0f858f8c46ae46fbbbc4adfa18e3cfdb1dfc34e7abeac6db4bbeab5ae321af0661ba0ef239e1072e36306a334c05e754626137e09818871e00722f04b9250cbcf3d4cbdfe3b35a90d78b21c5a5ad85c4c8ee6fb1a8413fe11132c5924657ddf8e503716ba7ea7ff89d1a38504cae9e9468ce943dc20d562babd972ebc1f4c423e758f3032da5f35cb47208e883a2fb6cf96032bb6afd0e71c71e250385e2394a53894b4fa3257f3cc58be8a4c4240d31ca0d21a93886ae6aa18e7270b49fa4a593310236a981cd6d8e3b572b735d3294550aed09cceaec81255af0558321cd705006d78fb3cedc6dd6d0feddf4b28b5e033fcd1115c82d1cbc877800ccaee7e195bed964491687cef7cc2bcaf6048369320ad8101473a605120f11a9c9d715838d189ece44505278b934bdc4a7f21df96ae863e6f1446ed1c0af1cbd60d621aa84215129fa9ac7abd72e5c82ded5295ed582c5ddb19fecd992968a1f64cd7c547b4f4e8a1767711fd18d408ee2ea322df52df32e920193c71cc832c52971352da3b1318d40eb7682d4ce9d88fdab15be95cbae6696f97eb429483ae5e63eeef0fc0351f72684dc8d42d3bceaa8a6d12e2da73bbfd83b476f49f7932603d8697ccfc5898cd0ea1b76a3a785d4da441806902aafae0695fac4d81563fbc3082c4eb1eb3cc9d1875f392df9ae6ce894f30a34f5cf62a54d16af762aab0e5f32627b8dbd983a8116de0feed1e00c978d72172a41bf63e27f1d6cb93808fba91c4e6bbc1ecab3594974425ff4f5437f77305fdc6df5bc4f74c160540cd34e50a66a4632469953eb0f77dda63c15b86ac46f607fefb225f68410caac043ef663a39bff5160fbd0ec8486514f7a0745ef81f6face9c0d1a70dc61a5269a87dc81adf38ef270a6a2306c70611fdfb592964bcc4505e5bcecc1ccc7585c59997da26276dff13227f7537843728d37730f77e7a0c81cd6508c672b85a2d6074dd8338a7ebc0fc18e7da8362558a2e169f18e904cec85ec63c6bacc1b8e7925fee0b02650536e0ddfaf7512e0d9bf3d93fccdb2172eddb5aa306cd57d8088ad1d0bc2cd5e6394ab3297d76b59e885a9b0d9fc594674cf33c5dafd8612a0bf4addb4678f7f58b05ac13f658bb40c9fa638271b176cb0ad70586e6873b5632cb313f5ddfc995a63cded8725ce82e601e39280a29d9cc842c88c15cb8afb9d95fd477e22758a0e95a814d2975f0a4e2c47a34b43f59933559b54524398a259df19ced5858b458c21c0d638751fb6155d41df3675e40da346bac854ebb75b6986188a58c33a3a684b16ef3df2d6c6b6539c8ab6cdee3c396ae41bf19c0ecfd819d1656dd2ac4750406bd1d94e9b30ac1e5f378326e4dbc78707565e1756dfbfbdcd41af46da877889a930be6b31974ae095220d985929e9e5aadea67fe29a5aaf654b630212d7fa340f253aeedbd2c385dd909ff57c35a991d4d85e8609de9602277925ee0c2b2c1b0db6c0708f17e9c3c54b872b53a025e7f519574af05a794f4a28efb183bc9ab62d8af0522a33903e48f2eb3fd994a8fca6099debf2349136c53b8519568d5a6d3399ac245cedf9b4c1b4347a3e22effa54f2493e7b0efb56eca1d5e6439a9735e52000144db5b00a26aaeda7a7ffb3c1843178a8cc0ddd1862f3d2d1f7db129b448481035f5d2ecaaabda9a41e2bedf31f42f2fd51ee0b9f70ded587b98eb9d875cae06579c74a0d95404e89f2a07780db74d5ba55c0548e424a546be9007b5d3a03dda0b939dcb7f9ce574d81959f084be25984ffacd02556cb716ad17868c7cf4a30b7ef58cdbc46eb2ddceecbab58738c91c8f46aabca61105626fd4138d08fe2dc3484ace4612fdc4ce239ec05f518f323b390204fadb67cdc1320a9ae6c60c400a21f886d1c21a43efc033334d430a89d59a12c07bd675e2767257fbd03b0a4e43decef0613d50689574eba108fb4144e633a73a3b28ab957f786d8d5087098828c1488db96d8ddc809b3ef0f2a5e689e283da1990717449e8b83193473322307c9c01882183e385b973f5418fd24887b16c6d5a7943201f4be5161a779fcf3de1449a286a4a7b8b3e40342780fcb2fac994ce20900f31701ce490bcb0cd471cd45a75c8d4d1044e2aa605afe0e349eba039b1e3377ef2edcbba52698dd278ddce3de78eec68d5b6a7ccba8d15df8efa1a65f7448576c09520c80822223ac7ba87efa6f8394549f96b5a9649b50165dafe5f6a6c5a15be789dd005c50582eaeaf7e3579cfcafe8b4500351b40afba5fff3a53b2b2140a61dbe7bf6452525c51b54ad1c64ad825cb71d928b81a40fa99b980376b6d758d00a628733d7f01e7aa1b21afb7e0024a7bc5af5b000e1e7040c5b8d96ec0f756cb8ad989482ca907b7978b0de813518d2fcfb2e9638e6f8f9caab43e10bf9abe580bd73baf4108df46954d8cde44f04a66aa6d048e1c3bab61056e09d07818ee3da54721cec99c178ebb091a30258811f7298cbd320b5033aa967256d94d4ed554fe1a013957a54d967f817c60603c5c1e1434b2eeda254e3c9cdcb285608d26402959fdbe08a9efd6ec3fe7c60b9f1b631879272f4d8e352bb9b344af48206be63bc292645a3b965432690eaed4b882b52633450416f9a443664139e09919a8853daf3f578087bc86da3248b6070921f18b5f0f4ecec1caeda735ddb4b8e7465c45ad5e9bbbe51c6dff28e78dae9ed240d56ef9894c321e6bf1ad3a44de183763ce93dc349f7be13e71a86957b9c597431af2cf83d026b7b37296c7a53d559dcfc95e0a322b84a3ebdd0af441f33f223039d837139d7aa0f17a20a19d879c91ecd8609ebc0480d214dcc909967d5e350afed2d19671e5c362c6524cb3561db102dc7cc40149bbb23c839c61b17fd652b3882d87742743ffd5d81849c2fbf368313caf96ae19d0867b58c9e15062ef6a0bbfb791b53559ea2aa697cdfba0aa693cccf9a272d906280bbb00dde34041595ce2527f9ce72ce318366820c8d9af5f98a004e03a04fbe3bcd4f05b13658696507b9ab1aead9cad18de86d18dc5f77fe61c964acbcd1f1fadd6b0387c8d40124e35ced186cb3a7d453977f8c1d25d276eac9a4ac2dd6fa14d208bee5a1b0cc7523cfdd8d31823ed5692f0bc7a1b1079f2b4a5edf73206a8a464b839e2f26800fab5f05452c86816086f103253dee60f1c7a137f3afaa7bb1350ce17c118d598aedb359158c8de151ccf822707fd7ee62dc00e9d4a5399a5498742d0828bea9a3ce47a505108fb8fbb3c6a843f1228ba697f74779cd3bc65e618ea1db7d84457573d6471d795d53ba2b21a9baf8d2fc7f9208715dd561fa2583d01b3bee417453fc1008c93526429c529b655b8ccc83270953667052953b69e683b09e188c380fc5928bcbc78ab87845871a5ec457fa57c603b119671f69e026a7715843cf88415f3ee496e468d0674672e212d4e175a8372714d26a9df9ba728557933bbf2f05b4452931a9d530f1c26632452b2f06b9a7eff4589c4f2ec93d376b720a4906dcd974eb767d6cadc75f9948d20461c43567ff1fa466ccdf90e0e39cf2a63b68cbe0d6535d26890b4aa4f9d06c1dd3188e7ae8c3b6ed6295ede9128a9b06972ee41b67531b7cd2493ff28289c1034aaf65786235b85bccdcc42f68063009eec2e785db5ea18a01362b8ad410a119a94572842789cf10b9e07bede9caff369be97755360a55460b720986fc8b1ff86b37dc9565a61c0b808b2645e0af4f9135eae17f09dc43e27c6855485ee6f4402247925161f9b23f17cf4eb8e376482fd4697a8793ce8ad8349d910640c292a3d45e3ed116044dfb17270c26406a08e2ce958362efe91f206146da6b5a50c1bb509b75e88d932a8af4cc19d081186120883bb99d415c384d006d91365b1f09886eb559ea36b72cdb2c21295519a7da0d2ecad66423202fd57dc95af3ff22c3ccb61efa88dcac7ca20b62e64582fa8493255d2402b28ec4997573185fcdb66474b8b91ca6098bc8815964787020097625e2f1d67f85d464cb75b4ab8d4751d88e6315eb4ea480ac1782d24541d6de525c2dbc8de202460639b8a98e4d62c923bb71dde933e81302b5a6c81f5f3d56a531c668291efe6261cd4b4dc70a0ed10f6d0543830b3136c31c8de59cce2cb01724c5d38cb07a0b1b43d4544c4dbc985f1cb9ebde4522a84052549d95dd22c3af590af45347d1a77a3fceab30a73f4f5e33b589e1ac16eb7eb740b1210d4c789dc29b750e3447816c303ea43c32fba79dce7c08b729a46a57d06a9174b7a6ee978e4642a9487096edacb169b73545b4ef76886db317adee1fd35d0dc21f5ee79b487546da5e010aa2de992bd70e91815120c873fff1d30a2ab3ae6d34c22f0f9f4e2950d2c8eb43c1437389bccad68b9a4092700b921e0720a976a2318a492db034d01f0808ea512789fcf57edf49cd4874c026b2bce3b93be0a7df2ee82c51c971e857e9cd6cb0caa42a8ab9abbeda4b035082a9d3bee9ffc32149ea266858de0b7a80a85c29f6323b93488118ebf891b25c2392b719976d8efde74a6cd50abda4667d3981ae0a27b04ff24db38cfa3b90b403783a2b45dffaea43882b12923d9171d7ea9da933d19b50bc7298f9cd0f569da2a3939680a957c31b9b0d23b5aed00a9b72ad66957aec1ccd6ca503c7f6204780ce95a6f8b3f89e5b99643606cfd475ce30b09fd9980ef2da92ec48764df00853c42f4e593b7dbbf6c6915b167fcc7f69f693032e831d90333a5a98cdbcb803317b09ef28192fb75e0a2c8af89b7c989737c5cacfefe6eea4214171569ae8fb57b1566b0a96ad0a6655531dab4ee4a628324e1e068426e4536ffae51342e4750b813e72a78e95e588cc4086d236b9823e22dc071c8b5ae6fd29c9f413020d52cda4db33bdb770e83bf3e162071b55c653cb76ac755bbb98931339d19dd402a869b5d3f81ac939c6fe1666ef2c108e556acec144fd69212f935e1815013fd50329798d961aa5f38a24691bc4da1486b88629779af0c33cc4212bdbbe7989e06582f37363b201d98d5c9a741250a4a7ee09e28b5d3bb81694fe9f45bba4c6a5e66b25aa0e8443190284acd11fef27be53bca6347075b82c3f182c922d8049888ce395d9f4ee645fc7a5c8af209943b3a07da16665fc72fd1e644ac7d71b4f4701240f6eaeb896bfcdc1ca3f4a46c5361021aae7bf9788fc8f109d38301aff040ac4d29c8ba52b4fd09a5a69068bdc224c8886c4d472abcadab64c87ac4b61d21a2ed22a8b204ea1ef02d91675b83fe019ef39e7fec7205661de0fb32865b986e58edd0628a951f318460f0c62b63147eec9be580f3f3fd41cee88daefe84c4ff8b7c37043e3a5f4ca17bf58d186cf27b40adaedea9292b2f399e84dae4a580c8b5cab8024bddd8faa0f186323ae6d761df7c23a4eaad75c9c84d5e4d41e5d9a65ff4eaaaac3a474f949812808b63ebbba8d101d93fc84a2f5da4f3440006b9c0d417ceddf2da4db70386a0852ad907ce38e0cfd80029360bb5dea2b814084a614ee0c51266b776e9803f552b8120b801f5abc9fb0c8bfbcb51d70c44a164009cf5591f736030755c33b257d88d7681841cc6a9cb1257fb7770bd1ebc3eb53fe5026dc5fcc7e6a6a72817c4318a070095fc24607eb845a88c49cfdcccce37ffd7d15da39c11a24ce6074ae2f8121df85b48373f6c681cbcf7ac503021b73813903bd528bd2792cd31a2e16c0d5c9d8b1b1a6598404d52c16c7156c0aec7234f51b498fec25f4bc551adf047098fb21341e4f95bfa89ded42c726478e642720fe7a5c754361c713d8fac3db96540f929e0de0beb3b01248fb363a35a401827f95e7c3ab0a21d950a47b2f2885c0b2ef50abbea9ebef9347c03a25194529bae27092aaf2da9718fb6e399ed38cb7683c4fea3448e12d001bfe859b17660f163f729c25256177b161619e73fcd2d6ffc680e541118280f997b979345538d307986211407dd10864cfd027e001d2d0a6614dc513f557c0d93650a2e111e72184cd2a00eb947beba2549ff51c1e908e28be1497157eb43317b8a3edb722d64e4519576205951a701405ec423bf06eda2cd88bfa5abb87aab9e89ac08ceb81e587f2b5d5e6937dd54798e2260d3225e1244d6371f6ba786edafd1cc3b040ed84a4e6b5b65c153f5ce438616f33ca7378b90fad9bb3bd3340a43a1325c996c1a385d73d65222a3475add84c192be5dbacbeebc8984fd2355311149dd463f08a317d09a47a83424c3637e0534a563f7a3fc05beeecb6cd17cc04d7717a3271a8157f01de9cc70918969a3b384272bfd094d500cacb0ff4962b8114b2e082c0c0f10af2bc14e4a6af9ce75f194b7a40b6292c1e15260eca7c79feb6c836f8e376098bf6696e1ffaf6c4bcffb7f303a73d8d0e57c3cf30dc3d0a37fc7be252d8dac6ade83518b9c2007bba7818c8e915354fb3381cd7660c062582b52bdb5916cdb3b490ac8cae012feacd545617ab70785b2ed05dc47d411f7e693d95b09f3c53a372b5195a62fff1114d7bc7697fca48b063c8d72bc865faa3a509eaedfa6885d8d040025f85c2ad032746e656d306e2bd8540b8b0745aba4f70b21391c66df671222a6cbb892c5776926b3ee64b2117067147a4e13a9ce9cb58884169da9281c28e3ed4086d4b720b1fec3e3b133f14f645478a4a55ced0c1ee5add7a6609f9d93bdbbbe09db6ce90d35606927caadd4ef0bc2dc91cd72da39860264b3c223b30bd4bde6b78a4df961fb7095d0795c8794e7ee6c473a5dc08f788d3aeaf96df4ba438b6c69a1ff904778220c391b5caa409170a69398c8626154cc05968fd6ed393776ccd73efce58e31f4242a3b069f23d96f64a2fc4b6317b55b7e5a3e6e8f12ce1874e759d1fd1bac1bd0c9c3429618037228f4eec3dccb45cc7c0eadd0076b9aadfcfaaf3d6e54127cb4fb2341e96f68ad20550b6391f4219cd7c093958922b003f5db616540ce0c236f98a8689605504048a804ac760d59933c5e2ebc9593e94047e7a2c090ab33aabc66df23358ea51d984d54e03ff5f78537d3b7472c3405ffa2dec24b0a317174c1ac0d071cae7e6ccede6eead127edbe54bcfda6a53bd2b2e0d90c393b092c5c1b51f59ab47080699a82a04f86f9429844cb7f80473c6d1699358241daaf7d46f2a139276c65640d74ac9dcb2555521cff3b1cdbe8a00eb39f3e1084e5f85c07483c653add193607737675ee76c6bf91b1d879288579aff882ffd4e63115c29f13654f0de07d16f614bec2a570a20cdb2da2b273b4c874d48fc9ae1eea6588a1e6d890be49771c1c41b72273cf40c2179e110a6a83ac9ac4a24b0aac55232eb1bb4a78ae903aef0e567bf24f62db704a79ea37fe0156129d9050fd4105a14835792e5227a703849eb6ca231e327e1938df42cdf20c7358a27cdc0f9fb619adbf80ee354f039f9d3e1aca575604b41d0d49b0409213fdd698039d76e9a1ea078e72f37fba0bb038a9dd3c442f995db2782e954b02d6de40d4ef871c2c52a0c5eb613fe0eae20e9e67dde197652f56cd0d0f37c70e59cba80c43461fa88bb688693ad729fd612b8a875979a2bbb2a608cd401258636f62efd9e6a126062dd259e44b207c23fec395a800ab27a6dbec7fd854f22783f7c4d3bf08027eacff7e622c930b9acfac6254ac1d8055c190b1e1115c6c27451cbcaa661f460fd8b41047b3bfae2feb925df672a8a80abcfb795d58dfbd2c6bbf9ccf69bd9ca46f24bfb5b8f64d009e9711a1d64c478d50a0b0dcc25adac63d6ce9250a83e2ea50b74dab894cce527310f1a61a3b98ab4c3dd325573bff3c6151e713fc05803d664f11b69adb596c2ae09d4ec3634c4d8135d8768cb5f46179602cc38f6168760b0510f23d172552a73ae3c031efd98b35ac390a70e6f95941caea6d3c104498f4f09ac253b17466842bb30b900e89a0219b1bcec1a743eaab4abe964c6aa834abb68e6ddd4386b1053b531bd46faa1ce4c76c26a795ee8332ac44e1b0f7f22504fcbfc15aaeacc6d7aaa4b246bf8fef3c09f2651be11a5046fc7b0e1a54dd8a6ed0bc256c8de6b5954af1da2884b97856528c03ac7e954c4c31f3065203b64845fb68df213691aa00cf5fb4b76ace9fc45cd625b72ef7abdea6e313e9fc42d93ee8f095a4e6e5737b27c045543c25bb01ac5215bbb46867cbb7a85c5fba2d755c7f221b84f49630a709779fd5b2c23071c42274bead99bad5db11b55a1a3b408edc6b1a26167a5fa1afc3c133face983a457306bb7d937a4b1a9d05afa4098933dcf84ceac10b3360461e8c22f651e1f1286d55d70236466b24b7048eb1d6890c287739d8552693fdabdbfbdfe45b3af3cef4e90d0871220df158adcd2c4ad432463a4538cd8ea795850d90b2c1c6c62cccb1077aa7ac2f35f6eba775a215380b20de8584d672d8612ee771492d0292961269b1cc746388c80302a1b6657775ed58a0b7ca0c637d854e8fa292d34b7fbd78e4e41e6c9d2f6994cd32745e7e23142f1230833e30fcc3bcde6c6e4ac058e2d87e76ff07e48d6bfdedf13782f81aa968f00683643092c0f6584de8e65125c954a234bcb128798e2c70c70474754ec8f0aca05169ec1d66d911a8d7e88f5edfeb895fec31b098346c9dbaa8ee62d831b0dca76b7473996b824740ca98e24c84d80b8c074566f806a875c66e62bfbebd61d4ddcbfd1e7880767ee6917878df2fb370555287655f4fbbfd8f9c6bae1771f164ef52eecf1ab4cae8341aa7003397a395690204800638b3baf6e60a7337613b61ab524ebc91986728ecd51c53337797cd835a9b3ba56af11af7663a910e043be634c716fadd8295d2f233a339ef3131bd31d4a6b63a4226b1ec0f7f007f341ffad74941d24f1f6680ce6d6286b9f275ec990ca033ec4f547f49f10fb3ddff105ac2304e5c97c28ca319cad6e83d922d3d55f973349ea35f61f1e8363ea910f902609735517d4b1cc18c17860a270c367f6f780183c1f9c47a2901829a9223362373e787cd710ed226a1af82097605443f1d38d7e2bf0323b47c54a2ff392dba4c42a2c02618d5b5e4db98d845456f4d4a51d9cbbbd251a8aa9a7dee13dd334a7530dc67512dc869106a7d266c56ad4459efbd5e59f8cab2a17602986161716c6986670ad48b9f3bfa746efcbe8ed00e70583483bd03678c609e76a0ea58b0e391194fa66ec0e2415c06f4268cf4b9c1dfc7d74216e6e2d742840d74cf4bdeb67082c72b3b126af164ecc585a7f0bf70c1b5a76b146c8b39cbf294a74eb91ca53bc5f50dcfb1d5eccb06ae7f8c7e7e6c9410db0e41b6dfa7b0fd4b4e305dc23b8abb8e36b5a580c5dc2e0c2caf13322f871a09c3b1b4fd379509d9e5080d7085bc6d1de9ea7d0cd2debfc87700cfd681dca61db3f1a6e6b755f2e7e8b176d233490111f87676b0a3781df4e458eebc18b9801f07c6c1dfa3fa12b8f94c286951f4191ca1bc37f2fbb75d8032eb21d2eefaf76d447d0e50bed885b3926f941abe3657bdfd4d3fee078dbbe64c006bb267ca29cb770b06dd2b8292bd4e67159b3ced28422db35304d8d6cd6796b065d4aa579eaeaa16a5e54e660103c4eeb3e391fb53a6180431435923c983d3bb767bec6630066ba3ad01a55e2b4056c6a4a63ba4fed48dede291d5a4abe52d95fcdb608b813f74bb617923291e94d569f4313259c0e6efc23e9d6870be34295c6d290c9c076f306cc42bd93fcfe56a7bfd3bf7489a62fc5c4dc452e43b8419f47ffe6f982a4290b2ba9861097310bcd56b864921bab070149eb62b34897c71fe2843f528adc9daec554676c152d4f6ad5a605b27775c5bc13ea94a2caba3f7fb80802506e2d1db610c86808b421d698f2fee040ab5c7847f9dd3c5fae3904090a72c1f990e5410c169c934451996b86477f9e2120bda58557513325991e656851b85e933f1401a8eeedc62bed1bf23fc36d740fbba4ad54858a870f6c141b33c11cf3ac2663b03a01deff5ef227f0b7123f71bbba529e134f692b218d5800cf50a6073e2f831a02144d751749c8bf6eb250afa517c3e10cdd1a07d9a75b86057652a2007bf92b734b4c01bfd0a548839b0bc21f179974f440c1a795dbc90f681ff4180009fed661bf017799629e413bbfd8ce44e25bbb4616f08272a52fa64a5a41239d85b3ec72910a2b52aeabc2764e4d85dd6b10fedff105218f12f4ba138170436e176bd2f1bdef7bed26d71deaef1183b54ffa3ce457c47071c316bdfe922cbbed8ce21288666944e6bf9ffc96f1bb023be0a338e9212fee06c536f3de3bb4ade51f427615f594cc859d627d8b365107e4e877d1a65ef2d44a586d336fbf99fc44256444bb523eccf62e440f2d074366a6b520698b2cd5c55a3013ea1cfc99cea6db23ebcaae9eba65f750396f7970cb6c0f2dcd1f4b88a01bc9e2ab79fb258c62714ddede864fb18c42b6426a7415e8bdfcc9c3d50108285462f358e4344d6b8fa78a9895a51b97da0376641eac87a8fc6149de49a4e9078eda6672ce8940caf3bb0a323b8131ab1ba25ca507760a7d64f17aba5c10b3c88d57d7348d1d718796e1c8cf7b49543e6bd8780c0a952a91d51c1dd7a0831a73bb2fce8ddd7fdbc6398e446dbd432580d1db2ff84d623420c5ff4daf262d16b6cd673120cefb75ae3c5adcf79c59f29c15e8afa784113c3ea241d43a2458482e0bf97f131b0657a55276df4f8e5e6c8730f1dbdbd5f7c4a86195becac75a2a41e975723716ce892d70e83d901b3a5fde390f356f3a5361eac24a94edda15f874fc7578cc4a0acfe228f4ce2d11fcec8545d164320dbf1035de6731744afe42f7c225ebe978232d2c8dc42f548f985aa788cefda6bf5e40086c22a57fde1d0cf67c7bd4423322266deb41e1870bcca9f9e9f2e6150a4b1a7a950058ec29f36b0d7f8cdbe4a58bcd08dc79b6cdd5a77a232036241e244d3871329f7681b92a18b34c5079f9904fca1a9a03782d8de39098266c8461e79f0c482d141b9476a9e913d02d6664b9e5cb365b7485a50dc3e9b3b550e33cad98fae12ac238a37a075db8908b1f8553dfa4ce65e05d413d6bd71ce858aa445e5e6efa96f97cb7e660f6205b7487c90211d5323d12af91312ef2140faa6afa8b436783ca37c5c11e5f8ed8491281c8cacffc438a03a14a10b7b9c7060d6a3dcc9e0be788654806b8017c21636c39cf12eb3cf1923f2d8bbe7dd84e2e1a0b6be443813fb2c8e485c4fe56f068a057bd0d16208bd9e7f7ed24b93b5024fbd74cc21135d66433f3398e8be55d1649388a2cd0d442698ef06c5d776ee972bd198c99b32717ed2f8ae34a4f2d8d575e964bc3e677cb21d0bd993ea8193ee982bbe643b2e936e5206abd4cc86c94faf99c3e19b4f7de8f1ea2f818b82f1420a6a0113aba3b5d27a7dc8d3daec69cdd4eddacb7d7876d0dc9e7ec3c28ebd4f433a8f34886984ea17d0f06bc7305c82345bc77d2e186fd9aed62daa2d8fade2f1d946448fcdbd13d78bdbdebab9b7105606c53cd35022b276b9e40731883ddd253f4622e433e1541e99a484a96b0f1530779acabbe6c0984ce3c76192f74d2a6a71a4bccd0b1dcfdbf3f43e6642b10339df8654a95ff58bb3261154d1e859caddef041c3becf90122a9e0e99067e8bb3dde9aef3cb136533f1748c0c065bd07a1a754f4577355302636daedc474eb39394b41c9f904009312e5dbb485c00474cc82ff23bbbcdd82e88da60f50c5ea857c2b3199f8846df7cadbcd055785a92894e88095628005c924e950d29acf842eb7275714af570c9648d904e4dbe27b33dc7ccbd34ef588d74a238d20a021de3a3ca740ee279b7a77fbf4964b5254120e6d369ae7f6fa2a3fbb622541b143f6d38966cffd57bf9647b12c8805b9008daf180cca4528f7c7aed165fd4c7188f98df73a4032ac6c6f7b88c78281ea069a8ea17f9903b0517ca0bbe727d5c4473e0b03dbd82f777d14c6c4674d6bfc4035e983a35fa20a9c5b151a79a074a32dc39c82477f571d5b206b8e9df345def121cd36dc7cd9d2b906525f3de42831aa4369b3f5e5ed5a15d05353993c3d60abada782b8182c5243fd4a0483403663d9723f1b3e7a9e15d04cff283f6122c95696301462bda71677c30df770dd667d702bd7d0743aa703781badf1cfbf345797dd94cffb69f2e9fd190980963c03a080532942c6e9f70eaf4e0581da704ba4aa3f53b24b0608134c773b499e5641e6e0fd7873cddde57ece1998b5645a2ae5df343150989c9cd2f095822a7ce641d10ab0c22934910c86128544073ee97ab8b9790bc5d45c2a65839d884124b3756a23b661b031e7cb17d93c85776ec1b630df33dd59c6b4a6c50a5c68f0d9839bf16c91af56dd3fefd7125e8ebc59a83131bf2926773e86058a9a4c829c53d97528e478c9a446e34f812bd0afc848a177e264f20e309b85b3479912713dfe423aa2eefcb5bbcea3a4bcfadcee5a9608c32cf050169deb9b238219d1e62175c9c04a97950abbda245726ebe762e1c0d14fe85bf389ac75e0918ec42e671c6df49c17154997e412abe5ab691f6984d029121d089fba68dacfd9741d77492077947afcaa4cea57ceae49a53a69806f84d0df77209e0e0ddea6f3c4d000b00e399616b8800112cc3c2f091ee0345a380b661b78413e2ccac83a993858cd2f9b4f1b805e7a96bec172198310579dda7c61015dc6fd73c295f1a2b4a8d379e10f0bcfb70a334510d907451a1258ed5da1879c2a23a6a42df4a7fcfcc21838079af3b98825aef32d47e0ba0097b3e87a4edb53c09b9b63e51d33786857ea5b045c8c0370bb8df03e02f8660ee0654422e0e57490307e2af87d1984df3d58bbafd15f095c9fa4ebe381813619356f0f50b0a3e4d07814d802cc45312affb1c1a5a6b01576159864063ed80b207593aff4596e095cdfea4a1555fd13b1ed54eb84055505655930a78b3c954b236f2345f5bbee7fdcc6bbeeb7bddceaca3d96d31ac6fb1f1e069d75a4dcaf23a554c423f72a534cccd0d76e6d65b13b7422d175f8d760ec7cda37da75fe7944bdccdf2475a94dc223634b1c2e825ac2fb17db3479ce1a497de9f15e876ae3be3827b023227f8334a947c0fee8475163d8314d7bf6aa0fb12a1f30bb945f4bf766f60b8620de2a743ad895521b38cd25a47091954a6cfc43082d888cf528cc46ff402edfe3efa30cfd661a0841fa89e3dca80314ffea8dc36f85ca3112e4c052e3348d5a3315d0240e594f4742ed0b6bdfe7993573e9f97d8a18fce82bde29d7e40bdde28aebe177084db7dbb60ace7eb51484cf19097eb116fdae9dc3531eb610a8c162ad78455da9e56efcfdd36727a7770f4d771b9ad0bff0ea7d717a4b046366612810eb02db0a3aab43c5861e230e6b2f22c79d7c57ff62742df4e3fc5b95c526354ee2fa11e79fde3be780055f007fb646cb9f702744079719ffe0daa8958cf4323afdd159cf538ff6d461298411982811520ea7c108b8f4f993d0da6e3f9ef910c6275d9e9f1391c85b0d43391e09cf4383e02822383bdd4bfeaaa77bd7af375fcd4812bdddb78866fc8b447721b3894e7fb5ff9c35c5ff75a794feddccde77ad25dab6d5f77a1b5fcebffec1b7cde590d88dafb9fc4d40ffafc776b0903ff86e0df5cf546ec9c6a620aa81ac0085396ce6627601336ae0b59d2f0fdc1e539976237f0afbc2eea8b5e1d7e86ed55f3975ecd6acf75da1193c61854bdd952fb33f90b87a9b834795547bf02986ca92b81ed16f937b866ec82453a943ca29e950f662c8ad381fe849e33be1a26c291175140c24712aa7c06c27d3eb752a7fcc42c2f80d64f7ed35ace2d7822bd3f9fb596a20fb2ced9e23b3950eaad09dec911e53e556523f6c36e695ca919b5fa9f07d94145be4f209db96d1da946aced25567d8ec71ee1fecc377c965f98dcbf900939de1fae3a0be79945ccd815747de26963e59483f81cecc319b6ae14ae18e08f046deb7100cbb59b3f0067b26b40d3e9de9a04c0bd4a3baafad3d83b344c45aea1e060098d205a7ff4be6ced6b3593a1ba37d1b4e3378d7ccb7f470f6755022bcf609c5a9ee24b4a9cee02511e723ccfa50cd0909e6473448b9717da01fbbac810bcd100afc39974b7973173a29edb1c6acc3f0be5461e8e77aa7030f54fbebbdfcea6343b273e7705ca6def58b9368c3e0d4e05fe68eb9ed47a6099a0469a0f287896252c457af62dcfca4082734924231f7fcaf86350bad7eef9de8128818ac276929ea8cf356c7eff2540ef2713debbce1454bf2a6e3512d4f46b47a94f8193f742bfbf6ceb12cb35536e335bec873459fef72c5e6e908265bfbcc879e192fd70d921a89251154b8e7a552c73e8b78c3186c7480c4325a1b4af15b74c65bb08de25bbdd5bebfff1019d927750cc144697e93e23389eb089d3262dd49c1534681b88da37013e78a2b72280a253374566401d93e3d873874551b2532019fddd771e79b49c71ab7e07ba888dd051caf5435dd6b013c0a47f2f18649713d99296aac4209a3812f3cb3f04c87e5b6d79df6dcfd7f38a3b3d8c6ef9f5f728a880b4e5885f05edda3b252cc3c2e0351a450f54395d844d99c9a765c034e660f66c02248a1f9dd434c812a19234f135b5b976d10ae73436e1e228fc1e0f39a78e63705f0f987b0e9635c6e5e3a8506d1c1f19ed8679279aa6b39179d6adec7cdf47507e16e4fe83f8b99a169ce56f05f1603cba8bb5143f7a32b5f228c36449ed977c7a4bd7a7628251fd790e8ce1242fab8c9d9c7d77f0e1aa977bedd415e553b155a62278516bbf95ef316187f21c5603857673e2a4f9069ad1a4b97424abd88c881490ebc676c8f5f2c4f487e4fffc443620dfdacac8ce13f6323bd5695ac59268977082a2e1ad07fc2b54704dc24cfadb3948898f0d38c1f3bdd473ef47633813014fec5892d96355cc38e8d8456c062e650c13d0a3bf752eaedd0cd007d6fe582a74e715821d048328ff748a3ed034ab7c8f2abbf8a5f1f8dd6c4cecc76461795be44f50fe913e7cd1d663416fe55bf8a32695800cbd67393b1078634c9e71d1570b2933d0e491df98b494158aa074dcc6545ac55e22fde655324c14218cab8c2d3643e5f5eb1f49ccc8c6daaadaf836b4de3c8cb1bc1be3e6c3f109dd9add7d4337119b7308c02a13e88e760f6b7c5390ed1f719d666c2305b6d73cb0d2a1a95144557e28d34a426d2d448a433c6bba4dd8b7a56bccbb1b3603bf2f926f65217823667b0a9e5a016081020ad922091546c02ebc29b793f11c538d8b994d545e642ba20104ebf47c252e15ebbc558cc7f05bc20ae3a47c395bcfa9c7aba6b2497ee958777d3e0df6853bf6fecdecf6dcf547e12c355bc23b063e8b465f7bc521e989ef1b41e5fb4d56edfffc453d2fe82c432f71215aa71583547f612faf691ddffb721e9c5a1a27d9c3990786720b9ca5e5e63a9d64ed05aa219d7de445cb71dd7893e0fdb86c8226095f6f3cca42ad27e85d2881cd02607fea761ed6a359b11770648597f3f01c14e5b13ad7871c5096a780eff95473b4ff5011cf60e9c22bef66c49cd40876744b51a4bd99bba3bb84ea5a75fb8efa83c1fac6677b0ef3de9c9ed3a201678c33a596b82bda552edcb8e4ca7f0a82b822328d9070de3f8a76c9b65300796eef1009d51b37cf51f19ab6b6da83882ad9443d2893cf31be23b9aed681fe4ead289f6ce725954d05c60edb6896e0d2b284cf4ecf75cc501b79cc065e8a529219a95dfba9808b8a92074c598d8c972e45d27b0cedfb8d727ded650eb966ee547f720d4436fb4bd144939133cba3a82d0f293fe2dc6527d9d215e66e73e83d1ec6c8e36d352269f0b3b1758e87396a83f34998bc50ed57fe1cb3f91aa034d91094eb0b938943869ee0bd3df902ec55235dcb1b1a2f35458eeba7e77b9f3ccf9a0c1934ed54b1b44133e27edab4e5c50f74f7ef80762510f516cd6fb8c09a10360f11132047150a62979dd7c519fa70094db6cf50c2fed8167fe606c9086c2b607e6621382ae8970b0b8069dbcefaae08366fbd9e06ed7cc3f6e947343554df572dd14eba1ea85e40c0e12b667eff2fc726e55dd922a42968be056ced2ca06a303c26b0a4a295a93f305bc1d33d6ee16edc8a1438f4530a75c68838cff936ea50ad61f58bc9168ee43e00eb1ccc25e41f8a6f73e3f9ba1a93b6e07961d7e8e053504738fbcddc82dfa2114db766838e22ae870f89607efc08114774f857a5182264d40e7040181dd05707693d3088c21a21573629be0252101cc973173700863129d12ce0afefaa2e79c806b37e76305c67c7aec2937f6a5789a98ff251c056d21636983fb14276d6dba181a2292366555f3485e8f460f974526788d218ac4e8ac09e9f76b34fc5f972a41bc61c72d9884ee00974a08eca60477c2d4dff78742c8ede88911ee80e1159ffa15793d7427ed073cbf52c5edf90ad59eed4a99ba792f66b98ef4b943f989156cbd4821f21b44efae0126fbe1ebf53bf6e10950dc202a001c073f830779b0333933e3639db790fadeee3cc6c13e03803f576698b8abeadbc5efc61cdab61dde2ec2aa56ef0c4b8ab12168d51d6328ce50fdbcf0701350f90dc430838d8c1df110125b68fd4f9518856e5e667565fc8ed96b7f4d1212dd86a601e2bc81b080291857988fb2c856f097790149a527e42f6a024eba4c940fcd40146538b00a6f1348a6ea6a466573856d401362b97c3de0b53482552c9b786225c0aa10f7b3928cbf58e361e61e15e67bc0bdf599b3523e2ff06d7ed21342d9adb4a4b9e957d6b500d5ad140b5d9b679d9d6b816240f90020da9da0f7c850747a0d6e2fbb5dc5f820843183f9eaca845c8f637dfd7b009df34c368db73f0bcb1181aff0eecd89d1889dbec540b5a1320ab28316824f0fa87baba2c490091afa407485faec69e61d25f91cf94db0f3a8ef13bf4d989f53b7ddec5239bf0354d2b50039df5e4c118af75f3d3590fdb9aea7aef6977ab000e61aea797e95807786408e90f7c688b542295ef6993b278c337c1524dd2aca2eee2d86cfc1d97fc1de6f4951759f6e2f9485dc402f006c552defcb64fc908b652742fc1d94ebc9cb8dda08977683759190becaec8ddcf73ea4e598a9a8a4f85ddffc5acaf65721bb23a8e37ab37bf6f5cd0b4e4cdd41f56c9a49706d0cf930e65b52ee7dd28a739e294473b4ab99dbfa49111f83871048999722b5257353c757c765a2960855d384b232a1ef47742935ae5cb74675644407145fa7b3eb4b9cc93f5bfbffe14b149cba7e391cc172fe429c6eb7fae58ac0b4584333fa2ef03045fb5462a7d2b9859e72ff518ddd243db96435a91b703e38292ca0c4e00f7e3e184eba218f00a6c6aef811cedf9954401198a0432360eea6563ac8fafc4044f24bf60eea5b7d152d67289bc6a29f1aa09ec45ec89c9525fb750fe5930cc74e4b78ebb52fecbbca48b2be0e12dd5f8377f2cc5ea71dda713876dbf83d13eeb3f156df822b8ae638bd0e5b4a999ecfd7272d78573018c7c041282f0e5aa7ab3059e9a85d4f57c0ef32c44d398ebd409ea91e2a51d95f949e450a205faf8da5d4285f34e189387450f7b1346bd591fbdd78c2838d1c0bf88234761607eb134552ac8825156a711454b1c6b7c0acd5c0a722617054f17a1cc4efc7135849e0959e492a42d6f29a32b918a6a40acce2c945d856167c95ff990ee753843fec119b60a893478b9a47cbd6cbc49263d59787f6ee355f1abb22ca6aaec70f2ec49dfa26033bd8b0d3088c88a89a917bb7816281102b3a8596c305ac1b71836864c6103d588100234a2e0b35b47f14db1a37ca835f53fd098f412b768e8409b5c71cd7ed032827f70900f2f785b6180b7c384ce51b3a167b117e323be71e719f3b66701b278462bb7dcf9e7f7b54b2cc1a82246e1f4f63e040b2ab08b03401c0404de6f90c9f35928ec7915f2d7f1848009aa3daddc8ab64a5ec95c74cb9b35ebc4ea9a07aa84abee688a4ef08aed9756905cf9b94d12d84d3020a36e6acdcbb62874dde4de66ecf8d3d2d7814a9e1b29894e188df80444f28a5066cd58c67e4956dc0f99e39229070197699130be08d8f96a6a0de2ea7ad26b1939e1650f1ce98488514219daa15b436132d3c304195c8a9f5bc25617de413d02ea98f4a1ab8e14be1118013369d9ffffdf7b2d28577c0756a0b7c53ca05bbdaad716caddb51878f290eae8b006102b3d68327276f1297b94ef3cc7e496a828156658d36ee8168cfbeb69bcec62c56367c5cf92ab82fbe5d103001df57c3ac83debf1ecdef47e7e1b540bb438d60c11d5e7d6afb40354396aad3c813d4d3916af63af9ca46b24610a745d99df778257997e21b52dd06b150396b68a0c09a72eda750c0b1ebfeee7a38ee1fd5024b881bc038e50cd31fcd1a68826e51c1c8601eb3355ad563b288e69e342bba7a8fc2b728accb9aae27aa1903fdaa4d6b485819132bc73b6dd8d03f5ca1a6b29d273273f906d3b1bd4fbac55d6c38700ca9bd29c61dbe8e2d9149d7c9755d9825885177fe70e5f2e940322c7f7477f475b74c8e9521235790f89cb2842a38f252bb56df47d63ab6463764f8a73b558777a8fa074ac491986f605d5b2f2c896ca6e61c6ed0f3fd23035256aa592db4e7ca9b1108da0a56449ae2d4ec981e370b37f5b73c71539f8c0455f4ad1be4ca58ff3b96b55204207ece8713e8f1981f00f8b6806f729cbe50d49c6ace0f312f150c7d630eda0fc0125e463da73bf5991f639bab5930c09bbad3ba7cbaf2a00eca8947f6cbe890ab6a80049955462c2b01e32087a36f20a67648845e73f6e8af205c98e2e56310b0f1e0cd52ace5d481cdaa7ed24733defc37402adeb3af76128280524a53d04415158eda1e907eb28f528b72d92fa566aad2868e6f1b10733a1800f329ef1bee3d2e4cbb6c5d4effb5f67ee6450350ad811d22d77acf3d7420b2670102637e7a020333b5945035aceaf7e29dcc666837a229ec4a535f2cc6cc1bd9bc6899e1dcef8e05c088204326c701f3d347aa268368e21e1ed4dd2fa172e44f72cd07eb84e888f0941816b01e396b7f4843213aca968c534ab6bf61b4816822276563cd13321f3e12f8125a0a620dbc3f048b9db7ff066febb94db98f25e4be2ff88e525d7900329da923512f0c5e2d21bceb566e75ba176cec2d859e90948292d982adb65d33119892f41959a74d0d8525f7f6a8828fc69233ca980b49a054e5a317fd780eac483f94f5b506ee24b1dd2906c6f6013d047b4cf537277a8f1ea0b0b437f8c64d6d1c30f0d8ea2c05f79250b806c2dc130402714d5dc4b073e7afecb4c8ac49736c22f3cdad48b0ce5d39c0f5e62b4a20f466ce40bf5da7f0cdaa6f42a1ae441f7b4d532f96a70f5e2d1aaa3edc8bad2648a2c14b1bb69f0adcd20ce76693512fc210c24ba1cca9dcbf4e23ef6420b419f8b63a3d62d86d4c6985a862aa4d08eecf37f8ba08131bd4c01481afe68c1320ad1c385c43423df9040316b1a826fa978b005ff0facaf0d7acf6c33e17b26af4a76d85bb643b549a2237f4d5f9478f70ae7eee73e5545ba41d9dedc605e83ad4bfe7ca21781a5f1ed742965fc3fcebe388356313bf110cd8a472792a90187844b0811a08e4641dffb61ea1b0dea4f85341b1909787500e4e5318a99370e26803173c5413980d4067568c8a45e840644353dc3c3d121640c8e98ccbd3533f0c88ddb549fb751134484a2a48b8a2aa360bd013b5fe73e28b3efe8394641d07f29b130ea52394e2fbe4ad6504393ff9b5e342b06199c5b2e9d977b577b0994979407ad8d94a4822ec973fd45dd436d6906d41c944a223172c35bc01493634c71ec17e202620594881f45863aeacd6fb6a3c3431eb83b3200a000dfcd1a0116b632686f93b274bd10d406651098ed29407b7d699d97af69344177a03796796d29cc94c441e5f58806f8612e84bf1231dc1e12ad4bf72071bd4a6d72d7f69c13d5b6c0c49824f7fe71d1dcdc8983b0b2e37eaf895679ce50e910e7b5cf587d983cb16fa7cb3740d6c9be28d8527d0055372401cbcd0fa24e600bf351a2b51a85adcec1f9a149f71da07d2c1806338146eb35b8cb42115229b438f1da7421c071a7173bd15040fc3afa338e632bf73f0e1e26c3b7a118b965d90d00862acd8cd223445727bc34f4b4e4272d74c46e3b2e8b2c2053e18fe706ead93274edc94030b6f52b9dd4fe13fba29a1c71eb1e9f699d4f8270296d86522ea9714c2e581ddfeadcf0b17c4678b61f2b23c1ed4cc659581fd9971608378003f73846cfcfcb0ca03c8ec87e78836f752fa16371af4b88e48924777175432e57a5982e78deb7775a9d7a60ea2dac07bdbb2a61559e2efa212bd993ce879d79324afdd16dab84ac7ef4232fa7d340092df48ec04732bb150d41f9ba1f4147ef186939303f5cf718745e7984648862b2894e2421193cc7f4be83a9864b74a689dedc3bede8d79d9a7d57c374db00cb19faa9055d70072cca5b6104526f3088468a752438f9d8b5572918404320e2761c4adf623b5ca39cc2fc76720e28228e90511ee915d20d77c4e9b3e8fd49c1e100e52513d0cd9f9c52d90caae9067aa8ac8b7139052ab501e04c43572e7ee421df2843880d3f79ab656bdce1a930cae71c72923f179361ad027bccefcbe5460e506f38e0357d72a68b8844def8ab4cea810f0d2995e623f5dd927952e8a4c388ceea2c8eb3b507c6b34f433bcc95970b0879a0430bbd1624e1fce90d6c31730767189d6d880c6e4b0f4522cb46db5c1a4e854c2c48092ea91bfce5c31d14475d4da181e53546548cf3264e0ae7f79cb9912a71b8606da8509ccfe55fc778d883ed0ca7cda3039642b33cac1df76b7ba2ea5bc7b1bad48568778705ab5420efe5e2cad8354ede5c602d77eef3bfb19c7f8685af6db0a04d491e378347d82704123582157b5424ac165ad27732105a0dea431a2513311989641f0a465b4394cd496a8627c04db1444e667a8285ea315f3f3f7be22ed416c17721feefdd6160b9058e6eec9c0616eb2b197426d7115c4985f30ce161587eb7178c9a5537fa98112f06b647aac13e582ce2921639106a7b34332aed2436eb82aa26ee4ea56f93ea4ac331abf4963264ee1ed63784b449b4aa02220b3ddad163fcb37dbfe641010d7a405cffecc890e5ab3c9d61b6851dbf017008c7f9395bc37d68cb0eda121bbe5ae1cfc8ce9acbe33f793db4dd05885a00e93306780d8035fa013995d285729d2237cec3a8638aa626b492f9d78f5700e9254bd07896e4843d101c5e07e52440169531e32e94cf83476b5f67a1b71e78ff2558170000208eb41eb4699aa233ee2ab38c5dddbf411ba00ad103a230b9b4d18d249e95ea9f1c1ca3a17b3080248e0d58cdd9688c949a31365da79c71ffda6e417378b2db5879361d3d4e446be2d6c9d09a2a352069ce7becbc3104984653dfe0f211c3051312f4035c3270d1fcc87ac3a4f2bb6e2f2e71f425da2582b12d8a91aa130ad09f74c51be90175cbf8aaf4485299c3abb4e8355c29584c29966984f2c664896443b3abe8e5119a4db73c64e636fa840460be22ac42218882a2fccdeb101687b0472f258cf3c151f6bd3d2a582a67515d1b3178642ad9a27a73a17b84980a271f63fce4c557595e49bf8c3d41cd9a4fb5cdf88e76ad817fc4e3da96ac4e440a742d11eb51f02245361241063df0889664180077121e9690e52739ac7a68418958c3c1a5d8b0b6850e1d4ced5a83de50ca90dd4453133d053596764965d42557ac6c9d760e19fb3839b09668ac571c7b0a845320c46295d6a941629a84e1a58c578b304d7a8160398d70387103bbcd5b2695a593e37caafe3d60e1b4c63dc505261fad1e3f6b1531c2452fd7912b2c47ea44453f45e08022fafb13ae6cc33b7962469948315d33b17522a1d9d0b002909ecf066da5412bc2083d442d3932768477d07f8953675688f278c9e16002662a815700702ec74b14801eb4144bb57f9e1a2db526001a6d54e2ea5fb70c715fc82240f73476cdddcc63045df0c7efd3d028a2137fd18163f255d37ca2dac710a8aefc237dcaa14d8d08349b7cdfcd9d1c56783178e6812ca269b51a9ac6dbe94c53dded77ae36fb22ff06704b68576bf724f5d4b7d1ad9b626b0594e3eae5f13454cdf7e809f765663f9b6fa51409db1d15cbc24a7e22102ceb6500a878dc0ea31797f314224ccaa9b89ef8ec259f56874ac7a20b1e1e9f7d0d137c86a394ce5b04e47e2a1081a79bf416ef09cde754289aee67e7684fd9fd386e3ceea675fe0f27b9812bd8f569416637c06f3c47a41f4be44835141ca45892318569432af0208d5132aa3edbb1e2d1828274d85817927e2fec6799cc4d5a5c96b09fb2d0aa22a72ba9a253ce29aeef14a58a777f065758807e1169c6b2a3e4d6a9d960dc86def26ae2025a44bd5326667606f8e3026bcaecdb69492afb4103d01d3f2462118eb001265d0be55d65da28d41101d01bcbd6a8e32c163858757bd175b119ef73b6dade4d6acf5b9eb1115735e7b7b12c0df691a05800d0a5f990b33815994d8ef72959a0dfe1d2d6a5c931122ebf05405bfa85aaf35ece284cb685225ea687155e967636b9e55ca6fb191d4075651a718cd0ff5a78ec3e3c1bd1e9b3a8218f914fa472bf615c8c4ab69f64785eb8f0ff41d5434101b7cd1d9d7ec2b52a7ef72cca921c0a127e277e0537d5143ebebf2a89a54a2cbe66058493dca200515cff2c45e3dc9c885c079874b78a336e0a699ef7f1a91f25a9e7f142a4dd0db8bb47022c3899e7b0f44f6e78880d40238bb863ac7d9af93dafe29a57c9e29eb705712f3127d5bdc6942f3d38f434a1b226ea55f8f0aa33e9c85ef23b3c8907e157dea0f2e9ea50b7967ec309f8c7822af5db92ecd51480a1f14cbbc5011f3e4b4fe840a5a08a570da0557aefd490c35267398af3d8740d5a3b53b3b2fc9aba194b729216ca0b3986ee86b9fb8e62497882d2e0209704540986fd63e8d855a60f461614b38eaf2fee91f21b0bfddd65ef38c09e7984ef8e70b9a454d29cbc717a5d2cf6d52c7f37933ae526ebe3d79d6afad584ec5824eab06bfc3cc13947c7c95e54c6253f947fe10ba35fdc7e4b7a20b5d524914ddadb0aa28edccb693c26e89bea4765667d7d1d42be945edf8f76067b76bf7f82bbb1fdd1a127e5cd14f2258b6b1c3db05d1ddec4f403619a547815f354be17470e5d2ffc98cdb12524e12bdf5982fc0c34860402f321a16aa0921fc85ae67813be7e32d98cbafc4f0cc811125e817def5b2bfa2e6662933af008a28f7ae11a8b1ca91f5835b56c76eb12c5bffe1e94e02ba310cca83aad2a9a1ba6b0330d115f6bec79dd1762527ea519e8b8309e25247a0f018e140847c95ea0386dfffe6cdfb75e173b09c7723860c4ad066b23ca23a6e6185cadba4f5bf47f54e8a6de9dd3fd337b3f95109e1f92f745e7798bc70c8c85b913a02dcbd47490180b83b97694e52316fee3677e6892214aaa178fc36bddc84c2da0e7f0073139c50936dde146ab61dbaef1e6278d4317c34a8cc1f69d4f3b32d8be633b6eb8cdaf82457af5ce67a6243a1e5b7b459bac3496823a3e98f6f8157bcd123514880c7e21c3160b763703e36c179a20134a91276eb6de203149137d5b568ae7741a9253b8843346956e06e68e72207347eead35c3d646c561ce05f03620e7f600289255d359cef1412c15124d98d441d4d70e55a3431d88c527d7280fdb9a7616ca7ba9933e2198ccfa14e24bc537e90506c1523cfe591581c347b7662f3a8e0661e345d3e38c8813480254152029dd063d9396cc055f25a41bd50e3a6280fdde480d4f55d84901ce2db3e10ef46895b9d41953ef93b551d6644743e739798fd478e30c1f412d1d15f4c0716466222cf242e3d5499b5a916010f4ed753dabc61dbad6eb0b761deb24f3a7f75c2fb5bdaec3acaace683cd0daf8ca0a5ff32f3187bf01a27390711c4b0e9ee2aa3dde5a92e453e5a9c4a2c366800f42c6c19248e676ac35d33fd0902e4dac95b3f848f08454ac4796365d761049fd3cf5724904d9da680150948ab760951ded6eb60b1ad496d46a8dea9f3ac4c4c3a16010008728e299c09c077e000684dbddfa3413437b47fe585abf0fce238eed513ed43188bbdd6aaf6c887499b998f51be083568f299d91de76f00cfb525a683a9e96001f359cc5089a0395e1a3e2896c2f03b74512691bee17361afb0aa35313056080af621caed05c2f1bdf1c06fd379fe77a921873e46d3208e348047746a1e0c2b97ade9f1aff797cdd2195a332bbf550292530f8bd49010ec1a6d679b8b309e8b269f284aa8bc74cfd05c0da8e1edc56ab4468ef02cf1404d6c563b5170f5c6eba906bf6e0e3fe8394e2fc12d5f135e770d69abc5e50396da97e8747d56a1508088045da946d07ea6d81808c683365cfa6901a3d4c4c032f1e097d6e703c4d8ca8cc488a8b555c4c2e4c0cb0c36ed14439bde87a83d7dce82dbc9589e2a789c40df1c28b2451cf7cb431db4de1d844acef09e35f49df02ab3d08719d6421d463db1290e8055c45901fcc6a79cc767b40de1d1dcce2cd3561fedfd1792ad67b0395dcf66f1816f208075cb5d1a4d39bd99d18f989cb5e74637a51e0772eb93583a351d85a946a1c4769c16e73b30e4fcfc6bbeca3444764d04112bc87a5d11b13918c5e13fa09fe2f0ba78c0b7766462e0d1b775b9d249c090b492344f6efb4527f2c7743bea5d94bbc561d7f2fbad0f708f7a37556a65bf3e109604c733221fc12018c856888671f929c658c34cf4a861e456399f0a3c073765019c7df822e69209eb4d13db62aa7aa5dee5c053ba035267d288a6bf800e37143ba204fc65945e74ef2ed13cd551b55fe2df5a1e75d70572bef1dcce951951707b3e0d59fdd414549796fa770d96d8795dbca734b6bc492deaff25b955377c1119d6a3134553524a6d2d2f6596508b6a51c2af6651686df31fae5a0396371de275c203db3a97c44e349c5639a33109cae130046c40fb2f0ab41f3eaa5ab0e4a334d1ec2088e441caae61d651d5418ac488c09dd177104cc0c6457fbebb8f0e9e23ae32aea24626bc3d94a9763026031b8196c1fa4226991d8a1a65ab9e8814dad1522fcaacfebb3af62f66b4a7408ac52514084cc2e4201546ad7d84e3040c8563b2d5bfb1c7ac32d970d7c0104100bfd53680628370934b1d6990be24e46eccd1fa4b333c79df9b424b7535cc3e937d4268987959d7dcb7157b6cdb2598170ba632c5e39bdeccaf5247d07c1465db906da3fd8f0cfe0fc69d69a8d0bde54f6724e9103b3e4b1f9903a48459108df7028129ecd361e101293903fbdc1d756fd79e83e159123c77e05328c07446ab7922a451170c3ab3ce208630d37dbd0dd231c164cce4a3dfe337d83de5497ae810a096499cb224f63c53007bc090e937df354e62fbec58ba4fc78dc0824805c7348343ad1ef1eeb61649e65d8a2ecfb0a407d6f662778cc5b6b61c504301d2399e3cedec032860156bd7a85ddc30cea0dc257d2b693d6d9801ce64cb12080684fb28c2d266add0cbfc31d2cd5ab39c7c9d1724cc8b4e374f33d8683bed690481c027e7c6f9d70b029215727e2d88baffc1ebcfbe7d0bf4d967e05615d6a07151933d4e3889170f760f9470f5326e33d2327d8fcf2b4a563972c66b14c101f642680678ef37df808a62610f09c1742d2c51707b1dc101646c696e1cd9befcff69cd17f0c7138a783d13213552f5464a9d0a5d1fc675d01c36369d7c43feb05a84bb69126824e5c9da6f2d04088372659b673559d86ee23f634076e46b5dfc3f0e040e5e2497dd0994beabccd319c09429998c186105e9f90359a2a01545315a9d633e9e54a3642d71f64f49f2f8095afdb4f68deb171b300d52bbdc2373748e04bf3f43c3b88e2387dfb26109c437ebab1fff0682085648ce8072a2f1e47f3058e809baa7bbe0fb6fabb39130640007ee3350d39e27ccf0ac073ae09b3ce11abba7cfb786cdf934183ff8fdc4d0246ff70ab56ac601f3be007a2551856d35f964a6b1e79e5a88f5a4806a6ccde8d19f4637b03859854eb504d6f5343ed78b7b27ef2223c2f6d76de71f81df81196b12358aee43f0036242cae0b6886b47f0291712b04ef1e5f2c5987895e7f5db40a1543baf24108eec42f31c35c36c8a70489865712ad93620ab686c75fa901e29746ddd9cf8fb94783cdc4a8031a5663d68b77b9bb637df48185c8fbdb6454cf4da7331fe578071908377b0fe10771bd19cf19de0ef53fde4604333cb85f5d92d2a44acf3364bbf6002f626d992cd647b3fbbb977d382358a31c7a35d0400b5837a0802393432e6d0074dc08957ea26978973d91ae655ab309e22690289a415c6cc7dfbacf5e1f0a1f3be9a22dac37f793083674ebde551e865b36b336ce1f2d7c7df993f3ce89b0db51da36aacc279c901e4ae4c06c8d01d6ae4f7e47ab30d69146b32f1dfbe97ad2b617679bfff4c2d5179f5653834bf28b277f7c1ab8241d9497eab3a7d46aea44cd8da8658b7c7319951a56281d84b1e92f367a6058dba9ab2b65400c07d09693cc5f9f100d5ae902b0aedde2c99255d496460bd1261566ccc5b5af2b34d7edfd18f32c52bb9c3983d8ff198981f9ac6412730b2d4f702f2740f287950ea8de1600ec1c3b519172a35f14b199ae8c0f4fd20cde75002870c7e670dab4e80815ba675e025e995f03289962769471acf30052e91f84ac10d249dd67afe4d94c43155e2303b8fe5150b04e9c469bcfade699be07b94128d56c8121c6b7a49d07200ef4036ef0cdd23254d46ff3befd13d8f9894628bca7a262d1bbf53e35a8b4ca5cfea5b61f028b6b852da9ee943c58282c42bab60bd12e0dea744b897d8c38eddf583f443a1f9a18258ef65601b5f9bfedff0845c0c809716c42e59bbf3eece8e949015cfc6c2350ab1b4afb5301057d30e0d17201ff8b121df22eef4305bfd6bcc588fcfdda7b2ea64ea1a7980fe03653d1a085e967503270ce514670e9b96d1c7df40952fa22eedc23812d3b207e42877b3d98bbd3a38b4ba577dbc116c7e288290f1e087ce6b7790cb7184bc3a2ab33d64dfa7a89e2c03c4afa1cb48fa5e19dd0d83e2360cb92178f42a3ddb7c7924ff74b17a65e01c779f2423afecad8aa0b1d080ac865707e04b4b2c60744050d07840efef71206cfebbf57ecb28c7dd6f2f05fdf791946c744a2171a7573eb246a6a3a8340c0f86e2b2a25136b65e5a5c6cb8499a8aef32983db24764ee026c156c2f44a2a02f2ff9ddd756c0c84ab8a31ade157b1f17847c492aca43dbb8a05e3e41f2a84d127653976c4bb88fae38a9d647fa5c4d8ed8df03d1c0dcd2dccbd07ce90293bc74e69977a4ed50d5b18b56d71adf50c6c4719bc57eaa6e3810779ce759b07e059acc5262c1b305089da2d3c339c49dbff8a6804985f2ee3438d263f5eb61792b37e6e36fbdf2f23cc020abf01f7fc8381814711d30043563e0fa5b4912043c21c3bdaa495008beb8a24c7be1d1ce906e728d5f529fdd8c943bacf90ecf65628c54abcb13aefbbab36a125583a7eee8a5c5b2c64a9115f413af9b61042f45c55664e0c42612c65376eeead760222b0a6e004f545fa4ce43706bcea8f16f8d72f7f5195c3c74a118646694772f71dce69061b17250657a499a804f30b10782372dac3bac2115c06f36d1a1cd1d39135ef76f96d63835164c02d505ee24f4b565b6f6a5c5de15fa8936dac9d67701a8f15a7b0b5a3da93c0bbdc48f418f33625be30f435a2e92332bba0b17f4b2e1b1582817ccf1909b589257c586dbce48e8ef3499fcf2370d9ed80ded24aed9d1df3e83d006b4def20bc6a46f2895c06756c39242adc2cf30c6238885a5e06954f80f60b96b15c33d93ad5cf5d92d5bc2e12cc21e55d9b0727f3ac6560df9a4daac2bb820c1604dd2823c120eebed315689f0adb6cdd10c0cf0fabb39d9ea17a552159e17571054eb55a4db475d64999b6fe6334539e2b2ef7914a14ca04b646983f5acafe28fdd07355c35b5025491c8ab00a47671459e4361b4de2ac43581db769a6bf44d5b84b1316d990fad29c834b1a5300fe1a123406485ecb563491fd73cea1893339c4dc54eec6cb101e123aef35fbdccaa7188c2c12be91c43fc03e968a8d741067954f5d7a7f279fb04f62b071c9862af419bb109e839d3f78d8be18c91594a5ebcf118b92d92a116671b8c7cb79a4cc3ecf533f733ff334fdd651f9f99d1bc34f8ecb252d5e4f0c4ac93f5dc4cb3d81ba04da95127d3c8212a67aa426ee5d295d98230ea51277bf3f025a425125e0fa175f7770f6935d58cffb9d6778cc30e7a50b3829366bb0cd03c5700db0e44c3b7451ec454c5f93215bb3ab8118765371c5f501ef9403ac617ad734be8b3c88977ad175f73e1d7860ec6d049c13e117a24e1ecfb58e3ee2e446949b9cfb7616e725ca60a5d9069416d65913462e28abbf59a73284151190e371d14f81f276b8252a190a302c7e1d2620e9440397ad8151e2ede0cebdc988c6447d8c6e1a428b3b1dce2d392757d88286443f01c38bd194a27a31904b59ff0d01ed29af08e320cdea8a6397fd39fb14c30f300683c31db6f2573a0a41a7392670fa57a30653df9122fbdb8e069318e222141fa441df5e96b244f00a0ff7a83eb62d52608ccd987ace5871596586a9673ab258542904a2eb45ecb97b997dec5bcfc735b8d6682d2bb0b871b23fcc7d861ece497174749f4e53adf7096653cfde507dd4fdb3d03737e3256d4244738ce869076b378e8ff22f7d0dba8accacdfe25514bca2a01368386c4fdb53525ceb9cf91173e669f5ef1d9d591a64bfb7b8ffcaefdff1d5a6cf6ee926993f228d32469f7675d684fb662dd77c2eb821cf01d31658d45fe62fdcd1688a2eee720d311cbceacb14a7cf26265b0a7ec4afa273a5dd4b163119a08a395c9e62f620d87704cad6fe69e401e001539d3eb7aabe61a0a9123bd2e9ca10871ee81d733a9875f85f056979a46dc62eadb08816c428b73bd374637a58fb9fc4f669cdbe6ac15aa2b298fe831c56035db94566355bac9a9d7500a78e7283452aeef65ad120a48c80fc31adfbcc88a31c68a8d47301bcd3da1947b0141d0896fb2c4bc1e379a85c17566125c986eeb7172119c83bdaae1ecc55bb94b0cdca2d0da24df7ea830179e825c059d45a9ba1c9ae4da4548c0e5f3b5acd5bacce2f01a8c54600fd719db1619fbc28beaa21f82280fc54a1cc41437545214ffea14623024c752bae9df8f38ddafb30601caa6d1f1fe7fd85c624a4e3883a201f8bb5894c472d88f5b2aa6f0b17a232c79f4ec6ba9b2dca154703b6bc211775b763a11fc70d8f6e3ce159b873a2b70c38f285fdf80459dcfb8b1bf025f7bbf87e35a20c7cdab5c72761ec4374782ee5796644f9c0394dcafad9a35927705fa6630629d1c7f0fad65ec1080547c13c29190ce8e82335f76e0b07521840c761f4e9b797ff096ed78140f6b779fee366c07c90a44d805c21396840a30dd0f3b75792596929b949626d05700d805b52d1b87a5340869b9a059560b41ff68e8c9fea92c2f354169b1783ca4cfdc3856ddf193c07f81b8954090bc2a6dd2f6b45c87ef90a99ac13ae78e05915af7b29b7c50702ac9b06fac9df9c95c35f33fd0fd1c5383f61d5b27b8b114b9560b4f887a8577f5ed86ecaf91fccb9da5a0f1c581b0eb79d43b5b97b1311ad657917e5029fadafb30db366b7f93a112f3ab084de022576de65dc2798cc90c37cd43a31467282278cec6eea2d2e1b43d32eacd67be912f49f9e7a569054fa42aa32f6fde367c3e8ffe85f860286a753bb57ffc1c9eee80a2be93d4c92ec8a04af55083231660360a55b08b41449078821ac7c89fd86a902118e5b8408cec863b5caeac18558aa42b91569f53b450fe51573afe7c71161285d2e017a51e9bc9e6173aa5fa099236c41463ad9ef5b0c810fcdb4dbe5533fa1a14b43187bda6f4e92394700ef7f99716c172347fbc21a93969b096c567cf3742bb13584eed32c431e66685a4c4594bdab4a628626e27c9b693ed97bceff05207d90c7957b1e30830e1ac74821b25a76ae4bf3c3d0bfbc5657ac5e4737ceb6e1f11cab9efb1fba709ee723090ad690986a9930512dfda8614f5eabe2ac545a1c843367296b153c67519ddacbf18141acb9f4331f250f5888e736454cded15333bdea804a5342ee11c6e9274e9fbfc6392dfc5cb7ff57214997e726184f07b46940fd292ea94162468cab1fc0dd3294b6df5966985ba6aa5c6a8ff8503502ff5dbf9d19958651a7a3528786f26f2e238e049175e43cc96239442aeb7ef276fb3d4c20bdbc7d274a69143f9d1e1326433c48e6ef50a3b549d23827ab100f7540887a92903286391e06e33e68464c87bfbd585b2f8110b0ca7b845e379539299b4ff8b64a64338d5357019d4d8a66e059b7e9d48d8842bf6deff8c11c00f7b3d0bf54fd3ff329b48b8d63a1fcb1d7087aec4d15eaa91bdb4933bfbacf7c179c1f1b79eddddd6ea1c6e66194304737a516ff9e5b435284118782e170d988ae68fac4ff8d633a269be70aecab149b221b01d6c636905b576dd88a336e4ce102ac2b30b800f97fcb8f9fde4ae9a6b7096494c5fafa8a8fa46487229874a00f1e25e54b077cecfc4a91e12250e80d5b96a22c93771a41d9bfe6e77337f82dcb6d432dcecd5debdab478e819856d8e5ebe022dc13da02744e068612cb7b8e23e0cd9b538053bcdec6594bd03d9354caa4cb8d6788943d7e94706db13bd1dda33472ed9a45ce2146c83f7f3c8aed658f68f665d408ac484fafea9ec1f364a8853f26e1e2307e04754886d5f52b3fa99d62a09b4080a95628864184f04ea87ddb7507d12c557587f12032d1212ed242caae68cd0ec5254a88c5b18ac8c47421b484d67fd34493f5377847eead1b1bfa2863417ad1fb0afa21bba41e0da755f7d00c8e6352d7bc9a3279daf5bda90840d563c80ac7dd42a7869bbd04ed68388503b284f4498286a59a19bf13d258b320f63e94cba2ecd8c5d58e206306ff5a1fc3f3274abc0d97f9d9cc5a1826ef0778bfb0d6ef51c557957cba4d1b2db3de8aca8a6e8497cb81ef499d287f45c50b02bcb4c3d07664276b5ff36618df551ad87cf745f45faea4eb8761d7184910f8018c111cfce58946135dda7f10873c8509049da7ca31790c96960a03149e25e9015e7002b5cabac0262db68f7322f5182b5f81033039ba030ced1f735f548dca77afede2cc470db5fad6f5ce39b9b04a9e51e286ba6b13570ccb678efc927feb4fd7f5988855ddac153c3097c61c2e64f96c3aeeb36a61bab85b623a408b34533a5b040a2682bf7e170125b3631b32fcbdf96f7d75214b06755ed4054600cb275ff75ad338e36397f05d9cf16556c0f42b1a2c79f9687c07fc7af95e671ab49462bcb8baf33de83ad31acb65eb63ee63a01467cb2d23c1e6b32e0e74ea0a335571b771f901c4616ffe3eaa94f67f01163599c5dcec833a5015e8d4cb63df6be2b62196b6426614943a90d1854c193d526df3ce4a48b07c85b029c395e88473b10638181c361b8ee85d0b0df3f2dee04e6df80fa8a100cbb3841c3d3522ae5991eeb06b8a278ad2598b72e4870ab83d9a42f7f39e4ee0e866da72477464e5c59368506ff79322f6614765733c8513c4057d3b7dd49cbd1368fb71497eafabb1037932ad526c48a24989ebe621f0d9584b9b9383648f9cf57a33d66263c87a1e056ede619c659dae471732ba1b407d5eab00f5af03d953da9aa4f4cbcea72889c7699ba8c35a9925b4453c56f27fa6ba617ef9e6cf92b315c63491261cefeb52a383f954a80ba661665fdb13656e08b1893bb8a2727ac3d0ebdd405b00b9610532abf644facc18f7e58427b9f7edf55c423be926e2b343072ca5a6c920ebf26c4495655ee5c7e6c109969cdf298704d8e2e8e8293cad7499eed882493120dc063b246433567f5387d544439150bfeada7499d65ce511f9199284b1fb8ac363102deb36279384c449d5c7f05d148b152c6179dcd1d329deb9147aeb193bec032bc76f37a49efa043c7ee5dbbe62df7b08c2789bb329686697bbbfb7ffc23a0dff220c1e86cb556d43578d3ffddc2712141168e3229e06b6c41ca3de439201e91c4add35cc960c5d0d8ad67c4f0812cec38f8462511416e59ed1a37b566852099412ffa069617512faddc9ade962c06e6169d086669573b1f7f5297c7bc7f3b33b063ccfa59a34abb435cb47963f6b474e26d67def97290bab63d13af153ea7b8fc1f4707e24c1ee160beb469ac54d42b53a5f5bcb91616521c4c0876c2d0bcb5930c24ce67fe55c3ac59f4d16783d4134e707b30fce6bf005527d13f83f6216675ce6fceeb7fdc420847cc4222c1a533b257367bb9e6d9e3a7e3737b0d1f8bed5861086dd53db7174efa301e788ae2edaddb40adeb95409522b8fabb9ce1893f229254e0f61bba0901544f4c83123a60b74ac9656428a5e0f094ed05980f0d92c513ebacbf7db726ff2a3bc90105d8303f8ce9d7b54ca51ca78471105edfece868d8ca4b52f279c16a89d6bcef03b523531a484f1d9ca8d4682c3d8a040d7d266f5b339b68e7a59bcbe71656aa1ef6640d614b0190dac4715d40e35d0e5cc16044901d398f63b7c490af0c8dc1eaf97663ebe12eafec00511382707a0acd70bc94db3b25a75c11d016946153c713430f6bbcee103efd3ec7fc85cee4837f1893260299775d57c75296353eddd32630653256fa24230427975ad1eb43c8d8ab6d6c9d4017aff34ba8e2d785cd58521e2054b9dfbbecf28a7ff0af59b693781287e2115159d59c748ef702f4d2e53ad24893867bcb5c594124337934b206f8ee1fa5432747c4495e5b627d06f6b66d9a29d53136c161febf68008f62ace3e28594e3a31c94de4de514a1c906a30aa042549c0dc53901292bec33a8e2d9fad35faa1614875641be91ee79404ac401c2ecbd7525ac4d0cc8b38343f36e30d01b525978599e72216e681a28d66e25fa03b3e238384cf0687e95547ab5436ddcd4d3c94ff465316f6336b52c7629fec80331ca0ca1bbb0a00027d065b60cb2feeb9876a02d52232ebbac9477e783374d0dfc6ee185e4a833bb51872cf61725ccb387533dd2810561bc197937229410ab3c43c8c915bc5df04f8da0e874a7aa48fcda3de363e1a33980b067e6d0e774ebea474ca98ff817e044f8582a37064f4b8786a27f119a4ea036ba024a958dc64a922b7281ca3dca50a5afc180736477400cb9796450a8533d8563d419788240f224eeeb1c822aae087636f4eabd39d8efe6de0636d966ebba6cb7b368acf2b4d4693424b9ce083bc04c110346b1da7701f30f97cfb25a09a367b4a9a5c288ef438874acbfc56af5885fbf1c073ef6882dc9f0360608258a7c91e5584374ee0749775885f53ba2984635f1a46d42243678c41f550287ed6a6ebb50329a877548e969a6f4ca16cb7a5a505067b99895fb68494a990d90cd788cc6ea11cb98a4842de8ea4ab7e7ebbd8d8e84e834eda2e28225c4dc80b0b0558c65e1c956fc765ee3bc6bf27938662d0445ee33d6b6344026ac2b74e933551cc9c93e936f51434f1748a4781486f86ef626f0aaeecc0195b43e03fb37f88ad313aa7541ba1bbfbf030ed5d9e49f53376136062f1e067918a661319c44a7ce41ac5a0c3dd33c2aa1666a7760abfe83fdec557285ea10cb3e69f1851e11b4af91b7547036192a1bd2456b13072a59ef82b640e3417d48dcd57152c2cf7d7c349520d9b85dd400e470568d4d76d150de6a30c4e80896507ba9b7261508cb42b60ca7e363675546b4e46d23b3cf8368ff8d7b2437ac781467e1a7bcb3995aa27649c4ee0592e4d1890b741b61bec52b4f8c2cede4ad5d1283ff8c04cc145c8f1dc88b83a15a880ba27970dd6bd4be63aebf41f37a22e8558c11d727cac96b04ccf8fa7d96fb8e8d91a3a2ca956e76dc9729c3e5abad511e8628e08d14ad9c5ddd57325b94c573539f7f5e5d1aede9309f805e258189bed9c3fc07fe6706a0a8d659e1d5ca70f9ae3ce01ef423a44df634e5e7102441c9fdc50fc8d25b63730977a17794f2391c13adbb624cd10f85a59bfe86dc6bb9de7122e8343d2baa6cf5d34bd675f86eb940bde599864754e506de994ef8d238ac471720be240a6adf0903dd417b22c40e0987d4728b4f2151a87a78529e675b99ca1e169f7aa92f6ea31258c5beb8694b503de5d302710de9db1284ccbf28fd436967915f2f49db9ae8f13c40d4cdd0fdd293f4ad6d0d9fd61f3d8fa891a5763ad1cd833bec71213c7a8fd0ce63b677778143a66bd44f4689d5becd561ad12c780fe2ad1c05dd58f4784280f5674e1130c39d5415bbcc53b92d2e153d79e19b6be52c0d07237d2f2c40bdf3ba0a1ea2f0ba8bfb6510e61edf3e2133a65e3d4098dd1f5ffb2c33bc10ff9918483d9006fc788d12b17c3a08e4888715e03a748711c9b7737239926d1d3ee4a051b5e3f25a7c8eb77fb5fbbf97aff6eec4c084fca57b92e8ace4895c793f487c34e7fbedd18df7b7553533a725fdd17245804d1189f1b831e92cb8076ef08c738e233e359bc452c9cecce30412bf9c9982aad5eb532785bc387daaf82e1c44903f3d3acc8076ec2e2af85c2c85c61cfdfefb7ca4feddbcd5cc3053fab785e9d6315a6d15418302f0dfdc7d430f62ad6752838c39c7ef581029a44f0cf1073eaf9c0f498921f536c3a4641fe465011dc7d52fa1031c90c5e89bab8d7eca5cf87855c1a17dd01d6441ed1a73103802f02e60d77efb95ad0e7aaf95cb09e538ce41ae224bcb323d3fdd25b88eee1fe565da693f2daafb528edb744ce567a0eebd5d7f727e13570f6b39d1bfb20480e1f363829b4b5a44bb12002cbb3f16ffffee9ed272b93e422aadf87f8df8dcf43d7df2bfeeeaf9098c8bfd3d58de457599675e5c181cdea42415b4537c43ee5d809ff17f07c6944509d20372a7aff6d67dcde0fab87be4084e8eb5b3435ae17e16a48029e93e64e14c9ff38a6e71972b28d2ccdc5294a87a3f1d354f97ec2fddcbddfed5621427c8ecb5cdc4a01f4e13f064aee0913d88b5f627b64f25169c413e26a0244e56b3a294e2b10fe561843cb8583bee62eccbc34fffd7be0c8ecf750d724794569edcd7374d26e0aab20f6e8ffcab45541393ce83f57b8dd7baee3b07b35efd60e76f7080b14b8f06853bf1b8a221fb43a35e3832708ccf7fd4e0e5edda9c6b907eabcf8a795db3ef5d9efda9dd843f4e09eb9cdf59e372faf66bc9b3b1a70a28c718af408216280b90f4f7c852ba52405c7c4f84291007f800e29c4835ad616c2182962152fcfd82cba3bca753f4177aa78bfeff0ce6c9ca650879e6146296d3d2497b7529ee6eae1d6cb008892e1b1d2069b8a56bd286ee5d633998fadd5ea748cfe749fe3bc835096edb6a99d7abf5afd5f0c57c5c02d3a236dec58130982b23821988b1b834aa25ca238ae2123a0ebbb517f069b9519ad1ccc1996066e1ff1e404333b68f5b77f8f5432d4e6f8977e668c3f791eb953872408149c1ea7e1f5d340a29f53b579f49f217175c36417a58a0c38605a13c09ff6e70e8be2066a1ccef07873634184b88de6fe15369f9effb75064dac1b1c15654418c271884b0b32d1f37c5fab03ab4be484789026cbec27748101d9e6c7f2d21f5cf7ec3adca49608c984bc65b12debf4487ec71a819c5297dbecd05281ea24fab80352412a9a728b38c278e03f05eedc4523501f349943ff01106e6392bc5c331a6aee4e366e962ad8df26ed20e27ff6a748a06272b47d38108b577a88d4a73bd5b357a92886e5a0c0a938ac8b9552a0e1f85cf6e87608bfc084e7f5b05052653a1b12e4464159ea7ba1bfeb4c1bc3a7b0debb40d5718f4a2150e90cb1e89b5608822e4f9555f4960ea1ec20cfbc93f93ffd2e03e192be4aeeb860e01c62d6757531df36b0f9fba7e2a4b7affd15e9a93d49fc7b25b5167d5db4812aa9d918b2006c935105d8c3b4a2c04264da2028d6b3c3acfdca39f39c76cde108d7f81d4d59801d62169d514550279f48e4c2dd9a21ea2abefbe5c5d6c9e84caafc175e85e53d46f54e20efbcb35ba2f77f47e7b3e813fccc26602e3a29228504d13a8eaa7bbac868f20801944c45b9e292f3371f2fe472dd9a4c208d551a7fcda4db6c4d488e8f5e1a6f49e9f1a904ce0fc8d68547a8fb60f8fe9e91c724ab5615c41d2a17ce62e2e8144d31788e91a14f21bf0d547ea06cb11fc854cf531191865f8a9e18c8b94b43f181b451b9a8704bc94c441d907288b505eb9be486144505d356dde0e83016612bcbfbd39aadc6ffe21602db0e1ae4219760390c278547218db4381e285372fba018b3ba2a6c5178dd98d6365c67ab5151299baee3f6f1ae41dad840fd56db4894a80a6bad9b869579fe8e3a2ad0610fbd4820c11a5b5adb799a89074b25d8982343b031b80fc36f87223fa43434de55fb049c128f51ccf9f69a0b5f87e03fc497d14dafd9026c9f1969122cc85a597a8170b0eb4ad08ac20c1465a73f09bb48e2f810b26bb15e80bbbd673b5ed508ba37e3d1c4bbc4479253ec1647fad2f35eedff3a7a26eace1450f53156d21aa6a96eed19582b92233c4d2d51582f5833665486f9577e2f75e4f727c3b7070aeb8a73625d27b43aa2f192e634915753a2afbfc1e8a7730332955d10cdd536484c7fd828cfbe4dee55ae44813adb75d33e3b52dfa87f5aa4be3211b85f415a7028114e12d57d020f2b77bbe3f76cb33bbb979ed2646556ea5d4c0451604f252fa38f70746cf94432c0d85418edc6bebccdae04d177189469ac113f7d53959547826169755f85f0e1809743287f44b028c855b67218a43eb9dfb02ca7b30a78374cf7b1009fe14abc5f3d2bd290f058fa29f55da800320801840ea09f529422239ca6db2ed447bee357406cc8e0487759d63b88f2c618f3bcfd4847e87ef5728e8362506f394276332b808ebeab1c2628d878ded8f6162f4b7dcc5471dab24166b7c0b98c53432747f26ad1cae58232a1e2366099b6ec8f830a3655514cd2fd4aa3752a3e8207fb6dfb14077762851923a61dc1928e081793d7ec3b5948432035dbfee8d91fd1fce6f27f54e41e92e8206a54059428b734faada8bc10c1bb2e0c9dce61a15a6f80cdda4e4df2d1a12388420d03d2f9e4f5e0999d4e6696613e00aadcac168d6f3320d3af151902ab29254b1a88938154698f334de79536fcebd661feb495642bc08b25b44678d2db5da962b56f8ec253d9fa5c2420c45b534eb51542c32c9da21c4695ca9b5b415439e3076838167e9063ab790861024b15eff8c9cf3eb6a40df474b2a0c5b26a873f96cb4610e14042e4a66ea39071c45781fc2b9e001f9ed8d656c46f8a99a5e747e09e84d06e49827eccf76d9141c498272459c96549290a633157bb4b5da9fc825ee663e3a6a70dd44e3127df767d9eb504fec2c7aba7f2c21c01b9ee1839603612ac5fc82f0a9db3aa01e61c8e128b7ca42ae9ba7eac5011b6c21fc5187bc9943c252c4869a71ee4f2243547631c1279ed67ce72e3611258004e7c38dfa0cc5e291a01697442a5549de764e4e692ba32eabdbb47a7421b8e3a7c65b6b5d610afbd83508e738c789ce47f101706a560da1517bff195a2319d55dc5cd274376c4ac4292bc515585b767df2bcd904cb70dd31876f23e8eb0c547f93da667b737872adbd6b1b75e82ee07a0ff16baa0b59161fbc4c695205a2b3e0af221c88134e1e4b51eda352e87a6486d54f3e74e93b350a8a74470a9752c68359c52619832d2d4dd9ff6a56079bfca25ec2c9dbbe5350af4d3050772475bdc9a3a204fa7cd82f845897c48140d2d145cad6a50debcf14e38597e7f9379306ee19f8d5fada317c504dc3f67b965eceac780b797ffd37693e0a88888814db6c88b97736e56ad8d7bcbdd86577943c8e7d1e480adcca3bdb72b232b59c54f4df2fb31acb9432eaa60d8f7f29492b9a0d4596581058b8d03b25a9d6cf0ab101cb491ba0366b149d6c329f226d6c0df48badd5c2e93495a454f3f7cb3fe7d4565cefe431a0dc7598fc195eed553d1bac9f69e917caf311382cb84d88909d5845abb05b230738719c98188201f038a53b94e97887db2ce663261e2fb2e1a79bc79a0c8f4ca0a17928f204be3533abecb4666f5b1603b555081bd503d117f0afd792c28d981885051a55070397d9b31e8ef90fec64fd79db9b20f55515b3fd3cd0170568b05ee4196ad01af5fb4aa3dfe974237ac6252d08712853914c53c99a6dde86610af6786f896ac7a5df7675425f5cf3c16613009f8c1bac34176ae9d82687dbb7af7f5e202480b469a605f807459ca3c5f3ffc8de7c46abbf76c307405259dde9b13678fab8e28b111cdf819a27e6619ea974474d9511bd36bacdc878eb59c04cfb31d25d4848d5db4135474be86116e9246a1e52f7df9f61a6cd856af76e1cbfd3b0ff153b39d7646298ad10ec335e47fe90e9b2cb770b82ee871f22b8c924ba5c3008aa46b681d4f8d03a3f8c1df6a04153f51f61ae6ba60db7d7cc618b32368cc47f88dcae6ba4544b44556f604f54661ed063867522e604794392ad6f45359d071e1ac8bed0095264318c3b300e7a2f47f410650f82bbab01dba0792d8fe51708869f0569142c7e9034e023b8c037109ad4704ea0c248331945ab91ccb5679a19fe696af6ad0dd1b97a0a3e0e2ee9ecfef1e92dd9df4214092f7fc10c1b3d5be342ed1a186e79260205259aac9137c83953ea958a3a754b95bf4fb081aa8f4d06e2806312f7ea206d190040359d7beef10c8d7619b656c34288fd1</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-shrink">
      <input class="hbe hbe-input-field hbe-input-field-shrink" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-shrink" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-shrink">密码:东南西的国籍,三个大写字母.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/blog/lib/hbe.js"></script><link href="/blog/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>数学笔记</category>
      </categories>
      <tags>
        <tag>以头抢地(诚)</tag>
        <tag>data</tag>
      </tags>
  </entry>
  <entry>
    <title>记梦</title>
    <url>/blog/2021/09/23/P212/</url>
    <content><![CDATA[<img src="/blog/2021/09/23/P212/P212.png" class="">
<span id="more"></span>
<br>

<h1 id="梦"><a href="#梦" class="headerlink" title="梦"></a>梦</h1><p>昨晚梦到参加比赛.<br>每人有一群平行世界的自己作为一支队伍来参赛.<br>比赛积分制,完成大大小小任务,按速度积分,中途遇到其他队伍总会发展成生死打架.</p>
<p>努力过了却一直都通不了关,没有拼劲就和平行世界中的自己聊了起来.<br>很多的我看上去跟自己差不多的.<br>除了有从1957年来的自己,还有性转的自己负责开车,说着开车真的快乐.<br>我问听他们关于自己的想法.大多的梦想是稍微瘦一点,再遇到些开心的事情就更好了.<br>我觉得挺好,没有因什么奇怪事件而苦恼,但感觉还缺了点什么.</p>
<p>有个自己也有相同的想法,对我说:<br>“我心中一直有很重要的一件事.”<br>嗯我也是.<br>“但我很害怕跟你对答案!”<br>…我也是.<br>“那就是画画!”<br>……我是搞oc.<br>这时1957年的我说话了.<br>我也画画,不过画过的东西在动荡中都没了,哈哈.<br>“(实不实现这种东西)大不了的啦.”<br>我和画画的我感受到了人生前辈粗暴的关怀.</p>
<br>
<br>

<h1 id="青春疼痛悖论-续"><a href="#青春疼痛悖论-续" class="headerlink" title="青春疼痛悖论(续)"></a>青春疼痛悖论(续)</h1><p>之前有提过我自认为的:<a href="https://mazui3.com/blog/2021/07/02/P159/">认知是单向前进的</a>,这件事情.<br>如果说具体一些的体验.<br>国内的教育氛围是将学生向前推,逼迫到自己的极限.成绩的排名以及经常的模考是以“身经百战”为目的来强化学生的能力和心灵.<br>而加国的教育氛围是宽容和允许失败.创造最包容的环境,英语不为母语的学生,有阅读困难的学生等会提供双倍考试时间.拖欠作业也是可能获得商谈的机会.<br>这个大体印象指的是大学以前的印象.<br>国内的大学我无法得知,我的大学是学术严肃性,所以也靠向国内死线是死线,结果是结果的严谨氛围.<br>偶尔会想,哪种氛围是正确的?或者…那种氛围是更实用的?</p>
<p>最近听人生前辈讲伴随着疼痛的职场经验,又思考起这个问题.</p>
<p>我们的社会会对弱者给予帮助,我一直认为是理所当然的事情.<br>我把它理解成一种“社会契约”.<br>作为同类,如果自己”抽中了那张卡”(是弱者),自己也希望能得到帮助.<br>那是从”社会”的角度出发.<br>如果从自己的角度呢?</p>
<p>想自己把一件事做出来,一个很好的办法是去学它.让自己拥有那个能力,成长成”可以做到”的人.<br>那么,那个”做不到”的自己,就那里都不存在了.<br>消失的不是做不到的<strong>自己</strong>,而是<strong>做不到</strong>本身.</p>
<p>如果这样想,那么避不开的青春疼痛也可以看淡.</p>
<p>我不认为这个解与社会契约矛盾,无论是外因还是内因,并不是所有人都能成为”做得到”.<br>但青春疼痛悖论可能是成长其本身的一部分…</p>
]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>生存游戏</title>
    <url>/blog/2017/01/18/P00B/</url>
    <content><![CDATA[<blockquote>
<p>我得到了树哥原创文的转载许可,诚邀大家来欣赏树哥的男人爱情(ぴえん).</p>
</blockquote>
<span id="more"></span>

<h2 id="01"><a href="#01" class="headerlink" title="01"></a>01</h2><p>我也不是很懂，为什么就到了眼前的状况。<br>不着痕迹地瞥了一眼远处的山尖和旁边的男人，不禁咬牙：到底谁是医生谁是病人啊？<br>他似乎发现了什么，拍了拍我的肩膀道：“私奔就是要找一片偏僻的森林，要是有信号还谈狗屁恋爱？”<br>就是谈狗屁恋爱，我在心里想到。<br>等到我们终于找到一家可以歇歇的小卖部时，我的头发已经湿透贴在了额头上。那个男人屁颠颠地要了两只小竹凳，说要缓一缓。<br>我坐了下来，可是我的汗却没有缓一缓，我看到我的衣服上都印出了形状可笑的汗渍，但是却一点擦的意愿也没有，毕竟没有人会用纸擦开着的水龙头的吧，我想。<br>不过看到男人明显更糟糕，我的内心有了一点安慰。<br>无处安放的大长腿让他根本没法安稳地坐在小竹椅上，一定要形容的话……是臀部蜻蜓点水地支撑在椅子上。他微低着头，眼镜也在鼻梁上滑落到了有点滑稽的位置，可我却突然觉得好像是他有如实质的目光把眼镜推了下去，这眼神实在是……<br>情深款款。<br>我立马被自己脑袋里突然想到的形容词恶心到了。何况，他并不是在看我。<br>真是令人丧气。<br>“喂。”他用手肘碰了碰我：“吃冷饮吗？”<br>“给我叼回来一根。”我烦躁地把他推开，他却笑了笑，又凑了过来，单手把我的椅子带着人都转了半圈，朝向了门口，另一只手蒙上了我的眼睛，一瞬间的黑暗让我觉得我只剩下一只耳朵，被他凑近了呼气的耳朵：<br>“你猜我会买什么？”<br>于是我背对着他自顾自得思考了起来。如果他在这种穷山僻壤给我买可爱多的话，那一定会被狠狠地斩一刀，败家透顶，不知道他的消费观是不是这么奢靡。或者他可能给我买我爸最喜欢的绿色心情，那他内心一定苍老又无趣，虽然他的玩笑的确都又老又冷，但我打心眼里希望他还没有到我家老头的程度。又或者他可能给我买5毛一根的冰工厂，那么他对我真是比冰水还冷淡。<br>想了半天才发觉我对他的了解真是少的可怜。但是有什么关系呢，爱情就像一颗巧克力，脑子里浮现了万万没想到里的印度舞。<br>恩，不如就买1块5一块的光明香草味冰砖吧。我开始自作主张地打算起来。<br>这样的话这个男人就经济又适用，没有奇怪的幻想又不是老气横秋，而且还知道投我所好来制造一点浪漫……<br>要是他真的能给我带一块冰砖我就娶他，草莓味也可以，我大发慈悲地想。<br>“回神了，”他把一块冰棍贴我脸上，真是比雨水还要冰。我手忙脚乱地拿下来一看，是一块大布丁。<br>我看着他，突然笑了起来。<br>不让我娶我就嫁。<br>他正用嘴撕开包装，呸得一声偏头吐出了一角。</p>
<br>
<br>

<h2 id="02"><a href="#02" class="headerlink" title="02"></a>02</h2><p>我第一次见到他是我被送进这所疗养院的第二天，他走过来时穿着笔挺的白大褂，身后还跟着几个看我不顺眼的小护士，一切都彰显着他就是一名医生。可是我却觉得他浑身上下只有那副人模狗样的眼镜有点医生样子，其余都散发着不合时宜的荷尔蒙气息。<br>他朝我走来，动作不快。<br>不止不快，我觉得慢的可以唱一支歌。<br>坐定后他笑道：“知道自己得了什么病吗？”<br>唉，又来了。护士逼问不出结果就换医生。但是我依旧坚信自己的判断，于是我老实回答道：“不知道，医生。我觉得我精神完全正常，我想我一定是惹了不能惹的人，他才把我送过来悄无声息的死掉，比如说我的后妈不想让我拥有财产继承权。”期间我瞄了一眼他的胸牌，陈彬，真是普通的名字。<br>旁边的护士一副要跳起来的样子，陈医生笑了一下，也不知道是在安抚谁：“要是自省程度高到可以反思自己的病，也就不至于入院了。你们去看看3号房吧。”<br>自省？反思？这都是什么狗屁用词？我真是讨厌这群早就认定了别人的有病的自大医生。<br>“你还记得自己的名字吗？”<br>“有必要吗，不是有代号了？”我冷冷的指了指病号服胸口，上面印着171.说起代号我心里真是更不爽了，分明已经不把我当人看了。<br>“恩，也是。”医生低低的笑道，用手指划过了胸口的数字，而且很不凑巧地碰到了我的……咳咳。<br>我在内心祈祷这个看起来就很变态的医生不是故意的。<br>不知什么时候他已经凑得很近了，好像在研究那串蓝色数字一样，他若有所思道：“你不觉得奇怪吗？这个疗养院，哪里能容下171个病人？”<br>我心下一惊，然后带着寒意回想医院大体的结构。的确，我记得这个这里根本就只有一层，而且没有几个房间，可能100个人都很难容下。难道人会消失吗？<br>“我知道你们医院，肯定把4啊14啊这种不吉利的数字都跳开了。”我故作镇定的说，但搞不好我的表情已经是快哭出来了<br>“真是可爱啊，青少年。”他懒散地向后靠在了椅背上，和语义截然相反的语气让我觉得自己听到的是：“真是无趣啊，连吃屎都不会的狗。”<br>“我想可能是他们不需要医院，那么医院也就不再需要他们。”他依旧靠在椅背上，目光却透过镜片执着地射向了我。感到寒意的同时，我觉得那副眼镜迟早要被他的目光穿射得粉身碎骨。<br>我想我需要医院。</p>
<p>趁着没有什么人在我的房间，我溜达出了房间。<br>其实我也不知道现在的行为应该怎么定义，护士医生都没有明确的对我禁足，但要是从一个正常人的角度思考的话，没有人会希望一个神经病四处溜达。带着微妙矛盾的心理，我蹑手蹑脚地走在长廊上。<br>前面房间传来的骚乱声音让我忍不住伸头偷看，原来是陈医生和别的几个护士在五花大绑一个瞎扑腾的病人。他们用的麻绳是我中学里拔河才用的粗细，用来捆一头野猪也不过分，而且陈医生的手法行云流水却粗暴，末了还在病人的肚脐上打了一个很恶趣味的蝴蝶结。<br>这一切都让我觉得不寒而栗。<br>我以前就在《香椿街的故事》里读过保生为病人打各种花式的结，至少还会考虑到舒适程度创造平安结，现在这个变态的陈医生用捆猪的麻绳打了一个蝴蝶结，这群白衣天使的素质甚至不如杀人犯。<br>猝不及防地，陈医生转过了头。过分的惊讶带来的迟钝让我没来得及移开视线，或者说，像是被深深吸引了一样转不开视线。<br>他朝我走来。我从来没有在他走向我的时候，感受到治愈系清风或者圣光之类白衣天使特有的加成，反而我觉得像是车祸现场，我想任何一个曾经或差点被车撞过的人都知道这种感觉：<br>雷霆万钧。你清楚的感到了危险，你内心只有跑这一个想法，可是你就是什么都做不了，甚至只好死死地看着它驶来，然后身与心都高高的抛到了天上，又重重的摔下来，嘭的一声。<br>“不用那么怕，我不会这样绑你的。”他微微弯下腰，手摸上了我的脸，色情地摩挲，我顿觉毒蛇爬上了脸颊。<br>“这么白的皮肤，我肯定会用红色的绸带，这样才越发衬的你像白雪公主一样粉嫩可爱，”他自顾自地摆出了沉醉的表情：“我也不会用蝴蝶结这种恶俗的装饰，肯定是要为你打满玫瑰结的，看着就像白雪公主在玫瑰里沉睡一样。”<br>我忍无可忍地拍掉了他的手，他却低笑了起来：“怎么突然不开心了，小公主？”我张了张口又觉得跟这个人没有道理可说，还是远离最安全，便咬牙切道：“滚！”<br>说完我自己立马滚出了他的视线。<br>我一直跑到了院子里的树下，阳光照到了身上，才觉得回过了神来。我靠着树滑坐在了地上，背上感觉到了粗糙的树皮摩擦皮肤的痛感，才觉得自己火辣辣地存在着。<br>从住院开始，人生就变得像情节曲折离奇的童话一样，不过很可惜是黑童话。积攒许久的不安与惶恐终于爆发，我抱着唯一可以拥抱的树枝哭了起来，可是即便如此我也不敢放声，怕引来医生和护士把我绑回床。<br>牛饮和嚎啕大哭都是粗人才干的事。我隐蔽的，涓涓细流地哭一样可以哭倒这座疗养院的，我安慰自己道。<br>就是这种持久战术让我昏睡在树旁而了不自知，等我醒来的时候已经是傍晚了，斜斜的余晖铺在草，树和风上，意料之外地柔和。不过一样东西立马吸引了我的注意力——一条绑在树干上的红绸带，玫瑰结。<br>真是……树犹如此。</p>
<br>
<br>

<h2 id="03"><a href="#03" class="headerlink" title="03"></a>03</h2><p>原本绮丽绚烂的景色突然就恶毒了起来，我迅速地起身却悲哀地发现右脚麻了，如果我执意往前走的话，一定会像一头被麻醉了的猛犸象一样无奈倒地。<br>“身体怎么了吗？”<br>我抬头一看，是一个有着清越嗓音的年轻医生。可能是年龄相近带来了亲切感，我摇摇头玩笑道：“我在练习爬回床上。”<br>年轻医生朗笑一声，一矮身居然就用非常奇怪的姿势把我抱了起来。对……我知道这叫什么抱，但是今天谁都不要跟我提，我过敏了！<br>“真怕你爬错床。”年轻医生边往回走边解释道。<br>我郁闷地心想要爬也不爬你的，我肯定是要爬陈……打住！我在干嘛？我难道是在肖想那个变态医生吗？<br>我心虚地往年轻医生怀里缩了缩，希望可以借他的护体正气屏蔽掉陈医师。他却风光霁月地笑了笑，柔声道：“累了就休息会吧。”<br>唉，这么温柔，我都不好意思承认我就是休息到脚麻了的。<br>接着的路上年轻医生都很安静，不过也并不觉得沉闷，相反还有种他正小心翼翼地走着，被珍惜着的感觉。<br>末了他把我放到床上，突然道：“你果然跟他说的一样迷人。”<br>我老脸一红，磕磕巴巴地道了声谢谢，又马屁道：“你比他更迷人。”<br>“看在你这么可爱的份上，我也想重申一下。即便你掌握的都是正确的线索，游戏开始了还是要遵循规则，”他偏头想了下：“就像即便你真的是白雪公主，也要有命活到王子来接你，不是吗？”<br>你一点都不迷人，你还是滚吧。<br>我负气地用被子蒙住了头，今天为什么所用人都要用这个烂比喻？<br>晚饭过后我迎来了陈医生，他开口就问道：“喜欢我送你的小礼物吗？”<br>我面无表情。<br>“难道不喜欢吗？”他假意惊讶道：“你真奇特，明明所有的病人都很喜欢，比如你隔壁总说自己是一朵蓝莲花的老林，或者是神神道道白日做梦的小徐。”<br>“还有别的病人喜欢吗？”我问<br>“别的病人你不会喜欢的。他别有深意道。”<br>“既然小徐喜欢的话，”我了然一笑：“那我也喜欢。</p>
<br>
<br>

<h2 id="04"><a href="#04" class="headerlink" title="04"></a>04</h2><p>我开始着力编织病状和奇怪的梦境，可是我并不清楚精神病到底应该是如何的表现，只好东拼西凑一些梦境，并且强调那是我睁着眼睛看到的。时间一久自己也会怀疑，觉得内心至少有过这样的想法，不然为什么医生一问就脱口而出了呢？<br>“昨天睡得怎么样？”清晨护士们和陈医生照例会来关心一下我的病情。<br>我装作惊恐道：“你刚刚不是才来过吗？你还想杀了我！”<br>护士不自在地笑了一下：“那一定是你可怜的梦境，我怎么可能杀你呢？”<br>“你当然杀不了我，”我举起手比了一个手枪的姿势，对准了护士的头：“因为我一枪把你的头打了下来。”<br>护士咬牙切齿道：“所以是你杀了我？”<br>“有什么关系呢，”我耸了耸肩，指了指她的手臂：“反正你又立马把你的头夹在咯吱窝下去查下一间房了。”<br>“我的确应该去下一间病房了。”她面色铁青地走了出去。<br>漂亮的胜利，我得意洋洋的想。<br>那个装模作样的陈医生倒是留了下来，坐在床边的椅子上看我。我一想到他刚刚可能也一直在看着我，就觉得他的眼睛是两个浓稠的黑洞，里面腥臭的黑浆顺着脸颊流到了我的床上。<br>“我想你应该也喜欢打游戏吧，那你应该挺清楚的，要是NPC的好感太低可是要死人的。”<br>“不好意思，我从不打这种变态的美少女游戏。”<br>“恩？那医院生存游戏呢？”他的手又伸到了我胸前的号码上，好像一言不合就要开摸。<br>我不自在的向后躲了一躲。虽然作为一个男人也没什么，但是不躲的话那个变态搞不好会认为我还挺享受的。<br>“唉，还真冷淡。不是都已经听从我的忠告挺过第一关了吗？”这次他的手准确的抚上了我的乳尖，顺着胸前的号码轻轻的按压。<br>惊奇，恶心，怪异。<br>然后我悲哀地想到，这些可能都是快感的来源。<br>“那你摸个够吧，按照你们对我的好感度我可能马上就要死了。”我恶狠狠道。<br>“脾气真坏。”他依旧没有收回手：“说不定你给我想个甜蜜的昵称，再好声好气地叫出来我就会很喜欢你啊。”<br>“甜蜜的昵称？！”我真是不敢想象怎么会有医生说这种不知羞耻的话。<br>“对啊，老是陈医生陈医生的，我也觉得挺无趣的。”他眯了眯眼。我猜他在回忆我有没有叫过他陈医生。<br>“想好了吗？”<br>“想好了，就甜蜜地叫你变态好了。”<br>“完全不觉得很甜蜜。”<br>“这样你现在和未来对我做的变态事情就都被认可了，不够甜蜜吗？”<br>这次换我盯着他的看，我发现他的眼睛并没有我想象的那么大而空洞，只是上下睫毛都很长，给人一种很亮并且很浓墨重彩的感觉。<br>“嗯，也是。”他若有所思的把手收回，插进了口袋里：“那我喜欢这个昵称。”说着深深地看了我一眼。<br>感觉被电到了，我痛苦地想到。</p>
<br>
<br>

<h2 id="05"><a href="#05" class="headerlink" title="05"></a>05</h2><p>可能是被我的昵称腻到了，接下来的几天变态医生都没怎么来骚扰我。但没有消停几天，他就想出新玩法了：他要给我开药。<br>我觉得如果真的吃了那种药，可能精神就要失常了。所以我费尽心思说服他帮我换成成长快乐，我告诉他如果我快快长大的话，我们兴许就可以一起干一些更变态的事。<br>变态医生幸福道：“总是被你的甜言蜜语打动。”<br>我心想我也总是被你的无耻打败。<br>“那要你看我1分钟，很深情地看着我。”他深思熟虑道。<br>我不是很懂他究竟要干什么，只好硬着头皮去看他。鉴于曾经被他的眼睛惊艳到过，我的眼神只好游移在他的其他五官上，比如说英挺的鼻子，锋利的眉毛，漂亮的麦色肌肤和看上去很软很水润的嘴唇……<br>我好像又被电到了，我绝望的想着。<br>“怎么了？”他出声询问道<br>我条件反射地看向了他。<br>“额……没事，”我移开目光，稳了稳情绪道：“还没到1分钟吗？”<br>“早知道你要在意时间而不好好看我，”他做了一个很恶心的受伤表情：“那我就不应该说。”<br>“好了，我也看了，你是不是可以给我去开成长快乐了？”<br>“可是我并没有说你看我一分钟就给你换药啊。”变态医生老神在在。<br>“你这个老变态！”<br>“我刚刚也一直在看你，我觉得你有一双躲躲闪闪，痛的发颤的眼睛。”<br>这听着可不是什么美妙的形容词啊，我想。<br>“通常这样的人都可以讲出很好听的故事，”他笑起来：“讲的我下定决心找个男朋友，那就给你换药。”<br>我想我的眼睛不至于他描述的那么猥琐，但还是搜肠刮肚地讲起了的第一个故事。<br>在很久很久以前，有一个城堡里住着一个恶毒的皇后和雪白粉嫩的白雪……王子，皇后担心王子跟自己的儿子夺权，就派猎人追杀他，猎人看他冰雪可爱并不忍心杀他，放他跑进了森林。白雪王子不小心跑进了七个小矮人家里，第一个小矮人叫万事通博，闻强识成熟睿智，虽然身材可能有点发福，不可避免的有点矮胖。但散发着成熟男人的魅力，第二小矮人……<br>“等等，无关紧要的小矮人你讲那么详细干嘛？”他不满的打断<br>“哪里是无关紧要，都是主角我才精心描述的。”<br>“主角？你不会是打算就跟7个小矮人厮混了吧？”<br>“不是我！是白雪王子！”我不可理喻地看了他一眼：“况且像医生这么厉害的人一定也相信一夜7次吧。”<br>“那当然是可以的。”他嘿嘿笑道，过了一会又叫到：“你还想一日日7个？”<br>“虽然小了点，说不定更圆滑紧实呢……”<br>“你这个故事太烂了，你让我看到了男人之间喜新厌旧，贪得无厌的龌龊感情，我现在恨不得找一个本分的女人结婚。”他把药拍在桌上：“今天的剂量就先服下吧。”<br>长相漂亮英俊的男人果然都很无情。</p>
<p>不知道是不是药的作用，那天晚上我做了一个很奇怪的梦，我梦见我用麻醉一头大象的麻醉剂麻醉了陈医生，对他酱酱有酿酿之后，一枪崩了他。醒来之后的感觉更是奇怪，就好像谈了一场很甜蜜的恋爱，嘴里都还有爱情的奇妙香气。<br>我觉得我可能发情了，今天无论如何要讲一个妙不可言的爱情故事。<br>“你看起来睡得不是太好。”陈医生不知什么时候坐在了我的身边，昨天明明还规矩的坐在椅子上，今天却一屁股坐在了床上，这真是……太勾引人了。<br>我告诉自己旁边只是一头大象。<br>“托你药的福，我睡得挺好的，还做了一个美梦，一枪崩了你。”<br>能死在你手上的确算是美梦。”他开始翻来覆去的把玩我的手：“不过你的手这么白嫩可爱，根本握不住枪吧？”<br>“请不要用这么恶心的词形容我的手。”我用力的抽回手，他指尖有磨砂质感的皮肤划过了我的手心，那种令人兴奋到战栗的酥麻感顿时传遍了全身。<br>“好吧，”他好脾气道：“那讲故事吧。”<br>我开始春心萌动地讲我的第二个故事。<br>在很久很久以前，有一个城堡里住着一个恶毒的皇后和雪白粉嫩的白雪王子……<br>“省去省去。”他不耐烦地皱起眉。<br> 好吧，白雪王子和七个小矮人保持了纯洁的友谊，因为白雪王子在等待他在城堡里一见钟情的另一个王子。他曾经站在开着玫瑰花的树下，轻柔地把白雪王子抱起，就像是抱着最精贵的瓷器。<br>“所以你要跟这个只见了一面的狗屁王子在一起？”陈医生又不知为何的不满了。<br>我已经懒得纠正他那是白雪王子不是我了，我认真辩解道：“的确是只见了一面，但王子不是狗屁。”<br>“只见了一面就敢见色起意地亲你的王八还不是狗屁？”<br>“爱情是一种天赋，你不懂的。”我瞥了他一眼继续描绘道：“王子他有最温柔的眉眼，和温和清越的嗓音，年青又英俊，即使公主抱别人也不猥琐。总之那是世上最完美的情人。”<br>“你最好加大一点剂量。”他恶狠狠地说完就离开了。<br>我把头蒙进被子里，觉得自己真的应该加大一点剂量。不然我刚刚为什么觉得那个温柔完美的王子根本比不上身边阴晴不定的变态医生？<br>但是这一晚我并没有服药，也没有睡觉。我想了从进院到现在的所有事——其实也没有多少事。我好像真的把一个好好的医院生存游戏，玩成了耽美向的攻略游戏。<br>我想我爱他，很想攻略他，我应该向他承认。</p>
<br>
<br>

<h2 id="06"><a href="#06" class="headerlink" title="06"></a>06</h2><p>“你怎么没吃药？”<br>“你先听我讲一个故事再判断我要不要吃药。”我第一次直直的看着他，对上那双过分迷人的眼睛。<br>然后在一个日色清朗的清晨，我讲起了第三个故事。<br>被赶到森林里的白雪王子和小矮人之间保持了纯洁的友谊，远道而来的王子也被他坚定的拒绝了，他在思念着救了他一命的猎人。<br>猎人可算不上完美，他看着就粗鲁暴戾，粗糙的手掌总是摸的人发疼，连头发里都是香烟的味道，锐利的眼睛好像永远在算计些什么，总之没什么好的。<br>但是有什么关系呢，白雪王子想到。他觉得自己就像是一个被放在篮子里的赤裸婴孩，漂流到了猎人的跟前，从猎人并不温柔地抱起他的一瞬间起，他们便已性命相连。<br>“你只是因为感激就要和这个猎人在一起？”<br> 王子当然不只是因为感激，王子总是对猎人的举动好奇，为什么他要选择当猎人？为什么他放下了对着自己的枪？为什么他在放自己一马的时候还要粗暴的叫他快跑？<br>“如果你对一个人好奇，那你就完了。”我笑着解释道：“很快你就会为他的每一个举动牵肠挂肚，情非得已。爱情都是从好奇开始的，我想你知道。”<br>陈医生有些疲惫地拿下了眼镜：“这可不是一个完美的爱情故事。”<br>我被他说的心里一凉，我想这个游戏我失败了，这是一场可笑的单相思，以为可以篡改游戏格式，但事实上我并没有办法攻略NPC，也没有办法抵御来自NPC的伤害，这终究是一个无情的生存游戏。<br>他突然眨着那双亮的刺人的眼睛，一字一句道：“没有哪个狠心的猎人会让白雪王子一个人逃亡的。”他突然地把我从床上扯下来，让我毫无准备地对上了窗外正当时的日光。<br>“他会和他心爱的王子私奔。”</p>
<p>fin.</p>
]]></content>
      <tags>
        <tag>树哥是神</tag>
      </tags>
  </entry>
  <entry>
    <title>关于型准的笔记</title>
    <url>/blog/2021/11/17/P209/</url>
    <content><![CDATA[<img src="/blog/2021/11/17/P209/P209_.png" class="" title="意义不明预览用图">
<p>本栏目由brutal同学,电桑和krenz老师友情赞助播出.</p>
<span id="more"></span>
<span style="font-size:20px">
<b>是时候直面惨淡的人生了.jpg</b>
</span>

<p>我觉得型准是磨刀,得一直临摹思考临摹思考才能把脑子里的型准纠正些.<br>离开滑铁卢的周四免费写生有一年,搬家的时候整理素描本画了两三本,原来以前有努力过!<br>后知后觉地注意到:</p>
<div class="note ">
            <p>临摹或写生的时候,得思考自己想要的画法…不然只是摹而用不上,会有点尴尬.</p>
          </div>

<p>但问题又来了,<br><span style="font-size:20px"><br><b>我没有研究过自己的稳定画法啊!!</b><br></span></p>
<p>是时候…(再放送)</p>
<br>
<br>
<br>

<p>这次临摹学习的素材是,<a href="https://twitter.com/theposearchives">The Pose Archives</a>和<a href="https://twitter.com/JookpubStock">Jen</a>,atmosphere’s sketchbook2,以及krenz老师提供的速写图.<br>希望同时了解真正的人体和大佬理解的人体画法.<br>没想到从夏天画到了冬天.</p>
<img src="/blog/2021/11/17/P209/P209_4.png" class="" title="第一张的Jul18">
<p>(脖子和脑袋和肩膀的微妙位置…)</p>
<p>七月很久没画,用来热手摹的,从右画到左,线条渐渐变松.<br>(但一画不会的型,又被打回原型.)</p>
<br>
<br>

<h2 id="男人"><a href="#男人" class="headerlink" title="男人"></a>男人</h2><p>九月初U大人生日,画U大人家男人.因为基本不画男人于是先从这里下手.</p>
<img src="/blog/2021/11/17/P209/P209_2.png" class="" title="Aug28">
<p>特地选了简单角度来感受一下男性的身型,跟女性……好不一样!!!<br>男性的屁股好小(震撼),但的确有屁股(废话).<br>整个身材是:从胸肌(大)到腹肌(小),最后屁股明明是小,但还得凸出来一点(比划比划),比起女性的胸(大)腰(细)屁股(大),男性的身材起伏更微妙一点.<br>随便选了张大佬理解的女性来回顾一下区别,这张看起来没有很难,摹了下才注意到,胸部对腰部的理解活用在带透视的胸部和挺腰……原来里面这么多东西!!<br>一上来就摹tarou2老师的图我是不是太不知天高地厚了(淡淡的微笑).</p>
<img src="/blog/2021/11/17/P209/P209_3.png" class="" title="Aug30">
<p>男人女人2.0.<br>赶时间,只摹了两次就去画生贺了.<br>这两位模特男性的肌肉多摹起来比较硬.<br>被难到的又是tarou2老师的摹.<br>摹后注意到“原来他们看到的比我细多了”.<br>明明照着画的脸完全摹不到可爱也是因为不够细到可爱之处……<br>(下一个课题惹)</p>
<img src="/blog/2021/11/17/P209/P209_1.png" class="" title="草换个角度就不会头身比">
<p>悲伤之这张难到的不是男人的身材,而是脸的大小和角度.<br>试了两三次找了大佬图参考才意识到可以当作k大讲过的<a href="https://www.bilibili.com/video/BV1Hs411e76T">16个正方体</a>来思考<a href="https://www.bilibili.com/video/BV1y4411578b">脑袋</a>.</p>
<p>顺便一提这次的颜色处理:<br>画完觉得平淡,把图片复制了一层,用曲线调到饱和爆炸再叠回去做减法,暗的地方就多了些颜色了.</p>
<br>
<br>

<h2 id="大魔王之卡死在脸上"><a href="#大魔王之卡死在脸上" class="headerlink" title="大魔王之卡死在脸上"></a>大魔王之卡死在脸上</h2><p>不是经常有都市传说之,画手大多只会画脸.<br>我觉得画脸是这的很难啊!!能会画脸不是可以自豪的很厉害吗!!</p>
<p>上次翻到了k大公开课,一边听着(奶冻卷大法)一边尝试摹.</p>
<img src="/blog/2021/11/17/P209/P209_5.png" class="" title="Aug31">
<p>摹tarou2老师的图是否太不知天高地厚了(再放送).<br><del>老师画的是精神小伙,自己摹出来是邪恶反派.</del><br>旁边笔记是公开课的内容,之后摹就思考着k大讲的比例规律来比划一下.<br>谢谢k大,绘图的灯塔…</p>
<p>k大除了分享知识,思路以及心态也帮助很多.</p>
<blockquote>
<p>k大:有些同学型准临摹完全摹不对,自己还感觉不到,画出来的简直是《绝望》.<br>《这不就是我》.</p>
</blockquote>
<p>k大讲摹照片,颜色透视都是有所逻辑的,得通过逻辑去推理.<br>的确…色彩练习的摹最大的用处是草草的背些好看的颜色,想细化下去或者举一反三就力不从心.<br>而且摹的时候还会翻到对“质感”“物体归纳”等其他重要的课题上…是比较笨的摹写方式.</p>
<br>
<br>

<h2 id="顺便一提"><a href="#顺便一提" class="headerlink" title="顺便一提"></a>顺便一提</h2><img src="/blog/2021/11/17/P209/P209.jpg" class="" width="300" height="150">
<p>在ig开了一个投票…关于自己的<a href="https://mazui3.com/blog/2021/04/30/P190/">A套餐和B套餐</a>哪个比较受欢迎一些.<br>189位朋友投了A套餐,35位B套餐.<br><del>原来我还有这么多活粉啊.</del><br>不愧是我的观众,跟我偏好一样,但A套餐比B套餐难很多阿.<br><del>练习没有尽头阿…(害怕).</del></p>
<br>
<br>

<h2 id="k大速写"><a href="#k大速写" class="headerlink" title="k大速写"></a>k大速写</h2><p>停了一个月,看到k大也推集体速写活动就重启了速写.<br>也感谢b酱和其他英特网友人陪我一起画速写,有人陪真的很有动力!</p>
<img src="/blog/2021/11/17/P209/P209_6.png" class="" title="Sept27">

<p>k大的活动是每天三张速写,初学者可以摹大佬的速写.<br>我这才打开思路.<br>虽然也注意到”得按自己的画风去摹才有意义”,但看大佬摹同模特才深刻明白什么叫”自主归纳”.<br>真正的大佬更像是在模特的基础上自主创作,也有模特亮点的肌肉曲线,身体曲线,但从服装神情到动态曲线都是自己的内容.</p>
<img src="/blog/2021/11/17/P209/P209_7.png" class="" title="Sept28">
<p>明白之后摹,没有明显区别,还得慢慢来…</p>
<img src="/blog/2021/11/17/P209/P209_8.png" class="" title="Sept29">
<p>完全不会画后背.</p>
<img src="/blog/2021/11/17/P209/P209_9.png" class="" title="Sept30">
<p>比例抓的还是不准阿…<br>褶皱虽然摹写的时候练过几次,但一直都没用色块来练习,画自己图的时候经常遇到短板,所以也得用颜色练.</p>
<img src="/blog/2021/11/17/P209/P209_10.png" class="" title="Oct03">
<p>出了趟门停了两天,手就生疏,也太快了……</p>
<p>b酱也加入一起速写,一下感觉很有动力!</p>
<img src="/blog/2021/11/17/P209/P209_11.png" class="" title="Oct05">
<img src="/blog/2021/11/17/P209/P209_12.png" class="" title="Oct05">
<p>追了一下进度,我宛如深夜赶作业的小学生.裤裆和衣服缝合线得注意…<br>别说大叔,不同的脸型,年龄完全都没练过(把自己笑到).</p>
<img src="/blog/2021/11/17/P209/P209_14.png" class="" title="Oct06">
<img src="/blog/2021/11/17/P209/P209_13.png" class="" title="Oct06">
<p>好像稍微多懂了一些肩膀.<br>注意有些正面肩膀是很宽的,这是躯干正面和躯干侧面,会像大一点的倒三角形.</p>
<img src="/blog/2021/11/17/P209/P209_15.png" class="" title="Oct07">
<img src="/blog/2021/11/17/P209/P209_16.png" class="" title="Oct07">
<p>今天画到倒数第二个黑裤子大姐姐的时候我以为我懂了点形,到最后一个的时候又不懂了…<br>肩膀微妙的平面和透视得注意.特别是女性,加了胸更难画了…</p>
<img src="/blog/2021/11/17/P209/P209_17.png" class="" title="Oct08">
<p>进度追平了,虽然画的一样浆糊但渐渐能加入自己的画风了…速度也快了一些.只能说熟练度上升了,也许也要加入背诵(.</p>
<img src="/blog/2021/11/17/P209/P209_18.png" class="" title="Oct13">
<img src="/blog/2021/11/17/P209/P209_19.png" class="" title="Oct14">
<p>莫名又陷入迷茫.<br>之前在抓型的时候会对比原图真人的比例,跟二次元小人打架得厉害.</p>
<img src="/blog/2021/11/17/P209/P209_20.png" class="" title="Oct15">
<p>卡手太厉害,产生在画作业的错觉.</p>
<img src="/blog/2021/11/17/P209/P209_21.png" class="" title="Oct19">
<p>去摸了两天自己图,决定不直接对比原图原本的型,而按相对的型来走.<br><del>相信的心是你的魔法.</del></p>


<img src="/blog/2021/11/17/P209/P209_24.png" class="" title="Oct23">
<p>逐渐感觉像画作业…</p>
<img src="/blog/2021/11/17/P209/P209_25.png" class="" title="Oct24">
<img src="/blog/2021/11/17/P209/P209_26.png" class="" title="Oct25">
<p>很想加入更多个人理解所以借用oc酱的人设…反而更糊了.</p>
<img src="/blog/2021/11/17/P209/P209_27.png" class="" title="Nov09">
<p>这里左边第一张和右边差了十来天.只好重新复建.</p>
<img src="/blog/2021/11/17/P209/P209_28.png" class="" title="Nov10">
<img src="/blog/2021/11/17/P209/P209_29.png" class="" title="Nov11">
<img src="/blog/2021/11/17/P209/P209_30.png" class="" title="Nov12">
<p>整整两周多没有画图,手又生.<br>这两周突然被抽走了画图的动力…很可怕,真的很可怕.<br>甚至会质疑自己还喜不喜欢oc的程度.</p>
<img src="/blog/2021/11/17/P209/P209_31.png" class="" title="Nov13">
<p>最右边这张意外的喜欢.</p>
<img src="/blog/2021/11/17/P209/P209_32.png" class="" title="Nov14">
<p>男人好难啊……跟男人杠上了……</p>
<img src="/blog/2021/11/17/P209/P209_33.png" class="" title="Nov15">
<p>突然双人模特.</p>
<img src="/blog/2021/11/17/P209/P209_34.png" class="" title="Nov16">
<p>对我来说正面也挺难.</p>
<img src="/blog/2021/11/17/P209/P209_35.png" class="" title="Nov17">
<p>勉勉强强画完.</p>
<p>写一百张的tag时其实没想着真的能画到一百.<br>不过人体以前也有习惯画(心理上)没那么难,色彩练习还坑着呢.<br>一百张下来手生稍微好点了但还是技术差得远啊…<br>头肩关系难啊…画纸片人头身不一样,纸片人的脖子细多了.</p>
<br>
<br>

<h2 id="因特网菩萨"><a href="#因特网菩萨" class="headerlink" title="因特网菩萨"></a>因特网菩萨</h2><p>电桑办了一个练习大逃杀,积累一定的练习就能兑换一次群友用指定人设当练习模特的资格…<br>于是嫖到了不少雨未,在此保存.</p>
<img src="/blog/2021/11/17/P209/001.jpg" class="" title="by灰鸟">
<img src="/blog/2021/11/17/P209/003.jpg" class="" title="by灰鸟">
<img src="/blog/2021/11/17/P209/006.jpg" class="" title="by小忍">
<img src="/blog/2021/11/17/P209/005.jpg" class="" title="by迷路">
<img src="/blog/2021/11/17/P209/002.jpg" class="" title="by羊羊">
<img src="/blog/2021/11/17/P209/007.jpg" class="" title="byCI">
<img src="/blog/2021/11/17/P209/004.png" class="" title="by电桑">
<img src="/blog/2021/11/17/P209/008.jpg" class="" width="320" height="400" title="by猫">

<p>一起画练习感觉回到了贴吧时代,谢谢菩萨!!!</p>
]]></content>
      <categories>
        <category>绘图笔记</category>
      </categories>
      <tags>
        <tag>とりあえず絵を百枚描きましょう</tag>
      </tags>
  </entry>
  <entry>
    <title>Andre工作室两周年和炎焱的大冒险</title>
    <url>/blog/2014/11/15/P00C/</url>
    <content><![CDATA[<img src="/blog/2014/11/15/P00C/P00C.jpg" class="">
<span id="more"></span>

<p>关于树哥.</p>
<blockquote>
<p>【是从学生们的饮食安康所考虑的——吃饭快计划!】<br>我和她一起建立了工作室一起比划着暗号【送东阳马生序】,一起在数学课交换吃饭快的图纸.</p>
</blockquote>
<p>是我那样的伙伴.<br>这篇文章是树哥所写的TAT番外(没写完).</p>
<br>
<br>
<br>
<br>


<h2 id="section-1"><a href="#section-1" class="headerlink" title="section 1"></a>section 1</h2><p>绚丽的开场——————</p>
<p>淡淡的月光铺在了地上<br>这个世界，是银子的。</p>
<p>路灯暗黄的灯光从树叶后喷出，一接触到月光就绞碎成了粉末<br>四散开来<br>空气因此迷蒙而闪烁</p>
<p>孩子，是你在哭吗<br>神微笑着俯下身</p>
<p>它……它死了<br>肉乎乎的小手费力的举起了枯萎的玫瑰<br>浸泡过泪水的涩味，是生的味道</p>
<p>在最美丽的时候死去，才能洗去它的罪恶<br>神缓缓把手附上孩子的小手<br>我们一起埋葬它吧</p>
<p>泪渍未干的眼睛睁大了，孩子喃喃道<br>那我死了呢，您会埋葬我吗<br>会啊<br>神微笑着歪了歪头，是什么时候呢？<br>空中闪烁的光芒也凝结成了泪滴</p>
<p>不如就今晚吧？<br>神兀自大笑了起来</p>
<p>❤❤❤❤❤❤❤❤❤❤</p>
<p>身体已经醒了，可以听到屋外活力十足的鸟叫，甚至还可以感到照在脸上的一缕阳光，可是眼睛却睁不开。<br>是我不愿意醒来吗？<br>与其说是靠自己的意志挣扎着醒来，不如说是被妈妈摇醒的。</p>
<p>母亲：【炎焱，又赖床！你已经初三了哦！】妈妈叉着腰佯装怒气<br>炎焱：【初……初三……】<br>母亲：【是啊，已经是大孩子了，快起来吃早饭吧】妈妈说完就走出了</p>
<p>房间</p>
<p>内心【虽然下意识就认定刚才的人是妈妈，完全没有熟悉感。<br>是吗？我是初三的学生？下意识的就想否定。</p>
<p>但反过头一想，不是初三的话，是几年级呢？我回答的上来吗？】<br>难不成是穿越？我立马对着玻璃照了照脸，映入眼帘的是很合我心意的美少女的脸，才感到安心了下来。<br>不过就算是穿越，也没有穿到这么正常的生活里的吧！何况没有美男成群就算了，还马上要中考了，如果我好不容易穿越一次是这个结局，肯定一不做二不休再死一次试试运气。</p>
<p>所以说，当排除了所有不可能的可能性以后，剩下的一种情况就算是最不靠谱，也是正确答案。</p>
<p>我失忆了。</p>
<p>先转转试试看吧。</p>
<p>☀</p>
<p>房间里转转】→获得一堆碎纸，拼起来的话是【在美丽的时候死去，才能洗刷罪恶。】→内心【好深奥的一句话，营造出来的诡异气氛让我觉得不寒而栗。】</p>
<p>【物品】获得便当*1  →看上去是精心制作了的便当，不过为什么会出现在卧室里啊……</p>
<p>【胸卡挂在凳子上呢  宝莱比亚学院三年级4班 炎焱】→这样一来就掌握了基本的资料，暂时在家里应该不会露陷，关键是怎么去学校呢……</p>
<p>走下楼，妈妈已经在桌子上摆满了早饭。<br>母亲【快点吃吧，正好是温的。】妈妈招呼我坐下<br>炎焱【恩…早餐真丰盛啊！】完全不在状态的我还是真心的赞叹了一句，不过比起享用早餐，我更想弄清楚到底是什么情况。</p>
<p>还是多向妈妈打听一下吧。</p>
<p>炎焱；【爸爸呢？】看到妈妈露出了不解的表情，我立马随意的掩饰到【还没起么，真是大懒虫。】<br>母亲【找爸爸有事吗？爸爸一直都是8点起床的哦。】<br>炎焱【啊，是我忘了，嘿嘿】</p>
<p>妈妈有些迟疑的看了我一眼，动了动嘴唇最终还是没有说话。</p>
<p>该死，我现在到底要怎么办啊！大脑里完全就是一片空白啊，这个样子就算叫我去上学也会在马路上被车压死吧。</p>
<p>不管了，先出门吧。</p>
<p>走出家门发现有很多和我穿着同样校服的学生，我立马一个闪身混进了人流。我知道没有人会注意到我，可我就是如芒在背，简直周围的所有人都在用余光暗暗观察我似的。就在我快要放弃的时候出现了一所学校的大门。</p>
<p>不过说起来天朝的校服一个省都是一样的吧，这样混进来走进什么奇怪的学校就不好了……<br>我踮着脚看了看学校的名字，宝莱比亚学院。<br>呼，运气不错。看来妈妈买房还是很有前瞻性的。</p>
<p>进校门的时候还是有一点点心虚的偷瞄保安大叔，结果就因为分心被后面的学生挤到了旁边。我因此注意到了不远处的两个男生。<br>一个看上去比较冷峻蹲在地上正视图抱起一只小猫，不过小猫像是被煞气逼到一样的四处乱窜，还发出唔哩唔哩的哀嚎，另一个非常阳光英俊的正站在一旁看好戏。</p>
<p>倒是很温馨的画面呢。</p>
<p>偶然间那个站着的男孩子抬起来头，我们的目光就撞到了一起，他的表情微微有些僵硬。虽然知道盯着人家看有些失礼，但事情发生的太快我根本来不及反应，也没法移开视线，结果男孩子突然大幅度扬起了手挥了挥，咧开了一个痞痞的笑。</p>
<p>“嗨——炎焱！”</p>
<p>☀选择支</p>
<p>【也微笑着招招手】→主角的大腿都不好好抱牢，你蠢死在了路边Σ( ° △°|||)︴</p>
<p>【微笑着走上前】→你不用死啦 哼(ˉ(∞)ˉ)唧</p>
<p>炎焱【在干什么呢？】<br>走进了以后我迅速的瞄了一下男生的胸卡，三年四班，陆海空。<br>男生【还不是陪这呆子犯二。】男孩子依旧是笑眯眯的，顺便抬脚踢了踢蹲在地上的男生。<br>炎焱【这样啊……】看来我们不止是一个班，关系还不错。<br>陆海空【这个家伙根本不知道自己吓坏小动物的超能力，还在这里浪费时间。】陆海空说罢摇了摇头。接着自然的抬了抬手，扫了一眼手表，勾着嘴角朝我笑道：【这么美丽的早晨不能浪费在面瘫与猫上啊……】说着打了个手势就走进了校门。<br>内心【我觉得他帅是很帅，可怎么感觉怪怪的像个流氓？难道这就是传说中的可惜是个变态么╭(·▽·)╯】</p>
<p>不知道是不是我多心，这个叫陆海空的家伙笑的虽然灿烂却根本没有在看我，尽管他的动作表情都非常流畅，女人的直觉告诉我他注意力不在我身上。<br>或者说刻意的不把注意力放在我身上。<br>那也就是说，他在逃避我？</p>
<p>等我回味过来，另一个蹲在的男孩也成功捉到了猫，虽然不知道他是怎么办到的，但麻烦也看看它惊恐的躺在你怀里的样子啊——</p>
<p>果然安分了没有多久，小猫就矫健地跳到了地上跑走了。男孩木讷的表情瞬间有点沮丧，停顿了一会，终于叹了一口气站了起来，我也看到了他叫沈燕然，跟我同样一个班。</p>
<p>沈燕然大概这时候才看到我，朝我点了点头就径直走进了校门。我这才想起来我完全忘记了教室的位置，如果自己找的话没准就永远迷失在了学校里……</p>
<p>于是我小跑跟了上去，沈燕然停了下来，用一种探究的目光看着我，仔细开来着家伙也很帅，不过表情一直不大讨喜就是了。</p>
<p>【他在前面。】沈燕然丢下这么没头没尾的一句就快步走向前。<br>【喂！谁啊——】<br>【陆海空。】</p>
<p>陆……陆海空？沈燕然觉得我跟着他的理由是陆海空的话，先不说他到底情商低到什么程度，我和陆海空的关系肯定是非同寻常，那么他早上装作自然的脚底抹油行为算什么事呢？</p>
<p>我的直觉没错的话，陆海空没准和我现在的状况有很大关系。<br>有了经验以后我一直默默的在沈燕然后面3米，这会沈燕然就连头都没有回一下的快步走到了四楼，在教室门口的走廊上有个扎马尾的女生迎面走来，额头光洁饱满显得很有精神，她甩着绿油油的饭盒笑道。<br>【哟炎姐！今天怎么那么晚到呀，发生了什么好事么？】胸卡上写着萧笙竽，真是奇怪的名字……</p>
<p>【诶诶诶？叫炎姐什么的……窝们看来很熟呀？】<br>【诶你在说啥呢？那当然啦～对了记得昨儿咱商量吃完饭去采放屁草么？】<br>【这我倒是……】我怀疑的看了一看这个自称是我朋友，然而怎么看都不靠谱的家伙。<br>【那……如果我告诉你一件匪夷所思的事你会相信我吗？】<br>【嗯～？你讲】<br>【我！失忆了哦！！】<br>【哇！！】萧笙竽嘴上反应夸张，眼睛却半耷拉着丝毫没有干劲。<br>【你不信就算了，真的是……】我有些失望的打算进教室。<br>【whenwhowhatwhereandhow？】萧笙竽不知为何突然精神一振，一边拉着我一边走进了教室，把我按进了一个座位，顺手抄了一个椅子，跨在上面，双肘撑在了我面前的桌子上，一副审问犯人的架势。<br>这样也算是顺利的解决了座位的问题，但是把秘密告诉这么不靠谱的人真的好么，看她这突然兴致勃勃的样子一定是脑补了不得了的东西吧……</p>
<p>【哟，一大早聊什么呢那么开心？】另一个女生的声音加了进来，声音和短发一样给人爽朗的感觉，不过话说你是怎么看出来我【开心】的啊……<br>【啊，安子！这个家伙【指着炎炎】昨天被宇宙人洗脑惹.】萧笙竽迅速的出卖了我。<br>【什么啊！都说了是失忆！失……】我迅速捂住嘴巴，偷偷抬头看被称作安子的女孩，名字的话是谢子安。<br>【失忆……么？】谢子安将信将疑的摸着下巴，将头转向了萧笙竽。<br>【嗯！然后像是失忆的样子！会不会是被MIB里面的那啥照了一下的呢？……呜啊真是个好想法！！果然我聪明又鸡汁！】萧笙竽一股脑说出了她刚刚脑补出的废渣。<br>虽然说我觉得谢子安的反应才是比较正常的，但是这么随便就让人家知道我的秘密，这样下去我马上就可以被全校围观了！</p>
<p>【生气】【说是什么好朋友啊，一下就把秘密全说出来了！】我怒视着萧笙竽。<br>【诶诶？？不应该是这样子的展开么？？？】萧笙芋慌慌地歪头。<br>我伸出手，指谢子安道【好啦！现在被这个路人知道啦，我们是不是要灭口比较好？】<br>【笛子快来护驾啊啊——】谢子安配合的俯身抱住了萧笙竽的脖子。<br>慢着！！那是我的助手AA！外星人你休想——————】萧笙竽朝我摆出了攻击的姿势大义凌然道。<br>【擅自取这么恶心的名字就算救我也别指望我感激——】谢子安怒吼道。</p>
<p>攻击攻击攻击防守防守防守</p>
<p>【诶，原来也是认识的人嘛？】混战一番，后我们各自瘫倒在座位上。<br>【废话，连你昨天的胖次颜色都知道的程度】谢子安撑着下巴一脸嘲讽。<br>【咱觉得你这样会吓着炎姐诶……】笛子小声提醒道。<br>【怎么听都不像是很正常的温馨的友情……】我不由的拉了拉校裙下摆。<br>【啊，我连你们两个都忘了总该相信我失忆了吧？】我突然惊喜的抬头道。<br>【那么来问些问题吧】萧笙竽再次俯到了我桌上，谢子安靠着我的桌子站着，双手环胸。</p>
<p>【嚎的╰(￣▽￣)╮】我爽快的答应了。</p>
<p>Q1 萧笙芋的饭盒颜色是    红  蓝  绿</p>
<p>Q2 我就读的班级是  34    24     35</p>
<p>Q3 谢子安的发型是  马尾  短发  长发</p>
<p>***<em><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong>全回答出才可以继续</strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></em></p>
<p>笛：【啥啦，炎姐真的像是记忆被清除了一样。】<br>安：【不过还是一样的蠢，真是令人失望……】<br>我不禁也愤怒道【谢谢夸奖！我对你们这两个便宜好朋友也很失望！】<br>谢子安挑了挑眉，突然竖起食指在我眼前晃了一晃，笑道【注意形象哦】，萧笙芋也意味深长地看了我一眼就转回了座位。<br>早上遇到的虐猫BOY平淡地和我们道了一声早，然后就目不直视的走到了后面的座位。后面跟着的英俊男生却像只小狗一样甜蜜地蹲在了我的座位边，尖尖的下巴搁在了桌面上。</p>
<p>【选择支】@天了噜，他们两个明明早走，这么晚才来去干了什么苟且之事 ————————获得谢子安的信任</p>
<p>@他的名字好像是陆海空？————————————————陆海空记忆碎片*1<br>陆【炎炎，没有吃早饭，求投喂！】陆海空头一歪，露出了可怜兮兮的表情。<br>炎【额……为什么不吃早饭呢？我找找有没有吃的啊】在陆海空期待的目光下，我把手伸进了书包，只想意思意思，没想到真的摸到了一个饭盒{要在房间里拿到才行}</p>
<p>我迟疑地把饭盒拿了出来，陆海空却很自然地接过了饭盒，一起身就坐在了我后面的位置，开始狼吞虎咽起来。难道……这个便当一直是为他准备的吗？这种诡异的亲密感是怎么回事？</p>
<p>&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;上课铃打响&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;</p>
<p>第一节是数学课</p>
<p>【选择】@认真听课*****************************************什么都没有，哈哈哈哈哈哈哈</p>
<p>【选择】@转向后面和陆海空说话</p>
<p>我转过头去，看到陆海空并没有在看前方，而是垂着眼不知道在想什么，我推了他一下。</p>
<p>炎【为什么不吃早饭？】<br>陆海空笑了起来，嘴角勾的很深【因为我没有早晨呀。】<br>炎【什么没有早晨，明明就是打游戏打到早上起不来。】<br>陆海空笑着摇了摇头【没有早晨，就像我从来没有开始一样。】</p>
<p>你察觉到了老师的目光，立马转会了身，却因为陆海空的话感到非常的不自在**************<em>陆海空记忆碎片</em>1</p>
<p>【选择】@和前座的萧笙芋扯会蛋<br>我目瞪口呆地看着谢子安维持着脸上正直的表情，双眼热诚地注释着黑板，把夹着纸条的笔扔在了萧笙芋桌上。萧笙芋拆开写了几个字以后，同样凝重地扔了回去。<br>所以真的有人在认真听课吗？我的设定不是初三狗吗？<br>我戳了一戳萧笙芋【嘿，萧笙芋】<br>笛；【欸，啥事】萧笙芋非常流畅地应了一下，让人有点搓手不及，她立马又加到【炎姐你还是叫我笛子吧，我都快反应不过来我的大名儿了。】<br>什么鬼话，明明应得飞快好吗！<br>炎；【恩好，话说……陆海空他，他和我……】<br>萧笙芋胀大了鼻孔；【陆海空你都不记得啦？】<br>我羞愧地点了点头。<br>萧笙芋突然伸脚踩在了谢子安的鞋带上，往前一扯就把鞋带彻底扯开了。她和谢子安同时默契地俯身在桌子下系起了鞋带。<br>安【笛子，我的白鞋带被你踩成豹纹了！】<br>笛：【你还管什么豹纹波点的？炎姐她连她的如意郎君都忘记啦！】<br>炎：【虽然知道你们也是有努力在暗中接头，但我真的什么都听到了嘤】<br>谢子安从容的起身：【都是笛子上传的破烂接头法，它已经被iF系统屏蔽了】<br>萧笙芋也气喘吁吁地起身；【怪咱咯？不是也好好地把暗码传过来了吗？】<br>安：【保密性能也太渣了吧？后座都能听到的接头和密码设6个零有区别？】<br>笛：【六个零也比没有强啊，请不要鄙视记忆力只有7秒的物种！】<br>安：【乖，不鄙视不鄙视，你们也是鲜活的小生命……】<br>炎炎：【不是……我们能不能聊一聊我和陆海空的事……】我心力交瘁地扭转着话题。</p>
<p>笛：【说起来你也真是的炎姐，追了那么久的男票怎么说忘就忘了？】<br>炎：【诶诶诶？居然是我倒追的？】<br>笛：【那可不，昨天才正式在一起的，你可高兴了呢。】<br>谢子安在一边悠悠叹到：【包裹都来不及拆就退货，啧啧。】<br>萧笙芋的注意力立马就被吸引过去：【安子你好污hhhh,去污粉不能停呀。】</p>
<p><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong>获得萧笙芋的信任</strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong>*****</p>
<p>至此出现了重要拐点  因为要出早操，如果没有凑齐谢子安和萧笙芋的信任，谢子安和萧笙芋并不会等你一起去，所以会提前进入冒险。</p>
<p>凑齐的话，可以继续在梦境里搜集更多的信息。</p>
<img src="/blog/2014/11/15/P00C/P00C_2.jpg" class="">

<br>
<br>
<br>
<br>
<br>

<p><strong>OMAKE</strong></p>
<p>谢子安同学初中时候写的小诗两则,偷偷存一下.<br>如果对她来说是黑历史的话真是对不住了（笑）</p>
<h2 id="年青的时候"><a href="#年青的时候" class="headerlink" title="年青的时候"></a>年青的时候</h2><p>如果不是上天对我的嘲笑，那便是千百年蓦然回首的缘分吧。你被天神亲吻过的侧颜竟由我一手勾勒。</p>
<p>我想我是心动过的，从你几缕发丝漏出报纸起。</p>
<p>我想我是心动过的，从你笨拙地学起平平仄仄起。</p>
<p>我想我是心动过的，从你隐忍的眼泪悄然滑下起。</p>
<p>我想我是心动过的，知道你双目空洞地对他说出“我愿意”止。</p>
<p>你透支了你的美丽，我亦透支了我的爱恋，知道微笑着喝完辛辣的酒，不知是虚情假意或是早已无关痛痒地道了祝福。</p>
<p>我想，其实只是没那么爱吧，终究把你当做自己的肋骨，可惜没人会为自己的肋骨说爱。</p>
<p>后来我的书就很干净了，没有了天赐侧颜，没有了你微笑的侧颜。</p>
<br>
<br>
<br>
<br>
<br>

<h2 id="无题"><a href="#无题" class="headerlink" title="无题"></a>无题</h2><p>像是吱呀的老旧风扇低喃着微微失措的心率</p>
<p>像是江南抹布色的天空晕染出没有开端与结尾的时间轴</p>
<p>像是身上薄毛衣与皮肤摩擦出若有似无的躁动与抵触</p>
<p>像是本应擦肩而过的陌生人相互打量了一眼</p>
<p>有的时候，惊鸿一瞥，便是一生。</p>
]]></content>
      <tags>
        <tag>树哥是神</tag>
      </tags>
  </entry>
  <entry>
    <title>关于SQL的笔记</title>
    <url>/blog/2020/11/24/P134/</url>
    <content><![CDATA[<p>个人用笔记,写的很杂(再放送).<br><a href="https://mazui3.com/blog/2021/01/31/P167/">DLC篇.</a></p>
<span id="more"></span>

<p><strong>Hot key</strong></p>
<div class="note ">
            <p>ctrl + o -&gt; open database<br>alt + e -&gt; SQL editor<br>F9 -&gt; Execute query</p>
          </div>

<p><strong>Comment</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- comments</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">a lot</span></span><br><span class="line"><span class="comment">a lot</span></span><br><span class="line"><span class="comment">comments</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<div class="note ">
            <p>基本小笔记:加入代码和数据库.<br>点击tool,open sql editor,在第三行的小文件load sql from file就可以加在sql的代码.<br>导入数据的时候,是先create table再在其table中导入数据.</p>
          </div>

<div class="note ">
            <p>SQL的function分为两种,对单一value做处理的叫做elementary function(sqrt),会对多哥value作处理的的叫做summary function(max).</p>
          </div>

<br>
<br>
<br>

<p><strong>Side Note</strong></p>
<div class="note ">
            <p>SQLite是大小写不敏感的,除了用string来做search的时候.</p>
          </div>
<div class="note ">
            <p>column name &lt;= 30 characters. 只能用a-z/A-Z/0-9/_/$<br><a href="https://docs.actian.com/ingres/11.0/index.html#page/SQLRef/SQL_Naming_and_Statement_Rules.htm">doc_sql</a> &amp; <a href="https://www.tutlane.com/tutorial/sqlite/sqlite-syntax">doc_sqlite</a></p>
          </div>
<div class="note ">
            <p>一个table现在能有1000的columns.</p>
          </div>
<div class="note ">
            <p>如果我们要在搜索有单引号或者双引号的内容.<br>For example we are searching Can”a’da.<br>WHERE jurisdiction = ‘Can”a’’da’<br>两个单引号search一个单引号.<br>双引号不变.<br>但如果 WHERE jurisdiction = “Can“”a’da”<br>两个双引号search一个双引号.<br>单引号不变.</p>
          </div>

<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>

<h2 id="SELECT"><a href="#SELECT" class="headerlink" title="SELECT"></a>SELECT</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> Name, Continent, Population <span class="keyword">FROM</span> Country</span><br><span class="line">  <span class="keyword">WHERE</span> Name <span class="keyword">LIKE</span> <span class="string">&#x27;%island%&#x27;</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> Name;<span class="operator">/</span><span class="operator">/</span>wherever there<span class="string">&#x27;s island in the string, %means 前面或者后面可以有其他字符</span></span><br><span class="line"><span class="string">SELECT Name, Continent, Population FROM Country</span></span><br><span class="line"><span class="string">  WHERE Name LIKE &#x27;</span>_island<span class="operator">%</span><span class="string">&#x27; ORDER BY Name;//_ 的意思是某一个字符.island%前面可以有任何一个字符</span></span><br><span class="line"><span class="string">SELECT Name, Continent, Population FROM Country</span></span><br><span class="line"><span class="string"> WHERE Continent IN ( &#x27;</span>Europe<span class="string">&#x27;, &#x27;</span>Asia<span class="string">&#x27; ) ORDER BY Name;//continent是europe或者asia</span></span><br></pre></td></tr></table></figure>

<p>select + as可以用于取名字或改名字.</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> column_name_1 <span class="keyword">AS</span> alias_name_1, <span class="operator">/</span><span class="operator">/</span>这时就可以改名了</span><br><span class="line">    column_name_2 <span class="keyword">AS</span> alias_name_2,</span><br><span class="line">    column_name_N <span class="keyword">AS</span> alias_name_n</span><br><span class="line"><span class="keyword">FROM</span> table_name;</span><br></pre></td></tr></table></figure>

<p>select + format, <a href="https://www.sqlshack.com/a-comprehensive-guide-to-the-sql-format-function/">常用format.</a></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> amount format<span class="operator">=</span>dollar10<span class="number">.2</span> <span class="operator">/</span><span class="operator">/</span>小数点前保留十位,后面保留两位</span><br></pre></td></tr></table></figure>

<p>select + label, 给variable加label.</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> amount label <span class="operator">=</span> <span class="string">&#x27;usd&#x27;</span></span><br></pre></td></tr></table></figure>

<p>select + *, 全选.</p>
<p>select + calculated, calculated的作用是使用临时计算的值(在原table中没有).</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">proc <span class="keyword">sql</span> outobs<span class="operator">=</span><span class="number">10</span>;</span><br><span class="line"><span class="keyword">select</span> flightnumber, <span class="type">date</span>, destination,</span><br><span class="line">boarded <span class="operator">+</span> transferred <span class="operator">+</span> nonrevenue <span class="keyword">as</span> Total</span><br><span class="line"><span class="keyword">from</span> sasuser.marchflights</span><br><span class="line"><span class="keyword">where</span> calculated total <span class="operator">&lt;</span> <span class="number">100</span>;</span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">proc <span class="keyword">sql</span> outobs<span class="operator">=</span><span class="number">10</span>;</span><br><span class="line"><span class="keyword">select</span> flightnumber, <span class="type">date</span>, destination,</span><br><span class="line">boarded <span class="operator">+</span> transferred <span class="operator">+</span> nonrevenue <span class="keyword">as</span> Total,</span><br><span class="line">calculated total<span class="operator">/</span><span class="number">2</span> <span class="keyword">as</span> Half</span><br><span class="line"><span class="keyword">from</span> sasuser.marchflights;</span><br></pre></td></tr></table></figure>

<p>where去掉missing(在sas中):</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">where Salary is not missing</span><br></pre></td></tr></table></figure>
<p>在sql中可以写:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">where Salary ne .</span><br></pre></td></tr></table></figure>
<p><strong>要注意细节</strong></p>
<div class="note ">
            <p>关于select.<br>我们可以使用NOT, AND, OR 来更加的区别,但注意这几个关键词有优先级.</p><blockquote><p>NOT &gt; AND &gt; OR</p></blockquote><p>所以使用NOT的时候记得用括号.(有 not in (‘A’,’B’)的语法.)</p>
          </div>

<p>我们还可以用between.有两种写法.</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- Contiunes: Between value1 and Value2</span></span><br><span class="line"><span class="comment">--            in (value1, value2, ..., valueN)</span></span><br></pre></td></tr></table></figure>
<p>String也是可以连续的.C001到C004是连续的(按ascii的循序).</p>
<p>search多个无排序element的时候可以用in和括号.</p>
<blockquote>
<p>WHERE jurisdiciton in (‘Canada’,’US’);</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- % : a%b -&gt; ab, aab, axbdb</span></span><br><span class="line"><span class="comment">-- _ : a_b -&gt; aab, abb, acb,adb</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> customer <span class="keyword">WHERE</span> credit_rating <span class="keyword">like</span> <span class="string">&#x27;A%&#x27;</span>;</span><br></pre></td></tr></table></figure>

<div class="note ">
            <p>跟bash(?)有点像,可以用like加 _ 和 % .</p>
          </div>

<div class="note ">
            <p>不等于有 &lt;&gt; 和 !=.</p>
          </div>

<br>
<br>

<h2 id="DISTINCT"><a href="#DISTINCT" class="headerlink" title="DISTINCT"></a>DISTINCT</h2><p><strong>select distinct</strong> 可以remove duplicate,也同时可以用来查看数据一共有的种类…</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> Continent <span class="keyword">FROM</span> Country;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> Continent <span class="keyword">FROM</span> Country;</span><br><span class="line"><span class="keyword">Using</span> the <span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> statement, you will <span class="keyword">get</span> <span class="keyword">only</span> <span class="keyword">unique</span> results.</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> column1, column2, column3 <span class="keyword">FROM</span> Country;</span><br></pre></td></tr></table></figure>

<p>顺便一提NULL也算distinct的一种.</p>
<br>
<br>

<h2 id="WHEN"><a href="#WHEN" class="headerlink" title="WHEN"></a>WHEN</h2><p><strong>condition</strong>, <strong>case和end</strong>是一定要在一起用的.</p>
<p>select + case when (像if else statment.)</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">proc <span class="keyword">sql</span>;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> temp_2 <span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span>, <span class="keyword">case</span></span><br><span class="line"> <span class="keyword">when</span> cty<span class="operator">=</span>&quot;North YorkC&quot; <span class="keyword">then</span> &quot;North York&quot;</span><br><span class="line"> <span class="keyword">when</span> cty<span class="operator">=</span>&quot;North YorkW&quot; <span class="keyword">then</span> &quot;North York&quot;</span><br><span class="line"> <span class="keyword">when</span> cty<span class="operator">=</span>&quot;North Yrko&quot; <span class="keyword">then</span> &quot;North York&quot;</span><br><span class="line"> <span class="keyword">else</span> cty <span class="keyword">end</span> <span class="keyword">as</span> city_clean</span><br><span class="line"><span class="keyword">from</span> disk.txn_data_v9</span><br><span class="line">quit;</span><br></pre></td></tr></table></figure>

<br>
<br>

<h2 id="FROM"><a href="#FROM" class="headerlink" title="FROM"></a>FROM</h2><p>FROM clause + WHERE clause(WHERE + logical expression)</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> Countries <span class="keyword">WHERE</span> Continent <span class="operator">=</span> <span class="string">&#x27;Europe&#x27;</span>;</span><br></pre></td></tr></table></figure>

<br>
<br>

<h2 id="UPDATE"><a href="#UPDATE" class="headerlink" title="UPDATE"></a>UPDATE</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">update <span class="keyword">table</span></span><br><span class="line">  <span class="keyword">set</span> column1<span class="operator">=</span>value1,column2<span class="operator">=</span>value2,...</span><br><span class="line">  <span class="keyword">where</span> columnX<span class="operator">=</span>valueX [<span class="keyword">and</span><span class="operator">/</span><span class="keyword">or</span>] columnY<span class="operator">=</span>valueY [<span class="keyword">and</span><span class="operator">/</span><span class="keyword">or</span>]...</span><br></pre></td></tr></table></figure>
<p>一次只能更新一个表.<br>All databases support update with subquery.<br>Only MySQL support update with subquery and with join statement.</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">UPDATE Customer</span><br><span class="line">  <span class="keyword">SET</span></span><br><span class="line">    Address <span class="operator">=</span> <span class="string">&#x27;123 music ave&#x27;</span>,</span><br><span class="line">    Zip <span class="operator">=</span> <span class="string">&#x27;98056&#x27;</span></span><br><span class="line">  <span class="keyword">WHERE</span> id <span class="operator">=</span> <span class="number">5</span>; <span class="comment">-- which/where row to be updated</span></span><br><span class="line"></span><br><span class="line">UPDATE Customer</span><br><span class="line">  <span class="keyword">SET</span></span><br><span class="line">    Address <span class="operator">=</span> <span class="keyword">NULL</span>, <span class="comment">-- 如果没有的话</span></span><br><span class="line">    Zip <span class="operator">=</span> <span class="keyword">NULL</span></span><br><span class="line">  <span class="keyword">WHERE</span> id <span class="operator">=</span> <span class="number">5</span>;</span><br></pre></td></tr></table></figure>
<p>如果没有where就会把所有的都替换.</p>
<br>
<br>

<h2 id="DELETE"><a href="#DELETE" class="headerlink" title="DELETE"></a>DELETE</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> <span class="keyword">table</span> <span class="keyword">where</span> column1<span class="operator">=</span>value1 [<span class="keyword">and</span><span class="operator">/</span><span class="keyword">or</span>] column2<span class="operator">=</span>value2...</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> Customer <span class="keyword">WHERE</span> id <span class="operator">=</span> <span class="number">4</span>;</span><br></pre></td></tr></table></figure>
<p>delete删除的数据后台还有保留,就是可以找回.<br>Note:增删改只能一个一个命令来.</p>
<br>
<br>

<h3 id="AS"><a href="#AS" class="headerlink" title="AS"></a>AS</h3><p>as create column的alias名字.<strong>注:as有时可以省略.</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> ‘Helloworld’ <span class="keyword">AS</span> <span class="keyword">Result</span>;</span><br></pre></td></tr></table></figure>

<br>
<br>

<h2 id="ORDER-BY"><a href="#ORDER-BY" class="headerlink" title="ORDER BY"></a>ORDER BY</h2><p>sorting的一种方式.</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> Country <span class="keyword">ORDER</span> <span class="keyword">BY</span> Name;</span><br><span class="line"><span class="keyword">SELECT</span> Name, LifeExpectncy <span class="keyword">FROM</span> Country <span class="keyword">ORDER</span> <span class="keyword">BY</span> Name; <span class="comment">-- get only Name&amp;LifeExpectncy column data.</span></span><br></pre></td></tr></table></figure>
<p>Note: single quote for string, double string for most of other things(eg. identifier).</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> Name <span class="keyword">FROM</span> Country <span class="keyword">ORDER</span> <span class="keyword">BY</span> Name <span class="keyword">DESC</span>; <span class="comment">-- descending 从z到a的顺序</span></span><br><span class="line"><span class="keyword">SELECT</span> Name <span class="keyword">FROM</span> Country <span class="keyword">ORDER</span> <span class="keyword">BY</span> Name <span class="keyword">ASC</span>; <span class="comment">-- 从a到z,默认的顺序</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> Name, Continent <span class="keyword">FROM</span> Country <span class="keyword">ORDER</span> <span class="keyword">BY</span> Continent, Name; <span class="comment">--按两个条件排序,从continent到name</span></span><br><span class="line"><span class="keyword">SELECT</span> Name, Continent <span class="keyword">FROM</span> Country <span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="number">3</span>, <span class="number">4</span>; <span class="comment">--也可以通过列数指代variable,continent是第3列,name是第4列.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> Name, Continent, Region <span class="keyword">FROM</span> Country <span class="keyword">ORDER</span> <span class="keyword">BY</span> Continent <span class="keyword">DESC</span>, Region, Name;</span><br></pre></td></tr></table></figure>

<br>
<br>

<h2 id="WHERE"><a href="#WHERE" class="headerlink" title="WHERE"></a>WHERE</h2><p>选择部分(row)data.</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> Name, Continent, Region <span class="keyword">FROM</span> Country <span class="keyword">WHERE</span> Continent <span class="operator">=</span> <span class="string">&#x27;Europe&#x27;</span>;</span><br></pre></td></tr></table></figure>

<br>
<br>

<h2 id="LIMIT-and-OFFSET"><a href="#LIMIT-and-OFFSET" class="headerlink" title="LIMIT and OFFSET"></a>LIMIT and OFFSET</h2><p>选择部分(row)data.</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> Name, Continent, Region <span class="keyword">FROM</span> Country <span class="keyword">WHERE</span> Continent <span class="operator">=</span> <span class="string">&#x27;Europe&#x27;</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> Name LIMIT <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> Name, Continent, Region <span class="keyword">FROM</span> Country <span class="keyword">WHERE</span> Continent <span class="operator">=</span> <span class="string">&#x27;Europe&#x27;</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> Name LIMIT <span class="number">5</span> <span class="keyword">OFFSET</span> <span class="number">5</span>; <span class="comment">--5-10的数据</span></span><br></pre></td></tr></table></figure>
<p>我们也可以用limit来做offset的事.</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">LIMIT [# <span class="keyword">of</span> records]<span class="operator">|</span>[(# <span class="keyword">of</span> <span class="keyword">start</span>) <span class="operator">-</span> <span class="number">1</span>, # <span class="keyword">of</span> records];</span><br></pre></td></tr></table></figure>
<p>上面是给SQLite和MySQL的.</p>
<blockquote>
<p>Access, MS SQL SERVER  - Microsoft – Transact-SQL -&gt; T-SQL<br>  Select top [# of records] | [(# of start) - 1, # of records] column1, column2 From Table<br>  Select top [# of records] | [(# of start) - 1, # of records] * From Table</p>
</blockquote>
<p>注意其他的语法可能不一样,最好查看doc.</p>
<p><strong>用limit在求第二大小的数:</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">Limit <span class="number">1</span>, <span class="number">1</span>;</span><br></pre></td></tr></table></figure>

<br>
<br>

<h2 id="COUNT"><a href="#COUNT" class="headerlink" title="COUNT"></a>COUNT</h2><p>count rows.</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> Country <span class="keyword">WHERE</span> Population <span class="operator">&gt;</span> <span class="number">10000000</span> <span class="keyword">AND</span> Continent <span class="operator">=</span> <span class="string">&#x27;Europe&#x27;</span>; <span class="operator">/</span><span class="operator">/</span>算表中有多少的记录.</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(Continent) <span class="keyword">FROM</span> Country; <span class="operator">/</span><span class="operator">/</span>count <span class="keyword">where</span> continent has data</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="keyword">DISTINCT</span> <span class="keyword">column</span>) <span class="keyword">FROM</span> table_name; <span class="operator">/</span><span class="operator">/</span>我们还可以这样count <span class="keyword">unique</span>的值.</span><br></pre></td></tr></table></figure>
<p>注意NULL不会被count进去. Count( * ) 比select * 快很多.</p>
<br>
<br>

<h2 id="INSERT-INTO"><a href="#INSERT-INTO" class="headerlink" title="INSERT INTO"></a>INSERT INTO</h2><p>add data</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">Table</span>(column1,...) <span class="keyword">values</span> (value1, ...)</span><br><span class="line"><span class="comment">-- or</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">Table</span> <span class="keyword">values</span> (value1, ...)</span><br></pre></td></tr></table></figure>
<p>当用第二种方式的时候,可以用NULL来空去没有值的column.<br>Primary key不能为空.</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> Customer (name, city, state, zip)</span><br><span class="line">  <span class="keyword">VALUES</span> (<span class="string">&#x27;Jimi Hendrix&#x27;</span>, <span class="string">&#x27;Renton&#x27;</span>, <span class="string">&#x27;WA&#x27;</span>, <span class="string">&#x27;12398&#x27;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> test <span class="keyword">VALUES</span> ( <span class="number">1</span>, <span class="string">&#x27;This&#x27;</span>, <span class="string">&#x27;Right here!&#x27;</span> );</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> test ( b, c ) <span class="keyword">VALUES</span> ( <span class="string">&#x27;That&#x27;</span>, <span class="string">&#x27;Over there!&#x27;</span> );</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> test <span class="keyword">DEFAULT</span> <span class="keyword">VALUES</span>;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> test ( a, b, c ) <span class="keyword">SELECT</span> id, name, description <span class="keyword">from</span> item;</span><br></pre></td></tr></table></figure>
<p>我们也可以用subquery来insert.<br>不过注意,如果将一个表格复制给它本身,也就是将数据翻倍.很可能出现primary key也重复而报错的情况.<br>所以要做改动.</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> bond_price</span><br><span class="line">  <span class="keyword">select</span> &quot;column_name&quot;,column1,column2,column3</span><br><span class="line">  <span class="keyword">from</span> bond_price</span><br><span class="line">  <span class="keyword">where</span> column_name <span class="operator">=</span> <span class="string">&#x27;data&#x27;</span></span><br></pre></td></tr></table></figure>

<br>
<br>

<h2 id="CREATE-TABLE"><a href="#CREATE-TABLE" class="headerlink" title="CREATE TABLE"></a>CREATE TABLE</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> test (</span><br><span class="line">  a <span class="type">INTEGER</span>,</span><br><span class="line">  b TEXT</span><br><span class="line">);<span class="operator">/</span><span class="operator">/</span><span class="keyword">column</span> name will be a <span class="keyword">and</span> b, followed <span class="keyword">by</span> type declaration</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> test <span class="keyword">VALUES</span> ( <span class="number">1</span>, <span class="string">&#x27;a&#x27;</span> );</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> test <span class="keyword">VALUES</span> ( <span class="number">2</span>, <span class="string">&#x27;b&#x27;</span> );</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> test <span class="keyword">VALUES</span> ( <span class="number">3</span>, <span class="string">&#x27;c&#x27;</span> );</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> test;</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> test ( a TEXT <span class="keyword">UNIQUE</span>, b TEXT, c TEXT <span class="keyword">DEFAULT</span> <span class="string">&#x27;panda&#x27;</span> ); <span class="operator">/</span><span class="operator">/</span><span class="keyword">UNIQUE</span> <span class="keyword">and</span> <span class="keyword">DEFAULT</span></span><br></pre></td></tr></table></figure>
<p>Note: we can have more NULL while using UNIQUE(depends on different system)</p>
<br>
<br>

<h2 id="DROP-TABLE"><a href="#DROP-TABLE" class="headerlink" title="DROP TABLE"></a>DROP TABLE</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> test ( a TEXT, b TEXT );<span class="operator">/</span><span class="operator">/</span>here will have a error since the <span class="keyword">table</span> <span class="keyword">is</span> already created</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> test <span class="keyword">VALUES</span> ( <span class="string">&#x27;one&#x27;</span>, <span class="string">&#x27;two&#x27;</span> );</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> test;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> test;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> test;</span><br></pre></td></tr></table></figure>

<br>
<br>

<h2 id="IS-NULL"><a href="#IS-NULL" class="headerlink" title="IS NULL"></a>IS NULL</h2><p>when search for null</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> test <span class="keyword">WHERE</span> a <span class="keyword">IS</span> <span class="keyword">NULL</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> test <span class="keyword">WHERE</span> a <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>;<span class="operator">/</span><span class="operator">/</span>opposite</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> test;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> test (</span><br><span class="line">  a <span class="type">INTEGER</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  b TEXT <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  c TEXT</span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<br>
<br>

<h2 id="NULL"><a href="#NULL" class="headerlink" title="NULL"></a>NULL</h2><p>关于null的note:<br>null在计算avg和sum时不受影响.如果全部都是null的数据,min,max也会return null.<br>null进行加减乘除,或者大小比较也是return null.<br>null == null也是return null.</p>
<p>logic involve null(unknown)的时候:</p>
<table>
<thead>
<tr>
<th></th>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>or</td>
<td>unknown or true == true</td>
<td>unknown or false == unknown</td>
<td>unknown or unknown == unknown</td>
</tr>
<tr>
<td>and</td>
<td>unknown and true == unknown</td>
<td>unknown and false == false</td>
<td>unknown and unknown == unknown</td>
</tr>
<tr>
<td>not</td>
<td>not(unknown) == unknown</td>
<td></td>
<td></td>
</tr>
</tbody></table>
<br>
<br>

<h3 id="COALESCE"><a href="#COALESCE" class="headerlink" title="COALESCE"></a>COALESCE</h3><p>用来默认替换null的.<br>SELECT COALESCE(要查找的column_name, replace null的值);</p>
<br>
<br>

<h2 id="ALTER"><a href="#ALTER" class="headerlink" title="ALTER"></a>ALTER</h2><p>add a new column</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> test <span class="keyword">ADD</span> d TEXT;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> test <span class="keyword">ADD</span> e TEXT <span class="keyword">DEFAULT</span> <span class="string">&#x27;panda&#x27;</span>;</span><br></pre></td></tr></table></figure>

<br>
<br>

<h2 id="ID-columns"><a href="#ID-columns" class="headerlink" title="ID columns"></a>ID columns</h2><p><strong>this is different in different data system</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> test (</span><br><span class="line">  id <span class="type">INTEGER</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">  a <span class="type">INTEGER</span>,</span><br><span class="line">  b TEXT</span><br><span class="line">);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> test (a, b) <span class="keyword">VALUES</span> ( <span class="number">10</span>, <span class="string">&#x27;a&#x27;</span> );</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> test (a, b) <span class="keyword">VALUES</span> ( <span class="number">11</span>, <span class="string">&#x27;b&#x27;</span> );</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> test (a, b) <span class="keyword">VALUES</span> ( <span class="number">12</span>, <span class="string">&#x27;c&#x27;</span> );</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> test;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> test;</span><br></pre></td></tr></table></figure>

<br>
<br>
<br>

<br>
<br>

<h2 id="database"><a href="#database" class="headerlink" title="database"></a>database</h2><p>(aka join table)</p>
<p>Each row of table has a unique key. The table’s unique key may or may not correspond with a column in the table.<br>Sometime unique key is hidden but the table must have one.<br>When a column is used as a unique key, it often called <strong>primary key</strong> (子table) .(用于identify)</p>
<img src="/blog/2020/11/24/P134/P134_1.png" class="">
<p>通过key来连接各个表格.这是的连接用key被称为foreign keys(主table).<br>如果链接的一方是primary key,自己就是foreign key.</p>
<p>种类:<br>Inner join(no null),保留两个table的共同值.<br>Outer join(may have null): LEFT/RIGHT/FULL join<br><strong>right and full outer join are not supported in sqlite right now</strong> 但是可以用left改写right.</p>
<p>Left join:</p>
<table>
<thead>
<tr>
<th>Num</th>
<th>Var</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>A1</td>
</tr>
<tr>
<td>2</td>
<td>A2</td>
</tr>
<tr>
<td>3</td>
<td>A3</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>Num</th>
<th>VarB</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>B1</td>
</tr>
<tr>
<td>2</td>
<td>B2</td>
</tr>
<tr>
<td>4</td>
<td>B4</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>Num</th>
<th>VarA</th>
<th>VarB</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>A1</td>
<td>B1</td>
</tr>
<tr>
<td>2</td>
<td>A2</td>
<td>B2</td>
</tr>
<tr>
<td>3</td>
<td>A3</td>
<td></td>
</tr>
</tbody></table>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> a.column1, ... ,b.column1, ...</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">tableA [<span class="keyword">AS</span>] [<span class="keyword">INNER</span><span class="operator">|</span><span class="keyword">LEFT</span><span class="operator">|</span><span class="keyword">RIGHT</span><span class="operator">|</span><span class="keyword">FULL</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span>] tableB [<span class="keyword">AS</span>] b <span class="comment">--这里的as可以省略</span></span><br><span class="line"><span class="keyword">ON</span> a.column1 <span class="operator">=</span> b.column1 [AND...];</span><br></pre></td></tr></table></figure>

<br>
<br>

<p>Another inner join example:</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> a.<span class="operator">*</span>, b.<span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> clean_data <span class="keyword">as</span> a, disk.master_v1 <span class="keyword">as</span> b</span><br><span class="line"><span class="keyword">WHERE</span> a.card_num<span class="operator">=</span>b.card_num;</span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">proc <span class="keyword">sql</span>;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> inner_join_master <span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> a.<span class="operator">*</span>, b.<span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> clean_data <span class="keyword">as</span> a <span class="keyword">inner</span> <span class="keyword">join</span> disk.master_v1 <span class="keyword">as</span> b</span><br><span class="line"><span class="keyword">on</span> a.card_num <span class="operator">=</span> b.card_num;</span><br><span class="line">quit;</span><br></pre></td></tr></table></figure>

<div class="note ">
            <p>If we have two keys in the right table, only have one in left table. Join(inner + left + right) will keep two keys in right table and two copy of info in the joined table.</p>
          </div>

<div class="note ">
            <p>If we have two keys in the right table, have two in left table as well. Join(inner + left + right) will have 4 results.</p>
          </div>

<br>
<br>

<h3 id="combine-two-tables-right-and-left-relationship"><a href="#combine-two-tables-right-and-left-relationship" class="headerlink" title="combine two tables(right and left relationship)"></a>combine two tables(right and left relationship)</h3><p>Relational database, using JOIN clause</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">left</span> ( id <span class="type">INTEGER</span>, description TEXT );</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">right</span> ( id <span class="type">INTEGER</span>, description TEXT );</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">left</span> <span class="keyword">VALUES</span> ( <span class="number">1</span>, <span class="string">&#x27;left 01&#x27;</span> );</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">left</span> <span class="keyword">VALUES</span> ( <span class="number">2</span>, <span class="string">&#x27;left 02&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">right</span> <span class="keyword">VALUES</span> ( <span class="number">1</span>, <span class="string">&#x27;right 06&#x27;</span> );</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">right</span> <span class="keyword">VALUES</span> ( <span class="number">2</span>, <span class="string">&#x27;right 07&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="keyword">left</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="keyword">right</span>;</span><br><span class="line"></span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>这里拼起来(<span class="keyword">inner</span> <span class="keyword">join</span>, 只有id有重叠的行会<span class="keyword">join</span>)</span><br><span class="line"><span class="keyword">SELECT</span> l.description <span class="keyword">AS</span> <span class="keyword">left</span>, r.description <span class="keyword">AS</span> <span class="keyword">right</span></span><br><span class="line">  <span class="keyword">FROM</span> <span class="keyword">left</span> <span class="keyword">AS</span> l</span><br><span class="line">  <span class="keyword">JOIN</span> <span class="keyword">right</span> <span class="keyword">AS</span> r <span class="keyword">ON</span> l.id <span class="operator">=</span> r.id <span class="operator">/</span><span class="operator">/</span>用<span class="keyword">on</span>来告诉他们用什么<span class="keyword">condition</span>来<span class="keyword">join</span>(<span class="keyword">intersection</span>)</span><br><span class="line">  ;</span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">/</span><span class="operator">/</span>(<span class="keyword">outer</span> <span class="keyword">join</span>, 全部<span class="keyword">join</span>)</span><br><span class="line"><span class="keyword">SELECT</span> l.description <span class="keyword">AS</span> <span class="keyword">left</span>, r.description <span class="keyword">AS</span> <span class="keyword">right</span></span><br><span class="line">  <span class="keyword">FROM</span> <span class="keyword">left</span> <span class="keyword">AS</span> l</span><br><span class="line">  <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> <span class="keyword">right</span> <span class="keyword">AS</span> r <span class="keyword">ON</span> l.id <span class="operator">=</span> r.id <span class="operator">/</span><span class="operator">/</span>没有数据的地方就会生成<span class="keyword">NULL</span></span><br><span class="line">  ;</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> s.id <span class="keyword">AS</span> sale, s.date, i.name, i.description, s.price<span class="operator">/</span><span class="operator">/</span>这里可以选更多的一起放到表格里来</span><br><span class="line">  <span class="keyword">FROM</span> sale <span class="keyword">AS</span> s</span><br><span class="line">  <span class="keyword">JOIN</span> item <span class="keyword">AS</span> i <span class="keyword">ON</span> s.item_id <span class="operator">=</span> i.id</span><br><span class="line">  ;</span><br></pre></td></tr></table></figure>

<br>
<br>

<h3 id="junction-table-many-to-many-relationship"><a href="#junction-table-many-to-many-relationship" class="headerlink" title="junction table(many to many relationship)"></a>junction table(many to many relationship)</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> customer;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> item;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> sale;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> c.name <span class="keyword">AS</span> Cust, c.zip, i.name <span class="keyword">AS</span> Item, i.description, s.quantity <span class="keyword">AS</span> Quan, s.price <span class="keyword">AS</span> Price</span><br><span class="line">  <span class="keyword">FROM</span> sale <span class="keyword">AS</span> s</span><br><span class="line">  <span class="keyword">JOIN</span> item <span class="keyword">AS</span> i <span class="keyword">ON</span> s.item_id <span class="operator">=</span> i.id</span><br><span class="line">  <span class="keyword">JOIN</span> customer <span class="keyword">AS</span> c <span class="keyword">ON</span> s.customer_id <span class="operator">=</span> c.id</span><br><span class="line">  <span class="keyword">ORDER</span> <span class="keyword">BY</span> Cust, Item</span><br><span class="line">;</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> customer ( name ) <span class="keyword">VALUES</span> ( <span class="string">&#x27;Jane Smith&#x27;</span> );</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> customer;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- left joins</span></span><br><span class="line"><span class="keyword">SELECT</span> c.name <span class="keyword">AS</span> Cust, c.zip, i.name <span class="keyword">AS</span> Item, i.description, s.quantity <span class="keyword">AS</span> Quan, s.price <span class="keyword">AS</span> Price</span><br><span class="line">  <span class="keyword">FROM</span> customer <span class="keyword">AS</span> c</span><br><span class="line">  <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> sale <span class="keyword">AS</span> s <span class="keyword">ON</span> s.customer_id <span class="operator">=</span> c.id</span><br><span class="line">  <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> item <span class="keyword">AS</span> i <span class="keyword">ON</span> s.item_id <span class="operator">=</span> i.id</span><br><span class="line">  <span class="keyword">ORDER</span> <span class="keyword">BY</span> Cust, Item</span><br><span class="line">;</span><br></pre></td></tr></table></figure>

<br>
<br>

<h3 id="UNION"><a href="#UNION" class="headerlink" title="UNION"></a>UNION</h3><p>合并table.多列变一列.<br>Union中会选择union前的column name作为最后的column name.</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> column_name(s) <span class="keyword">FROM</span> table1</span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span> column_name(s) <span class="keyword">FROM</span> table2;</span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> column_name(s) <span class="keyword">FROM</span> table1</span><br><span class="line"><span class="keyword">UNION</span> <span class="keyword">ALL</span></span><br><span class="line"><span class="keyword">SELECT</span> column_name(s) <span class="keyword">FROM</span> table2;</span><br></pre></td></tr></table></figure>
<p>注:<br>Union 会默认remove duplicated rows,union all不会.</p>
<br>
<br>
<br>

<h2 id="SQL-string"><a href="#SQL-string" class="headerlink" title="SQL string"></a>SQL string</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">/</span><span class="operator">/</span> <span class="keyword">in</span> standard <span class="keyword">sql</span> <span class="keyword">case</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">&#x27;a literal sql string&#x27;</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">&#x27;if we need a single quote in our string we do &#x27;&#x27;two single quote to represent one&#x27;</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">&#x27;we can also&#x27;</span> <span class="operator">||</span> <span class="string">&#x27;connect string&#x27;</span> <span class="operator">||</span> <span class="string">&#x27;like this&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p>每个system不大一样,记得查看documentation.<br>// in SQLite case</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">/</span><span class="operator">/</span>string length</span><br><span class="line"><span class="keyword">SELECT</span> LENGTH(<span class="string">&#x27;string&#x27;</span>);</span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">/</span><span class="operator">/</span>数每一个city的名字长度,从大到小排序.</span><br><span class="line"><span class="keyword">SELECT</span> Name, LENGTH(Name) <span class="keyword">AS</span> Len <span class="keyword">FROM</span> City <span class="keyword">ORDER</span> <span class="keyword">BY</span> Len <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">/</span><span class="operator">/</span>substring</span><br><span class="line"><span class="keyword">SELECT</span> SUBSTR(<span class="string">&#x27;this string&#x27;</span>, <span class="number">6</span>);<span class="operator">/</span><span class="operator">/</span><span class="keyword">second</span> argument <span class="keyword">is</span> the starting position, <span class="keyword">return</span> <span class="string">&#x27;string&#x27;</span></span><br><span class="line"><span class="keyword">SELECT</span> SUBSTR(<span class="string">&#x27;this string&#x27;</span>, <span class="number">6</span>, <span class="number">3</span>);<span class="operator">/</span><span class="operator">/</span>third argument <span class="keyword">is</span> the length <span class="keyword">of</span> <span class="keyword">return</span>,<span class="keyword">return</span> <span class="string">&#x27;str&#x27;</span></span><br></pre></td></tr></table></figure>
<p>截取string可以用于改名.</p>
<br>
<br>

<h3 id="TRIM"><a href="#TRIM" class="headerlink" title="TRIM"></a>TRIM</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">TRIM</span>(<span class="string">&#x27;   string   &#x27;</span>);<span class="operator">/</span><span class="operator">/</span>会remove <span class="keyword">all</span> spaces</span><br><span class="line"><span class="keyword">SELECT</span> LTRIM(<span class="string">&#x27;   string   &#x27;</span>);<span class="operator">/</span><span class="operator">/</span>remove spaces <span class="keyword">from</span> beginning</span><br><span class="line"><span class="keyword">SELECT</span> RTRIM(<span class="string">&#x27;   string   &#x27;</span>);<span class="operator">/</span><span class="operator">/</span>remove spaces <span class="keyword">from</span> the <span class="keyword">end</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">TRIM</span>(<span class="string">&#x27;...string...&#x27;</span>, <span class="string">&#x27;.&#x27;</span>);<span class="operator">/</span><span class="operator">/</span><span class="keyword">second</span> statement是要remove的<span class="type">character</span></span><br></pre></td></tr></table></figure>

<br>
<br>

<h3 id="UPPER-and-LOWER"><a href="#UPPER-and-LOWER" class="headerlink" title="UPPER and LOWER"></a>UPPER and LOWER</h3><p>they convert ASCII characters</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="string">&#x27;StRiNg&#x27;</span> <span class="operator">=</span> <span class="string">&#x27;string&#x27;</span>;<span class="operator">/</span><span class="operator">/</span>this <span class="keyword">returns</span> <span class="literal">false</span>,大小写matters</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">LOWER</span>(<span class="string">&#x27;StRiNg&#x27;</span>) <span class="operator">=</span> <span class="built_in">LOWER</span>(<span class="string">&#x27;string&#x27;</span>);<span class="operator">/</span><span class="operator">/</span><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">UPPER</span>(<span class="string">&#x27;StRiNg&#x27;</span>) <span class="operator">=</span> <span class="built_in">UPPER</span>(<span class="string">&#x27;string&#x27;</span>);<span class="operator">/</span><span class="operator">/</span><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">UPPER</span>(Name) <span class="keyword">FROM</span> City <span class="keyword">ORDER</span> <span class="keyword">BY</span> Name;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">LOWER</span>(Name) <span class="keyword">FROM</span> City <span class="keyword">ORDER</span> <span class="keyword">BY</span> Name;</span><br></pre></td></tr></table></figure>

<br>
<br>

<h2 id="SQL-number"><a href="#SQL-number" class="headerlink" title="SQL number"></a>SQL number</h2><p>again:每个system都不一样<br>fundamental numeric types: real &amp; integer<br>integer types:</p>
<img src="/blog/2020/11/24/P134/P134_2.png" class="">
<img src="/blog/2020/11/24/P134/P134_3.png" class="">
<p>real number sacrifice accuracy for scale.</p>
<br>
<br>

<h3 id="TYPEOF"><a href="#TYPEOF" class="headerlink" title="TYPEOF"></a>TYPEOF</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> TYPEOF( <span class="number">1</span> <span class="operator">+</span> <span class="number">1</span> );<span class="operator">/</span><span class="operator">/</span><span class="type">integer</span></span><br><span class="line"><span class="keyword">SELECT</span> TYPEOF( <span class="number">1</span> <span class="operator">+</span> <span class="number">1.0</span> );<span class="operator">/</span><span class="operator">/</span><span class="type">real</span></span><br><span class="line"><span class="keyword">SELECT</span> TYPEOF(<span class="string">&#x27;panda&#x27;</span>);<span class="operator">/</span><span class="operator">/</span>text</span><br><span class="line"><span class="keyword">SELECT</span> TYPEOF(<span class="string">&#x27;panda&#x27;</span> <span class="operator">+</span> <span class="string">&#x27;koala&#x27;</span>);<span class="operator">/</span><span class="operator">/</span><span class="type">integer</span> <span class="operator">-</span><span class="operator">&gt;</span> 注意这里每个<span class="keyword">system</span>都可能不一样,在这个情况下先string <span class="keyword">convert</span> <span class="keyword">to</span> <span class="type">integer</span>再加在一起</span><br></pre></td></tr></table></figure>

<br>
<br>

<h3 id="CAST"><a href="#CAST" class="headerlink" title="CAST"></a>CAST</h3><p>cast用于转换数据类型.cast(express as datatype)<br>//integer的result always be integer</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="number">1</span> <span class="operator">/</span> <span class="number">2</span>;<span class="operator">/</span><span class="operator">/</span><span class="keyword">result</span> <span class="keyword">is</span> <span class="number">0</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="number">1.0</span> <span class="operator">/</span> <span class="number">2</span>;<span class="operator">/</span><span class="operator">/</span><span class="keyword">result</span> <span class="number">0.5</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CAST</span>(<span class="number">1</span> <span class="keyword">AS</span> <span class="type">REAL</span>) <span class="operator">/</span> <span class="number">2</span>;<span class="operator">/</span><span class="operator">/</span><span class="keyword">result</span> <span class="number">0.5</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="number">17</span> <span class="operator">/</span> <span class="number">5</span>;<span class="operator">/</span><span class="operator">/</span><span class="keyword">result</span> <span class="number">3</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="number">17</span> <span class="operator">/</span> <span class="number">5</span>, <span class="number">17</span> <span class="operator">%</span> <span class="number">5</span>;<span class="operator">/</span><span class="operator">/</span><span class="keyword">result</span> <span class="number">3</span> <span class="keyword">with</span> remainder <span class="keyword">of</span> <span class="number">2</span></span><br></pre></td></tr></table></figure>
<p>cast可以用来拼接字符串.先把数字转换成char,在用｜｜拼接.可以拼成百分号的数字.</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Cast</span>(round((high<span class="operator">-</span>low)<span class="operator">/</span>(<span class="keyword">open</span><span class="operator">+</span><span class="keyword">close</span>) <span class="operator">*</span> <span class="number">2</span>,<span class="number">2</span>) <span class="operator">*</span> <span class="number">100</span> <span class="keyword">as</span> <span class="type">varchar</span>) <span class="operator">||</span> <span class="string">&#x27;%&#x27;</span> <span class="keyword">as</span> vol(别名)</span><br></pre></td></tr></table></figure>

<br>
<br>

<h3 id="ROUND"><a href="#ROUND" class="headerlink" title="ROUND"></a>ROUND</h3><p>四舍五入函数.<br>round(expression, precision精度)<br>精度可以是负数,保留到百位.</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="number">2.55555</span>;</span><br><span class="line"><span class="keyword">SELECT</span> ROUND(<span class="number">2.55555</span>);<span class="operator">/</span><span class="operator">/</span><span class="keyword">result</span> <span class="keyword">is</span> <span class="number">3</span></span><br><span class="line"><span class="keyword">SELECT</span> ROUND(<span class="number">2.55555</span>, <span class="number">3</span>);<span class="operator">/</span><span class="operator">/</span><span class="number">2.556</span>, <span class="keyword">second</span> <span class="keyword">is</span> 位数</span><br><span class="line"><span class="keyword">SELECT</span> ROUND(<span class="number">2.55555</span>, <span class="number">0</span>);<span class="operator">/</span><span class="operator">/</span><span class="keyword">default</span>,也就是到整数位</span><br></pre></td></tr></table></figure>

<br>
<br>
<br>

<h2 id="SQL-date-and-time"><a href="#SQL-date-and-time" class="headerlink" title="SQL date and time"></a>SQL date and time</h2><p>SQL store date and time in UTC</p>
<p>//for SQLite</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> DATETIME(<span class="string">&#x27;now&#x27;</span>);<span class="operator">/</span><span class="operator">/</span><span class="keyword">in</span> UTC <span class="operator">-</span><span class="operator">&gt;</span> ‘<span class="number">2020</span><span class="number">-11</span><span class="number">-24</span> <span class="number">15</span>:<span class="number">07</span>:<span class="number">13</span>’</span><br><span class="line"><span class="keyword">SELECT</span> <span class="type">DATE</span>(<span class="string">&#x27;now&#x27;</span>);<span class="operator">/</span><span class="operator">/</span><span class="operator">-</span><span class="operator">&gt;</span> ‘<span class="number">2020</span><span class="number">-11</span><span class="number">-24</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">SELECT TIME(&#x27;</span>now<span class="string">&#x27;);//-&gt;&#x27;</span><span class="number">15</span>:<span class="number">07</span>:<span class="number">13</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">SELECT DATETIME(&#x27;</span>now<span class="string">&#x27;, &#x27;</span><span class="operator">+</span><span class="number">1</span> <span class="keyword">day</span><span class="string">&#x27;);</span></span><br><span class="line"><span class="string">SELECT DATETIME(&#x27;</span>now<span class="string">&#x27;, &#x27;</span><span class="operator">+</span><span class="number">3</span> days<span class="string">&#x27;);</span></span><br><span class="line"><span class="string">SELECT DATETIME(&#x27;</span>now<span class="string">&#x27;, &#x27;</span><span class="number">-1</span> <span class="keyword">month</span><span class="string">&#x27;);</span></span><br><span class="line"><span class="string">SELECT DATETIME(&#x27;</span>now<span class="string">&#x27;, &#x27;</span><span class="operator">+</span><span class="number">1</span> <span class="keyword">year</span><span class="string">&#x27;);</span></span><br><span class="line"><span class="string">SELECT DATETIME(&#x27;</span>now<span class="string">&#x27;, &#x27;</span><span class="operator">+</span><span class="number">3</span> hours<span class="string">&#x27;, &#x27;</span><span class="operator">+</span><span class="number">27</span> minutes<span class="string">&#x27;, &#x27;</span><span class="number">-1</span> <span class="keyword">day</span><span class="string">&#x27;, &#x27;</span><span class="operator">+</span><span class="number">3</span> years<span class="string">&#x27;);</span></span><br></pre></td></tr></table></figure>
<p>关于sql还有一个截取时间的办法.</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">Strftime(format, timestring[,modifiers])</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>format</th>
<th>explanation</th>
</tr>
</thead>
<tbody><tr>
<td>%Y</td>
<td>year with century(yyyy)</td>
</tr>
<tr>
<td>%m</td>
<td>month(01-12)</td>
</tr>
<tr>
<td>%d</td>
<td>day of the month(1-31)</td>
</tr>
<tr>
<td>%H</td>
<td>hour on 24-hour clock(00-23)</td>
</tr>
<tr>
<td>%M</td>
<td>minute(00-59)</td>
</tr>
<tr>
<td>%S</td>
<td>second(00-59)</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>timestring</th>
<th>explanation</th>
</tr>
</thead>
<tbody><tr>
<td>now</td>
<td>now is a literal used to return the current date</td>
</tr>
<tr>
<td>YYYY-MM-DD</td>
<td>date value formatted as ‘YYYY-MM-DD’</td>
</tr>
<tr>
<td>HH:MM:SS.SSS</td>
<td>HH:MM:SS.SSS</td>
</tr>
</tbody></table>
<p>对于timestamp来说,可以用 <a href="https://www.w3schools.com/sql/func_sqlserver_datepart.asp">datepart()</a> function来分别时间和日期.</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> datepart(<span class="type">timestamp</span>) <span class="keyword">as</span> <span class="type">date</span> format<span class="operator">=</span><span class="type">date</span> <span class="comment">--通过format转换成看得懂的格式</span></span><br></pre></td></tr></table></figure>

<br>
<br>
<br>

<h2 id="Aggregate-聚合函数"><a href="#Aggregate-聚合函数" class="headerlink" title="Aggregate(聚合函数)"></a>Aggregate(聚合函数)</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">/</span><span class="operator">/</span>here we count <span class="keyword">all</span> countries</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> Country;</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--here we count all countries in different region</span></span><br><span class="line"><span class="keyword">SELECT</span> Region, <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">AS</span> Count</span><br><span class="line">  <span class="keyword">FROM</span> Country</span><br><span class="line">  <span class="keyword">GROUP</span> <span class="keyword">BY</span> Region</span><br><span class="line">  <span class="keyword">ORDER</span> <span class="keyword">BY</span> Count <span class="keyword">DESC</span>, Region</span><br><span class="line">;</span><br></pre></td></tr></table></figure>

<p>GROUP BY:用于分组.</p>
<div class="note ">
            <p>The GROUP BY clause allows you to apply the summary functions to a group of observations (the same as CLASS statement in PROC MEANS), you only need it when you apply summary functions.</p>
          </div>

<p>如有以下的数据:</p>
<table>
<thead>
<tr>
<th>gender</th>
<th>height</th>
</tr>
</thead>
<tbody><tr>
<td>male</td>
<td>60</td>
</tr>
<tr>
<td>female</td>
<td>70</td>
</tr>
</tbody></table>
<p>我们通过group by gender来求不同gender的height mean.</p>
<div class="note ">
            <p>If you specify a GROUP BY clause in a query that does not contain a summary<br>function, your clause is changed to an ORDER BY clause, and a message to<br>that effect is written to the SAS log.</p>
          </div>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> cty, mean(amount) <span class="keyword">as</span> Avg_fraud_dollar <span class="keyword">from</span> disk.txn_data_v9 <span class="keyword">where</span> fraud<span class="operator">=</span><span class="string">&#x27;Yes&#x27;</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> cty <span class="keyword">having</span> <span class="built_in">count</span>(<span class="operator">*</span>)<span class="operator">&gt;=</span><span class="number">1000</span>;</span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> column1,column2,columnN,</span><br><span class="line">  <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">as</span> rec_per_group  <span class="comment">--一般会用COUNT(*),因为返回不会为0.</span></span><br><span class="line"><span class="keyword">FROM</span> table_name</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> column1,column2,columnN;</span><br></pre></td></tr></table></figure>

<div class="note ">
            <p>如果用group by搜寻max,每一组只会返回一个数据,在同时出现两个max的情况下,我们可以先找出每组的最高,再用这个数据去搜索拥有最高的人.</p>
          </div>

<div class="note ">
            <p>select和group by的列得对应.如果run出来有问题…可以试试在group by里增加全select的列.</p>
          </div>

<br>
<br>

<h3 id="HAVING-and-WHERE"><a href="#HAVING-and-WHERE" class="headerlink" title="HAVING and WHERE"></a>HAVING and WHERE</h3><p>对分组进行筛选.会需要先group by再用having筛选.</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> a.title <span class="keyword">AS</span> Album, <span class="built_in">COUNT</span>(t.track_number) <span class="keyword">as</span> Tracks</span><br><span class="line">  <span class="keyword">FROM</span> track <span class="keyword">AS</span> t</span><br><span class="line">  <span class="keyword">JOIN</span> album <span class="keyword">AS</span> a</span><br><span class="line">    <span class="keyword">ON</span> a.id <span class="operator">=</span> t.album_id</span><br><span class="line">  <span class="keyword">WHERE</span> a.artist <span class="operator">=</span> <span class="string">&#x27;The Beatles&#x27;</span></span><br><span class="line">  <span class="keyword">GROUP</span> <span class="keyword">BY</span> a.id</span><br><span class="line">  <span class="keyword">HAVING</span> Tracks <span class="operator">&gt;=</span> <span class="number">10</span> <span class="comment">--using having clause similar to where</span></span><br><span class="line">  <span class="keyword">ORDER</span> <span class="keyword">BY</span> Tracks <span class="keyword">DESC</span>, Album</span><br><span class="line">;</span><br></pre></td></tr></table></figure>

<div class="note ">
            <p>where和having的区别.<br>where用于选行,having用于选组.<br>where比having先run.<br>where不可以但having可以加summary function.(where后不可以加单个variable的summary function)</p>
          </div>

<br>
<br>

<h3 id="AVG-and-MIN-MAX-and-SUM"><a href="#AVG-and-MIN-MAX-and-SUM" class="headerlink" title="AVG and MIN, MAX and SUM"></a>AVG and MIN, MAX and SUM</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(Population) <span class="keyword">FROM</span> Country;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">AVG</span>(Population) <span class="keyword">FROM</span> Country;</span><br><span class="line"><span class="keyword">SELECT</span> Region, <span class="built_in">AVG</span>(Population) <span class="keyword">FROM</span> Country <span class="keyword">GROUP</span> <span class="keyword">BY</span> Region;</span><br><span class="line"><span class="keyword">SELECT</span> Region, <span class="built_in">MIN</span>(Population), <span class="built_in">MAX</span>(Population) <span class="keyword">FROM</span> Country <span class="keyword">GROUP</span> <span class="keyword">BY</span> Region;</span><br><span class="line"><span class="keyword">SELECT</span> Region, <span class="built_in">SUM</span>(Population) <span class="keyword">FROM</span> Country <span class="keyword">GROUP</span> <span class="keyword">BY</span> Region;</span><br></pre></td></tr></table></figure>
<p>注,sum一定要写在最外面,sum多项时是sum(A,B,C).</p>
<p>sum(A)会从上到下sum A中的所有值.<br>sum(A,B)会从左到右从上到下sum A B中所有值.</p>
<p>注,语法顺序:</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> column1, column2, columnN, <span class="built_in">sum</span>(columnX)</span><br><span class="line"><span class="keyword">FROM</span> table_name</span><br><span class="line"><span class="keyword">WHERE</span> [ <span class="keyword">condition</span> ]</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> column1, column2, columnN</span><br><span class="line"><span class="keyword">HAVING</span> [ <span class="keyword">condition</span> ]</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> column1, column2, columnN</span><br><span class="line">;</span><br></pre></td></tr></table></figure>
<p>所以group by后面接having,where不能用在group by后面.<br>where:在原表中筛选;having是筛完了后再筛.</p>
<div class="note ">
            <p>SELECT 6<br>FROM 1<br>WHERE 2<br>GROUP BY 3<br>HAVING 4<br>ORDER BY 5</p>
          </div>

<br>
<br>
<br>
]]></content>
      <categories>
        <category>数学笔记</category>
      </categories>
      <tags>
        <tag>编码</tag>
        <tag>以头抢地(诚)</tag>
        <tag>data</tag>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>The amazing treasure</title>
    <url>/blog/2014/04/04/P00A/</url>
    <content><![CDATA[<p>ˊ_&gt;ˋ</p>
<span id="more"></span>


<h2 id="作品介绍"><a href="#作品介绍" class="headerlink" title="作品介绍"></a>作品介绍</h2><img src="/blog/2014/04/04/P00A/doodle.jpg" class="">

<p><strong>帕大爷&amp;草稿系列</strong></p>
<p>你以为只是图文并茂的女子初中生的日常吗？大错！<br>这样抱歉的智商第一个选择肢就会死掉好吗！恩？<br>这可是不可多得的「人生的前辈教你在充满恶意的世界里欢快的玩耍」系列。<br>想知道怎么赶走占着你位置吃饭还不朝你卖萌的小学妹吗？<br>想知道怎么从校长每次都一样的国旗下讲话中听出究竟几点去他办公室一趟么？<br>想知道基佬们如何调教「此路是我开，欲想从此过，受老娘一踹」的傲娇妹子吗？<br>请勇敢的翻开帕草系列！</p>
<img src="/blog/2014/04/04/P00A/P00A.jpg" class="">

<br>
<br>
<br>

<p><strong>The amazing treasure</strong></p>
<p>有试过把浓度为49%的大叔心浸泡在浓度为51%的少女情怀中么？造出来的不是花花泡泡和毛毛，而是TAT。<br>总的来说是「三个小伙伴找婆家」的故事，其中一个最现充的家伙作者大人自然会代表3F团审判她的ˊ_&gt;ˋ<br>这是作者大人少女力最旺盛的时期超sweat的纯爱校园小说，不过因为少女心欠费停机什么时候再续前缘真是个好问题！</p>
<br>
<br>
<br>

<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="1"><a href="#1" class="headerlink" title="1"></a>1</h3><p>“子安，我跟你讲哦～”<br>“……”<br>“你知道王诩他昨天在网上跟我说什么吗？你肯定想不到！”<br>“……”<br>“他居然啊……喂！谢子安，你有没有在听我讲话！”<br>“我可是听得很认真啊。”<br>“那就起码给我有点正常人的反应！”<br>“哦～炎焱，你是谁？”<br>“……”<br>炎焱放弃了继续和我在人流里面自言自语，凭借着她作为女孩子十分灵巧的动作拉着我直奔操场。<br>哦，顺便一提，我也是女的。而且也是有点八卦……哦不，是很向往美好爱情的那种女的。<br>不过我那自认为是点到为止的高尚恶趣味，跟炎焱那种小八卦怡情，大八卦更怡情的理念一比实在是弱爆了。<br>好不容易穿过了教学楼到篮球场集合，因为我比较矮排的很后面的缘故，连带死活要跟我讲话的炎焱也一起被不断往前挤的男生撞得哀叫连连。<br>如果要说炎焱的优点的话，没准只有“话一旦讲了一点就绝对不能不讲完”这么勉强跟执着挂上钩的一条。<br>“子安，他昨天……喂，别撞！……他昨天一定要认我做妹妹.”<br>“……嗯。”我应了一声表示我在听，以免炎焱再次发飙拖延讲完的时间。我可不想冒着被老师抓包的风险听炎焱的烂桃花啊!<br>“他明明比我小的啊！可是他缠了我好久，我嫌他烦就答应了。结果他居然把我的照片放到了空间主页上！”<br>“……那很好啊。”<br>“你说他到底是什么意思啊，子安？”<br>“……大小姐,当然是对你有意思的意思！”<br>余光瞄到张秃子【我们班主任】已经在100+左右，我不得已开始使用激进手段逼炎焱速战速决。<br>出人意料的，这次炎焱没有追着我问“真的啊？”或者是“你怎么看出来的”这一类臭屁问题，而是直接高高兴兴地勾着我的脖子去做早操了。<br>这是什么神展开。<br>我摸了摸下巴 ……结果我发现我还是太天真了。<br>明明我的处境就很悲惨了，作为初三，而且是手不能提肩部能抗[……啊哈]的那种初三，要在全校两千多人中杀出一条血路，直捣四楼，何其辛酸！<br>而炎焱却在这个时候一派悠闲的继续早上的话题。“喂，子安，王诩是二年级的，我又不认识他，他怎么会突然喜欢我？”<br>这时候大概是王诩同班的女生正好也在旁边的人群里奋斗，听到这种炎焱式的问题都暧昧的挤来挤去，隐隐约约地漏出来几句像是“咦～”“哦～”之类的起哄次。<br>炎焱大概是有所察觉，安静了下来，低头手指拨弄着校服的扣子。<br>我转头看到炎焱带了几分男人英气的倔强侧脸，突然就滋生出了护短心理，感到那几个女生的聒噪嘴脸真是恶心透顶。<br>无聊间抬头看了看江南像抹布一样脏兮兮的天空，又突然意识那些女生的反应也是人之常情。<br>所以有的时候我会觉得，炎焱追着我问，也就是变相地表示“你是个说实话的大好人”之类的吧。</p>
<br>
<br>

<h3 id="2"><a href="#2" class="headerlink" title="2"></a>2</h3><p>我以为我和炎焱是最早回到教室的，没想到历史老早已等候多时，背着手看着讲台。<br>我暗暗地想，她估计又在纠结今天默写什么变态的题目。正牌课代表指不定在哪里沾花惹草，习惯于早会教室的沈燕然正苦命地被指使着发本子。<br>可能是长得高，校服尺码比较大的缘故，他在发作业的时候走来走去，衣服像是挂在身上，空荡荡的，好像能够听到风把布料吹得哐当哐当响。<br>炎焱哭丧着脸悄悄对我说：“完了，我这次默写肯定要重默了。”<br>说罢，炎焱急急地跑到沈燕然旁边，双手搭在本子上想要抽出自己的一看究竟。<br>沈燕然皱着眉头回头扫了一眼，大概发现是女生不好意思发作，就用食指和中指夹出了炎焱这一组的本子递给她，转过身继续发。<br>炎焱翻开自己的本子淡定道：“这节下课的重默老娘预约了。”顿了顿：“子安我祝你步入我的后尘。”<br>我刚想说我对昨天的默写可是有信心的很，沈燕然突然侧过脸，直接把本子全给我叫我自己找。<br>我想了想还是非常厚道地把我们这一组的本子都拿了出来，谁知沈燕然迅速地抽走了我的默写本，翻到昨天默写的那一页，眼神直勾勾地盯着本子，似乎是被什么有趣的东西吸引了。<br>喂- -再看我的本子也不会怀孕的好么！<br>虽然他根本没有看我，我还是觉得心里发毛，开始担心我是不是错的非常不靠谱。<br>我伸手强硬地抢回本子——什么嘛，明明是满分的，沈燕然刚刚那种表情是怎么回事！<br>我瞟了一眼沈燕然，他表情自然，解释说：“还好，写的都一样。”</p>
<br>
<br>

<h3 id="3"><a href="#3" class="headerlink" title="3"></a>3</h3><p>……让我混乱着吧。<br>对哦，下节是体育课诶。<br>只剩下了几个极度厌恶运动的女生还缩在座位上写作业，大部分人早野到哪里去都不知道了。<br>我因为手中还拿着啃了半个苹果的缘故，动作十分扭曲地把作业抱到沈燕然桌前，“啪——”地堆在了他桌上。<br>“……好粗鲁。”笙芋懒洋洋地吐槽道。<br>“-0-我的光荣使命就到此为止了，剩下的就让安卓兄自求多福吧！”我心疼地啃上略有些发黄的苹果。<br>这时杀千刀的上课铃突然响了起来，虽然体育课晚到一点事没有什么大问题啦，但是笙芋一定会拉着我死命冲下去的！<br>“啊啊啊——这是楼梯啊你给我住手！！要不要命啦——”</p>
<p>※</p>
<p>等到了楼下操场上，还是一派风和日丽万里无云。<br>女生在树荫下叽叽喳喳地聊着天，男生则打篮球的打篮球，踢足球的踢足球——体育老师在哪里都不知道！<br>“你那么急干吗！老师都没来呢！”我瞪我瞪我瞪！<br>“……咱觉得你好像有事要跟炎焱交待。”笙芋避重就轻道。<br>我赖在草地上努力想从笙芋牌云霄飞车中缓过来：“管他呢！”<br>“子安，咱觉得沈安卓出了岔子炎焱会很难过的。”<br>虽然嘴里扔出了叫我去找炎焱的重磅炸弹，但是笙芋还是以同样颓废的姿势坐在了草坪上。<br>“……你这个样子真的是在鼓动我吗？”我再次一脸正经地看着笙芋。<br>“当然，咱的心地可是大大的善良!”笙芋也努力绷着脸回答。<br>“那么……”就在我企图快速站起来顺便把笙芋扯起来的时候,她表情轻蔑地看了我一眼，拍拍屁股站了起来。<br>可恶！居然被她发现了！<br>“子安，咱可是很清楚你脑袋的回路的！”笙芋用很诡异的姿势挽着我的手，我的肩周快要转了270度了混蛋！<br>“不，笛子。你一定曲解了我的一番好意！”我暗中使力想要把手臂崴回正常的角度。<br>“放弃反抗吧，咱实心球满分的力气可不是盖的。”笙芋说罢又一收手——呜！你确定我现在的动作不像变异的招财猫？！<br>好在这时一直跟“情圣”陆海空相谈甚欢的炎焱注意到了我：“啊，子安！”炎焱一脸朝气地朝我微笑到。<br>呜——要是我的身边能再多几个这样心地善良的美少女，我的世界一定会美好很多的！！<br>我企图用怨念的眼神让肢解着我的手的恶婆婆怀孕。<br>“啊呀～～子安～”陆海空果然又一脸淫笑地用那种恶心巴拉的腔调打着招呼，子安这两个字从他嘴里吐出来实在是怂到了极点啊啊啊啊——！！<br>笙芋为了在雄性同胞面前维持仅存的一点女性特质，悻悻地松开了手。<br>哦也！我的手终于自由了！<br>当然，如果没有那个【咱们的帐待会继续算】的眼神就更好了- -<br>“咋了，你是不是想来告诉我我又变帅了？”<br>喂！那种一边拨头发一边坏笑的表情也贱过头了吧？！<br>“不，我有事要跟炎焱讲。”我闭上眼睛撇过头。<br>“嗯？啥事？”炎焱微微瞪大了眼睛。<br>“哦，就是……那个，刚刚音乐老师把本子搬来了，叫沈燕然发掉。<br>毫无预兆地，炎焱突然打断我，叉腰大喊道：“沈燕然————”<br>喂！怎么连炎焱都变得这么八婆！？我要对这个凶巴巴的世界失望了啦！！<br>“……咱觉得事情好像朝着你最讨厌的方向前进了。”笙芋在我耳边轻声道。<br>什么啊，这种事情～～你这混蛋心里想想就好了啊！！！<br>与此同时，远处打球的沈燕然听到炎焱的召唤早已一脸欢实地跑了过来，动作幅度很大地用肩膀上的布料擦着脸上的汗。<br>“诺，子安，他来了。你要讲什么就讲吧。”<br>炎焱把不明就里地沈燕然拉向同样不在状态中的我。<br>“喂喂，我叫你告诉他，没有叫你喊他来啊！”我欲哭无泪。<br>“啊呀……我记不住拉，你自己说！”炎焱继续死命往前拽那个僵硬到杵在原地的沈燕然。<br>“……”<br>“……子安你可不可以不要这么磨磨唧唧的，告白呢？”<br>笙芋胀大了鼻孔不满道。<br>然后———— 我见到了这一生的从所未见过的奇景————<br>沈安卓慢慢地脸红了。<br>陆海空又唯恐天下不乱地勾上了沈燕然的脖子，左右摇晃：“啊呀～燕然，好福气啊！安爷都跟你告白了还矜持个什么劲儿啊？咱安爷也算是个根正苗红地四好青年～然矮了一点你也不算吃亏啦～”<br>于是，沈安卓很成功地被忽悠的脸越来越红。<br>“……笛子。”<br>“哎～”<br>“那个……？”<br>“咱确定你木有看错，安卓兄真的脸红了。”<br>“……我们果然还是低估了沈安卓的版本。”<br>“子安，咱觉得你再接再厉说不定有希望让沈安卓卖萌的。”<br>—————————瞪！<br>我以凌厉的眼神结束了我和笙芋的“秘密谈话”。<br>“好了，陆海空，不要再逗燕然了！”炎焱拍掉了陆海空勾着沈燕然的手，陆海空顺势一脸无赖地握住了炎焱的手。<br>炎焱一记眼刀，陆海空依旧笑得毫无节操，炎焱只能讪讪开口：“子安就是告诉你音乐本子要怎么发。”<br>沈燕然终于看了我一眼，我努力摆出很正义的样子点点头，企图表达出“想歪你这个就太糟糕了！”的讯息。<br>“就是音乐老师说，最上面的本子不要发……”<br>“我知道了。”<br>尼玛又是什么神展开——！？？ 我居然被万年聋哑儿童给打断了！？这绝对不符合科学！<br>沈燕然凝视着我头上方的空气解释道：“老师昨天跟我说过了。”</p>
<br>
<br>

<h3 id="4"><a href="#4" class="headerlink" title="4"></a>4</h3><p>转眼就到了应该开运动会的时间嚯嚯嚯嚯～<br>※</p>
<p>“子安，陪咱去扔实心球吧！”<br>笙芋拉着我走在去找体育委员肖维报名的路上。<br>“……我会被实心球扔出去的。”<br>“少来了子安！不就比咱轻了那么几斤不要炫耀了！”<br>我摇摇头：“我们的差距恐怕不是几斤可以解决的。”<br>笙芋没什么表情地瞪了我一眼，转头对肖维大喊道：“我和子安都要报名！”<br>肖维立马笑成了一朵小菊花：“笙芋你是我们班运动会的元老了啦，肯定又是实心球对吧？”<br>笙芋点点头，又道：“有名额给子安么？”<br>“怎么会没有呢！女生根本求都求不动，笙芋大神你是我的福星～～”<br>肖维你的节操掉了一地赶快捡啊！<br>“不过——”肖维略迟疑地看向我，我一脸坦然的与他对视。<br>我相信以我这种万C丛中一点d的体育成绩一定不会有事情发生的啦～<br>“那子安你参加跳远吧！”肖维掂量了很久，似乎为我挑了一个最合适的。<br>“——！！你又要我一个一米58的去跳1米78的线！？”我暴走。<br>笙芋大笑着拍拍我的肩：“好吐槽啊！正中了咱的笑点！”<br>肖维摸摸鼻子，乘机劝说道：“啊呀子安，身高和体重都是成正比的嘛。何况就算你比人家矮了5公分，你肯定也比人家轻了十几斤，你很合算的！”<br>合算你妹！我才不告诉你我跳远测试的时候才跳了笙芋的高度呢！</p>
<blockquote>
<p>【注：笙芋约为163cm。提到这个得话就顺便一说炎焱是170cm。还有，女生跳远的优秀线是178cm】</p>
</blockquote>
<p>“肖维，如果你愿意拜读一下我的体育成绩单的话你就会发现，让我上场等于向年纪宣称我们班的人都死光了。”<br>我郑重地把手搭在肖维肩上，咧嘴阴森一笑：“在体育不及格这一方面，我可算是七项全能哦。”<br>于是肖维默默地夹着尾巴坐回了座位。</p>
<p>※</p>
<p>虽然运动会的报名表很早就填完了，但是运动会的日期还是一点风声也没有。<br>“简直禽兽不如啊！剧院还知道对等得不耐烦的观众说‘快开演了’呢，学校早点告诉我们运动会的日期会死啊！？”<br>陆海空在某节下课翘着二郎腿愤懑的吐槽道。<br>坐在陆海空左边的炎焱接话道：“就是啊，好歹要给我们这些在书堆里奋战的娃一点活下去的动力吧！”<br>因为我和笙芋就坐在炎焱前面的缘故，所以很自然地加入了谈话。<br>“那一天我一定要带来相机，把子安跑步的样子拍下来！心情不好的时候看看就会开心了，哈～！”笙芋看上去心情很好地笑道。<br>“不要做梦了，笛子！”我咬牙切齿。<br>“诶？子安跑步姿势很搞笑吗？”炎焱好奇地向笙芋冲了冲。<br>“不，主要是她的头发跑的时候……”笙芋皱着眉努力想着形容词。<br>哼，你这文盲是绝对不可能想到什么贴切的词来形容我艺术的头发的！<br>“参差披拂，随风飘荡。”陆海空从桌肚里拿出一瓶一升的农夫山泉喝了几口，缓缓道。<br>“……你这样乱装文化人柳宗元会很不高兴的！！”</p>
<p>※</p>
<p>结果没有等来运动会，反倒先等来了一个奇奇怪怪的知识竞赛。<br>“张勋、吴伟、凌佳怡、叶旖……沈燕然、陆海空、谢子安，你们下接下课去化学实验室。”<br>黄祺姐一口气报了一大串人名。<br>“什么情况啊？”我问道。<br>同样在要去实验室之列的黄祺姐耸了耸肩：“其实我也不知道啊。大概是什么比赛吧。”<br>“为什么想我这种万年吊车尾也会被委以重任！这绝对不符合科学！”陆海空仰天长啸。<br>张勋张大头鄙夷道：“谁让你考进了年纪前50啊。”<br>“咦，大头，你怎么一副很懂得样子？”<br>“废话，这种知识竞赛当然只能叫前50的人参加了！”张大头鄙视地看了我一眼就会座位上预习英语去了。<br>“啊啊啊啊——谁要那个狗屎运中来的31名谁拿去啊！爷一点不也稀罕——！”陆海空的再次仰天长叹成为了我们的班又一奇景。</p>
<p>※</p>
<p>比起其他人的萎靡不振，我还是屁颠颠地去了实验室，毕竟人家对于这种机密的培训充满了好奇呢！<br>————结果，当我发现满试卷的题目都是类似“什么水果放在冰箱里最好”和“5G手机要解决什么问题”的时候，我不负众望地怒了！<br>“什么鬼问题！把小爷的感动还回来！！”我愤愤地把竞赛需要作的试卷拍在桌上。<br>“子安，我们还是快写吧。不要到时候人都走光了。”黄祺姐用笔尾戳着腮帮子，似乎也是很苦恼的样子。<br>话说回来正常人都会感到愤怒的吧！<br>哪怕数学每天都发一整张试卷当回家作业，陆海空也会嬉皮笑脸地抱怨着一张没激情，而此刻那家伙一副【哗——】尽人亡的衰样，很明显地连陆海空的血槽都空了啊！<br>不，说起来的话，沈安卓似乎正满面红光地和张大头讨论着海岩的成份吧？！那种“我正面居然错了一道”之类的炎焱式吐槽给我咽回去！<br>“好——今天…发下去…的…卷子…你们好好…去做…”用来给我们物理开挂的老师又拖长音调地浪费着我们的时间。<br>另一旁的副校长终于忍不住：“这几天你们就以这个竞赛为重，作业不做也无所谓，我们跟老师说过了！现在发一下准考证，礼拜六上午去一中考试别忘了！”<br>“哦也！”沉默中我突然爆出了一句欢呼，引来了无数鄙视地目光。<br>我只能弱弱地解释：“哎呀，人家的补课被冲掉了很激动啦……”<br>还有一点小私心的话……就是人家真的很好奇安卓兄的私服会是怎么样的！<br>虽然同窗了三年，但就算严冬我们学校也要求像包抹布一样地在棉袄外面包着校服，安卓兄又不会像陆海空一样，在春游之类的场合很骚包地穿上私服！<br>人家真的很是好奇啦!</p>
<br>
<br>

<h3 id="5"><a href="#5" class="headerlink" title="5"></a>5</h3><p>虽然那个讨人厌的副校长似乎是有许诺一切以竞赛为重之类的，我们班的人也有达成“大家都不要做作业哦”之类的协约！<br>但是只要有一个人背离了组织，我们全都会被老师怒斥的啊！<br>于是第二天我们全都很卑鄙地交出了作业……</p>
<p>※</p>
<p>作为一个初三学生，考试什么的当然是家常便饭了啊……不过我上晚体育课回来看到我只有83分的化学试卷还是暴走了！<br>“混蛋啊啊啊啊————！！”<br>我大力地把它塞进了书包最后一格。<br>“张勋，你几分？”陆海空一脸阴郁地问向年级里的千年老二。<br>看他那吃瘪的神情！一定考得比我还要糟糕～呼呼～<br>“93，你呢？”<br>我还没来得及在心里吧张大头碎尸万段，就听到陆海空答道：“我才考了90，靠！”<br>靠你妹妹的！都给我去死一死！！<br>“沈燕然那个老变态考99！”<br>【——————此内容涉及暴力行为——已和谐】<br>我非常郁闷的回家，爬上扣扣【今天礼拜五】。<br>笙芋的头像句一闪一闪地亮着。<br>【……小电截】<br>糟糕！这样会不会太没骨气了一点！</p>
<p>※</p>
<p>第二天我兴冲冲地去了考场。<br>而且————是空着手的那种。<br>不要说人家个个准备充分地背了一包资料，我只是在裤兜里塞了一只黑笔啊！<br>连答题卡都涂不了- -<br>于是我在大门口泪目着问门卫着借了一枝2b铅笔，门卫上上下下打量着我说：“来旅游的？”<br>氧化钙！当你们学校清华北大啊还能整个一日游！<br>好吧，其实我听出来了门卫在揶揄我，人家只不过是兴奋了一点外加顺便翻出了自己最休闲的运动服而已！<br>【我真的想象不粗沈燕然会穿除了运动服以外的衣服】，如果真的不小心跟安卓兄的衣服款式很情侣也绝对是个巧合～<br>巧合……等等！<br>话说我的一大目的不是来看沈安卓的吗！<br>可是现在大门口已经没有人了Orz！！<br>“小姑娘，还有5分钟就开考了……”<br>“告非啊啊啊啊啊————”【冲刺————<br>当我极速奔跑的时候，我的大脑非常平稳地呼叫了上帝——<br>我：“喂，你该不会是发现了我的企图，故意让我见不到沈安卓的吧！”<br>上：“被你发现了。”<br>我：“你太卑鄙了！！！！”<br>上：“你才卑鄙！你们全家都卑鄙！你看上的那些呆子都卑鄙！”<br>————真是抱歉，y中的学长们。那个一边狂奔一边对天竖中指的奇葩正是在下。</p>
<p>※</p>
<p>考试嘛……<br>考来考去也就那个样儿呗。<br>尤其是对着这一堆奇奇怪怪地题目，根本没有在靠语数英时那种【分分必挣，一分20名】的紧张想法。<br>考完后虽然木有任何东西可以整理，但我还是磨磨蹭蹭的在草稿纸上阴印的了个“子安”才走出考场。<br>“连草稿纸都要交，实在是小气过分了吧！！”<br>我对恰好遇到的叶弈说道 “我觉得完蛋了～～～”<br>明明是很糟糕的内容，叶弈却把豆豆眼咪成一条缝，满面春光。<br>“喂……你的语气至少不要太高兴吧！”我随口地吐槽。<br>叶弈被说惯了也毫不在意：“话说我这次化学只考了95呀，沈燕然那个老变态怎么考到的99！”<br>不不不……我觉得叶弈的分数是女生里最高的了吧！？<br>“……呵呵。”<br>“哎呀我这次真的金钥匙真的完～蛋～了～”叶弈依旧笑眯眯。<br>“你咋知道？”<br>“我刚跟张勋对大题目，圆柱面积的那个我算错了。”<br>所以明明这次真的是很糟糕的事，叶弈的眼睛也没有睁开。<br>“那应该是多少？”<br>“435π”<br>我伸出右手对着地面默默地比了个v。<br>这时候居然有个人逆着出考场的人流走来。<br>100米——<br>个子跟死安卓差不多哈。<br>50米——<br>哟，瘦啦吧唧的，跟沈安卓真挺像。<br>30米——<br>啊呀，我怎么觉得他在盯着我看？<br>10米—— 泥煤那个不是沈燕然吗！！！<br>沈燕然上身穿着墨绿和黑色渐变的运动外套，下面是最普通的运动裤。<br>就在我盯着安卓的腿感叹腿长穿啥衣服都会让人感觉清奇一点时，沈燕然自然地停下来：“有没有看到张勋？”<br>其实我肯定没有很丢脸的当机，只不过叶弈着家伙似乎对安卓的高分怀恨在心，超快地答了一句：“没有！”<br>沈燕然看向我，我只能配合地摇摇头。<br>沈安卓淡定地朝我点点头，“哦”了一声就大步前进了。<br>然后我抬起头对天空说：“其实我一直觉得你是个好人。”<br>奇怪，我怎么觉得那朵云像是竖起的中指呢……</p>
<br>
<br>

<h3 id="6"><a href="#6" class="headerlink" title="6"></a>6</h3><p>金钥匙告以段落后大家都木有什么心思学习就迎来了初中生涯最后一格运动会～！</p>
<p>“好歹是你的人生中最后一次运动会啊，一起范儿吧子安！”<br>“……我死之前的最后一次运动会居然在范儿？！我会从棺材里跳出来的！”<br>“咱真的很想拍你的头发。”<br>“你不如去拍沈安卓的卖萌照。”<br>“……”<br>“……”<br>“miku和luka的那首歌真的很棒，咱还特低去下了高清版的。”<br>“你除了胸部以外跟miku有相似点吗？！”<br>“谢子安你不要欺人太甚！！你也没有luka那么带感的长发吧！”<br>“我不稀罕啊～”<br>嘛，忽略笙芋那个家伙闷骚的嗓音，运动会着实想凉风一般吹进了我炽热的少年心～<br>“暂停一下脑补，咱要先去确认一下比赛时间。”笙芋指了指写着“3024”的号码牌。<br>“……我们学校真是越来越颓废了。”<br>在我的映像里号码什么的不是应该帅气地直接印在衣服上的吗。<br>“就是啊，去年好歹还是一块布，今年就是一片贴纸了！”笙芋愤愤地把贴纸拍到了胸脯上。<br>的确啊，想大海般广阔平坦的胸脯贴上号码牌真是在合适没有了！<br>大概是察觉到了我锁定在某处的目光，笙芋在我看来是一脸羞愧【以她自己说是大义凌然】地拍了我一下：“走了啦！”<br>于是我们找到窝在树下打牌的体育委员肖维：“喂，时间表交出来啦！”<br>肖维翻了两个白眼，看看我又看看笙芋最后咽了一口口水：“我那啥……忘记了再谁那里了。”<br>我的黄金左手暗暗地握紧了。<br>可惜它没有笙芋的力量。<br>所以我又放开了——<br>“你个混蛋今天请我吃饭哟～” ?</p>
<br>
<br>

<h3 id="7"><a href="#7" class="headerlink" title="7"></a>7</h3><p>体育渣渣如我，偶尔也是会为一堂体育课欢喜的。<br>比如….吃饭前那堂。<br>但是我的体育老师老张，能像尊佛一样坐在跑道上拦截窝们，作为一个八尺男儿更是一口一个【安安】叫的倍儿顺，所以我永远要在【费尽心机收买老张】和【含羞忍辱地等狂奔而来的草泥马们】中纠结。<br>而此刻的我，正和笙芋炎炎走在人身的康庄大道…哦不，青春的跑道上。<br>【笛子，窝们又一次站在了选择肢上，请指示！】<br>【存档啊饭桶。】笙芋甩着她的饭盒，不知有没有介绍过，那是个状如地雷的小绿皮，每次笙芋甩着他走都让我觉得很像个排雷兵，于是我给它起名为【饭思密达盒夫斯继准将】，笙芋却坚持认为它是爵士。<br>【老板，请提供建设性意见！】我果断转向了炎炎。<br>【诶诶！要我说吗…..虽然不早去打饭很可惜但是…遇到老师怎么办！老师可是时常出没的.不过早去应该会有好菜….】炎炎纠结地转着衬衫扣子。<br>【算了，问你这种中都选择恐惧症的软妹是我的错….笛子，上不上给个准话！】<br>【安子，我堵上我作为艺术生的专业素养，这一战咱会赢得！！】<br>很好！士气高昂，忽略炎炎和笙芋在她有没有专业素养上的纠结，我只要伸进口代里准备好我心爱的小饭卡，小饭卡…咦！？<br>【子安，你怎么有点心不在焉的?】炎炎探过头担忧到。<br>【不，只是不想听她女儿是被火车撞死的还是饿死的罢了】我搜寻完了裤袋，开始搜衣袋。<br>【什么啊，咱今天讲的是上次看上的颜料！】笙芋举起准将摆出攻击姿势。<br>而声明大义的我郑重的拍上她的肩，成功阻止了准将飞出。<br>【请大声地告诉我你母亲的职业！】<br>【这么说来我还真不知道呢】炎炎用手捏住下巴。<br>【老…老师啊…】<br>【人民教师对吧！你作为先烈子女怎么能不普济众生呢！】<br>【讲人话！】<br>【请我敕饭是你的光荣使命！】</p>
]]></content>
      <tags>
        <tag>树哥是神</tag>
      </tags>
  </entry>
  <entry>
    <title>关于data的笔记 - Week1</title>
    <url>/blog/2020/11/28/P140/</url>
    <content><![CDATA[<p>那就开始吧(吧).</p>
<span id="more"></span>

<h2 id="Anaconda"><a href="#Anaconda" class="headerlink" title="Anaconda"></a>Anaconda</h2><p>可以理解成模拟环境,可以用于跑不同的python版本.</p>
<p>conda - A command-line utility for package and environment management.</p>
<h3 id="upgrade"><a href="#upgrade" class="headerlink" title="upgrade"></a>upgrade</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">conda upgrade conda</span><br><span class="line">conda upgrade --all</span><br></pre></td></tr></table></figure>

<h3 id="add-package"><a href="#add-package" class="headerlink" title="add package"></a>add package</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">conda install PACKAGE_NAME</span><br><span class="line">conda remove PACKAGE_NAME</span><br><span class="line">conda update PACKAGE_NAME</span><br></pre></td></tr></table></figure>

<h3 id="managing-environments"><a href="#managing-environments" class="headerlink" title="managing environments"></a>managing environments</h3><p>真正用来跑python的环境.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">conda create -n env_name [python=X.X] [LIST_OF_PACKAGES]</span><br></pre></td></tr></table></figure>

<p>For example, to create an environment named my_env with Python 3.7, and install NumPy and Keras in it, use the command below.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">conda create -n my_env python=3.7 numpy Keras</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">conda create -n py3_env python=3</span><br><span class="line">conda create -n py2_env python=2</span><br></pre></td></tr></table></figure>

<h3 id="entering-Activate-an-environment"><a href="#entering-Activate-an-environment" class="headerlink" title="entering (Activate) an environment"></a>entering (Activate) an environment</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># For  conda 4.6 and later versions on Linux/macOS/Windows, use</span></span><br><span class="line">conda activate my_env</span><br><span class="line"><span class="comment">#For conda versions prior to 4.6 on Linux/macOS, use</span></span><br><span class="line"><span class="built_in">source</span> activate my_env</span><br><span class="line"><span class="comment">#For conda versions prior to 4.6 on Windows, use</span></span><br><span class="line">activate my_env</span><br><span class="line"><span class="comment"># For  conda 4.6 and later versions on Linux/macOS/Windows, use</span></span><br><span class="line">conda deactivate</span><br><span class="line"><span class="comment">#For conda versions prior to 4.6 on Linux/macOS, use</span></span><br><span class="line"><span class="built_in">source</span> deactivate</span><br><span class="line"><span class="comment">#For conda versions prior to 4.6 on Windows, use</span></span><br><span class="line">deactivate</span><br></pre></td></tr></table></figure>
<p>大概是用create先装好一个环境,什么时候用都可以进去的.不是一次性的.</p>
<h3 id="换environment"><a href="#换environment" class="headerlink" title="换environment"></a>换environment</h3><p>Save all the above information in the current environment to a YAML file, environment.yaml, and later share this file with other users over GitHub or other means. This file will get created (or overwritten) in your current directory.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">conda env <span class="built_in">export</span> &gt; environment.yaml</span><br></pre></td></tr></table></figure>
<p>To create an environment from an environment file</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">conda env create -f environment.yaml</span><br></pre></td></tr></table></figure>

<p>如果忘了自己的environment叫什么名字.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">conda env list</span><br><span class="line">//或者</span><br><span class="line">conda info --envs</span><br></pre></td></tr></table></figure>

<h3 id="list-the-packages-inside-an-environment"><a href="#list-the-packages-inside-an-environment" class="headerlink" title="list the packages inside an environment"></a>list the packages inside an environment</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># If the environment is not activated</span></span><br><span class="line">conda list -n env_name</span><br><span class="line"></span><br><span class="line"><span class="comment"># If the environment is activated</span></span><br><span class="line">conda list</span><br><span class="line"></span><br><span class="line"><span class="comment"># To see if a specific package, say `scipy` is installed in an environment</span></span><br><span class="line">conda list -n env_name scipy</span><br></pre></td></tr></table></figure>

<h3 id="removing-an-environment"><a href="#removing-an-environment" class="headerlink" title="removing an environment"></a>removing an environment</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">conda env remove -n env_name</span><br></pre></td></tr></table></figure>

<br>
<br>
<br>

<h2 id="Jupyter-Notebooks"><a href="#Jupyter-Notebooks" class="headerlink" title="Jupyter Notebooks"></a>Jupyter Notebooks</h2><p>The notebook is a web application that allows you to combine explanatory text, math equations, code, and visualizations all in one easily sharable document.<br>我觉得蛮强的!</p>
<h3 id="install"><a href="#install" class="headerlink" title="install"></a>install</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">conda install jupyter notebook</span><br></pre></td></tr></table></figure>

<h3 id="run"><a href="#run" class="headerlink" title="run"></a>run</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">jupyter notebook</span><br></pre></td></tr></table></figure>

<h3 id="add-package-1"><a href="#add-package-1" class="headerlink" title="add package"></a>add package</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">conda install nb_conda</span><br></pre></td></tr></table></figure>

<p>Since notebooks are JSON, it is simple to convert them to other formats. Jupyter comes with a utility called nbconvert for converting to HTML, Markdown, slideshows, etc. The general syntax to convert a given mynotebook.ipynb file to another FORMAT is:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">jupyter nbconvert --to FORMAT mynotebook.ipynb</span><br></pre></td></tr></table></figure>

<p>The currently supported output FORMAT could be either of the following (ignore case):</p>
<ul>
<li>HTML,</li>
<li>LaTeX,</li>
<li>PDF,</li>
<li>WebPDF,</li>
<li>Reveal.js HTML slideshow,</li>
<li>Markdown,</li>
<li>Ascii,</li>
<li>reStructuredText,</li>
<li>executable script,</li>
<li>notebook.</li>
</ul>
<p>For example, to convert a notebook to an HTML file, in your terminal use</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Install the package below, if not already</span></span><br><span class="line">pip install nbconvert</span><br><span class="line">jupyter nbconvert --to html mynotebook.ipynb</span><br></pre></td></tr></table></figure>

<div class="note ">
            <p>导出:</p><p>常用之一的pdf需要装插件.<a href="https://nbconvert.readthedocs.io/en/latest/install.html#installing-tex.">documentation</a>.</p><p>常用之二的可以在View → Cell Toolbar → Slideshow设置并倒出网页版presentation.</p>
          </div>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">jupyter nbconvert presentation.ipynb --to slides</span><br></pre></td></tr></table></figure>

<p>加上<a href="https://drive.google.com/file/d/1J0BUVw3unSh8AW6bvIMeyvnpG5gxP7rk/view?usp=sharing">附录的toggle文件</a>可以隐藏代码.应该是放在跟ipynb同folder的地方.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">jupyter nbconvert Your_Slide_Deck_Name.ipynb --to slides --post serve --template output_toggle</span><br></pre></td></tr></table></figure>

<p>顺便一提在ipynb文件里也可以执行:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">!jupyter nbconvert Your_Slide_Deck_Name.ipynb --to slides --post serve --template output_toggle</span><br></pre></td></tr></table></figure>


<br>
<br>
<br>

<h2 id="用Jupyter-Notebooks和pandas读CSV"><a href="#用Jupyter-Notebooks和pandas读CSV" class="headerlink" title="用Jupyter Notebooks和pandas读CSV"></a>用Jupyter Notebooks和pandas读CSV</h2><h3 id="read"><a href="#read" class="headerlink" title="read"></a>read</h3><p>read_csv() is used to load data from csv files into a Pandas dataframe.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.read_csv(<span class="string">&#x27;student_scores.csv&#x27;</span>)</span><br></pre></td></tr></table></figure>


<p>CSV stands for comma separated values - but they can actually be separated by different characters, tabs, white space, etc.<br>当CSV的格式跟default不同,得重新定义seperator.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">&#x27;student_scores.csv&#x27;</span>, sep=<span class="string">&#x27;:&#x27;</span>)</span><br><span class="line">df.head()</span><br></pre></td></tr></table></figure>

<p>Another thing you can do with read_csv is specify which line of the file is the header, which specifies the column labels.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">&#x27;student_scores.csv&#x27;</span>, header=<span class="number">2</span>)</span><br><span class="line">df.head()</span><br></pre></td></tr></table></figure>

<p>If columns labels are not included in your file, use header=None to prevent your first line of data from being misinterpreted as column labels.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">&#x27;student_scores.csv&#x27;</span>, header=<span class="literal">None</span>)</span><br><span class="line">df.head()</span><br></pre></td></tr></table></figure>

<p>换column名字. Specify your own column labels.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">labels = [<span class="string">&#x27;id&#x27;</span>, <span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;attendance&#x27;</span>, <span class="string">&#x27;hw&#x27;</span>, <span class="string">&#x27;test1&#x27;</span>, <span class="string">&#x27;project1&#x27;</span>, <span class="string">&#x27;test2&#x27;</span>, <span class="string">&#x27;project2&#x27;</span>, <span class="string">&#x27;final&#x27;</span>]</span><br><span class="line">df = pd.read_csv(<span class="string">&#x27;student_scores.csv&#x27;</span>, names=labels)</span><br><span class="line">df.head()</span><br></pre></td></tr></table></figure>

<p>If you want to tell pandas that there was a header line that you are replacing, specify the row of that line like this.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">labels = [<span class="string">&#x27;id&#x27;</span>, <span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;attendance&#x27;</span>, <span class="string">&#x27;hw&#x27;</span>, <span class="string">&#x27;test1&#x27;</span>, <span class="string">&#x27;project1&#x27;</span>, <span class="string">&#x27;test2&#x27;</span>, <span class="string">&#x27;project2&#x27;</span>, <span class="string">&#x27;final&#x27;</span>]</span><br><span class="line">df = pd.read_csv(<span class="string">&#x27;student_scores.csv&#x27;</span>, header=<span class="number">0</span>, names=labels)</span><br><span class="line">df.head()</span><br></pre></td></tr></table></figure>

<p>Instead of using the default index (integers incrementing by 1 from 0), specify one or more of your columns to be the index of your dataframe.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">&#x27;student_scores.csv&#x27;</span>, index_col=<span class="string">&#x27;Name&#x27;</span>)</span><br><span class="line">df.head()</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">&#x27;student_scores.csv&#x27;</span>, index_col=[<span class="string">&#x27;Name&#x27;</span>, <span class="string">&#x27;ID&#x27;</span>])</span><br><span class="line">df.head()</span><br></pre></td></tr></table></figure>

<h3 id="read-formats"><a href="#read-formats" class="headerlink" title="read formats"></a>read formats</h3><p>More helpful methods for assessing and building intuition about a dataset.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.read_csv(<span class="string">&#x27;cancer_data.csv&#x27;</span>)</span><br><span class="line">df.head()</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># this returns a tuple of the dimensions of the dataframe</span></span><br><span class="line"><span class="comment"># 也就是可以找rows and columns</span></span><br><span class="line">df.shape</span><br></pre></td></tr></table></figure>
<p>同时也可以这样count rows and columns.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">rows = <span class="built_in">len</span>(df.axes[<span class="number">0</span>])</span><br><span class="line">cols = <span class="built_in">len</span>(df.axes[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Number of Rows: &quot;</span> + <span class="built_in">str</span>(rows))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Number of Columns: &quot;</span> + <span class="built_in">str</span>(cols))</span><br></pre></td></tr></table></figure>
<p>找某一列的数据.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># sales on march 13, 2016</span></span><br><span class="line">df[df[<span class="string">&#x27;week&#x27;</span>] == <span class="string">&#x27;2016-03-13&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># worst week for store C</span></span><br><span class="line">df[df[<span class="string">&#x27;storeC&#x27;</span>] == df[<span class="string">&#x27;storeC&#x27;</span>].<span class="built_in">min</span>()]</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># this returns the datatypes of the columns</span></span><br><span class="line">df.dtypes</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># although the datatype for diagnosis appears to be object, further</span></span><br><span class="line"><span class="comment"># investigation shows it&#x27;s a string</span></span><br><span class="line"><span class="built_in">type</span>(df[<span class="string">&#x27;diagnosis&#x27;</span>][<span class="number">0</span>])</span><br></pre></td></tr></table></figure>
<p>Pandas actually stores pointers to strings in dataframes and series, which is why object instead of str appears as the datatype.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># this displays a concise summary of the dataframe,</span></span><br><span class="line"><span class="comment"># including the number of non-null values in each column</span></span><br><span class="line">df.info()</span><br></pre></td></tr></table></figure>
<p>check null function,isnull()<br><a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.isnull.html">doc</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># view missing value count for each feature in 2008</span></span><br><span class="line">df_08.isnull().<span class="built_in">sum</span>()</span><br><span class="line"><span class="comment"># checks if any of columns in 2008 have null values - should print False</span></span><br><span class="line">df_08.isnull().<span class="built_in">sum</span>().<span class="built_in">any</span>()</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># this returns the number of unique values in each column</span></span><br><span class="line">df.nunique()</span><br></pre></td></tr></table></figure>
<p>找某一个column可以df.education(column名字).nunique()</p>
<h3 id="describe"><a href="#describe" class="headerlink" title="describe"></a>describe</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># this returns useful descriptive statistics for each column of data</span></span><br><span class="line">df.describe()</span><br></pre></td></tr></table></figure>
<p>//count, mean, std, min, 25%, 50%, 75%, max</p>
<h3 id="median"><a href="#median" class="headerlink" title="median"></a>median</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># get the median amount of alcohol content</span></span><br><span class="line">df.alcohol.median()</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># this returns the first few lines in our dataframe</span></span><br><span class="line"><span class="comment"># by default, it returns the first five</span></span><br><span class="line">df.head()</span><br><span class="line"></span><br><span class="line"><span class="comment"># although, you can specify however many rows you&#x27;d like returned</span></span><br><span class="line">df.head(<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># same thing applies to `.tail()` which returns the last few rows</span></span><br><span class="line">df.tail(<span class="number">2</span>)</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># View the index number and label for each column</span></span><br><span class="line"><span class="keyword">for</span> i, v <span class="keyword">in</span> <span class="built_in">enumerate</span>(df.columns):</span><br><span class="line">    <span class="built_in">print</span>(i, v)</span><br></pre></td></tr></table></figure>


<h3 id="loc-and-iloc"><a href="#loc-and-iloc" class="headerlink" title="loc and iloc"></a>loc and iloc</h3><p>We can select data using loc and iloc, which you can read more about <a href="https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html">here</a>. loc uses labels of rows or columns to select data, while iloc uses the index numbers. We’ll use these to index the dataframe below.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># select all the columns from &#x27;id&#x27; to the last mean column</span></span><br><span class="line">df_means = df.loc[:,<span class="string">&#x27;id&#x27;</span>:<span class="string">&#x27;fractal_dimension_mean&#x27;</span>]</span><br><span class="line">df_means.head()</span><br><span class="line"></span><br><span class="line"><span class="comment"># repeat the step above using index numbers</span></span><br><span class="line">df_means = df.iloc[:,:<span class="number">12</span>]</span><br><span class="line">df_means.head()</span><br></pre></td></tr></table></figure>

<p>计算某几行的sum.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># total sales for the last month</span></span><br><span class="line">df.iloc[<span class="number">196</span>:, <span class="number">1</span>:].<span class="built_in">sum</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment"># total sales during most recent 3 month period</span></span><br><span class="line">last_three_months = df[df[<span class="string">&#x27;week&#x27;</span>] &gt;= <span class="string">&#x27;2017-12-01&#x27;</span>]</span><br><span class="line">last_three_months.iloc[:, <span class="number">1</span>:].<span class="built_in">sum</span>()  <span class="comment"># exclude sum of week column</span></span><br></pre></td></tr></table></figure>

<p>关于sum,再在这里写一个.<br>用上面所描述的方式,会把categorical的data也sum起来,就有点尴尬.<br>我们可以做找出所需要条件的column再用数column的方式得到想要的sum.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span> (<span class="built_in">len</span>(admits[admits[<span class="string">&#x27;gender&#x27;</span>]==<span class="string">&#x27;female&#x27;</span>]))</span><br></pre></td></tr></table></figure>
<p>在admits这个csv中,gender一行是female的总和.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">len</span>(admits[(admits[<span class="string">&#x27;gender&#x27;</span>]==<span class="string">&#x27;female&#x27;</span>) &amp; (admits[<span class="string">&#x27;admitted&#x27;</span>])])</span><br></pre></td></tr></table></figure>
<p>两个条件就用add.</p>
<h3 id="clean-data"><a href="#clean-data" class="headerlink" title="clean data"></a>clean data</h3><p>common problem:</p>
<h4 id="missing-data-null"><a href="#missing-data-null" class="headerlink" title="missing data(null)"></a>missing data(null)</h4><p>我们可以通过对比df.info()来发现<br>要结合missing的原因和是否是随机来考虑,可以通过填充mean的方式来解决.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">mean = df[<span class="string">&#x27;name_of_column&#x27;</span>].mean()</span><br><span class="line">df[<span class="string">&#x27;name_of_column&#x27;</span>] = df[<span class="string">&#x27;name_of_column&#x27;</span>].fillna(mean)<span class="comment"># assign to the old one</span></span><br><span class="line"><span class="comment"># or</span></span><br><span class="line">df.fillna(df.mean(), inplace=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure>

<h4 id="check-data"><a href="#check-data" class="headerlink" title="check data"></a>check data</h4><p>this also can use in visualization.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># check value counts for the 2008 cyl column</span></span><br><span class="line">df_08[<span class="string">&#x27;cyl&#x27;</span>].value_counts()</span><br></pre></td></tr></table></figure>
<p>注:value_counts是用于记述此column中所有的数值种类与数量.<br>这个function的作用是returns data type和不同值的数量.</p>
<h4 id="duplicate"><a href="#duplicate" class="headerlink" title="duplicate"></a>duplicate</h4><p>check duplicate</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">df.duplicated()</span><br><span class="line"><span class="comment"># or we can count it</span></span><br><span class="line"><span class="built_in">sum</span>(df.duplicated())</span><br><span class="line"></span><br><span class="line"><span class="comment">#drop duplicate</span></span><br><span class="line">df.drop_duplicates(inplace=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure>
<p>当要考虑我们拥有同样的id但是不同数据的data时,我们用id来check duplicate.</p>
<h4 id="drop-extraneous-columns"><a href="#drop-extraneous-columns" class="headerlink" title="drop extraneous columns"></a>drop extraneous columns</h4><p>drop的其他用法.<a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.drop.html">doc</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># drop columns from 2008 dataset</span></span><br><span class="line">df_08.drop([<span class="string">&#x27;Stnd&#x27;</span>, <span class="string">&#x27;Underhood ID&#x27;</span>, <span class="string">&#x27;FE Calc Appr&#x27;</span>, <span class="string">&#x27;Unadj Cmb MPG&#x27;</span>], axis=<span class="number">1</span>, inplace=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure>
<p><a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.dropna.html">doc</a>, drop missing value</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Drop the rows where at least one element is missing.</span></span><br><span class="line">df.dropna(inplace=<span class="literal">True</span>)</span><br><span class="line"><span class="comment"># Drop the rows where all elements are missing.</span></span><br><span class="line">df.dropna(how=<span class="string">&#x27;all&#x27;</span>)</span><br></pre></td></tr></table></figure>

<h4 id="incorrect-data-type"><a href="#incorrect-data-type" class="headerlink" title="incorrect data type"></a>incorrect data type</h4><p>时间格式不对.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">df[<span class="string">&#x27;timestamp&#x27;</span>] = pd.to_datatime(df[<span class="string">&#x27;timestamp&#x27;</span>])</span><br></pre></td></tr></table></figure>

<p><a href="https://stackoverflow.com/questions/35376387/extract-int-from-string-in-pandas">Convert int from string.</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Extract int from strings in the 2008 cyl column</span></span><br><span class="line">df_08[<span class="string">&#x27;cyl&#x27;</span>] = df_08[<span class="string">&#x27;cyl&#x27;</span>].<span class="built_in">str</span>.extract(<span class="string">&#x27;(\d+)&#x27;</span>).astype(<span class="built_in">int</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># convert 2018 cyl column to int</span></span><br><span class="line"><span class="comment"># 转int,小数点就会消失(4.0 -&gt; 4)</span></span><br><span class="line">df_18[<span class="string">&#x27;cyl&#x27;</span>] = df_18[<span class="string">&#x27;cyl&#x27;</span>].astype(<span class="built_in">int</span>)</span><br><span class="line"><span class="comment">#如果要转float就是astype(float)</span></span><br></pre></td></tr></table></figure>

<h4 id="renaming-Columns"><a href="#renaming-Columns" class="headerlink" title="renaming Columns"></a>renaming Columns</h4><p>在这里例子中还有合并(merge)data.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#最基本的是一对一的改名</span></span><br><span class="line">df_clean = df_clean.rename(columns=&#123;<span class="string">&#x27;oldName1&#x27;</span>: <span class="string">&#x27;newName1&#x27;</span>,</span><br><span class="line">                                    <span class="string">&#x27;oldName2&#x27;</span>: <span class="string">&#x27;newName2&#x27;</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 用append修改同个格式的名字,remove &quot;_mean&quot; from column names</span></span><br><span class="line">new_labels = []</span><br><span class="line"><span class="keyword">for</span> col <span class="keyword">in</span> df.columns:</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;_mean&#x27;</span> <span class="keyword">in</span> col:</span><br><span class="line">        new_labels.append(col[:-<span class="number">5</span>])  <span class="comment"># exclude last 6 characters</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        new_labels.append(col)</span><br><span class="line"></span><br><span class="line"><span class="comment"># new labels for our columns</span></span><br><span class="line">new_labels</span><br><span class="line"></span><br><span class="line"><span class="comment"># replace spaces with underscores and lowercase labels for 2008 dataset</span></span><br><span class="line">df_08.rename(columns=<span class="keyword">lambda</span> x: x.strip().lower().replace(<span class="string">&quot; &quot;</span>, <span class="string">&quot;_&quot;</span>), inplace=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># another rename example,在所有的column名背后加2008</span></span><br><span class="line">df_08.rename(columns=<span class="keyword">lambda</span> x: x[:<span class="number">10</span>] + <span class="string">&quot;2008&quot;</span>, inplace=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># confirm column labels for 2008 and 2018 datasets are identical</span></span><br><span class="line"><span class="comment"># 当我们要对两个dataframe做合并,先改名,再确认column名一样.</span></span><br><span class="line">df_08.columns == df_18.columns</span><br><span class="line"></span><br><span class="line"><span class="comment"># make sure they&#x27;re all identical like this</span></span><br><span class="line">(df_08.columns == df_18.columns).<span class="built_in">all</span>()</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># assign new labels to columns in dataframe</span></span><br><span class="line">df.columns = new_labels</span><br><span class="line"></span><br><span class="line"><span class="comment"># display first few rows of dataframe to confirm changes</span></span><br><span class="line">df.head()</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># save this for later</span></span><br><span class="line">df.to_csv(<span class="string">&#x27;cancer_data_edited.csv&#x27;</span>, index=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure>

<h4 id="一个column分成两个column"><a href="#一个column分成两个column" class="headerlink" title="一个column分成两个column"></a>一个column分成两个column</h4><p>在这个例子中,数据的格式是’num_1/num_2’或者‘num_1’</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Get all the hybrids in 2008</span></span><br><span class="line">hb_08 = df_08[df_08[<span class="string">&#x27;fuel&#x27;</span>].<span class="built_in">str</span>.contains(<span class="string">&#x27;/&#x27;</span>)]</span><br><span class="line"><span class="comment"># Hybrids in 2018</span></span><br><span class="line">hb_18 = df_18[df_18[<span class="string">&#x27;fuel&#x27;</span>].<span class="built_in">str</span>.contains(<span class="string">&#x27;/&#x27;</span>)]</span><br><span class="line"></span><br><span class="line">df1 = hb_08.copy() <span class="comment"># data on first fuel type of each hybrid vehicle</span></span><br><span class="line">df2 = hb_08.copy() <span class="comment"># data on second fuel type of each hybrid vehicle</span></span><br></pre></td></tr></table></figure>
<p>Then use <a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.apply.html">apply</a> function with pandas.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># columns to split by \&quot;/\&quot;</span></span><br><span class="line">split_columns = [<span class="string">&#x27;fuel&#x27;</span>, <span class="string">&#x27;air_pollution_score&#x27;</span>, <span class="string">&#x27;city_mpg&#x27;</span>, <span class="string">&#x27;hwy_mpg&#x27;</span>, <span class="string">&#x27;cmb_mpg&#x27;</span>, <span class="string">&#x27;greenhouse_gas_score&#x27;</span>]</span><br><span class="line"><span class="comment"># apply split function to each column of each dataframe copy</span></span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> split_columns:</span><br><span class="line">    df1[c] = df1[c].apply(<span class="keyword">lambda</span> x: x.split(<span class="string">&quot;/&quot;</span>)[<span class="number">0</span>])</span><br><span class="line">    df2[c] = df2[c].apply(<span class="keyword">lambda</span> x: x.split(<span class="string">&quot;/&quot;</span>)[<span class="number">1</span>])</span><br><span class="line"><span class="comment"># combine dataframes to add to the original dataframe</span></span><br><span class="line">new_rows = df1.append(df2)</span><br><span class="line"><span class="comment"># drop the original hybrid rows</span></span><br><span class="line">df_08.drop(hb_08.index, inplace=<span class="literal">True</span>)</span><br><span class="line"><span class="comment"># add in our newly separated rows</span></span><br><span class="line">df_08 = df_08.append(new_rows, ignore_index=<span class="literal">True</span>)</span><br><span class="line"><span class="comment"># check that all the original hybrid rows with \&quot;/\&quot;s are gone</span></span><br><span class="line">df_08[df_08[<span class="string">&#x27;fuel&#x27;</span>].<span class="built_in">str</span>.contains(<span class="string">&#x27;/&#x27;</span>)]</span><br></pre></td></tr></table></figure>

<h3 id="visualizing-data"><a href="#visualizing-data" class="headerlink" title="visualizing data"></a>visualizing data</h3><p><a href="https://pandas.pydata.org/pandas-docs/stable/user_guide/visualization.html">documentation</a><br>using matplotlib.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">% matplotlib inline</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">df.hist(figsize=(<span class="number">8</span>,<span class="number">8</span>));</span><br><span class="line">df[<span class="string">&#x27;name_of_column&#x27;</span>].hist();</span><br><span class="line">df[<span class="string">&#x27;name_of_column&#x27;</span>].plot(kind=<span class="string">&#x27;hist&#x27;</span>);</span><br></pre></td></tr></table></figure>

<p>count each distinct value or bar</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">df[<span class="string">&#x27;name_of_column&#x27;</span>].value_counts()</span><br><span class="line"></span><br><span class="line">df[<span class="string">&#x27;name_of_column&#x27;</span>].value_counts().plot(kind=<span class="string">&#x27;bar&#x27;</span>) <span class="comment"># create bar chart</span></span><br><span class="line"></span><br><span class="line">df[<span class="string">&#x27;name_of_column&#x27;</span>].value_counts().plot(kind=<span class="string">&#x27;pie&#x27;</span>, figsize=(<span class="number">8</span>,<span class="number">8</span>))</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pd.plotting.scatter_martix(df, figsize=(<span class="number">15</span>,<span class="number">15</span>));</span><br><span class="line"></span><br><span class="line">df.plot(x=<span class="string">&#x27;x-axis&#x27;</span>, y=<span class="string">&#x27;y-axis&#x27;</span>, kind=<span class="string">&#x27;scatter&#x27;</span>);</span><br><span class="line"></span><br><span class="line">df[<span class="string">&#x27;name_of_column&#x27;</span>].plot(kind=<span class="string">&#x27;box&#x27;</span>);</span><br></pre></td></tr></table></figure>

<h3 id="appending-and-numpy"><a href="#appending-and-numpy" class="headerlink" title="appending and numpy"></a>appending and numpy</h3><p>将两个CSV合并到一起分析</p>
<p><a href="https://numpy.org/">numpy</a>, since numpy built in C, it is faster than python.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></table></figure>

<p>we work with numpy for multi-dimensional array of values</p>
<blockquote>
<p>Aside:</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># generate an array of 100 million random floats bewteen zero and one.</span></span><br><span class="line">a = np.random.random(<span class="built_in">int</span>(<span class="number">1e8</span>))</span><br></pre></td></tr></table></figure>

<h4 id="create-columns"><a href="#create-columns" class="headerlink" title="create columns"></a>create columns</h4><p>using numpy <a href="https://numpy.org/doc/stable/reference/generated/numpy.repeat.html">repeat</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">color_red = np.repeat(<span class="string">&#x27;red&#x27;</span>, red_df.shape[<span class="number">0</span>])</span><br></pre></td></tr></table></figure>
<p>here, shape[0] to find numbers of columns.</p>
<p>then we add array to original dataframe.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">red_df[<span class="string">&#x27;color&#x27;</span>] = color_red</span><br></pre></td></tr></table></figure>

<p>use pandas <a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.append.html">combine</a> to combine two dataframes.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">wine_df = red_df.append(white_df)</span><br></pre></td></tr></table></figure>

<p>save combine dataframe.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">wine_df.to_csv(<span class="string">&#x27;winequality_edited.csv&#x27;</span>, index=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure>

<p>troubleshooting with appending:<br>when names doesnot match, data will go wrong.</p>
<p>we <a href="https://stackoverflow.com/questions/20868394/changing-a-specific-column-name-in-pandas-dataframe">rename</a> our data:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">df=df.rename(columns = &#123;<span class="string">&#x27;two&#x27;</span>:<span class="string">&#x27;new_name&#x27;</span>&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="group-by"><a href="#group-by" class="headerlink" title="group by"></a>group by</h3><p>用pandas的group by以某一个column来分类讨论其他的数据.<br><a href="https://pandas.pydata.org/pandas-docs/stable/user_guide/groupby.html">intro</a><br><a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.groupby.html">doc</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 在不同的quality下讨论各column的mean</span></span><br><span class="line">wine_df.groupby(<span class="string">&#x27;quality&#x27;</span>).mean()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 也可以用两个来group,先group by quality,再分着讨论color(只看pH选项)</span></span><br><span class="line">wine_df.groupby([<span class="string">&#x27;quality&#x27;</span>,<span class="string">&#x27;color&#x27;</span>], as_index=<span class="literal">False</span> )[<span class="string">&#x27;pH&#x27;</span>].mean()</span><br><span class="line"></span><br><span class="line"><span class="comment">#用group by创造新的dataframe with new column</span></span><br><span class="line">model_mpg = df.groupby(<span class="string">&#x27;model&#x27;</span>).mean()[[<span class="string">&#x27;cmb_mpg_2008&#x27;</span>, <span class="string">&#x27;cmb_mpg&#x27;</span>]]</span><br></pre></td></tr></table></figure>


<h3 id="cut"><a href="#cut" class="headerlink" title="cut"></a>cut</h3><p>from pandas,我们把一个column的数据作为cut的分类标准.<br><a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.cut.html">doc</a></p>
<p>in this example, we would like to cut pH from</p>
<blockquote>
<p>High: Lowest 25% of pH values<br>Moderately High: 25% - 50% of pH values<br>Medium: 50% - 75% of pH values<br>Low: 75% - max pH value</p>
</blockquote>
<p>so we get this data from df.describe().pH<br>and manually plugin in in cut function</p>
<blockquote>
<p>“count    6497.000000\n”,<br>“mean        3.218501\n”,<br>“std         0.160787\n”,<br>“min         2.720000\n”,<br>“25%         3.110000\n”,<br>“50%         3.210000\n”,<br>“75%         3.320000\n”,<br>“max         4.010000\n”,<br>“Name: pH, dtype: float64”</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Bin edges that will be used to \&quot;cut\&quot; the data into groups</span></span><br><span class="line">bin_edges = [<span class="number">2.72</span>, <span class="number">3.11</span>, <span class="number">3.21</span>, <span class="number">3.32</span>, <span class="number">4.01</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Labels for the four acidity level groups</span></span><br><span class="line">bin_names = [<span class="string">&#x27;high&#x27;</span>, <span class="string">&#x27;mod_high&#x27;</span>, <span class="string">&#x27;medium&#x27;</span>, <span class="string">&#x27;low&#x27;</span>] <span class="comment"># Name each acidity level category</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Creates acidity_levels column</span></span><br><span class="line">df[<span class="string">&#x27;acidity_levels&#x27;</span>] = pd.cut(df[<span class="string">&#x27;pH&#x27;</span>], bin_edges, labels=bin_names)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Checks for successful creation of this column</span></span><br><span class="line">df.head()</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<br>
<br>
<br>

<h3 id="query"><a href="#query" class="headerlink" title="query"></a>query</h3><p>from pandas<br><a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.query.html">doc</a><br>query是用于筛选符合条件的columns的.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># selecting malignant records in cancer data</span></span><br><span class="line">df_m = df[df[<span class="string">&#x27;diagnosis&#x27;</span>] == <span class="string">&#x27;M&#x27;</span>]</span><br><span class="line">df_m = df.query(<span class="string">&#x27;diagnosis == &quot;M&quot;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># selecting records of people making over $50K</span></span><br><span class="line">df_a = df[df[<span class="string">&#x27;income&#x27;</span>] == <span class="string">&#x27; &gt;50K&#x27;</span>]</span><br><span class="line">df_a = df.query(<span class="string">&#x27;income == &quot; &gt;50K&quot;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># for examples filtered columns containing strings</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># selecting records in cancer data with radius greater than the median</span></span><br><span class="line">df_h = df[df[<span class="string">&#x27;radius&#x27;</span>] &gt; <span class="number">13.375</span>]</span><br><span class="line">df_h = df.query(<span class="string">&#x27;radius &gt; 13.375&#x27;</span>)</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># select samples with alcohol content less than the median</span></span><br><span class="line">low_alcohol = df.query(<span class="string">&#x27;alcohol &lt; 10.3&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># select samples with alcohol content greater than or equal to the median</span></span><br><span class="line">high_alcohol = df.query(<span class="string">&#x27;alcohol &gt;= 10.3&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># ensure these queries included each sample exactly once</span></span><br><span class="line">num_samples = df.shape[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">num_samples == low_alcohol[<span class="string">&#x27;quality&#x27;</span>].count() + high_alcohol[<span class="string">&#x27;quality&#x27;</span>].count() <span class="comment"># should be True</span></span><br></pre></td></tr></table></figure>
<p>用query加上count也可以有sum的效果.</p>
<br>
<br>
<br>

<h3 id="Merge"><a href="#Merge" class="headerlink" title="Merge"></a>Merge</h3><p><a href="https://pandas.pydata.org/pandas-docs/stable/user_guide/merging.html">pandas</a><br>四种不同的合并:</p>
<ul>
<li>Inner Join - Use intersection of keys from both frames.</li>
<li>Outer Join - Use union of keys from both frames.</li>
<li>Left Join - Use keys from left frame only.</li>
<li>Right Join - Use keys from right frame only.<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># merge df_08和df_18</span></span><br><span class="line">df_combined = df_08.merge(df_18, left_on=<span class="string">&#x27;model_2008&#x27;</span>, right_on=<span class="string">&#x27;model&#x27;</span>, how=<span class="string">&#x27;inner&#x27;</span>)</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>数学笔记</category>
      </categories>
      <tags>
        <tag>编码</tag>
        <tag>以头抢地(诚)</tag>
        <tag>data</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>关于A/B testing的笔记</title>
    <url>/blog/2020/11/03/P124/</url>
    <content><![CDATA[<p>ab testing的定义,control group与group with testing feature中,分成两组,来统计人们的反馈进行测试比较.</p>
<p>个人用笔记…写的很杂,我猜除我以外的人看不懂,记着记着就成英文的了(…).</p>
<span id="more"></span>

<br>
<br>

<h2 id="intro"><a href="#intro" class="headerlink" title="intro"></a>intro</h2><p>什么不能做ab testing:</p>
<ul>
<li>需要测试的事件时间过长的feature.</li>
<li>对并不存在的事件进行测试(可以比较已有的两种方案,但是无法统计未有的第三种方案反馈).</li>
</ul>
<p>什么适合做ab testing:</p>
<ul>
<li>clear control and clear metrics.</li>
<li>can give out repeatable results.</li>
</ul>
<h2 id="metric-choice"><a href="#metric-choice" class="headerlink" title="metric choice"></a>metric choice</h2><p>(a method of measuring something, or the results obtained from this)</p>
<ul>
<li><p>click through rate<br>#of clicks / #of page views</p>
</li>
<li><p>click through probabilty<br>Unique visitors who click / Unique visitors to page</p>
</li>
</ul>
<p>一个是couting点击数,一个是couting访问人数.</p>
<br>
<br>

<h6 id="Aside-binomial-distruibution"><a href="#Aside-binomial-distruibution" class="headerlink" title="Aside:binomial distruibution"></a>Aside:binomial distruibution</h6><p><em>mean = N * p</em><br><em>standard deviation = sqrt(N * p * (1-p))</em><br>standard error = sqrt(p * (1-p) / N)</p>
<p><em>eg.</em><br>We have N = 2000, with x = 300, find confidence level = 99%</p>
<p><em>sol.</em><br>Phat(estimated probability) = 300/2000 = 0.15<br>m(margin of error) = z-value(for 99%) * standard error(sqrt(p * (1-p) / N))<br>=&gt; 2.58 * sqrt(0.15 * 0.85 / 2000)<br>=&gt; 0.021</p>
<p>=&gt; P =  0.15 +- 0.021<br><br><br><br></p>
<h2 id="hypothesis-testing"><a href="#hypothesis-testing" class="headerlink" title="hypothesis testing"></a>hypothesis testing</h2><p>null hypothesis(baseline): (例子)假设我们的改变方案不会影响任何人们的反馈(control group和experimental group没有区别).</p>
<p>alternative hypothesis: 我们想要的变化反馈.<br><br><br><br></p>
<h2 id="pooled-standard-error"><a href="#pooled-standard-error" class="headerlink" title="pooled standard error"></a>pooled standard error</h2><p>将control group和experimental group结合在一起的方法.</p>
<p><em>our data: Xcont Xexp Ncont Nexp</em></p>
<p>P pool hat = (Xcont + Xexp) / (Ncont + Nexp)</p>
<p>SE pool = sqrt(P pool hat * (1 - P pool hat) * (1/Ncont + 1/Nexp))</p>
<p>d hat(different) = P exp hat - P cont hat<br>(practical significance level - mim detectable effect)</p>
<p>m(margin of error) = pool standard error * 1.96</p>
<p>For null hypothesis: d = 0, d hat ~ N(0,SEpool)<br>If d hat &gt; 1.96 * SE pool or d hat &lt; -1.96 * SE pool, reject null</p>
<br>
<br>

<h2 id="sampling"><a href="#sampling" class="headerlink" title="sampling"></a>sampling</h2><p>eg. how many page views do we need(in each group)</p>
<p>a = P(reject null | null true)<br>b = P(fail to reject | null false)</p>
<p>small sample : a low, b high</p>
<p>sensitivity = 1 - b(in general, we want experiment to have a high level of sensitivity at the partical significance boundary, often 80%)</p>
<p>larger sample : a same, b lower</p>
<p><em>online calculator for sample size</em><br><a href="https://www.evanmiller.org/ab-testing/sample-size.html">https://www.evanmiller.org/ab-testing/sample-size.html</a></p>
<br>
<br>

<h2 id="policy-and-ethics-for-experiment"><a href="#policy-and-ethics-for-experiment" class="headerlink" title="policy and ethics for experiment"></a>policy and ethics for experiment</h2><p>因为作为sample的基本都是人(纸上谈兵数学人很可能会忽视),所以得有实验前提和准则.</p>
<ul>
<li>Risk. what risk is the participant being exposed to</li>
<li>Benefit. what benefits might be the outcome of study</li>
<li>Choice. what other choices do participants have</li>
<li>Privacy(data sensitivity). what expectation of privacy and confidentiality do participants have</li>
</ul>
<blockquote>
<p>Aside: 关于匿名.为确保匿名后的data还能互相分辨,会加入time stamps(one of HIPAA 18 identifiers).<br>  Anonymous data: data without any personally identifiable infomation.<br>  Anonymized data: identified or anonymous data that has been looked at and guaranteed in some way that the re-identification isk is now to non-existent.</p>
</blockquote>
<p>Note: 虽然没有写名字,但一些info(timestamp也可能行)还是能idenfity个人(AOL search data leak例子), may still have high re-identificaiton risk.</p>
<br>
<br>

<h2 id="metric"><a href="#metric" class="headerlink" title="metric"></a>metric</h2><ul>
<li><p>sanity check metrics</p>
</li>
<li><p>evaluation metrics</p>
</li>
<li><p>external data(data collected by ppl outside of your company)</p>
</li>
<li><p>gather own in-depth data(Retrospective, User Experience Research, focus groups and surveys)</p>
</li>
<li><p>User Experience Research: Go depth with few users. Good for brainstorming. Can use special equipment. Want to valid result.</p>
</li>
<li><p>Focus group: more participants less depth. Get feedback on hypotheticals. Run the risk of group think.</p>
</li>
<li><p>Surveys: Useful for metrics you cannot measure yourself. Cannot directly compare to other results.</p>
</li>
<li><p>Human evaluation: pay human raters to evaluate.</p>
</li>
</ul>
<br>
<br>

<h2 id="compute-data-from-metric"><a href="#compute-data-from-metric" class="headerlink" title="compute data from metric"></a>compute data from metric</h2><ul>
<li><p>1st: what data to look at when actually compute the metric.</p>
</li>
<li><p>2rd: given those events, how to summarize metric.</p>
</li>
<li><p>-&gt; building intuition about your metric.</p>
</li>
</ul>
<p>Define a metric:</p>
<p>for example click-though-probability = (# of users who click)/(# of users who visit)</p>
<p>Def#1: For each <time interval> :(# cookies that click)/(#cookies)<br>Question: how long is the time interval -&gt; we can add per minute click(or per hour) - as required.</p>
<p>Def#2: Create unique ID for each page view -&gt; (#pageviews w/click within <time interval>)/(#pageviews)</p>
<p>Def#3: (# clicks)/(#pageviews) -&gt; click-though-rate</p>
<p>Possible situation to think about:</p>
<ul>
<li>double click</li>
<li>back button cashes page(page reload)</li>
<li>click-tracking bug</li>
</ul>
<h6 id="Aside-Segmenting-and-filtering-data"><a href="#Aside-Segmenting-and-filtering-data" class="headerlink" title="Aside: Segmenting and filtering data"></a>Aside: Segmenting and filtering data</h6><p>data的归类和分析(比如说week over week, year over year,按地区分类,分开手机和电脑平台等).data是否bias.</p>
<p>general categories of metrics:</p>
<ul>
<li><p>sums and counts<br>eg. # users who visited page</p>
</li>
<li><p>distribution: means, medians, 25th, 75th, 90th percentiles<br>eg. mean age of users who completed a course<br>eg. median latency of page load</p>
</li>
<li><p>probabilities and rates<br>probability has 0 or 1 outcome in each case<br>rate has 0 or more</p>
</li>
<li><p>ratios<br>eg. P(revenue-generating click)/P(any click)</p>
</li>
</ul>
<br>
<br>

<h6 id="Aside-Calculating-variability-variance-or-standard-deviation-amp-amp-distribution"><a href="#Aside-Calculating-variability-variance-or-standard-deviation-amp-amp-distribution" class="headerlink" title="Aside: Calculating variability(variance or standard deviation &amp;&amp; distribution)"></a>Aside: Calculating variability(variance or standard deviation &amp;&amp; distribution)</h6><p>Binomial distribution:</p>
<ul>
<li>SE(standard error) = sqrt(β * (1 - β) / N)</li>
<li>m(margin of error) = Z(z score confidence level) * SE</li>
</ul>
<table>
<thead>
<tr>
<th align="left">Type of metric</th>
<th align="center">distribution</th>
<th align="center">estimated variance</th>
</tr>
</thead>
<tbody><tr>
<td align="left">probability</td>
<td align="center">binomial(normal)</td>
<td align="center">(Phat * (1 - Phat) / N)</td>
</tr>
<tr>
<td align="left">mean</td>
<td align="center">normal</td>
<td align="center">𝜎 ^ 2 / N</td>
</tr>
<tr>
<td align="left">median/percentile</td>
<td align="center">depends</td>
<td align="center">depends</td>
</tr>
<tr>
<td align="left">count/difference</td>
<td align="center">normal(often)</td>
<td align="center">Var(x) + Var(y)</td>
</tr>
<tr>
<td align="left">rates</td>
<td align="center">poisson</td>
<td align="center">mean</td>
</tr>
<tr>
<td align="left">ratios</td>
<td align="center">depends</td>
<td align="center">depends</td>
</tr>
</tbody></table>
<ul>
<li>𝜎 -&gt; variants of sample</li>
</ul>
 <br>
 <br>

<h2 id="calculating-variability-empirically"><a href="#calculating-variability-empirically" class="headerlink" title="calculating variability empirically"></a>calculating variability empirically</h2><p>Uses of A/A tests:</p>
<ul>
<li>Compare results to what you expect(sanity check)</li>
<li>Estimate variance and calculate confidence</li>
<li>Directly estimate confidence interval</li>
</ul>
<h6 id="Boot-strapping"><a href="#Boot-strapping" class="headerlink" title="Boot strapping"></a>Boot strapping</h6><p> Run one experiment, take random sample from each side of experiment and calculate as it were a full experimental group, use as simulated experiment. Repeat. Use the result as if run multiple experiments.</p>
<p>confidence interval(z = 1.96) vs empirical confidence interval: empirical去掉最高和最低就是interval balance.<br>注: empirical最好有more than 40 experiments to be confident.</p>
<br>
<br>

<h2 id="designing-an-experiment"><a href="#designing-an-experiment" class="headerlink" title="designing an experiment"></a>designing an experiment</h2><h3 id="Unit-of-diversion"><a href="#Unit-of-diversion" class="headerlink" title="Unit of diversion"></a>Unit of diversion</h3><p>  how we define what an individual subject is in the experience.</p>
<p>Commonly used:</p>
<ul>
<li><strong>User id</strong> (user name, email address, phone number)</li>
<li>stable, unchanging</li>
<li>personally identifiable</li>
<li><strong>Anonymous id</strong> (cookie)</li>
<li>changes when you switch browser or device</li>
<li>users can clear cookies(easy to change)</li>
<li><strong>Event</strong></li>
<li>no consistent experience(for the change that is not user visible)</li>
<li>use only for non-user-visible changes</li>
</ul>
<p>Less common:</p>
<ul>
<li><strong>Device id</strong></li>
<li>only available for mobile</li>
<li>tied to specific device</li>
<li>unchangeable by user</li>
<li><strong>IP address</strong></li>
<li>changes when location changes</li>
</ul>
<p>Example: unit of diversion (check means assigned to a group)</p>
<table>
<thead>
<tr>
<th align="left"></th>
<th align="center">(desktop) homepage</th>
<th align="center">sign in</th>
<th align="center">visit class</th>
<th align="center">watch video</th>
<th align="center">(mobile) auto sign in</th>
<th align="center">watch video</th>
</tr>
</thead>
<tbody><tr>
<td align="left">user-id</td>
<td align="center">None</td>
<td align="center">🍁</td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="left">cookie</td>
<td align="center">🍁</td>
<td align="center">Note: if they did not clear their cookie</td>
<td align="center"></td>
<td align="center"></td>
<td align="center">🍁</td>
<td align="center"></td>
</tr>
<tr>
<td align="left">event</td>
<td align="center">🍁</td>
<td align="center">🍁</td>
<td align="center">🍁</td>
<td align="center">🍁</td>
<td align="center">🍁</td>
<td align="center">🍁</td>
</tr>
<tr>
<td align="left">device id</td>
<td align="center">None</td>
<td align="center">None</td>
<td align="center">None</td>
<td align="center">None</td>
<td align="center">🍁</td>
<td align="center"></td>
</tr>
<tr>
<td align="left">IP address</td>
<td align="center">🍁</td>
<td align="center">Not clear</td>
<td align="center">Not clear</td>
<td align="center">Not clear</td>
<td align="center">Not clear</td>
<td align="center">Not clear</td>
</tr>
</tbody></table>
<p>How we choose:</p>
<ul>
<li><strong>user consistency</strong> (whether cross devices/ sign in sign off border)</li>
<li>event(not necessary) &gt; cookie(enough) &gt; user-id(necessary)</li>
<li><strong>ethical consideration</strong> (what data is collecting/ data is identified or not)</li>
<li>security and confidentiality questions</li>
<li>informed consent</li>
<li><strong>variability</strong></li>
<li>unit of analysis -&gt; whatever denominator of metric<br>(eg. page view if unit of analysis over click rough rate)</li>
<li>unit of diversion(if is cookie or user id)<br>(eg. same metric click through rate is much higher than unit of analysis)<br>why: we consider what to be independent wrong.<br>Event: every single event is different random draw.<br>Cookie &amp; user id -&gt; we diverting groups of events.</li>
</ul>
<h3 id="Population"><a href="#Population" class="headerlink" title="Population"></a>Population</h3><p>  experiment:<br>  <strong>intra-user experiment</strong> . Expose the same user to the feature being on and off over time, analyze their behavior.<br>  pitfall: Careful about choosing comparable time window. Frustration or learning problem.</p>
<p>  searching ranking, preferences(rank order list): <strong>interleaved experiment</strong> . Expose same user to the A and B side at the same time. Useful for reordering list.</p>
<p>  <strong>inter-user experiment</strong> . Different ppl from A side and B side.</p>
<p>  <strong>cohort</strong> : try to match up the entering classes. At least have roughly the same parameter in two user groups.<br>  (eg. In medical experiments, match up patients in trial based on demographic info, ages, medical history, then do pair analysis.)</p>
<p>  target:<br>  Based on info required. Restriction. Avoid overlap target.</p>
<blockquote>
<p>Aside: Significance<br>A p-value of 5% or lower is often considered to be statistically significant.<br>statistically significant difference: compute difference and confidence interval and see if it includes 0.(if margin of error is wider than estimated difference -&gt; includes 0 -&gt; diff is not significant)</p>
</blockquote>
<p>Diff between population and cohort:<br>  population is having a whole group of users. Whichin the population define cohort -&gt; people who enter the experiment at the same time.<br>(eg. divert cookie or user id, look at a particular country, during the experience could gain/lose users. Cohort: define an entering class and only look at users who entered your experiment on both sides around the same time)<br>  cohort are harder to analyze, they will take more data because you’ll lose users. Only use they when looking for user stability.</p>
<ul>
<li>Looking for learning effects</li>
<li>Examining user retention</li>
<li>Want to increase user activity</li>
<li>Anything requiring user to be established<blockquote>
<p>example:</p>
</blockquote>
</li>
<li>Have existing course and change structure of lesson</li>
<li>Unit of diversion: user-id(but not all users in the course)</li>
<li>Control: need to be a comparable cohort</li>
</ul>
<h3 id="Size"><a href="#Size" class="headerlink" title="Size"></a>Size</h3><p>based on practical significance, statistical significance.<br>To calculate size, assume SE ~ 1/sqrt(N)</p>
<blockquote>
<p>example:<br>Experiment: change order of courses on course list<br>Metric: click-though-rate<br>Unit-of-diversion:cookies<br>α: 0.05<br>β: 0.2<br>dmin: 0.01<br>SE = 0.0628/1000 pageview</p>
</blockquote>
<p>Result: 300,000 -&gt; too much<br>Adjusted:</p>
<ul>
<li>Increase dmin, α, β</li>
<li>change unit of diversion to page view -&gt; makes unit of diversion same as unit of analysis, variability of the metric will decrease and close to analytical estimate.</li>
<li>target experiment to specific traffic</li>
<li>change metric to cookie-based click-through-probability -&gt; often not make a significant difference to variability</li>
</ul>
<h3 id="Duration"><a href="#Duration" class="headerlink" title="Duration"></a>Duration</h3><p> consider difference between weekdays and weekends -&gt; run smaller percentage across multiple days, or run multiple tasks at the same time on smaller percentage of traffic</p>
<blockquote>
<p>Aside: learning effects<br>measure user learning, whether a user is adapting to a change or not.</p>
</blockquote>
<h2 id="Sanity-check"><a href="#Sanity-check" class="headerlink" title="Sanity check"></a>Sanity check</h2><ul>
<li>Population sizing metrics<br>based on unit of diversion -&gt; experiment population and control population are comparable</li>
<li>Invariants(Metrics that don’t expect to change)</li>
</ul>
<blockquote>
<p>example: how to figure out whether difference is within expectation(each cookie is randomly assigned to the control or experiment group with probabilty 0.5)<br>1.compute standard deviation of binomial with probability 0.5 we expect.<br>2.multiply by z-score to get margin of error.<br>3.compute confidence interval around 0.5 -&gt; if control group fall within this confidence interval: experiment is setup properly.<br>4.check whether observed fraction is within interval.</p>
</blockquote>
<p>how to solve:</p>
<ul>
<li>check technically issues</li>
<li>retrospective analysis (endemic)</li>
<li>pre and post periods</li>
</ul>
<blockquote>
<p>aside:<br>click through probability: binomial distribution<br>click through rate: poisson distribution</p>
</blockquote>
<p>online calculator:<a href="https://www.graphpad.com/quickcalcs/binomial1.cfm">https://www.graphpad.com/quickcalcs/binomial1.cfm</a></p>
<blockquote>
<p>aside:<br>Simpson’s paradox: a trend appears in several different groups of data but disappears or reverses when these groups are combined.</p>
</blockquote>
<h2 id="tracking-metrics"><a href="#tracking-metrics" class="headerlink" title="tracking metrics"></a>tracking metrics</h2><ul>
<li>single:</li>
<li>hypothesis test</li>
<li>sign test</li>
</ul>
<p>hypothesis test:<br>SE ~ 1/sqrt(N) -&gt;when we calculate two groups -&gt; sqrt(1/N1 + 1/N2)<br>Empirical SE/sqrt(1/sample size + 1/sample size) = SE/sqrt(1/group1 size + 1/group2 size) =&gt; then we can find SE<br>different = rate experiment - rate control<br>margin of error = SE * 1.96<br>confidence interval = different +- margin of error</p>
<p>sign test:<br>numbers of days<br>numbers of days with positive change<br>-&gt; if no difference, 50% of positive change on each day, we do a binomial(small) or normal(big number) check</p>
<ul>
<li>multiple</li>
<li>1.assume independence</li>
<li>2.bonferroni correction</li>
</ul>
<p>independence:<br>α overall = (1 - α individual)^n</p>
<p>bonferroni correction:<br>α individual = α overall / # of metric</p>
<p>from difference and SE -&gt; we get margin of error = SE * 1.96<br>if margin of error is wider than observed difference -&gt; not statistically significant</p>
<p>control false discovery rate(FDR)<br>FDR = E[# false positives / # rejections]</p>
<br>
<br>
🎉🎉🎉🎉🎉🎉🎉🎉🎉🎉🎉🎉🎉🎉🎉🎉🎉🎉🎉🎉🎉🎉🎉🎉🎉🎉🎉🎉🎉🎉
<br>
<br>

<h2 id="Example-process"><a href="#Example-process" class="headerlink" title="Example process"></a>Example process</h2><h3 id="Experiment-design"><a href="#Experiment-design" class="headerlink" title="Experiment design"></a>Experiment design</h3><p><strong>1.metric choice</strong><br>choose invariant + evaluation metrics</p>
<ul>
<li>number of cookies</li>
<li>number of user-ids</li>
<li>number of clicks</li>
<li>click-through-probability</li>
<li>gross conversion</li>
<li>retention</li>
<li>net conversion</li>
</ul>
<blockquote>
<p>aside:<br>gross conversion: number of user-ids to complete checkout and enroll in the free trial divided by number of unique cookies to click the “start free trial” button<br>retention: number of user-ids to remain enrolled past the 14-day boundary(make at least one payment) divided by number of user-ids to complete checkout<br>net conversion: number of user-ids to remain enrolled past the 14-day bounday(make at least one payment) divided by the number of unique cookies to click the “start free trial” button</p>
</blockquote>
<p><strong>2.measuring standard deviation</strong><br>whether or not use bonferroni correction in analysis phase</p>
<p><strong>3.sizing</strong></p>
<p><strong>3.1.number of samples vs. power</strong></p>
<p><strong>3.2.duration vs. exposure</strong></p>
<br>

<h2 id="Experiment-analysis"><a href="#Experiment-analysis" class="headerlink" title="Experiment analysis"></a>Experiment analysis</h2><p><strong>4.sanity checks</strong><br>calculate lower bound, upper bound, observed</p>
<p><strong>5.result analysis</strong></p>
<p><strong>5.1.effect size test</strong><br>calculate lower bound, upper bound, statistical significance, practical significance</p>
<p><strong>5.2.sigh tests</strong><br>p-value, statistical significance</p>
<p><strong>summary</strong><br>state whether used bonferroni correction, why and why not.<br>If there are any discrepancies between the effect size hypothesis tests and the sigh test, describe the discrepancy and why think it arose.</p>
<br>
<br>
🎉🎉🎉🎉🎉🎉🎉🎉🎉🎉🎉🎉🎉🎉🎉🎉🎉🎉🎉🎉🎉🎉🎉🎉🎉🎉🎉🎉🎉🎉
<br>
<br>

<h2 id="Example-process-ver2-0"><a href="#Example-process-ver2-0" class="headerlink" title="Example process-ver2.0"></a>Example process-ver2.0</h2><p><strong>1.metric choice</strong><br>choose invariant metrics and evaluation metric</p>
<p><strong>2.measuring standard deviation</strong><br>whether analytic estimate would be comparable to the empirical variability<br>whether expect them to be different (in which case it might be worth doing an empirical estimate if there is time)</p>
<p><strong>3.sizing</strong></p>
<p><strong>3.1.number of samples vs. power</strong><br>whether use Bonferroni correction during analysis phase, give number of pageviews need to power experiment appropriately</p>
<p><strong>3.2.duration vs. exposure</strong><br>indicate what fraction of traffic would divert to this experiment and how many days would need to run the experiment</p>
<h2 id="Experiment-analysis-1"><a href="#Experiment-analysis-1" class="headerlink" title="Experiment analysis"></a>Experiment analysis</h2><p><strong>4.sanity checks</strong><br>for each of invariant metrics, give the 95% confidence interval for the value expect to observe, the actual observed value, and whether the metric passes sanity check<br>if not pass -&gt; guess what went wrong based on day-by-day data</p>
<p><strong>5.result analysis</strong></p>
<p><strong>5.1.effect size test</strong><br>for each of evaluation metrics, give 95% confidence interval around the difference between the experiment and control groups. Indicate whether each metric is statistically and practically significant.</p>
<p><strong>5.2.sigh tests</strong><br>for each of evaluation metrics, do sign test using day-by-day data, report the p-value of the sign test and whether the result is statistically significant.</p>
<p><strong>summary</strong></p>
<h2 id="final-notes"><a href="#final-notes" class="headerlink" title="final notes"></a>final notes</h2><blockquote>
<p>Aside for terms:</p>
</blockquote>
<blockquote>
<p>Closed testing procedure:<br>a general method for performing more than one hypothesis test simultaneously.<br>Suppose there are k hypotheses H1,…, Hk to be tested and the overall type I error rate is α. The closed testing principle allows the rejection of any one of these elementary hypotheses, say Hi, if all possible intersection hypotheses involving Hi can be rejected by using valid local level α tests. It controls the familywise error rate for all the k hypotheses at level α in the strong sense.<br><a href="https://en.wikipedia.org/wiki/Closed_testing_procedure">wiki</a></p>
</blockquote>
<blockquote>
<p>Boole’s inequality<br>In probability theory, Boole’s inequality, also known as the union bound, says that for any finite or countable set of events, the probability that at least one of the events happens is no greater than the sum of the probabilities of the individual events.<br><a href="https://en.wikipedia.org/wiki/Boole%27s_inequality">wiki</a><br>Holm–Bonferroni method</p>
</blockquote>
<img src="/blog/2020/11/03/P124/P124.png" class="">
<blockquote>
<p><a href="https://en.wikipedia.org/wiki/Holm%E2%80%93Bonferroni_method">wiki</a></p>
</blockquote>
<blockquote>
<p>Note:<br>Type I error:<br>Erroneously rejecting the null hypothesis with a statistical analysis, then the null hypothesis is in fact true in the population.</p>
</blockquote>
<blockquote>
<p>Bonferroni correction:<br>An adjustment applied to  p-values that is “supposed to be” applied, when two or more statistical analyses have been performed on the <strong>same</strong> sample of data.<br>The correction is supposed to be applied, as the familywise type I error rate is known to be larger than the per analysis error rate(eg. alpha = 0.05)<br>α individual = α overall / # of metric (eg. 0.05 / 3 metric = 0.017)<br><a href="https://en.wikipedia.org/wiki/Bonferroni_correction">wiki</a></p>
</blockquote>
<blockquote>
<p>Familywise error rate:<br>The probability of committing at least one type 1 error amongst two or more statistical analyses on the <strong>same</strong> sample of data.<br>αFW = 1 - (1 - αPC)^c<br>c : number of comparisons performed<br>αPC : specified per contrast error rate(usually 0.05)</p>
</blockquote>
<blockquote>
<p>Multiple comparisons problem:<br>In statistics, the multiple comparisons, multiplicity or multiple testing problem occurs when one considers a set of statistical inferences simultaneously or infers a subset of parameters selected based on the observed values. In certain fields it is known as the look-elsewhere effect.<br><a href="https://en.wikipedia.org/wiki/Multiple_comparisons_problem">wiki</a></p>
</blockquote>
<blockquote>
<p>False discovery rate<br>The false discovery rate (FDR) is a method of conceptualizing the rate of type I errors in null hypothesis testing when conducting multiple comparisons.<br><a href="https://en.wikipedia.org/wiki/False_discovery_rate">wiki</a></p>
</blockquote>
]]></content>
      <categories>
        <category>数学笔记</category>
      </categories>
      <tags>
        <tag>以头抢地(诚)</tag>
        <tag>data</tag>
      </tags>
  </entry>
  <entry>
    <title>The amazing treasure - 番外</title>
    <url>/blog/2020/11/24/P132/</url>
    <content><![CDATA[<img src="/blog/2020/11/24/P132/P132.png" class="">
<p>那顺便祝贺一下Andre工作室八周年.</p>
<span id="more"></span>
<p>完结了!</p>
<blockquote>
<p>树哥说高中时想当大侠.<br>突然聊起,然后树哥动笔了!TAT是树哥14年以生活为原型写的小说.2020,TAT的paro,爷青回.<br>关于更多树哥的文章,诚心邀请大家欣赏树哥是神tag.<br>我在树哥的设定上补了个世界观,但设定本身跟”只是想当高中生大侠”没关系.</p>
</blockquote>
<blockquote>
<p>图是随时在教室里拔出武器……的概念图.我画不好光,感谢树哥包容.</p>
</blockquote>
<h2 id="大纲-树哥写的"><a href="#大纲-树哥写的" class="headerlink" title="大纲(树哥写的)"></a>大纲(树哥写的)</h2><br>
<br>
<br>

<h3 id="01-炎焱"><a href="#01-炎焱" class="headerlink" title="01 炎焱"></a>01 炎焱</h3><p>高中二年级末的百强战斗榜放榜了，炎焱挤着去看，还是没有陆海空，没有谢子安。</p>
<p>回到宿舍，笛子和子安正在啃鸭脖，啃完了鸭脖三个人把被毒死的蟑螂扫到了楼道的垃圾桶。两年了，她依旧不知道陆海空去了哪里，以及子安为什么金盆洗手了。</p>
<p>这个世界中，学生的战斗力基础是课程成绩，谢子安成绩很好，使了一手很漂亮的长枪，以前她自己笑称咸鱼突刺，而她现在真的变成了一条爱啃鸭脖的咸鱼。萧笙芋在高中确定了艺术方向，安静而坚定地进步着，虽然她的艺术成绩足够她当一名优秀的防御者，但是她似乎也对战斗的兴趣不大。那个不知道死到哪里去的人说炎焱样子好，当医疗样子肯定更好，但是医疗是没有办法独自战斗的。她只能接受了世界和好友们的改变。</p>
<p>学生的宿舍条件、校服、自习权限等等都和战斗力评级挂钩，可以单挑，也可以团队战。但是她的团队现在输出被封印了——有的时候谢子安捡起树枝也能突刺两下，但大部分时间她们只能学着敌进我退。炎焱不是非常在意她们住在生态比较丰富的D级宿舍，毕竟姐妹们在一起啃鸭脖吃薯片也是很快乐的。只是她常常觉得平静的快乐总有些失真，就像床底会钻出蟑螂，喜欢的人会突然消失，没有人相信她有能力面对真相。</p>
<br>
<br>

<h3 id="02-萧笙芋"><a href="#02-萧笙芋" class="headerlink" title="02 萧笙芋"></a>02 萧笙芋</h3><p>高二期末考结束了，笙芋背着画板拎着鸭脖回宿舍，谢子安看到她回来就合上了错题本。她们没有告诉炎焱，子安期末依旧考了年纪第四，不使枪是因为她没有枪了，而不是什么嘴进化成了机关枪之类的狗屁理由。笙芋的武器是盾，喜欢山和海，子安说她有种钝感的温柔，可她总觉得自己也有很多乱七八糟的烦恼。</p>
<p>寒假马上要开始了，笙芋不打算泡在网游世界里，她已经和爱收集虫子标本的美术老师约好了补习。炎焱不意外地打算在网游世界里寻找陆海空。谢子安也说要在网游世界里呆几天——咸鱼入海，客观来说就是去送死，但是笙芋没有多问为什么，毕竟她们三个又可以聚在宿舍里过一个寒假。</p>
<p>但是寒假第一天就不太平，理由是800情侣中的女侠向她们宣战了。800情侣是谢子安的嘲讽，这两个人战斗力加起来可以有800，无疑是S级的战斗力评级，但子安嘲讽的点可能在于“情侣”。女侠怀疑驰名美女炎焱在破坏她的幸福。她向她们发起了1v3的强制pk，笙芋只能疲惫地进入竞技场挨打。</p>
<p>竞技场里炎焱已经上线了，她作为一个仙气飘飘的医疗，模样好，确实就是大众情人的样子，正在和红衣女侠交涉。谢子安也缓缓上线了，一看就憋了一肚子屁话。值得一提的是，谢子安的战斗形象是赤脚的，这就显得她更矮了，笙芋暗暗地想。</p>
<p>女侠一鞭子抽了过来，笙芋闪的不及时，立马皮开肉绽了，她和子安对视一眼，觉得除了认输没有更好的办法。可惜谢子安一开口就是有本事去打你的男人，打女人算什么好汉，结局就是她们三个的当日生命值都清零了。</p>
<p>强制下线以后，三个人打算在宿舍打火锅。谢子安虽然战斗力评级是F，但是因为成绩划分在文A班，所以她很轻易地问住在A级宿舍的同学们借来了火锅和调料，炎焱也在众多追求者的掩护下从校门口偷渡回来了火锅食材。</p>
<p>谢子安撑着脸等火锅开，她是笙芋见过嘲讽表情最丰富，垃圾话库存也最多的女人，可惜现在只能在竞技场挨打。炎焱正细心地又用水过一遍碗，笙芋问她为什么八百女侠会觉得炎焱和男侠有染。</p>
<p>肯定又去理A找呆子了呗。</p>
<p>子安懒懒的说。</p>
<br>
<br>

<h3 id="03-沈燕然"><a href="#03-沈燕然" class="headerlink" title="03 沈燕然"></a>03 沈燕然</h3><p>呆子，其实是本次高手榜排名第二的沈燕然，他和八百男侠都在理A班，大美女炎焱一旦去了理A班，找谁好像就不太重要了。</p>
<p>沈燕然和她们是一个班初中同学，不过那个时候玩在一起的还有陆海空。炎焱喜欢陆海空是一整个初中都知道的事情，但是陆海空为什么中考以后消失了，似乎是只有沈燕然一个人知道的事情。沈燕然不会撒谎，却很擅长闭嘴，无论炎焱怎么哭闹，他都同情地沉默着。看不下去的谢子安还提枪和沈燕然打了一架，最后以沈燕然的剑“乘风”破碎为结局，他们的友谊也随之破碎了。</p>
<p>炎焱最近一年已经不怎么去撬沈燕然的嘴了，这次也是不抱希望地问问有没有关于陆海空的消息。沈燕然简洁地告诉她没有，然后呆呆的不知道该说些什么，随后炎焱就被别的理A班男生包围了。她好像听到沈燕然问到了子安，但是来不及细想，沈燕然就回自己的座位了。</p>
<p>这个世界里，18岁是一道风水岭。学校是熟悉两个世界的茧房，18岁以后，每个人可以选择生活在普通世界里，还是战斗世界里。但是踏出茧房，进入的就将是真正的江湖。沈燕然觉得选择战斗世界的人都很勇敢，但是没有人应该为了单纯追寻另一人而勇敢。</p>
<br>
<br>

<h3 id="04-谢子安"><a href="#04-谢子安" class="headerlink" title="04 谢子安"></a>04 谢子安</h3><p>很少有人知道，“剑圣”沈燕然的剑不是初始剑，他的初始剑在成名之前就碎了。虽然在高中大放异彩，但谢子安始终觉得沈燕然只是条呆呆的哈士奇，笨到本命剑都横死了，也只会吐着舌头哈气。</p>
<p>为什么说“乘风”是横死而不是死有余辜，是她渐渐猜到了陆海空的去处。在“谢沈大战”（自己载入史册的）没有多久，她收到了少荆营的候补面试邀请。少荆营只收未满18岁的天才少年，利用未成年的不死buff，替战斗世界里的买主完成出生入死的任务。风险高，收益大，是想要扎根战斗世界的好办法。陆海空如果已经顺利入营的话，大约是已经决心切断了以往。她也考虑过把猜测告诉炎焱，但是想到炎焱可能会声泪俱下要去给陆海空当专属治疗，谢子安的头可以大三圈。</p>
<p>谢子安甚至没有告诉笙芋她的猜测，因为笙芋往往很难招架炎焱的软磨硬泡。她只是有点觉得对不住沈燕然，因为一个人的初始剑往往是最称手的。虽然谢子安知道自己嘴巴坏，但是她坚信自己良心不坏，她融了自己的初始枪，两年来都在搜集材料和学习技能，这个寒假应该就能还一把“乘风pro”给沈燕然了。</p>
<p>谢子安只希望寒假能够专心的、顺利的炼出“乘风pro”，可八百女侠竟然在寒假第二次向她发起了强制1v1pk。想来也不是打狐狸精的，那就只能是臭嘴惹的祸。她作为一个小透明，并没有怎么被发起过强制1v1，所以这次上线的时候，她惊讶的发现整个理A的人几乎都来围观了。</p>
<p>理A的说都在传说她故意不用武器，羞辱女侠，谢子安简直百口莫辩，只能真心祝福800情侣天长地久，但求从轻下鞭。但是不知道是不是阴阳怪气久了，反正这话听着很阴阳，她的今日生命值又清零了。</p>
<p>下线以后笙芋拿胶布给她粘嘴，说是保命的最后办法，炎焱美女垂泪，觉得都是自己不好（不是很绿茶的那种）。但是谢子安觉得不能怪炎焱，也不能怪自己的嘴，要怪只能怪这该死的儿女情长。比如那个该死的“宇宙中心”陆海空不出现的话，炎焱的恋爱不会谈的那么狗屎，那么她的屁话也会少一点。</p>
<br>
<br>

<h3 id="05-笙芋"><a href="#05-笙芋" class="headerlink" title="05 笙芋"></a>05 笙芋</h3><p>笙芋照例背着画板回到宿舍，才得知谢子安今日又被当众施以鞭刑。她知道子安的初始武器可能出了什么问题，但是她不明白子安为什么像忘了怎么突刺一样。以前谢子安对这个问题都会糊弄过去，但是今天她说快了，她之前都把技能装满了锻造，马上可以卸下了。</p>
<p>笙芋没有追究为什么之前装满了锻造，她只是真心的感到了快乐，如果安姐又能提的动刀了，她相信她们一定可以配合着搬出D舍，甚至进入鸟语花香的A舍。谢子安劝她醒醒，但是她一向会坚定地高估谢子安。</p>
<p>炎焱下线以后，深刻反思了自己找沈燕然的愚蠢行为，给大家带来了诸多不便。笙芋倒是觉得鞭刑是谢子安自己作的，而炎焱一直没放弃找陆海空才是最大的麻烦。笙芋可以理解向日葵追着太阳，但是在她的世界里，如果太阳决定从向日葵的世界里离开了，那向日葵不能连根拔起自己去找太阳。</p>
<p>她尝试过很认真的和炎焱谈人生规划，恋爱，陆海空。虽然她们是很好的朋友，大脑的构造似乎还是有一些区别。毕竟谢子安嘲笑她少女心欠费停机，而炎焱呼吸都是结婚证的形状。但是对于炎焱的坚持和韧劲，她依旧感到很钦佩。</p>
<p>笙芋希望自己的生命中也可以出现一个值得追随的人，但是在此之前，她觉得自己还有很多小目标要实现。</p>
<br>
<br>



<h3 id="06-炎焱"><a href="#06-炎焱" class="headerlink" title="06 炎焱"></a>06 炎焱</h3><p>网游世界的活动范围是根据战斗排名确定的，因为团队和个人排名都很考后，炎焱其实并不能进入真实的战斗世界。她只能骑着马在网游世界里漫无目的地逛，等奇迹发生，或者等自己再也不期待奇迹。</p>
<p>上初中的时候，炎焱最喜欢在做眼保健操的时候偷看陆海空，陆海空不知道，就不会笑她。所以她现在也是一个人悄悄地找陆海空，陆海空不知道，就不会嘲她多此一举。</p>
<p>炎焱的成绩并不是特别好，也没有特别的爱好，就连当美女也没有太大的执念——只是随随便便当上了。但是她很喜欢陆海空，带着崇拜、热忱和依恋，喜欢陆海空。她的喜欢并不是没有回应的，陆海空也曾经发信息跟她告白过，他说阿姨洗铁路，炎焱百度了以后才知道是日语的喜欢。她有点啼笑皆非，但还是雀跃地提出了交往。可惜这场备受期待的恋爱维持了两个礼拜就宣告终结，不久陆海空就消失了。</p>
<p>陆海空明明是喜欢她的，毕竟都告白了呀。开始她觉得消失是恶作剧，笙芋开玩笑说陆海空是长青春痘毁容了，子安揽着她们去吃酸菜鱼，说流浪的小狗勾饿了自然就回家了。当时他们谁也没有当回事。</p>
<p>两年以后，笙芋常常忘记她和陆海空谈过恋爱，子安也不怎么拿她的少女心事开玩笑了。她们好像默契的明白了陆海空也没有那么喜欢她，他连一句我喜欢你都不肯用中文好好说，自然也没有做过什么令人感动的事，其实是炎焱太把一句看不懂的日文当一回事了。</p>
<br>
<br>

<h3 id="07-谢子安"><a href="#07-谢子安" class="headerlink" title="07 谢子安"></a>07 谢子安</h3><p>谢子安早上一上线就直奔熔岩谷，为了保证顺利，路上一句话也没有说，终于在傍晚到达了核心区域百炼台。百炼台是安全区里唯一一个可以练出好剑的地方，她提前了三个月就在熔岩谷前台预约了今天。</p>
<p>她把准备了两年的各种材料都摆了上去，才发现她系的中国结不见了。她初中的时候七进七出朝凤岛，才拔了足够的丹鸟尾羽，编出了一个歪歪扭扭的平安扣，沈燕然见了以后曾向她虚心请教平安扣怎么编，说很适合挂在剑上，她甩着穗子告诉人家编起来不难，拔尾巴比较难，好在丹鸟怕痒。</p>
<p>谢子安叹了一口气，安慰自己是因为沈燕然早已经不想要了，所以善解人意的平安扣自己走了。她又数了数核心材料的数量，确认了这些祖宗们一个都没有少，这两年她像母鸡孵蛋一样炼化着它们，导致一个攻击技能都没能带上，今天终于可以解放了。</p>
<br>
<br>

<h3 id="08-笙芋"><a href="#08-笙芋" class="headerlink" title="08 笙芋"></a>08 笙芋</h3><p>美术老师在摆弄他的昆虫标本，笙芋老老实实地在画板前画雕塑。手机突然连着震动了三下，笙芋疑惑地拿起来看了一眼——毕竟她已经把废话输出大王子安和嘤嘤怪炎焱都设置免打扰了。</p>
<p>沈燕然：笙芋，在吗？</p>
<p>沈燕然：笙芋，你知道子安在哪里吗？</p>
<p>沈燕然：子安好像掉了她的中国结。</p>
<p>笙芋知道谢子安那个恨不得系在头上的中国结，是她用鸟屁股毛编的，很丑。谢子安初中的手工课作业大多是笙芋晚上做完以后，早自习扔到她桌上的，所以这个代表了她最高艺术成就的平安扣，还是丑得很客观。</p>
<p>她回复沈燕然说子安在战斗世界，一早就上线了，不知道在干嘛。然后放下手机打算继续画画，沈燕然又问她方不方便带他去找一下子安，笙芋有点犹豫，她不知道子安会不会感到冒犯。美术老师隔着装虫子的玻璃瓶看她，眼睛显得很大，他说你寒假为什么非要画画，多和同学玩玩吧。笙芋只能背着画板回去，和沈燕然去网游世界找谢子安。</p>
<br>
<br>
<br>


<h3 id="09-谢子安"><a href="#09-谢子安" class="headerlink" title="09 谢子安"></a>09 谢子安</h3><p>谢子安把材料都扔进了铸剑炉，看到显示铸剑时长为18小时，就知道这波运气超常发挥了。一般来说，12小时是高阶武器，18小时就是顶配武器了。她盘腿坐在了材料台上看炉火，开始思索怎么神不知鬼不觉地把乘风pro还给沈燕然，又没有被丢掉的风险。</p>
<p>但是她只想了20分钟就睡着了。她看上去是会躺在床上记小本本一晚上的人，其实她每天放下手机就能睡着。醒来的时候身边多了两个人。笙芋问她是不是重新铸了一杆枪，她尴尬地说是剑。沈燕然无意识地摩挲了一下手里的剑，一副小狗等开饭的表情。谢子安解释说之前乘风碎在了她面前让她非常愧疚，想还一把乘风pro，不过她也没有想到居然能练出一把神兵。</p>
<p>沈燕然的说话流量还能回光返照一下，郑重地说他从来不觉得子安需要赔他一把剑，不过如果她炼出来了一把就请只送给他。谢子安笑说你喜欢就好啊，不过最近市面上枪卖的好贵，她好缺，笙芋补充说她的盾也有点坏了。</p>
<p>距离谢子安收到“龙吟”玫瑰金版已经过了一个月，笙芋的盾也全面翻新了，沈燕然提供的pvp复健服务也取得了喜人的成就。米国宪法的第一修正案保证人说话的自由，第二修正案保证人提枪的自由，谢子安最近觉得自己是世界上最自由的人。</p>
<p>开学的第一次战斗评测她们团队成绩上升到了B，三个人喜气洋洋地搬进了舒适宜人的B舍。为了庆祝，她们点了蛋黄锅巴小龙虾外卖，炎焱主动开了三瓶鸡尾酒，预祝姐妹们勇攀高峰，进入A舍。子安挑了最喜欢的水蜜桃味喝，笙芋也一边欣赏小美人一边色眯眯地嗦了几口。炎焱说如果获得团队A级就可以进入真实战斗世界，请大家陪她一起去找找陆海空。子安凉凉的说陆海空可能已经讨了三房妻室，笙芋拍了拍炎焱的肩（虽然她对一个男人如何忍受三个女人的聒噪非常感兴趣！），炎焱把头发别到耳朵后面，淡淡的说有个结局也是好的。</p>
<br>
<br>
<br>

<h3 id="10-陆海空"><a href="#10-陆海空" class="headerlink" title="10 陆海空"></a>10 陆海空</h3><p>团体成绩升了没多久，笙芋和子安的个人战斗评级也上了A。笙芋约子安去战斗世界春游，但是子安宁愿和沈燕然泡在竞技场里互殴，对此笙芋表示嗤之以鼻。她租了一匹共享宝马去参观战斗世界，累了就打算在湖边写写生。路过一家杂货店的时候老板说前面的湖可以钓泥鳅，她就买了两袋蚯蚓。</p>
<p>笙芋在日落前钓完了一袋蚯蚓，收获了两条重达三两的肥泥鳅（她认为非常难得），但是因为数量过于稀少，只能无奈放生。她把两条泥鳅扔向河里，下一瞬就有一支箭凌空穿起两条泥鳅，钉在了树上。</p>
<p>笙芋认得这支箭，虽然它的主人笙芋已经两年没有见了。陆海空笑着上岸，湿漉漉但是爽朗地跟她打招呼，说老同学很久没见越来越漂亮了。笙芋遇到觉得难以处理的场景就会有点僵硬，她只能跟着重复说确实蛮久了，然后疯狂拍谢子安的头像，希望这个损友能把她从尴尬的社交活动中拯救出来。</p>
<p>陆海空去树边拔下箭，告诉笙芋他在训练水下穿杨，一方面可以练习到水下作战能力，一方面可以提升用箭的准度，是他独创的训练方式，应该可以提升日后的生存率。笙芋真心比了一个大拇指，陆海空又继续讲他在少荆营的生活，归纳起来就是如何在天才少年当中继续当天才，每天收到的情书都压得他拉不开弓。</p>
<p>笙芋记忆里陆海空有点中二，但是没有那么多话，可能是这两年为了当天才憋坏了。陆海空叨叨完又问笙芋这两年过的怎么样，笙芋老实的说她过的很好，子安最近也很好，不过炎焱一直不太好。</p>
<p>陆海空笑出了两个酒窝，似乎知道笙芋一定会这么说。他用手指搔了骚头，嘀咕说还好安爷和呆子没来，不然肯定一个骂死他一个打死他。但实际上那两人已经在来的路上了。</p>
<p>笙芋说陆海空应该当面和炎焱好好告别，陆海空看上去有点为难。笙芋很坚持，她说炎焱喜欢你不是你的问题，但是不喜欢她的话请你让她死心。陆海空弱弱地说他也不是一点也不喜欢炎焱，被笙芋死鱼眼瞪视，只能吞回了后面半句。这个时候笙芋看到子安的坐标已经在500米以内了，按照 “乘风pro” 的飞行速度，应该很快就能到达，笙芋给自己打气再拖住宇宙中心3分钟，却不想陆海空像是开天眼一样，丢下一句我考虑考虑就一溜烟跑了。</p>
<p>过了一会乘风pro载着谢沈二人来了，谢子安看到呆滞的笙芋也没有太大的反应，沈燕然在路上已经告知她陆海空还是跟他在组队状态。笙芋艰难地消化着自己的功败垂成，子安安慰她说尽力就好了，陆海空不想见他们，一个提篮桥监狱也关不住他。</p>
<br>
<br>
<br>

<h3 id="11-告别"><a href="#11-告别" class="headerlink" title="11 告别"></a>11 告别</h3><p>炎焱没有想到A级团队来的那么容易——向来独行的沈燕然居然加入了他们的队伍，他们这个吸引了“剑圣”的队伍突然受到了大家的关注，一时之间战书不绝，为了不拖团队的后脚，炎焱的治疗技巧也在稳步上升。</p>
<p>在第二次月榜上，他们赫然成为了A级团队中的佼佼者，沈燕然暴力输出，子安单骑偷人头，笙芋风雨不动安如山，炎焱的治疗水平发挥不太稳定，但也在蒸蒸日上。战斗世界的大门终于向炎焱打开了，像是跋山涉水地朝圣者终于站在了布达拉宫门前。</p>
<p>子安管新建的小分队叫winRAR，说大家一起战斗很解压，而且缩写也很吉利。win小队在升A后第一次团建在烧烤店内隆重举行，烤肉的烟火气把他们都熏的两颊红红。在食物的温馨香味，暖融融的空气，和啤酒碰撞声中，陆海空掀开了门帘，就像是莫西劈海而来。</p>
<p>笙芋叼着的肉串停在嘴边，胀大了鼻孔瞪子安，子安莫名奇妙地回瞪了笙芋一眼，一脸怀疑地看向沈燕然，沈燕然无辜地抿了抿嘴。炎焱突然站了起来，叮叮咚咚地碰倒了两个水杯，湿了半个裤管，但是她好像什么感觉也没有，只是磕磕绊绊地说，这两年她发的信息原来陆海空都能看到啊。</p>
<p>陆海空挑了个空地坐下来，身上还带着一股冷意，他搓了搓脸，说大家很久没有这样聚在一起了。子安率先笑起来，说他愿意可以多来，也可以进他们队里打工。陆海空叹气说他挺忙的，眼睛却一直看着炎焱。炎焱有点坐立难安，她现在只想按下暂停键，理理思绪，让自己不要看起来那么傻。</p>
<p>子安说她和笙芋约好了去补习，沈燕然走过来很用力地抱了抱陆海空，跟着她们走了。炎焱有点悲伤，陆海空是子安笙芋的老同学，是沈燕然最好的朋友，但是他们都把他让给了她。陆海空说初中毕业后，他考上了一个很好的学校，所以没有来得及告别就走了，很抱歉。炎焱没有说话，陆海空就新拿了两个杯子倒大麦茶，自顾自和炎焱碰了杯，提前恭喜她18岁快乐，以后很难见面了，还是祝她天天开心。炎焱拿着杯子无法自抑地流泪，杯子里的茶就陪她一颤地一颤的哭，这一次陆海空没有帮她擦眼泪，只是笑着跟她背初中讲过的古诗，</p>
<p>劝君更尽一杯酒，西出阳关无故人。</p>
<br>
<br>
<br>

<h3 id="12-选择"><a href="#12-选择" class="headerlink" title="12 选择"></a>12 选择</h3><p>距离18岁的成人礼只有三天了，每个学生都会在成人礼上作出自己的选择。子安和燕然报名通过了“守护者计划”，以后应该会成为维系校园和战斗世界的教师。笙芋很明显一秒钟也没有考虑过战斗世界，就等着在成人礼上对战斗世界大声say no。</p>
<p>炎焱看着大家都已经有了目标，心里空落落的，晚上躺在下铺用长腿顶子安的床铺，把谢子安顶地不胜其烦。她索性爬下床打开灯，开启宿舍最后一次夜谈。</p>
<p>炎焱询问姐妹们她应该怎么选，以她的水平可以去战斗世界做一个不错的医疗，但是应该也能考上一个普通一本大学，平平安安地过一生。笙芋说忘了宇宙中心吧，我画画养你。谢子安耸肩说还是看炎焱自己的兴趣。炎焱突然苦笑了一下说，她很不习惯，她现在是一条没有梦想的美人鱼。子安钻进她的被窝，冷冷的手贴到她的脖子里，说大部分人晚上都会做梦，但其实并没有什么梦想，所以不想太多的过下去也没有什么不好的。笙芋也想来泰山压顶，被子安和炎焱紧急叫停，她只能坐在炎焱床边，说她尊重炎焱的选择，不过她还是希望以后她们有机会见面。</p>
<p>成人礼那天炎焱沐浴在礼堂的灯光下，她突然想起了战斗世界的对她无穷无尽的吸引力，其实都来自一个已经离开的人。大家都做出了选择，离开的人也补上了告别，她也是时候关闭布达拉宫的大门了。</p>
<p>祝他们都有光明的未来。</p>
<br>
<br>
<br>


<h2 id="补充-我写的世界观"><a href="#补充-我写的世界观" class="headerlink" title="补充(我写的世界观)"></a>补充(我写的世界观)</h2><blockquote>
<p>脱离大纲的我流瞎设定.不推荐看,就完善一下世界逻辑.</p>
</blockquote>
<br>
<br>
<br>

<h3 id="世界分为两面"><a href="#世界分为两面" class="headerlink" title="世界分为两面:"></a>世界分为两面:</h3><p>以物质为基底的面和以意识为基底的面.<br>在文中也就是 <strong>现实世界</strong> 和 <strong>网游/战斗世界</strong>.<br>最初的人类是在物质面所诞生的,或者说所有的生物都是如此.生物拥有意识.人类相比在地球的其他种族更拥有智能,渐渐认知到了以意识为基底的世界面.<br>在物质面的所有法制是构建在实体上的.先拥有实体,生物再会具备意识.<br>意识面的构造则是另一个方向,因为认知到,所以事物再会存在.<br>死亡却没意识到的亡灵,口口相传的都市传说,都可以理解为是意识面的存在在物质面的留下的痕迹.<br>世界的两面不可分割,是硬币的两面,是世界构造不可缺失的两极.</p>
<br>

<blockquote>
<p>因为认知到,所以事物再会存在 -&gt;</p>
</blockquote>
<p>关于这句话的解读:<br>意识面所有的人类都是从物质面而抵达意识面.<br>意识本身是黑盒子一样的存在.我们尚未能理解和观测意识本身,只能通过刺激盒子的外界来观察盒子的变化.<br>所以所有拥有自己的意识而进入意识面的就是在物质面的人类了.</p>
<blockquote>
<p>(说人话就是人可以从第一视角理解自己的存在从物质面抵达意识面)<br>(但无法明白里面所有的活动物是否都拥有和自己类似的意识)</p>
</blockquote>
<br>

<h3 id="关于意识面中存在的想法"><a href="#关于意识面中存在的想法" class="headerlink" title="关于意识面中存在的想法:"></a>关于意识面中存在的想法:</h3><p>在意识面里的“生物”可以分为“旧人类”和“不明生物”.<br>旧人类以前拥有社会身份,这样可以区分.<br>“不明生物”是意识面所特殊拥有的,也是我们尚未能理解是否拥有意识的生物体.</p>
<blockquote>
<p>(作为故事设定可以当作网游的bug,超级无敌小兵,或者菜菜小兵,按剧情需求设定.)<br>(如何区分,是否区分都可以做设定)</p>
</blockquote>
<br>

<h3 id="世界协议"><a href="#世界协议" class="headerlink" title="世界协议:"></a>世界协议:</h3><p>人类进入意识面后,因为意识的不稳定性,为了约束意识而形成的协议.<br>这些协议就可以构造出我们所称为的网游世界设定.<br>当然可以偏差些,比如说武侠是人们的集体意识所构造的.<br>一些财产私人拥有,信息交换主要还是通过人类世界的语言(物质世界的旧方式),意识是为个人为单位,之类的更像协议一点点.<br>不过因为在物质面的基本认知,宗教等等的残留元素,人们有死亡这个概念,所以在意识面也会有死亡.认知到(以为)自己会死亡就会死亡.<br>嘛,按这个逻辑如果有还没理解死亡的人进入可能能长生.但在某个年龄前又有保护不可长期进入,所以可以当所特殊例子来思考.<br>也因为意识面混沌,大量的财富和诱惑也更加有可能流通和获取,也是吸引人们进入意识面的原因.</p>
<h3 id="关于进入"><a href="#关于进入" class="headerlink" title="关于进入:"></a>关于进入:</h3><p>当然(长期的)从物质面进入意识面是单方向的.<br>因为物质面和意识面的定义.<br>在意识面里是通过意识(感知)来明白事物是否存在,这与已经拥有实体再具备意识相互矛盾.<br>在意识面的感知无法在物质面创造物体.</p>
<br>

<p>因为定义意识面是混沌的,人类最初在进入意识面的一些历史都可以捏造,最后人类达成了一些意识协议,可以理解成集体心理暗示 -&gt; 来约束意识在意识面的能动性(以防暴走什么的).</p>
<blockquote>
<p>(既然有约束就也可以有打破约束的人,称为世界的黑客之类的)</p>
</blockquote>
<p>如何进入.<br>对意识面的存在和理解会列入上课的内容,当然包括协议.<br>理解到了,就能主动进入.通过心理暗示之类的,毕竟人类本身就拥有意识.(&lt;——说人话版本)</p>
<blockquote>
<p>(不说人话的版本:人类拥有可以意识到自己有意识的意识,所以可以跟意识面的定义所相对应,那么在此定义上,就在意识面了.)<br>(好绕口.)</p>
</blockquote>
<p>在故事情节上就可以拔水笔的时候切换到拔腰上的剑,我的意思是随时随地都可以切换的.<br>不过因为保护的机制,估计心理暗示唯一能允许的场所是学校(可能还有允许的时间之类的).</p>
<br>

<br>

<h3 id="关于学生"><a href="#关于学生" class="headerlink" title="关于学生:"></a>关于学生:</h3><p>学生,处于作出世界生存面选择前的特殊的群体,在协议中拥有特殊的地位.<br>协议中可以规定在年龄某些之前,没有在意识面长期停留的权利.也拥有在意识面绝对会被保护的特殊照顾.也就是不死buff.<br>长期停留在物质面的肉体会萎缩而坏死.短期的话可以处理成,趴在桌子上睡了一觉…之类的吧.</p>
<br>


<br>

<p>关于两个面的利益交互.<br>没想好.<br>意识面比物质面可以做的多多了,可以在这里情报意义上下手.<br>意识面是否能构造出物质面无意识的实物…这个也需要做决定.</p>
]]></content>
      <tags>
        <tag>树哥是神</tag>
      </tags>
  </entry>
  <entry>
    <title>关于(我所理解的)加密学入门的笔记</title>
    <url>/blog/2020/12/14/P153/</url>
    <content><![CDATA[<script async
  src="//mathjax.rstudio.com/latest/MathJax.js?config=TeX-MML-AM_CHTML">
</script>

<p>复习co487的时候想着也写个自个用笔记.没有记载具体,草草概括一下.  </p>
<blockquote>
<p>Aside:使用了mathjax,可以更好得写数学公式,关于mathjax的<a href="https://math.meta.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference">tips</a>.<br>感谢<a href="https://yihui.org/en/2018/07/latex-math-markdown/">yihui</a>大佬提供的hexo与mathjax不兼容的解决方式.</p>
</blockquote>
<span id="more"></span>

<p>加密,是不同的算法.将想要的信息按照算法和自己的密匙加密,再也通过算法和密匙解密.<br>破解,是在已知算法的前提下,试图找算法的破绽,也用大量的尝试不同密匙来暴力破解.  </p>
<p>不过加密方式是实时更新的.这门课我上了两次,隔了半年教材也少许有更改.<br>所以如果阅读这篇文章的时候距离创造时间够久了,实用意义就会减少.比如如果量子计算机使用起来,现在的加密方法肯定也得重新考虑安全性了.  </p>
<br>
<br>

<h2 id="Symmetric-key-encryption-scheme-SKES"><a href="#Symmetric-key-encryption-scheme-SKES" class="headerlink" title="Symmetric-key encryption scheme (SKES)"></a>Symmetric-key encryption scheme (SKES)</h2><p><a href="https://mazui3.github.io/blog/2020/09/22/P120/">流密码</a> 上次有简单记述.<br>借着上次的三种传统加密方法以外,这里是一些经常在stream cipher中出现的辅助定义.  </p>
<br>

<h3 id="A-pseudorandom-bit-generator-PRBG"><a href="#A-pseudorandom-bit-generator-PRBG" class="headerlink" title="A pseudorandom bit generator (PRBG)"></a>A pseudorandom bit generator (PRBG)</h3><blockquote>
<p>Definition<br>A pseudorandom bit generator (PRBG) is a deterministic algorithm that takes as input a (random) seed, and outputs a longer “pseudorandom” sequence called the keystream.  </p>
</blockquote>
<p>用于one-time pad.使用一次性密匙的流密码.  </p>
<ul>
<li>Indistinguishability: The keystream should be “indistinguishable” from a random sequence.</li>
<li>Unpredictability: If an adversary knows a portion c1 of ciphertext and the corresponding plaintext m1, then she can easily find the corresponding portion<br><code>$&#123;k1 = c1 ⊕ m1&#125;$</code> of the keystream. Thus, given portions of the keystream, it should be infeasible to learn any information about the rest of the keystream.</li>
</ul>
<p>The keystream generator is the critical security component of stream cipher. View generator as a finite state machine:</p>
<ul>
<li>State: storage of internal values</li>
<li>State update function: changes stored internal value at each time interval</li>
<li>Output function: keystream output is function of current stored value</li>
</ul>
<br>

<h3 id="Linear-feedback-shift-registers-LFSR"><a href="#Linear-feedback-shift-registers-LFSR" class="headerlink" title="Linear feedback shift registers (LFSR)"></a>Linear feedback shift registers (LFSR)</h3><p>可以用来generate key的方式.使用initial vector,来生成更长的key.  </p>
<p>One application: A5 cipher.  </p>
<blockquote>
<p>Definition:<br>Any infinite periodic sequence (st) can be defined via a recurrence relation: <code>$&#123; s_&#123;t+n&#125; = c_&#123;n−1&#125;s_&#123;t+n−1&#125; ⊕ c_&#123;n−2&#125;s_&#123;t+n−2&#125; . . . c_1s_&#123;t+1&#125; ⊕ c_0s_t  &#125;$</code><br>where ci are binary constants.<br>The vector ( <code>$&#123; s_0, s_1, . . . , s_&#123;n−1&#125; &#125;$</code>) is called the initial state vector.  </p>
</blockquote>
<img src="/blog/2020/12/14/P153/P153_1.png" class="">
<img src="/blog/2020/12/14/P153/P153_2.png" class="">

<blockquote>
<p>Definition:<br>The period of a binary sequences(t) is said to be p if <code>$&#123;S_&#123;t+p&#125; = S_&#123;n&#125;&#125;$</code> for all t, and p is the smallest such number.  </p>
</blockquote>
<p>对于LFSRs我们可以attack on small period.  </p>
<p>If the period of the keystream is less than the length of a ciphertext then two sections of message are encrypted using the same portion of keystream.<br>By XORing these two sections, the keystream cancels and one obtains the XOR of the plaintext strings.  </p>
<br>

<h3 id="RC4-stream-cipher"><a href="#RC4-stream-cipher" class="headerlink" title="RC4 stream cipher"></a>RC4 stream cipher</h3><p>Pros:  </p>
<ul>
<li>extremely simple</li>
<li>extremely fast</li>
<li>variable key length</li>
<li>No catastrophic weakness has been found</li>
</ul>
<p>Cons:  </p>
<ul>
<li>design criteria are proprietary</li>
<li>not much public scrutiny until the year 2001</li>
<li>has small biases exploitable with ≈millions of ciphertexts</li>
</ul>
<p>RC4 has two components: A key scheduling algorithm, and a keystream generator.  </p>
<br>

<blockquote>
<p>Aside:<br>Birthday paradox: Suppose that an urn contains n numbered balls.<br>Suppose that balls are drawn from the urn, one at a time, with replacement. The expected number of draws before a ball is selected for a second time (called a collision) is approximately<br><code>$$\begin&#123;equation&#125;\label&#123;eq2&#125;&#123;\sqrt &#123;πn/2&#125;&#125; ≈ &#123;\sqrt n&#125;.\end&#123;equation&#125;$$</code></p>
</blockquote>
<br>
<br>

<h2 id="Block-ciphers"><a href="#Block-ciphers" class="headerlink" title="Block ciphers"></a>Block ciphers</h2><p>同样也是流密码,但把长度分为一段一段的block.  </p>
<blockquote>
<p>Definition:<br>A block cipher is a symmetric-key encryption scheme in which a fixed-length block of plaintext determines an equal-sized block of ciphertext.  </p>
</blockquote>
<ul>
<li><p>Security:  </p>
<ul>
<li>Diffusion: each ciphertext bit should depend on all plaintext bits.</li>
<li>Confusion: the relationship between key and ciphertext bits should be complicated.</li>
<li>Key length: should be small, but large enough to preclude exhaustive key search.</li>
</ul>
</li>
<li><p>Efficiency:  </p>
<ul>
<li>Simplicity (easier to implement and analyze).</li>
<li>High encryption and decryption rate.</li>
<li>Suitability for hardware or software.</li>
</ul>
</li>
</ul>
<br>

<h3 id="Data-Encryption-Standard-DES"><a href="#Data-Encryption-Standard-DES" class="headerlink" title="Data Encryption Standard (DES)"></a>Data Encryption Standard (DES)</h3><img src="/blog/2020/12/14/P153/P153_3.png" class="">

<blockquote>
<p>Note: Basically, DES is (believed to be) secure against everything except brute-force key search.  </p>
</blockquote>
<p>关于Feistel network:<br>用于DES.  </p>
<img src="/blog/2020/12/14/P153/P153_4.png" class="">

<blockquote>
<p>Underlying principle: Take something “simple” and use it several times; hope that the result is “complicated”  </p>
</blockquote>
<p>DES Problem:  </p>
<ul>
<li>Small Key Size</li>
<li>Small Block Size</li>
</ul>
<br>

<h3 id="DES的Multiple-encryption"><a href="#DES的Multiple-encryption" class="headerlink" title="DES的Multiple encryption:"></a>DES的Multiple encryption:</h3><p>Double-DES:<br><code>$$\begin&#123;equation&#125;\label&#123;eq3&#125;k = (k1, k2), k1, k2 ∈ &#123;\&#123;0, 1\&#125;&#125;^&#123;56&#125;\end&#123;equation&#125;$$</code></p>
<p><code>$$\begin&#123;equation&#125;\label&#123;eq4&#125;c = E_&#123;k2&#125; (E_&#123;k1&#125; (m))\end&#123;equation&#125;$$</code></p>
<p>Double-DES attack: Meet-in-the-middle.<br>Main idea: If<br><code>$$\begin&#123;equation&#125;\label&#123;eq5&#125;c = E_&#123;k1&#125; (E_&#123;k2&#125; (m))\end&#123;equation&#125;$$</code></p>
<p>, then<br><code>$$\begin&#123;equation&#125;\label&#123;eq6&#125;E^&#123;−1&#125;_&#123;k2&#125;(c) = E_&#123;k1&#125;(m)\end&#123;equation&#125;$$</code></p>
<blockquote>
<p>About meet-in-the-middle attack: time-memory tradeoff. The attack can be modified to decrease the storage requirements at the expense of time.  </p>
</blockquote>
<br>

<p>虽然两倍的DES不大行,但三倍好了些.<br>Three-key Triple encryption:  </p>
<p><code>$$\begin&#123;equation&#125;\label&#123;eq7&#125;k = (k1, k2, k3), k1, k2, k3 ∈_R &#123;\&#123;0, 1\&#125;&#125;^&#123;56&#125;\end&#123;equation&#125;$$</code></p>
<p><code>$$\begin&#123;equation&#125;\label&#123;eq8&#125;c = E_&#123;k3&#125; (E_&#123;k2&#125; (E_&#123;k1&#125; (m)))\end&#123;equation&#125;$$</code></p>
<p>Meet-in-the-middle attack takes  ≈ <code>$ 2^&#123;112&#125; $</code> steps<br>No proof that Triple-DES is more secure than DES.但是有大量运用.  </p>
<br>

<h3 id="The-Advanced-Encryption-Standard-AES"><a href="#The-Advanced-Encryption-Standard-AES" class="headerlink" title="The Advanced Encryption Standard (AES)"></a>The Advanced Encryption Standard (AES)</h3><p>关于Substitution-Permutation Networks:  </p>
<img src="/blog/2020/12/14/P153/P153_5.png" class="">

<p>AES比DES增加了Bitwise-XOR.  </p>
<img src="/blog/2020/12/14/P153/P153_6.png" class="">

<p>关于更多的Substitution-Permutation Network加密方式:  </p>
<ul>
<li>Rijndael (AES)</li>
<li>Heys cipher</li>
</ul>
<p>Key whitening: Subkey prevents an adversary from reversing the final round of substitution and permutation.<br>Substitution-Permutation Networks的attack:寻找bias  </p>
<p>更多-&gt;<a href="https://en.wikipedia.org/wiki/Piling-up_lemma">Piling-up Lemma的wiki</a>.  </p>
<blockquote>
<p>The basic idea is to look for linear (boolean) relations among the bits which hold with probability much different from 50%.  </p>
</blockquote>
<br>

<h3 id="更多的block-cipher加密方法"><a href="#更多的block-cipher加密方法" class="headerlink" title="更多的block cipher加密方法"></a>更多的block cipher加密方法</h3><ul>
<li>Electronic Codebook (ECB) mode(not secure)</li>
<li>Cipher Block Chaining (CBC) mode</li>
<li>Cipher Feedback (CFB) mode</li>
<li>Output Feedback (OFB) mode</li>
<li>Counter (CTR) mode</li>
</ul>
<img src="/blog/2020/12/14/P153/P153_7.png" class="">

<br>
<br>

<h2 id="Padding"><a href="#Padding" class="headerlink" title="Padding"></a>Padding</h2><blockquote>
<p>Some modes, namely ECB and CBC, require the plaintext to consist of one or more complete blocks.<br>The padding bits can be removed unambiguously, if the receiver knows that this padding method is used.  </p>
</blockquote>
<p>中文翻译是填充,因为ECB CBC这样的block cipher对字数有特定的限制,于是得填充无用的字符来达到字数要求.  </p>
<p>Example:  </p>
<ul>
<li>remove all trailing ‘0’ bits after the last ‘1’ bit 2.</li>
<li>remove a single ‘1’ bit.</li>
</ul>
<br>
<br>

<h2 id="Hashing"><a href="#Hashing" class="headerlink" title="Hashing"></a>Hashing</h2><p>Hash的最初目的是单向的mapping.</p>
<blockquote>
<p>A hash function is a checksum designed to be safe from malicious tampering.<br>Note: The description of a hash function is public. There are no secret keys.  </p>
</blockquote>
<img src="/blog/2020/12/14/P153/P153_8.png" class="">

<ul>
<li>Preimage resistance: Hard to invert given just an output.</li>
<li>2nd preimage resistance: Hard to find a second input that has the same hash value<br>as a given first input.</li>
<li>Collision resistance: Hard to find two different inputs that have the same hash values.</li>
</ul>
<blockquote>
<p>A hash function that is preimage resistant is sometimes called a one-way hash function (OWHF).<br>A hash function that is preimage-, second preimage-, and collision-resistant is called a cryptographic hash function.  </p>
</blockquote>
<h3 id="Applications-of-hash-functions"><a href="#Applications-of-hash-functions" class="headerlink" title="Applications of hash functions:"></a>Applications of hash functions:</h3><ul>
<li>Password protection</li>
<li>Modification Detection Codes (MDCs)</li>
<li>Message digests for digital signature schemes</li>
<li>Message Authentication Codes (MACs)</li>
<li>Pseudorandom bit generation</li>
<li>Key derivation function (KDF)</li>
</ul>
<h3 id="Theorem"><a href="#Theorem" class="headerlink" title="Theorem:"></a>Theorem:</h3><ol>
<li>Collision resistance implies 2nd preimage resistance.</li>
<li>2nd preimage resistance does not guarantee collision resistance.</li>
<li>Collision resistance does not guarantee preimage resistance.</li>
</ol>
<h3 id="Popular-hash-functions"><a href="#Popular-hash-functions" class="headerlink" title="Popular hash functions:"></a>Popular hash functions:</h3><p>MD5, SHA-1, SHA-2, SHA-3.  </p>
<h3 id="Generic-attack-for-finding-collisions"><a href="#Generic-attack-for-finding-collisions" class="headerlink" title="Generic attack for finding collisions"></a>Generic attack for finding collisions</h3><ol>
<li>暴力测试 -&gt; <code>$ 2^&#123;n&#125; $</code></li>
<li>测试 (H(x), x) -&gt; <code>$&#123;\sqrt &#123; 2^&#123;n&#125; &#125; &#125;$</code></li>
</ol>
<p>原理-&gt;<a href="https://en.wikipedia.org/wiki/Pollard%27s_rho_algorithm">Pollard’s rho algorithm</a> &amp; <a href="https://en.wikipedia.org/wiki/Cycle_detection#Floyd.27s_Tortoise_and_Hare">Floyd’s cycle-finding algorithm</a>.<br>除了单线计算等待重复的search,也可以parallel(VW Parallel Collision Search).  </p>
<h3 id="Password-hashing"><a href="#Password-hashing" class="headerlink" title="Password hashing"></a>Password hashing</h3><p>不过常见的词被hash后有收录,所以有些可以知道hash前的内容 -&gt; <a href="https://crackstation.net/">data branch</a>  </p>
<p>进阶版寻找hash的方法: Rainbow table<br>Rainbow tables are an example of a time-space tradeoff using hash chains.  </p>
<img src="/blog/2020/12/14/P153/P153_10.png" class="">
<img src="/blog/2020/12/14/P153/P153_11.png" class="">

<p>阻碍rainbow table的是加salt(每次运算hash加入无意义的杂数).</p>
<br>
<br>

<h2 id="Message-authentication-code-MAC"><a href="#Message-authentication-code-MAC" class="headerlink" title="Message authentication code (MAC)"></a>Message authentication code (MAC)</h2><p>用来验证信息是否被更改或被攻击.</p>
<h3 id="Definition"><a href="#Definition" class="headerlink" title="Definition"></a>Definition</h3><blockquote>
<p>A message authentication code (MAC) scheme is an efficiently computable function<br>M : <code>$&#123; &#123; \&#123;0, 1\&#125; &#125;^l × &#123; \&#123;0, 1\&#125; &#125;^* → &#123; \&#123;0, 1\&#125; &#125;^n &#125;$</code><br>written <code>$M(k,m) = t$</code> , where k is the key, m is the message, and t is the tag.<br>Used for providing (symmetric-key) data integrity and data origin authentication.  </p>
</blockquote>
<p>To provide data integrity and data origin authentication:</p>
<ol>
<li>Alice and Bob establish a secret key <code>$&#123; &#123; \&#123; 0, 1 \&#125; &#125;^l &#125;$</code></li>
<li>Alice compute <code>$&#123;t = (m, t)&#125;$</code> to Bob.</li>
<li>Bob verifies that <code>$&#123;t = M(k, m)&#125;$</code>.</li>
</ol>
<p>No confidentiality or non-repudiation.</p>
<br>

<h3 id="Secure"><a href="#Secure" class="headerlink" title="Secure"></a>Secure</h3><p>A MAC scheme is <strong>secure</strong> if:  </p>
<ul>
<li>Given some number of MAC tags <code>$&#123;M(k, m_i)&#125;$</code> for messages mi chosen by the adversary<br>(interaction),</li>
<li>it is computationally infeasible (computational resources)</li>
<li>to compute (with non-negligible probability of success) the value of <code>$&#123;M(k, m)&#125;$</code> for any message <code>$&#123;m \neq m_i&#125;$</code> (goal).<br>In other words, a MAC scheme is secure if it is existentially unforgeable against chosen-message attack.</li>
</ul>
<h3 id="常见的MAC"><a href="#常见的MAC" class="headerlink" title="常见的MAC"></a>常见的MAC</h3><p>CBC-MAC, Encrypted CBC-MAC (EMAC)</p>
<p>以及跟hash function组合:  </p>
<p>Secret prefix method:<br><code>$&#123;M(k, m) = H(K||m)&#125;$</code><br>(insecure)   </p>
<p><code>$&#123;M(k, m) = H(m||K)&#125;$</code><br>(H is not collision resistant, insecure)  </p>
<p>Envelope method a.k.a. Sandwich method:<br><code>$&#123;M(k, m) = H(K∥m∥K)&#125;$</code>  </p>
<blockquote>
<p>Suppose that the compression function used in H is a secure MAC with fixed length messages and a secret IV as the key. Then Envelope MAC with m padded to a multiple of the block length of H is a secure MAC algorithm.  </p>
</blockquote>
<p>HMAC(“Hash-based” MAC):  </p>
<img src="/blog/2020/12/14/P153/P153_9.png" class="">
<p><code>$&#123;M(k, m) = H (K⊕opad)∥H (K⊕ipad)∥m &#125;$</code></p>
<blockquote>
<p>Suppose that the compression function used in H is a secure MAC with fixed length messages and a secret IV as the key. Then HMAC is a secure MAC algorithm.  </p>
</blockquote>
<br>
<br>

<h2 id="Pseudorandom-generators"><a href="#Pseudorandom-generators" class="headerlink" title="Pseudorandom generators"></a>Pseudorandom generators</h2><p>伪随机数生成器,生成看上去是随机的数列但实际是有其算法.使用seed来生成.</p>
<h3 id="PRG"><a href="#PRG" class="headerlink" title="PRG"></a>PRG</h3><p>A pseudorandom generator is a deterministic function that takes as input a random seed <code>$&#123; k ∈ &#123; \&#123; 0, 1 \&#125; &#125;^λ &#125;$</code> and outputs a random-looking binary string of length l. PRG :  </p>
<p><code>$$\begin&#123;equation&#125;\label&#123;eq9&#125;&#123;\&#123;0, 1\&#125;&#125;^λ → &#123;\&#123;0, 1\&#125;&#125;^l\end&#123;equation&#125;$$</code></p>
<h3 id="PRF"><a href="#PRF" class="headerlink" title="PRF"></a>PRF</h3><p>A pseudorandom function is a deterministic function that takes as input a random seed <code>$&#123; k ∈ &#123; \&#123; 0, 1 \&#125; &#125;^λ &#125;$</code> and a (non-secret) label in <code>$&#123; &#123; \&#123; 0, 1 \&#125; &#125;^* &#125;$</code> and outputs a random-looking binary string of length l. PRF :  </p>
<p><code>$$\begin&#123;equation&#125;\label&#123;eq10&#125;&#123; \&#123; 0, 1 \&#125; &#125;^λ × &#123; \&#123; 0, 1 \&#125; &#125;^* → &#123; \&#123; 0, 1 \&#125; &#125;^l\end&#123;equation&#125;$$</code></p>
<h3 id="KDF"><a href="#KDF" class="headerlink" title="KDF"></a>KDF</h3><p>A key derivation function is a deterministic function that takes as input a random seed <code>$&#123; k ∈ &#123; \&#123; 0, 1 \&#125; &#125;^λ&#125;$</code> and a (non-secret) label in <code>$&#123; &#123; \&#123; 0, 1 \&#125; &#125;^* &#125;$</code> and outputs a random-looking binary string of length l. KDF :<br><code>$$\begin&#123;equation&#125;\label&#123;eq11&#125;&#123; \&#123; 0, 1 \&#125; &#125;^λ × &#123; \&#123; 0, 1 \&#125; &#125;^* → &#123; \&#123; 0, 1 \&#125; &#125;^l\end&#123;equation&#125;$$</code></p>
<blockquote>
<p>Difference between KDFs and PRFs: KDF output should be indistinguishable from random even if the key k is non-uniform but sufficiently high entropy.  </p>
</blockquote>
<br>
<br>

<h3 id="Applications"><a href="#Applications" class="headerlink" title="Applications"></a>Applications</h3><p>Key streching: Password-Based Key Derivation Function 2 (PBKDF2)<br><code>$$\begin&#123;equation&#125;\label&#123;eq12&#125;k = PBKDF2(F, p, s, c, l)\end&#123;equation&#125;$$</code><br>where<br>F = keyed hash function<br>p = passphrase<br>s = salt<br>c = number of iterations<br>l = output length  </p>
<br>
<br>

<h2 id="Authenticated-encryption"><a href="#Authenticated-encryption" class="headerlink" title="Authenticated encryption"></a>Authenticated encryption</h2><p>结合加密和认证.  </p>
<p>Composed primitives:  </p>
<ul>
<li>MAC-then-encrypt (MtE) : SSL/TLS up to v1.2</li>
<li>encrypt-then-MAC (EtM) : IPsec (safe)</li>
<li>encrypt-and-MAC (E&amp;M) : SSH</li>
</ul>
<p>Goal:  </p>
<ul>
<li>Confidentiality: semantic security under chosen plaintext or chosen ciphertext attack  </li>
<li>Integrity: existential unforgeability under chosen message attack</li>
</ul>
<p>再加上padding:  </p>
<ul>
<li>Apply MAC, then pad, then encrypt(insecure)</li>
<li>Apply padding, then MAC, then encrypt</li>
</ul>
 <br>
 <br>

<h2 id="Public-Key-Cryptography"><a href="#Public-Key-Cryptography" class="headerlink" title="Public-Key Cryptography"></a>Public-Key Cryptography</h2><p>这个是我觉得加密学比较罗曼的一个部分(…).解密方式都是公开的,因为公开,所以可以被大量验证安全性.<br>(自己做的更容易被解答出来,不如说所有加密的内容都会有被解答的可能,只是那是否infeasible是判定安全性的标准.)<br>在公开的解密方式下,保证安全性的是加密方和解密方的密匙(key).其中的问题是,密匙的安全性.  </p>
<p>Public key如字面意思,不需要私下的密匙,所有的东西都是可公开,在此前提下也能做到只有加密方和解密方能明白传递信息.<br>这不就是罗曼!  </p>
<p>所做到的方式是创造大量的puzzle.<br>解密方只需要解答其中一个puzzle就能得到解码方式,而其他人要解码得在所有的puzzle中寻找解出那个有解码方式的puzzle.通过puzzle的数量来达到infeasible的标准.  </p>
<img src="/blog/2020/12/14/P153/P153_12.png" class="">

<h3 id="Digital-Signatures"><a href="#Digital-Signatures" class="headerlink" title="Digital Signatures"></a>Digital Signatures</h3><p>类似的思路出现在Digital Signatures里.  </p>
<img src="/blog/2020/12/14/P153/P153_13.png" class="">

<h3 id="RSA"><a href="#RSA" class="headerlink" title="RSA"></a>RSA</h3><p>RSA也是可以用在Digital Signatures里的.</p>
<p><strong><code>$&#123; (n, e) &#125;$</code> is the public key</strong> and <strong><code>$&#123; (n, d) &#125;$</code> is the private key</strong>.<br>where<br>1.random primes <code>$&#123; p &#125;$</code> and <code>$&#123; q &#125;$</code> with <code>$&#123; \log_2 p ≈ \log_2 q ≈ l/2&#125;$</code><br>2.<code>$&#123; n = pq &#125;$</code><br>3.<code>$&#123; φ(n) = (p−1)(q−1) &#125;$</code><br>4.integer <code>$&#123; e &#125;$</code> with <code>$&#123; 1 &lt; e &lt; φ(n) &#125;$</code> and <code>$&#123; gcd(e, φ(n)) = 1 &#125;$</code><br>5.<code>$&#123; d = e−1 &#125;$</code> in <code>$&#123; \Bbb Z_φ(n) &#125;$</code><br>Note: <code>$&#123; de ≡ 1 (mod φ(n)) &#125;$</code> by definition of <code>$&#123; e^&#123;−1&#125; &#125;$</code>  </p>
<p>Encryption: <code>$&#123; E((n, e), m) = m^e mod n &#125;$</code>.<br>Decryption: <code>$&#123; D((n, d), c) = c^d mod n &#125;$</code>.  </p>
<br>
<br>

<h3 id="Diffie–Hellman-key-exchange"><a href="#Diffie–Hellman-key-exchange" class="headerlink" title="Diffie–Hellman key exchange"></a>Diffie–Hellman key exchange</h3><p>1.<code>$&#123; p &#125;$</code> is a prime<br>2.<code>$&#123; \Bbb Z^&#123;∗&#125;_&#123;p&#125; &#125;$</code> is the set <code>$&#123; \&#123;1,2,...,p−1 \&#125; &#125;$</code><br>3.<code>$&#123; g ∈ \Bbb Z^&#123;∗&#125;_&#123;p&#125; &#125;$</code> is an element of <code>$&#123; \Bbb Z^&#123;∗&#125;_&#123;p&#125; &#125;$</code> of large prime order <code>$&#123; q &#125;$</code></p>
<p>Note:<code>$&#123; \Bbb Z^&#123;∗&#125;_&#123;n&#125; &#125;$</code> = <code>$&#123; \&#123; x∈ \Bbb Z_&#123;n&#125; :gcd(x,n)=1 \&#125; &#125;$</code><br>The <strong>order</strong> of an element <code>$&#123; x∈ \Bbb Z^&#123;∗&#125;_&#123;n&#125; &#125;$</code> is defined to be the smallest positive integer <code>$&#123; t &#125;$</code> such that <code>$&#123; x^t =1 &#125;$</code> in <code>$&#123; \Bbb Z^&#123;∗&#125;_&#123;n&#125; &#125;$</code>.<br>An element of <code>$&#123; \Bbb Z^&#123;∗&#125;_&#123;n&#125; &#125;$</code> is defined to be a <strong>generator</strong> if it has the maximum possible order.  </p>
<p>The exchange:  </p>
<img src="/blog/2020/12/14/P153/P153_14.png" class="" title="有一说一我们老师的插图真的太灵魂了">  

<p>Diffie–Hellman assumption(DH):<br>Let <code>$&#123; a, b ∈ \Bbb Z_&#123;q&#125; &#125;$</code>. Given <code>$&#123; g, g^a , g^b &#125;$</code> , it is computationally infeasible to determine <code>$&#123; g^&#123;ab&#125; &#125;$</code> .<br>Discrete logarithm assumption(DLOG):<br>Let <code>$&#123; a ∈ \Bbb Z_&#123;q&#125; &#125;$</code>. Given <code>$&#123; g &#125;$</code> and <code>$&#123; g^a &#125;$</code> , it is computationally infeasible to determine <code>$&#123; a &#125;$</code>.<br>Decisional Diffie-Hellman assumption(DDH):<br>Let <code>$&#123; x, y, z ∈ \Bbb Z_&#123;q&#125; &#125;$</code>. Given <code>$&#123; g, g^x , g^y &#125;$</code>, and either <code>$&#123; g^&#123;xy&#125; &#125;$</code> or <code>$&#123; g^z &#125;$</code>, it is computationally infeasible to determine whether you were given the real <code>$&#123; g^&#123;xy&#125; &#125;$</code> or the random <code>$&#123; g^z &#125;$</code> .<br><br><br><br></p>
]]></content>
      <categories>
        <category>数学笔记</category>
      </categories>
      <tags>
        <tag>Thank you Mr.goose</tag>
        <tag>以头抢地(诚)</tag>
      </tags>
  </entry>
  <entry>
    <title>关于stat的笔记</title>
    <url>/blog/2020/12/26/P150/</url>
    <content><![CDATA[<script async
  src="//mathjax.rstudio.com/latest/MathJax.js?config=TeX-MML-AM_CHTML">
</script>

<p>为stat230和stat231的部分复习.加上点(老人握拳.jpg)网课.</p>
<span id="more"></span>

<br>
<br>
<br>

<h2 id="Descriptive-Statistics"><a href="#Descriptive-Statistics" class="headerlink" title="Descriptive Statistics"></a>Descriptive Statistics</h2><p>Data分为两种: Quantitative and Categorical.简单来说分为 <strong>种类</strong> 和 <strong>数量</strong> .</p>
<blockquote>
<p>Quantitative data takes on numeric values that allow us to perform mathematical operations (like the number of dogs).<br>Categorical are used to label a group or set of items (like dog breeds - Collies, Labs, Poodles, etc.).</p>
</blockquote>
<p>In categorical,可以分为有order和没有order的. <strong>Categorical Ordinal</strong> 和 <strong>Categorical Nominal</strong> .<br>In quantitative,分为 <strong>Continuous</strong> 和 <strong>Discrete</strong> .</p>
<br>
<br>
<br>

<h3 id="Analyzing-Quantitative-Data"><a href="#Analyzing-Quantitative-Data" class="headerlink" title="Analyzing Quantitative Data"></a>Analyzing Quantitative Data</h3><p>check:</p>
<ul>
<li>Center</li>
<li>Mean平均数</li>
<li>Median中位数</li>
<li>Mode出现最多的数(可以有多个)</li>
<li>Spread(how spread out our data are from one another)</li>
<li>Range(max - min)</li>
<li>Interquartile Range(75% - 25%)</li>
<li>Standard Deviation(sometimes higher standard deviation means higher risk)</li>
<li>Variance</li>
<li>Shape</li>
<li>Outliers</li>
</ul>
<p>注:<br>确定25%和75%:将数据分为1-50%和50-100%,再分别寻找中位数.<br>数据作为histagram时,重心往左靠是right-skewed(mean greater than median),往右是left-skewed.</p>
<blockquote>
<p>aside: <a href="https://www.investopedia.com/terms/m/movingaverage.asp">moving average</a></p>
</blockquote>
<p>About outliers:<br> Understand why they exist. Reporting the 5 number summary values is often a better indication than measures like the mean and standard deviation when we have outliers.<br> Another word: 5 number summary works better with skewed data.<br> Normal distribution: work with standard deviation and mean.</p>
<br>
<br>
<br>

<h2 id="Inferential-Statistics"><a href="#Inferential-Statistics" class="headerlink" title="Inferential Statistics"></a>Inferential Statistics</h2><p>Using collected data to draw conclusions to a larger population.</p>
<ul>
<li>Population - entire group of interest.</li>
<li><strong>Parameter - numeric summary about a population</strong></li>
<li>Sample - subset of the population</li>
<li>Statistic numeric summary about a sample</li>
</ul>
<p>Example:</p>
<table>
<thead>
<tr>
<th>Population</th>
<th><strong>Parameter</strong></th>
<th>Sample</th>
<th>Statistic</th>
</tr>
</thead>
<tbody><tr>
<td>10,000 students</td>
<td>proportion of all 10,000 students who drinks coffee</td>
<td>5000 students</td>
<td>73%</td>
</tr>
</tbody></table>
<br>
<br>
<br>

<p>如果将每一组的数据做成distribution就是sampling distribution.</p>
<h3 id="Sampling-distribution"><a href="#Sampling-distribution" class="headerlink" title="Sampling distribution"></a>Sampling distribution</h3><p>The sampling distribution is centered on the original parameter value.</p>
<p>The sampling distribution decreases its variance depending on the sample size used. Specifically, the variance of the sampling distribution is equal to the variance of the original data divided by the sample size used.<br>就是说在size较大的情况下,mean会接近原本的mean,但variance会跟sample size有关,公式:</p>
<blockquote>
<p>variance is <code>$ \frac&#123;\sigma^2&#125;&#123;n&#125; $</code>.</p>
</blockquote>
<p>例子:随机抽取array中的五个数并计算平均值.<br>(np是numpy)</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sample1 = np.random.choice(students, <span class="number">5</span>, replace=<span class="literal">True</span>)</span><br><span class="line">sample1.mean()</span><br></pre></td></tr></table></figure>
<p>重复多次获得histgram.这里获得的就是sampling distribution.<br>这里sample_props是空的,每次加进当次的mean,最后用sample来画图.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sample_props = []</span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10000</span>):</span><br><span class="line">    sample = np.random.choice(students, <span class="number">5</span>,replace=<span class="literal">True</span>)</span><br><span class="line">    sample_props.append(sample.mean())</span><br><span class="line"></span><br><span class="line">plt.hist(sample_props);</span><br></pre></td></tr></table></figure>
<p>注意,此处的sample_props是list,为计算mean我们要将它转化成array.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sample_props = np.array(sample_props)</span><br></pre></td></tr></table></figure>
<p>如果我们重复这个从抽取5变成抽取20,获得的hist更接近normal了.</p>
<br>
<br>
<br>

<h3 id="Bootstrapping"><a href="#Bootstrapping" class="headerlink" title="Bootstrapping"></a>Bootstrapping</h3><p>Sampling with replacement.指选取某一个单位作为sample小组时,那个单位可以再被选取,也就是说sample小组可能拥有多个通一个单位的数据.<br>同样使用random.choice,with replace = True.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.random.choice(die_vals, replace=<span class="literal">True</span>, size=<span class="number">20</span>)</span><br></pre></td></tr></table></figure>
<p>注:Bootstrapping assume sample is representative of the population.但是当sample large的时候,bootstrapping和tradition的method会接近.</p>
<br>
<br>
<br>

<p>Aside: (tradition confidence interval and hypothesis test)</p>
<ul>
<li>T-test(<a href="http://sites.utexas.edu/sos/guided/inferential/numeric/claim/one-sample-t/">link</a>)</li>
<li>Two sample t-test(<a href="https://www.isixsigma.com/tools-templates/hypothesis-testing/making-sense-two-sample-t-test/">link</a>)</li>
<li>Paired t-test(<a href="http://www.statstutor.ac.uk/resources/uploaded/paired-t-test.pdf">link</a>)</li>
<li>Z-test(<a href="https://stattrek.com/statistics/dictionary.aspx?definition=one-sample%20z-test">link</a>)</li>
<li>Chi-squared test</li>
<li>F-test</li>
</ul>
 <br>
 <br>
 <br>

<h3 id="Confidence-interval"><a href="#Confidence-interval" class="headerlink" title="Confidence interval"></a>Confidence interval</h3><p>在不同的model中,confidence interval有不同的算法,具体参考<a href="https://mazui3.github.io/blog/2021/04/10/P180/">sampling</a>.</p>
<p><code>$est \pm c*(s.e.)$</code></p>
<p><a href="https://www.omnicalculator.com/statistics/confidence-interval">z score calculator</a>.</p>
<p>例子:<br>在数据里抽random sample.这里也可以用replace.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">coffee_full = pd.read_csv(<span class="string">&#x27;coffee.csv&#x27;</span>)</span><br><span class="line">coffee_red = coffee_full.sample(<span class="number">200</span>)</span><br></pre></td></tr></table></figure>
<p>再抽一次新的.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">bootsamp = coffee_red.sample(<span class="number">200</span>, replace = <span class="literal">True</span>)</span><br></pre></td></tr></table></figure>
<p>依旧我们可以通过抽取来做sampling distribution.这里使用bootstrapping.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">boot_means = []</span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10000</span>):</span><br><span class="line">    bootsamp = coffee_red.sample(<span class="number">200</span>, replace = <span class="literal">True</span>)</span><br><span class="line">    boot_mean = bootsamp[bootsamp[<span class="string">&#x27;drinks_coffee&#x27;</span>] == <span class="literal">False</span>][<span class="string">&#x27;height&#x27;</span>].mean()</span><br><span class="line">    boot_means.append(boot_mean)</span><br><span class="line"></span><br><span class="line">plt.hist(boot_means); <span class="comment"># Looks pretty normal</span></span><br></pre></td></tr></table></figure>
<p>用percentile获得confidence interval.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.percentile(boot_means, <span class="number">2.5</span>), np.percentile(boot_means, <span class="number">97.5</span>)</span><br></pre></td></tr></table></figure>
<p>如果我们要比较喝咖啡的人和不喝咖啡的人是否有身高上的差距,我们可以对他们的身高做distribution.<br>如果他们的confidence interval不包括0,那么的确是有差距的.<br>如果要比较多个条件下的数据,我们可以使用query.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">diffs_coff_under21 = []</span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10000</span>):</span><br><span class="line">    bootsamp = sample_data.sample(<span class="number">200</span>, replace = <span class="literal">True</span>)</span><br><span class="line">    under21_coff_mean = bootsamp.query(<span class="string">&quot;age == &#x27;&lt;21&#x27; and drinks_coffee == True&quot;</span>)[<span class="string">&#x27;height&#x27;</span>].mean()</span><br><span class="line">    under21_nocoff_mean = bootsamp.query(<span class="string">&quot;age == &#x27;&lt;21&#x27; and drinks_coffee == False&quot;</span>)[<span class="string">&#x27;height&#x27;</span>].mean()</span><br><span class="line">    diffs_coff_under21.append(under21_nocoff_mean - under21_coff_mean)</span><br><span class="line"></span><br><span class="line">np.percentile(diffs_coff_under21, <span class="number">2.5</span>), np.percentile(diffs_coff_under21, <span class="number">97.5</span>)</span><br><span class="line"><span class="comment"># For the under21 group, we have evidence that the non-coffee drinkers are on average taller</span></span><br></pre></td></tr></table></figure>
<p>我们还可以给两头的tail画线.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">low, upper = np.percentile(diffs_coff_under21, <span class="number">2.5</span>), np.percentile(diffs_coff_under21, <span class="number">97.5</span>)</span><br><span class="line">plt.hist(diffs_coff_under21);</span><br><span class="line">plt.axvline(x=low, color=<span class="string">&#x27;r&#x27;</span>, linewidth=<span class="number">2</span>);</span><br><span class="line">plt.axvline(x=upper, color=<span class="string">&#x27;r&#x27;</span>, linewidth=<span class="number">2</span>);</span><br></pre></td></tr></table></figure>



<p>Aside: (term)<br><strong>Margin of error</strong> is half the confidence interval width, and the value that you add and subtract from your sample estimate to achieve your confidence interval final results.</p>
<br>
<br>
<br>

<h2 id="Simpson’s-paradox"><a href="#Simpson’s-paradox" class="headerlink" title="Simpson’s paradox"></a>Simpson’s paradox</h2><p>辛普森悖论(<a href="https://zh.wikipedia.org/wiki/%E8%BE%9B%E6%99%AE%E6%A3%AE%E6%82%96%E8%AE%BA">wiki</a>),一个有名的分组讨论时会出错的悖论.</p>
<br>
<br>
<br>

<h2 id="Bayer’s-theorem"><a href="#Bayer’s-theorem" class="headerlink" title="Bayer’s theorem"></a>Bayer’s theorem</h2><p>Bayer’s formula: <code>$P(A \mid B)$</code> = <code>$&#123;P(B \mid A)P(A)&#125;$</code> / <code>$&#123;P(B)&#125; $</code>.</p>
<p>注:<code>$P(A \mid B)$</code>is a conditional probability: the likelihood of event<code>$A$</code>occurring given that<code>$B$</code>is true.</p>
<p>其中<code>$P(A, B) = P(A \mid B) P(B)$</code>也是A和B同时发生的概率.</p>
<br>
<br>
<br>

<p>​</p>
<h2 id="Normal-distribution"><a href="#Normal-distribution" class="headerlink" title="Normal distribution"></a>Normal distribution</h2><p>我觉得wiki说的挺好的,详细程度堪比cheatsheet,<a href="https://en.wikipedia.org/wiki/Normal_distribution">wiki</a>.</p>
<p>Variable: mean <code>$\mu$</code>, variance <code>$\sigma^2$</code>.</p>
<p>Formula: <code>$ f(x)=&#123;\frac &#123;1&#125;&#123;\sigma &#123;\sqrt &#123;2\pi &#125;&#125;&#125;&#125;e^&#123;-&#123;\frac &#123;1&#125;&#123;2&#125;&#125;\left(&#123;\frac &#123;x-\mu &#125;&#123;\sigma &#125;&#125;\right)^&#123;2&#125;&#125;$</code>.</p>
<br>
<br>
<br>

<p>Aside: 在normal和sampling distribution中常用的:<br><strong>Central limit theorem(<a href="https://en.wikipedia.org/wiki/Central_limit_theorem">wiki</a>)</strong><br>When independent random variables are added, their properly normalized sum tends toward a normal distribution (informally a bell curve) even if the original variables themselves are not normally distributed.<br><br><br><strong>Law of Large Numbers(<a href="https://en.wikipedia.org/wiki/Law_of_large_numbers">wiki</a>)</strong><br>According to the law, the average of the results obtained from a large number of trials should be close to the expected value and will tend to become closer to the expected value as more trials are performed.<br>也就是larger sample size,更靠近原本的mean.小的时候可能比原本的mean大也可能小.</p>
<p>等会儿得去复习一下的…<br>Maximum likelihood estimation(<a href="https://en.wikipedia.org/wiki/Maximum_likelihood_estimation">wiki</a>)<br>Method of moments(<a href="https://en.wikipedia.org/wiki/Method_of_moments_(statistics)">wiki</a>)<br>Bayes estimator(<a href="https://en.wikipedia.org/wiki/Bayes_estimator">wiki</a>)</p>
<br>
<br>
<br>

<h2 id="Parameters"><a href="#Parameters" class="headerlink" title="Parameters"></a>Parameters</h2><table>
<thead>
<tr>
<th>Parameter</th>
<th align="center">Statistic</th>
<th align="right">Description</th>
</tr>
</thead>
<tbody><tr>
<td><code>$ μ $</code></td>
<td align="center"><code>$ \bar x $</code></td>
<td align="right">mean of a dataset</td>
</tr>
<tr>
<td><code>$ π $</code></td>
<td align="center"><code>$ p $</code></td>
<td align="right">mean of a dataset with only 0 and 1 values - a proportion</td>
</tr>
<tr>
<td><code>$ μ_1 - μ_2 $</code></td>
<td align="center"><code>$ \bar x_1 - \bar x_2 $</code></td>
<td align="right">difference in means</td>
</tr>
<tr>
<td><code>$ π_1 - π_2 $</code></td>
<td align="center"><code>$ p_1 - p_2 $</code></td>
<td align="right">difference in proportions</td>
</tr>
<tr>
<td><code>$ β $</code></td>
<td align="center"><code>$ b $</code></td>
<td align="right">A regression coefficient - frequently used with subscripts</td>
</tr>
<tr>
<td><code>$ σ $</code></td>
<td align="center"><code>$ s $</code></td>
<td align="right">standard deviation</td>
</tr>
<tr>
<td><code>$ σ^2 $</code></td>
<td align="center"><code>$ s^2 $</code></td>
<td align="right">variance</td>
</tr>
<tr>
<td><code>$ ρ $</code></td>
<td align="center"><code>$ r $</code></td>
<td align="right">correlation coefficient</td>
</tr>
</tbody></table>
<br>
<br>
<br>

<h2 id="Practical-vs-Statistic-significance"><a href="#Practical-vs-Statistic-significance" class="headerlink" title="Practical vs Statistic significance"></a>Practical vs Statistic significance</h2><p>Statistic significance: Evidence from hypothesis tests and confidence interval that H1 is true.</p>
<p>Practical(实用) significance: Takes into consideration other factors of your situation that might not be considered directly in the results of your hypothesis test or confidence interval. Constraints like space, time, or money are important in business decisions. However, they might not be accounted for directly in a statistical test.</p>
<br>
<br>
<br>

<h2 id="Hypothesis-testing"><a href="#Hypothesis-testing" class="headerlink" title="Hypothesis testing"></a>Hypothesis testing</h2><p>将问题分为两种可能,一种是null(H0),一种是alternative(H1),再用数据来证明H0或者rejectH0.<br>Aside: Hypothesis tests and confidence interval tells info about parameters not statistics.</p>
<ul>
<li>H0 is true before you collect any data.</li>
<li>H0 usually states there is no effect or that two groups are equal.</li>
<li>H0 and H1 are competing, non-overlapping hypotheses.</li>
<li>H1 is what we would like to prove to be true.</li>
<li>H0 contains an equal sign of some kind - either =, <code>$ \leq≤ $</code>, or <code>$\geq≥$</code>.</li>
<li>H1 contains the opposition of the null - either <code>$ \neq≠ $</code>, &gt;&gt;, or &lt;&lt;.</li>
</ul>
 <br>
 <br>
 <br>

<p>俗称用p value判定.<br><code>$d = \frac&#123;est - H_&#123;0value&#125;&#125;&#123;s.e.&#125;$</code></p>
<p>Example(我觉得有点有趣的…):<br>“Innocent until proven guilty” where H0 == Innocent and H1 == guilty.</p>
<p>Two types of error:</p>
<ul>
<li>False positive(type 1, notation: alpha)<br>Deciding the alternative H1 is true, when actually H0 is true.</li>
<li>False negatives(type 2, notation: beta)<br>Deciding the null H0 is true, when actually H1 is true.</li>
</ul>
<p>注意,如果(wlog)type 1 error会造成的损失比type 2大很多很多,我们应当调整alpha和beta的值.<br>eg: α = 0.01, β = 0.05.</p>
<p>用confidence interval测hypothesis testing我们还可以反向测.<br>使用numpy中的normal来判断H0的mean是否在我们得到的confidence interval中.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 先通过sampling distribution获得means[] &lt;- 有10000次循环的mean.</span></span><br><span class="line"></span><br><span class="line">np.std(means)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 70 is the mean of the distribution, also is our H0 assumption.</span></span><br><span class="line">null_vals = np.random.normal(<span class="number">70</span>, np.std(means), <span class="number">10000</span>)</span><br><span class="line">plt.hist(null_vals);</span><br><span class="line"></span><br><span class="line"><span class="comment"># and compare to sample mean, see whether that fall into our histgram</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>当我们要做hypothesis testing的时候要考虑:</p>
<ul>
<li>sample是否representative.</li>
<li>consider impact of sample size(large sample size -&gt; statistically significant).</li>
</ul>
<br>
<br>
<br>

<h3 id="P-value"><a href="#P-value" class="headerlink" title="P-value"></a>P-value</h3><p>如果H0是true, the probability of observing your statistic (or one more extreme in favor of the alternative).<br>三种情况:</p>
<ol>
<li>如果H0: μ &lt;= 0, H1: μ &gt; 0.<br>p-value是right end.</li>
<li>如果H0: μ =&gt; 0, H1: μ &lt; 0.<br>p-value是left side.</li>
<li>如果H0: μ = 0, H1: μ ≠ 0.<br>p-value是两头.<img src="/blog/2020/12/26/P150/P150_1.png" class=""></li>
</ol>
<p>接着上头的代码.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">null_vals = np.random.normal(<span class="number">70</span>, np.std(means), <span class="number">10000</span>)</span><br><span class="line"></span><br><span class="line">sample_mean = sample.height.mean()</span><br><span class="line"></span><br><span class="line">(null_vals &gt; sample_mean).mean() <span class="comment"># 得到的是第一种P-value</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># large p-value: should not move away from null hypotheses.</span></span><br><span class="line"><span class="comment"># 同理,小的p-value会reject H0.</span></span><br></pre></td></tr></table></figure>
<p>如何定义大与小:compare to type I error.</p>
<p>pval ≤ α ⇒ Reject H0<br>pval &gt; α ⇒ Fail to Reject H0<br>​<br>一个例子.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">% matplotlib inline</span><br><span class="line"></span><br><span class="line">np.random.seed(<span class="number">42</span>)</span><br><span class="line"></span><br><span class="line">df = pd.read_csv(<span class="string">&#x27;classroom_actions.csv&#x27;</span>)</span><br><span class="line">df.head()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 比较实验组和样本组.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># get the average classroom time for control group</span></span><br><span class="line">control_mean = df.query(<span class="string">&#x27;group == &quot;control&quot;&#x27;</span>).total_days.mean()</span><br><span class="line"></span><br><span class="line"><span class="comment"># get the average classroom time for experiment group</span></span><br><span class="line">experiment_mean = df.query(<span class="string">&#x27;group == &quot;experiment&quot;&#x27;</span>).total_days.mean()</span><br><span class="line"></span><br><span class="line"><span class="comment"># display average classroom time for each group</span></span><br><span class="line">control_mean, experiment_mean</span><br><span class="line"></span><br><span class="line"><span class="comment"># compute observed difference in classroom time</span></span><br><span class="line">obs_diff = experiment_mean - control_mean</span><br><span class="line"></span><br><span class="line"><span class="comment"># display observed difference</span></span><br><span class="line">obs_diff</span><br><span class="line"></span><br><span class="line"><span class="comment"># 用boostrapping找diffs的confidence interval</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># create sampling distribution of difference in average classroom times</span></span><br><span class="line"><span class="comment"># with boostrapping</span></span><br><span class="line">diffs = []</span><br><span class="line">size = df.shape[<span class="number">0</span>]</span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10000</span>):</span><br><span class="line">    b_samp = df.sample(size, replace=<span class="literal">True</span>)</span><br><span class="line">    control_mean = b_samp.query(<span class="string">&#x27;group == &quot;control&quot;&#x27;</span>).total_days.mean()</span><br><span class="line">    experiment_mean = b_samp.query(<span class="string">&#x27;group == &quot;experiment&quot;&#x27;</span>).total_days.mean()</span><br><span class="line">    diffs.append(experiment_mean - control_mean)</span><br><span class="line"></span><br><span class="line"><span class="comment"># convert to numpy array</span></span><br><span class="line">diffs = np.array(diffs)  </span><br><span class="line"></span><br><span class="line"><span class="comment"># plot sampling distribution</span></span><br><span class="line">plt.hist(diffs);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 我们这里的假设是新功能和旧功能没有(甚至更差)的假设,所以选的假定mean是0.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># simulate distribution under the null hypothesis</span></span><br><span class="line">null_vals = np.random.normal(<span class="number">0</span>, diffs.std(), diffs.size)  </span><br><span class="line"></span><br><span class="line"><span class="comment"># plot null distribution</span></span><br><span class="line">plt.hist(null_vals)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 比对diff</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># plot line for observed statistic</span></span><br><span class="line">plt.axvline(obs_diff, c=<span class="string">&#x27;red&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 算p-value</span></span><br><span class="line">(null_vals &gt; obs_diff).mean()</span><br></pre></td></tr></table></figure>

<br>
<br>
<br>

<h3 id="Bonferroni-correction"><a href="#Bonferroni-correction" class="headerlink" title="Bonferroni correction"></a>Bonferroni correction</h3><p>在多次实验下校对tolerant error.</p>
<blockquote>
<p>m = number of sets<br>α/m = new error</p>
</blockquote>
<p>Other cerrection:</p>
<ul>
<li><a href="https://www.itl.nist.gov/div898/handbook/prc/section4/prc471.htm">Tukey</a></li>
<li><a href="http://www.nonlinear.com/support/progenesis/comet/faq/v2.0/pq-values.aspx">Q-values</a></li>
<li><a href="https://en.wikipedia.org/wiki/Closed_testing_procedure">Closed testing procedure</a></li>
<li><a href="https://en.wikipedia.org/wiki/Boole%27s_inequality">Boole’s inequality</a></li>
<li><a href="https://en.wikipedia.org/wiki/Holm%E2%80%93Bonferroni_method">Holm–Bonferroni method</a></li>
</ul>
<br>
<br>
<br>

<h2 id="A-B-testing"><a href="#A-B-testing" class="headerlink" title="A/B testing"></a>A/B testing</h2><p>这个在<a href="https://mazui3.github.io/blog/2020/11/03/P124/">旧博文</a>写的更详细一些.</p>
<p>Null: 新的不比旧的好.<br>Alter: 新的好.</p>
<p>Novelty Effect: 新功能受到欢迎不是因为好,是因为新.</p>
<br>
<br>
<br>

<h2 id="Regression"><a href="#Regression" class="headerlink" title="Regression"></a>Regression</h2><h3 id="Machine-Learning"><a href="#Machine-Learning" class="headerlink" title="Machine Learning"></a>Machine Learning</h3><ul>
<li>Supervised(use input data to predict a value or label)<br>比如说用transaction的数据来预测fraud的行为.</li>
<li>Unsupervised(clustering data based on common characteristic)</li>
</ul>
<h3 id="作图的时候"><a href="#作图的时候" class="headerlink" title="作图的时候:"></a>作图的时候:</h3><p>y轴为response variable(dependent,想要预测的值).<br>x轴为explanatory variable(independent,用来预测的值)</p>
<h3 id="Term"><a href="#Term" class="headerlink" title="Term:"></a>Term:</h3><p><code>$y$</code>: 实际得到的数据.<br><code>$\hat&#123;y&#125;$</code>: 在预测线上的数据.<br>b0: intercept.<br>b1: slope.</p>
<h3 id="Fitting-a-regression-line"><a href="#Fitting-a-regression-line" class="headerlink" title="Fitting a regression line:"></a>Fitting a regression line:</h3><p><strong>Least squares algorithm</strong></p>
<p>Find min <code>$\sum_&#123;i=1&#125;^n (y_i - \hat&#123;y_i&#125;)^2 $</code>.</p>
<img src="/blog/2020/12/26/P150/P150_2.png" class="">

<p>要使用这些公式我们可以用statsmodels.api里的<a href="https://www.statsmodels.org/dev/regression.html">function</a>.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> statsmodels.api <span class="keyword">as</span> sm</span><br><span class="line"><span class="comment"># 一定要有intercept</span></span><br><span class="line">df[<span class="string">&#x27;intercept&#x27;</span>] = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">lm = sm.OLS(df[<span class="string">&#x27;price&#x27;</span>], df[[<span class="string">&#x27;intercept&#x27;</span>, <span class="string">&#x27;area&#x27;</span>]])</span><br><span class="line">results = lm.fit()</span><br><span class="line">results.summary()</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<img src="/blog/2020/12/26/P150/P150_3.png" class="">
<p>area coef is the slope we want(between area and price).</p>
<p>R-square: is the square of the correlation coefficient.<br>P-value: associated with each term in our model, is testing whether the population slope is equal to zero or not.</p>
<br>
<br>
<br>

<p>跟多个元素比较.<br>原理跟使用matrix, Find the optimal <code>$\beta$</code> estimates by calculating <code>$(X&#39;X)^&#123;-1&#125;X&#39;y$</code>,一样.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">df[<span class="string">&#x27;intercept&#x27;</span>] = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">lm = sm.OLS(df[<span class="string">&#x27;price&#x27;</span>], df[[<span class="string">&#x27;intercept&#x27;</span>, <span class="string">&#x27;area&#x27;</span>, <span class="string">&#x27;bathrooms&#x27;</span>, <span class="string">&#x27;bedrooms&#x27;</span>]])</span><br><span class="line">results = lm.fit()</span><br><span class="line">results.summary()</span><br></pre></td></tr></table></figure>

<p>如果我们要加入categorical 的parameter,我们使用dummy variable.<br>这个地方有点co250的技能了.<br>如果我们有ABC三种,那给3-1个dummy varibale.(因为x_A+x_B+x_C = 1,我们可以drop x_C)<br>We will need to drop one of the dummy columns in order to make your matrices <a href="https://www.cds.caltech.edu/~murray/amwiki/index.php/FAQ:_What_does_it_mean_for_a_non-square_matrix_to_be_full_rank%3F">full rank</a>.<br>Drop掉的category就是跟保存的category数据做比较.</p>
<p>我们可以使用pandas里的<a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.get_dummies.html">get_dummies</a> function.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> statsmodels.api <span class="keyword">as</span> sm;</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">%matplotlib inline</span><br><span class="line"></span><br><span class="line">df = pd.read_csv(<span class="string">&#x27;./house_prices.csv&#x27;</span>)</span><br><span class="line">df.head()</span><br><span class="line"></span><br><span class="line">neighborhood_dummies = pd.get_dummies(df[<span class="string">&#x27;neighborhood&#x27;</span>])</span><br><span class="line">df_new = df.join(neighborhood_dummies)</span><br><span class="line">df_new.head()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 注意这里我们drop了A</span></span><br><span class="line">lm2 = sm.OLS(df_new[<span class="string">&#x27;price&#x27;</span>], df_new[[<span class="string">&#x27;intercept&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>]])</span><br><span class="line">results2 = lm2.fit()</span><br><span class="line">results2.summary()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 我们除了P-value以外还可以通过看confidence interval的重合度来比较</span></span><br><span class="line">plt.hist(df_new.query(<span class="string">&quot;C == 1&quot;</span>)[<span class="string">&#x27;price&#x27;</span>], alpha = <span class="number">0.3</span>, label = <span class="string">&#x27;C&#x27;</span>);</span><br><span class="line">plt.hist(df_new.query(<span class="string">&quot;A == 1&quot;</span>)[<span class="string">&#x27;price&#x27;</span>], alpha = <span class="number">0.3</span>, label = <span class="string">&#x27;A&#x27;</span>);</span><br><span class="line"></span><br><span class="line">plt.legend();</span><br><span class="line"></span><br><span class="line"><span class="comment"># 再加新的dummy直接加在后面就好…</span></span><br><span class="line">type_dummies = pd.get_dummies(df[<span class="string">&#x27;style&#x27;</span>])</span><br><span class="line">df_new = df_new.join(type_dummies)</span><br><span class="line">df_new.head()</span><br><span class="line"></span><br><span class="line">lm3 = sm.OLS(df_new[<span class="string">&#x27;price&#x27;</span>], df_new[[<span class="string">&#x27;intercept&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;lodge&#x27;</span>, <span class="string">&#x27;victorian&#x27;</span>, <span class="string">&#x27;bedrooms&#x27;</span>, <span class="string">&#x27;bathrooms&#x27;</span>]])</span><br><span class="line">results3 = lm3.fit()</span><br><span class="line">results3.summary()</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<br>
<br>
<br>

<p>当多组parameter有联系时(比如说area大的房子更可能有更多的bedroom和bathroom).</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sb</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看三组paramter的关系</span></span><br><span class="line">sb.pairplot(df[[<span class="string">&#x27;area&#x27;</span>,<span class="string">&#x27;bedrooms&#x27;</span>,<span class="string">&#x27;bathrooms&#x27;</span>]]);</span><br></pre></td></tr></table></figure>

<p>还可以查看<a href="https://etav.github.io/python/vif_factor_python.html">VIF</a>.<br>VIF的用法:每个系数的VIP是否超过10.如果有两个一起超过了10就说明这两个有很大的关联性,应当去掉一个作用不大的.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># price是我们的y, area + bedrooms + bathrooms是我们用的parameter</span></span><br><span class="line">y, X = dmatrices(<span class="string">&#x27;price ~ area + bedrooms + bathrooms&#x27;</span>, df, return_type = <span class="string">&#x27;dataframe&#x27;</span>)</span><br><span class="line"></span><br><span class="line">vif = pd.DataFrame()</span><br><span class="line">vif[<span class="string">&quot;VIF Factor&quot;</span>] = [variance_inflation_factor(X.values, i) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(X.shape[<span class="number">1</span>])]</span><br><span class="line">vif[<span class="string">&quot;features&quot;</span>] = X.columns</span><br><span class="line"></span><br><span class="line"><span class="comment"># show vif</span></span><br><span class="line">vif</span><br></pre></td></tr></table></figure>

<br>
<br>
<br>

<p><a href="https://matplotlib.org/gallery/lines_bars_and_markers/scatter_symbol.html?highlight=scatter%20symbol">Scatter plot</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">plt.scatter(df[<span class="string">&#x27;carats&#x27;</span>], df[<span class="string">&#x27;price&#x27;</span>]);</span><br><span class="line">plt.xlabel(<span class="string">&#x27;Carats&#x27;</span>);</span><br><span class="line">plt.ylabel(<span class="string">&#x27;Price&#x27;</span>);</span><br><span class="line">plt.title(<span class="string">&#x27;Price vs. Carats&#x27;</span>);</span><br></pre></td></tr></table></figure>


<p>带预测线的plot.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">## To show the line that was fit I used the following code from</span></span><br><span class="line"><span class="comment">## https://plot.ly/matplotlib/linear-fits/</span></span><br><span class="line"><span class="comment">## It isn&#x27;t the greatest fit... but it isn&#x27;t awful either</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> plotly.plotly <span class="keyword">as</span> py</span><br><span class="line"><span class="keyword">import</span> plotly.graph_objs <span class="keyword">as</span> go</span><br><span class="line"></span><br><span class="line"><span class="comment"># MatPlotlib</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pylab</span><br><span class="line"></span><br><span class="line"><span class="comment"># Scientific libraries</span></span><br><span class="line"><span class="keyword">from</span> numpy <span class="keyword">import</span> arange,array,ones</span><br><span class="line"><span class="keyword">from</span> scipy <span class="keyword">import</span> stats</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">xi = arange(<span class="number">0</span>,<span class="number">100</span>)</span><br><span class="line">A = array([ xi, ones(<span class="number">100</span>)])</span><br><span class="line"></span><br><span class="line"><span class="comment"># (Almost) linear sequence</span></span><br><span class="line">y = df[<span class="string">&#x27;MedianHomePrice&#x27;</span>]</span><br><span class="line">x = df[<span class="string">&#x27;CrimePerCapita&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Generated linear fit</span></span><br><span class="line">slope, intercept, r_value, p_value, std_err = stats.linregress(x,y)</span><br><span class="line">line = slope*xi+intercept</span><br><span class="line"></span><br><span class="line">plt.plot(x,y,<span class="string">&#x27;o&#x27;</span>, xi, line);</span><br><span class="line">plt.xlabel(<span class="string">&#x27;Crime/Capita&#x27;</span>);</span><br><span class="line">plt.ylabel(<span class="string">&#x27;Median Home Price&#x27;</span>);</span><br><span class="line">pylab.title(<span class="string">&#x27;Median Home Price vs. CrimePerCapita&#x27;</span>);</span><br></pre></td></tr></table></figure>

<p>如果不是linear那可能是higher order term或者interaction term(x1 * x2).<br>注意,加入higher order term之后,the coefficients associated with area and area squared are not easily interpretable.<br>When adding interaction term:<br>The way that variable x1 is related to your response is dependent on value of x2.<br>我们用不同值的slope是否相同来判断,如果不同就得找interaction term.</p>
<br>
<br>
<br>

<p>Logistic Regression:将output局限在1与0之间,避免负数以及正无穷的outcome.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">df[<span class="string">&#x27;intercept&#x27;</span>] = <span class="number">1</span></span><br><span class="line">log_mod = sm.Logit(df[<span class="string">&#x27;fraud&#x27;</span>], df[[<span class="string">&#x27;intercept&#x27;</span>, <span class="string">&#x27;weekday&#x27;</span>, <span class="string">&#x27;duration&#x27;</span>]])</span><br><span class="line">results = log_mod.fit()</span><br><span class="line">results.summary2()</span><br></pre></td></tr></table></figure>

<p>注意,因为是log_mod,我们要做一些转化.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.exp(results.params)</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>/_</span><br><span class="line"></span><br><span class="line">df.groupby(<span class="string">&#x27;prestige&#x27;</span>).mean()[<span class="string">&#x27;admit&#x27;</span>]</span><br></pre></td></tr></table></figure>

<p>关于<a href="https://stackoverflow.com/questions/49814258/statsmodel-attributeerror-module-scipy-stats-has-no-attribute-chisqprob">summary2()</a></p>
<br>
<br>
<br>

<h3 id="Confusion-matrix"><a href="#Confusion-matrix" class="headerlink" title="Confusion matrix"></a>Confusion matrix</h3><p>这个matrix还蛮好玩的.</p>
<table>
<thead>
<tr>
<th></th>
<th>这一行写假设</th>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>这一行写实际</td>
<td>是A</td>
<td>是B</td>
<td></td>
<td></td>
</tr>
<tr>
<td>是A</td>
<td>只有看起来是A实际也是A才是预测正确了</td>
<td>横着看加起来是实际是A但有被看成其他的</td>
<td></td>
<td></td>
</tr>
<tr>
<td>是B</td>
<td>竖着加是看起来是A但有不是A但被看错了的</td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<p>Recall: True Positive / (True Positive + False Negative). Out of all the items that are truly positive, how many were correctly classified as positive. Or simply, how many positive items were ‘recalled’ from the dataset.</p>
<p>Precision: True Positive / (True Positive + False Positive). Out of all the items labeled as positive, how many truly belong to the positive class.</p>
<p>Using confusion matrix by sklearn.<br><a href="https://scikit-learn.org/stable/modules/generated/sklearn.metrics.confusion_matrix.html">1</a>&amp;<a href="https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LogisticRegression.html">2</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LogisticRegression</span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> confusion_matrix, precision_score, recall_score, accuracy_score</span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br><span class="line">np.random.seed(<span class="number">42</span>)</span><br><span class="line"></span><br><span class="line">df = pd.read_csv(<span class="string">&#x27;../data/admissions.csv&#x27;</span>)</span><br><span class="line">df.head()</span><br><span class="line"></span><br><span class="line"><span class="comment"># get_dummies</span></span><br><span class="line">df[[<span class="string">&#x27;prest_1&#x27;</span>, <span class="string">&#x27;prest_2&#x27;</span>, <span class="string">&#x27;prest_3&#x27;</span>, <span class="string">&#x27;prest_4&#x27;</span>]] = pd.get_dummies(df[<span class="string">&#x27;prestige&#x27;</span>])</span><br><span class="line">X = df.drop([<span class="string">&#x27;admit&#x27;</span>, <span class="string">&#x27;prestige&#x27;</span>, <span class="string">&#x27;prest_1&#x27;</span>] , axis=<span class="number">1</span>)</span><br><span class="line">y = df[<span class="string">&#x27;admit&#x27;</span>]</span><br><span class="line">X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=<span class="number">0.20</span>, random_state=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># confusion matrix</span></span><br><span class="line">log_mod = LogisticRegression()</span><br><span class="line">log_mod.fit(X_train, y_train)</span><br><span class="line">preds = log_mod.predict(X_test)</span><br><span class="line">confusion_matrix(y_test, preds)</span><br><span class="line"></span><br><span class="line">precision_score(y_test, preds)</span><br><span class="line">recall_score(y_test, preds)</span><br><span class="line">accuracy_score(y_test, preds)</span><br><span class="line"></span><br><span class="line"><span class="comment"># graph</span></span><br><span class="line"><span class="keyword">from</span> ggplot <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> roc_curve, auc</span><br><span class="line">%matplotlib inline</span><br><span class="line"></span><br><span class="line">preds = log_mod.predict_proba(X_test)[:,<span class="number">1</span>]</span><br><span class="line">fpr, tpr, _ = roc_curve(y_test, preds)</span><br><span class="line"></span><br><span class="line">df = pd.DataFrame(<span class="built_in">dict</span>(fpr=fpr, tpr=tpr))</span><br><span class="line">ggplot(df, aes(x=<span class="string">&#x27;fpr&#x27;</span>, y=<span class="string">&#x27;tpr&#x27;</span>)) +\</span><br><span class="line">    geom_line() +\</span><br><span class="line">    geom_abline(linetype=<span class="string">&#x27;dashed&#x27;</span>)</span><br></pre></td></tr></table></figure>

<br>
<br>
<br>

<blockquote>
<p>一个stat有关的网站(<a href="https://stattrek.com/">web</a>)</p>
</blockquote>
<p>Aside: T-table</p>
<img src="/blog/2020/12/26/P150/t-table.jpg" class="">

<p>Z-table(<a href="http://www.z-table.com/">link</a>)</p>
<p>Aside: 因为data有时间相关(collected over time )的err,我们可以使用<a href="https://en.wikipedia.org/wiki/Durbin%E2%80%93Watson_statistic">Durbin-Watson test</a>.</p>
]]></content>
      <categories>
        <category>数学笔记</category>
      </categories>
      <tags>
        <tag>Thank you Mr.goose</tag>
        <tag>以头抢地(诚)</tag>
        <tag>data</tag>
        <tag>python</tag>
        <tag>statistics</tag>
      </tags>
  </entry>
  <entry>
    <title>关于data的笔记 - Week3</title>
    <url>/blog/2021/03/14/P170/</url>
    <content><![CDATA[<p>接<a href="https://mazui3.github.io/blog/2020/11/28/P140/">第一回</a>与<a href="https://mazui3.github.io/blog/2020/11/28/P141/">第二回.</a></p>
<span id="more"></span>
<p>Note:<br>前两回大多是python和其pandas和numpy库的编码笔记.<br>第一回附加了安装jupyter notebook的过程,第二回增加了DA的过程.</p>
<br>
<br>
<br>
<br>

<p>笔记有少许重复,仅记载常用code,以前记录过的function也有在旧笔记中补充.</p>
<p><strong>data wrangling</strong></p>
<h3 id="gather"><a href="#gather" class="headerlink" title="gather"></a>gather</h3><p>举例:<br>在rottenTomatoes上下载电影评价.<a href="https://www.rottentomatoes.com/top/bestofrt/">link</a><br>在某位影评人网站上下载评价.<a href="https://www.rogerebert.com/">link</a><br>Word cloud 插件.<a href="https://amueller.github.io/word_cloud/">link</a></p>
<p>Flat File Structure.一种文件格式:Flat files contain tabular data in plain text format with one data record per line and each record or line having one or more fields. These fields are separated by delimiters, like commas, tabs, or colons.</p>
<p>如果数据用comma分割就是csv,用tab是tsv.<br>是人能读得懂的.<br>注:excel并不是,excel的源文件是人读不懂的.</p>
<p>也可以用read_csv来read tsv.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">&quot;bestofrt.tsv&quot;</span>, sep=<span class="string">&#x27;\t&#x27;</span>)</span><br></pre></td></tr></table></figure>


<br>
<br>
<br>

<h4 id="web-scraping"><a href="#web-scraping" class="headerlink" title="web scraping"></a>web scraping</h4><p>注:我们使用了os library来读取文件和存储.读取也可以使用 glob library.</p>
<h5 id="request"><a href="#request" class="headerlink" title="request"></a>request</h5><p>用request library make http request.<a href="https://2.python-requests.org/en/master/">link.</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="comment"># Make directory if it doesn&#x27;t already exist</span></span><br><span class="line">folder_name = <span class="string">&#x27;theFolderName&#x27;</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(folder_name):</span><br><span class="line">    os.makedirs(folder_name)</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;the_adress&#x27;</span></span><br><span class="line">response = requests.get(url)</span><br></pre></td></tr></table></figure>
<p>response是200就是成功的意思.<br>现在东西在response里,将其导出.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(os.path.join(folder_name,</span><br><span class="line">                        url.split(<span class="string">&#x27;/&#x27;</span>)[-<span class="number">1</span>]), mode=<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">    file.write(response.content)</span><br></pre></td></tr></table></figure>

<p>check content.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">os.listdir(folder_name)</span><br></pre></td></tr></table></figure>

<br>
<br>
<br>

<h5 id="glob"><a href="#glob" class="headerlink" title="glob"></a>glob</h5><p>用glob读取类似txt的文件.</p>
<p>用glob.glob读取一个文件夹下的内容.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> glob</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"><span class="comment"># List of dictionaries to build file by file and later convert to a DataFrame</span></span><br><span class="line">df_list = []</span><br><span class="line"><span class="keyword">for</span> ebert_review <span class="keyword">in</span> glob.glob(<span class="string">&#x27;ebert_reviews/*.txt&#x27;</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(ebert_review, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> file: <span class="comment"># 注意这里的encoding需要在原网页文件下查看</span></span><br><span class="line">        title = file.readline()[:-<span class="number">1</span>] <span class="comment"># readline来取一行一行的内容,最后的-1是用于减去newline character的</span></span><br><span class="line">        review_url = file.readline()[:-<span class="number">1</span>]</span><br><span class="line">        review_text = file.read()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Append to list of dictionaries</span></span><br><span class="line">        df_list.append(&#123;<span class="string">&#x27;title&#x27;</span>: title,</span><br><span class="line">                        <span class="string">&#x27;review_url&#x27;</span>: review_url,</span><br><span class="line">                        <span class="string">&#x27;review_text&#x27;</span>: review_text&#125;)</span><br><span class="line">df = pd.DataFrame(df_list, columns = [<span class="string">&#x27;title&#x27;</span>, <span class="string">&#x27;review_url&#x27;</span>, <span class="string">&#x27;review_text&#x27;</span>]) <span class="comment"># 最后转成df</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>


<br>
<br>
<br>

<h5 id="beautiful-soap"><a href="#beautiful-soap" class="headerlink" title="beautiful soap"></a>beautiful soap</h5><p>首先先download一个html文件.用beautiful soap来抓data.<a href="https://www.crummy.com/software/BeautifulSoup/">link.</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;fileName.html&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">  soup = BeautifulSoup(file, <span class="string">&#x27;lxml&#x27;</span>) <span class="comment"># first we make a soup</span></span><br><span class="line">  <span class="comment"># in the soup we have everything in the html file without clean</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 然后用find来寻找某个我们想要的tag内的内容.</span></span><br><span class="line">soup.find(<span class="string">&#x27;title&#x27;</span>)</span><br><span class="line"><span class="comment"># return everything with tag title</span></span><br><span class="line">soup.find(<span class="string">&#x27;title&#x27;</span>).content[<span class="number">0</span>]</span><br><span class="line"><span class="comment"># return第一个在title tag内的内容.</span></span><br><span class="line">soup.find(<span class="string">&#x27;title&#x27;</span>).content[<span class="number">0</span>][:-<span class="built_in">len</span>(<span class="string">&#x27; the thing wanna delete&#x27;</span>)]</span><br><span class="line"><span class="comment"># 进行string的删减.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以用tag和class一起找.这个例子是在(有class的)div里的span tag.</span></span><br><span class="line">soup.find(<span class="string">&#x27;div&#x27;</span>,class_=<span class="string">&#x27;className&#x27;</span>).find(<span class="string">&#x27;span&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>减去white space用strip.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;string&#x27;</span>.strip()</span><br></pre></td></tr></table></figure>
<p>用replace减去100,000中的comma.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;string&#x27;</span>.replace(<span class="string">&#x27;,&#x27;</span>,<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># List of dictionaries to build file by file and later convert to a DataFrame</span></span><br><span class="line">    df_list = []</span><br><span class="line">    folder = <span class="string">&#x27;rt_html&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> movie_html <span class="keyword">in</span> os.listdir(folder):</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(os.path.join(folder, movie_html)) <span class="keyword">as</span> file:</span><br><span class="line">            soup = BeautifulSoup(file, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line">            title = soup.find(<span class="string">&#x27;title&#x27;</span>).contents[<span class="number">0</span>][:-<span class="built_in">len</span>(<span class="string">&#x27; - Rotten rottenTomatoes&#x27;</span>)]</span><br><span class="line">            audience_score = soup.find(<span class="string">&#x27;div&#x27;</span>, class_=<span class="string">&#x27;audience-score meter&#x27;</span>).find(<span class="string">&#x27;span&#x27;</span>).contents[<span class="number">0</span>][:-<span class="number">1</span>]</span><br><span class="line">            num_audience_ratings = soup.find(<span class="string">&#x27;div&#x27;</span>, class_=<span class="string">&#x27;audience-info hidden-xs superPageFontColor&#x27;</span>)</span><br><span class="line">            num_audience_ratings = num_audience_ratings.find_all(<span class="string">&#x27;div&#x27;</span>)[<span class="number">1</span>].contents[<span class="number">2</span>].strip().replace(<span class="string">&#x27;,&#x27;</span>,<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">            <span class="comment"># Append to list of dictionaries</span></span><br><span class="line">            df_list.append(&#123;<span class="string">&#x27;title&#x27;</span>: title,</span><br><span class="line">                            <span class="string">&#x27;audience_score&#x27;</span>: <span class="built_in">int</span>(audience_score),</span><br><span class="line">                            <span class="string">&#x27;number_of_audience_ratings&#x27;</span>: <span class="built_in">int</span>(num_audience_ratings)&#125;)</span><br><span class="line">    df = pd.DataFrame(df_list, columns = [<span class="string">&#x27;title&#x27;</span>, <span class="string">&#x27;audience_score&#x27;</span>, <span class="string">&#x27;number_of_audience_ratings&#x27;</span>])</span><br></pre></td></tr></table></figure>


<br>
<br>
<br>

<h5 id="api"><a href="#api" class="headerlink" title="api"></a>api</h5><p>最方便的办法.<br>(我理解api为接口,像usb接口那样.)</p>
<p>用mediaWiki举例.<a href="https://www.mediawiki.org/wiki/API:Tutorial">link.</a><a href="https://github.com/siznax/wptools">link.</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> wptools</span><br><span class="line"><span class="comment"># https://en.wikipedia.org/wiki/Mahatma_Gandhi</span></span><br><span class="line"></span><br><span class="line">page = wptools.page(<span class="string">&#x27;Mahatma_Gandhi&#x27;</span>).get()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 其中page自带很多attribute,可以用其中的image来找wiki page上的image</span></span><br><span class="line">page.data[<span class="string">&#x27;image&#x27;</span>]</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>Note:关于数据的储存,还可能是json.Json类似python里的list.<br>比如说之前的page object中存放的就是json的格式.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">page.data[<span class="string">&#x27;image&#x27;</span>][<span class="number">0</span>] <span class="comment"># access first image</span></span><br></pre></td></tr></table></figure>
<p>更多关于json与python的<a href="https://stackabuse.com/reading-and-writing-json-to-a-file-in-python/">link.</a></p>
<p>注:download文件时,如果是文字,要确认encode方式(eg.utf-8).<br>如果是图片要注意library的使用,有些可能会出错.<a href="https://pillow.readthedocs.io/en/stable/">link</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">from</span> io <span class="keyword">import</span> BytesIO</span><br><span class="line">r = requests.get(url)</span><br><span class="line">i = Image.<span class="built_in">open</span>(BytesIO(r.content))</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># List of dictionaries to build and convert to a DataFrame later</span></span><br><span class="line">df_list = []</span><br><span class="line">image_errors = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> title <span class="keyword">in</span> title_list: <span class="comment"># title list是自己创造好的一个list of string</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># This cell is slow so print ranking to gauge time remaining</span></span><br><span class="line">        ranking = title_list.index(title) + <span class="number">1</span></span><br><span class="line">        <span class="built_in">print</span>(ranking)</span><br><span class="line">        page = wptools.page(title, silent=<span class="literal">True</span>)</span><br><span class="line">        images = page.get().data[<span class="string">&#x27;image&#x27;</span>]</span><br><span class="line">        <span class="comment"># First image is usually the poster</span></span><br><span class="line">        first_image_url = images[<span class="number">0</span>][<span class="string">&#x27;url&#x27;</span>]</span><br><span class="line">        r = requests.get(first_image_url)</span><br><span class="line">        <span class="comment"># Download movie poster image</span></span><br><span class="line">        i = Image.<span class="built_in">open</span>(BytesIO(r.content))</span><br><span class="line">        image_file_format = first_image_url.split(<span class="string">&#x27;.&#x27;</span>)[-<span class="number">1</span>]</span><br><span class="line">        i.save(folder_name + <span class="string">&quot;/&quot;</span> + <span class="built_in">str</span>(ranking) + <span class="string">&quot;_&quot;</span> + title + <span class="string">&#x27;.&#x27;</span> + image_file_format)</span><br><span class="line">        <span class="comment"># Append to list of dictionaries</span></span><br><span class="line">        df_list.append(&#123;<span class="string">&#x27;ranking&#x27;</span>: <span class="built_in">int</span>(ranking),</span><br><span class="line">                        <span class="string">&#x27;title&#x27;</span>: title,</span><br><span class="line">                        <span class="string">&#x27;poster_url&#x27;</span>: first_image_url&#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Not best practice to catch all exceptions but fine for this short script</span></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">str</span>(ranking) + <span class="string">&quot;_&quot;</span> + title + <span class="string">&quot;: &quot;</span> + <span class="built_in">str</span>(e))</span><br><span class="line">        image_errors[<span class="built_in">str</span>(ranking) + <span class="string">&quot;_&quot;</span> + title] = images</span><br><span class="line"></span><br><span class="line"><span class="comment"># 用try保护,最后查看出错的图片</span></span><br><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> image_errors.keys():</span><br><span class="line">    <span class="built_in">print</span>(key)</span><br></pre></td></tr></table></figure>


<br>
<br>
<br>

<p>先用terminal access到想要保存文件的directory.<br>再run:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">jupyter notebook</span><br></pre></td></tr></table></figure>
<p>在界面里可以直接new创建文件.<br>Note:用shift tab可以读取function的格式备注.</p>
<p>zip file,<a href="https://docs.python.org/3/library/zipfile.html#zipfile-objects">doc</a>:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> zipfile</span><br><span class="line"><span class="comment"># Extract all contents from zip file</span></span><br><span class="line"><span class="keyword">with</span> zipfile.ZipFile(<span class="string">&#x27;archive.zip&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> myzip:</span><br><span class="line">    myzip.extractall()</span><br></pre></td></tr></table></figure>


<p>将文件保存好后可以存放到file中或database.<br>(file:比如说csv,database:比如说可以用sql读的.)</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">df.to_csv(<span class="string">&#x27;dataset.csv&#x27;</span>, index=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure>
<p>我们可以在python中连上sql.<a href="https://www.sqlalchemy.org/">link.</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> create_engine</span><br><span class="line"><span class="comment"># Create SQLAlchemy Engine and empty bestofrt database</span></span><br><span class="line"><span class="comment"># bestofrt.db will not show up in the Jupyter Notebook dashboard yet</span></span><br><span class="line">engine = create_engine(<span class="string">&#x27;sqlite:///bestofrt.db&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Store cleaned master DataFrame (&#x27;df&#x27;) in a table called master in bestofrt.db</span></span><br><span class="line"><span class="comment"># bestofrt.db will be visible now in the Jupyter Notebook dashboard</span></span><br><span class="line">df.to_sql(<span class="string">&#x27;master&#x27;</span>, engine, index=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure>

<h3 id="assess"><a href="#assess" class="headerlink" title="assess"></a>assess</h3><p>Focus on quality and tidiness.目的是了解和寻找差错.</p>
<p>Dirty: 数据本身有问题.完整性(缺失),重复,精准,出错(数据单位不一致),一致性等.<br>Messy: 有structure的问题.</p>
<p>用isnull check空缺.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sum</span>(df.columnName.isnull())</span><br></pre></td></tr></table></figure>

<p>在这一步记载数据的问题方便后面更改.</p>
<p>普通的读取用index某一rows的数据.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">second_row = df.loc[[<span class="number">1</span>]]</span><br></pre></td></tr></table></figure>
<p><a href="https://www.kite.com/python/answers/how-to-print-a-row-of-a-pandas-dataframe-in-python">link</a></p>
<p>check uniqueness.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">df_1.nunique()</span><br><span class="line">df_1.shape</span><br></pre></td></tr></table></figure>

<p>check duplicate.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">duplicateRowsDF = df_1[df_1.duplicated([<span class="string">&#x27;tweet_id&#x27;</span>])]</span><br><span class="line"><span class="built_in">print</span>(duplicateRowsDF)</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">df_2.describe()</span><br></pre></td></tr></table></figure>

<br>
<br>
<br>

<h3 id="clean"><a href="#clean" class="headerlink" title="clean"></a>clean</h3><p>第一件事是make a copy.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">df_clean = df.copy()</span><br></pre></td></tr></table></figure>


<h4 id="define"><a href="#define" class="headerlink" title="define"></a>define</h4><p>在这一步记载哪些是要clean的问题.用动词写出要做的步骤.</p>
<h4 id="code"><a href="#code" class="headerlink" title="code"></a>code</h4><p>code更多翻找上两回的笔记.</p>
<p>string slicing.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">df[<span class="string">&#x27;columnName&#x27;</span>].<span class="built_in">str</span>[<span class="number">2</span>:]</span><br></pre></td></tr></table></figure>

<p>string replacing.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">df[<span class="string">&#x27;columnName&#x27;</span>].<span class="built_in">str</span>.replace(<span class="string">&#x27;oldValue&#x27;</span>,<span class="string">&#x27;newValue&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>column的名字是应当记载的值.用melt.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">treatments_clean = pd.melt(treatments_clean, id_vars=[<span class="string">&#x27;given_name&#x27;</span>, <span class="string">&#x27;surname&#x27;</span>, <span class="string">&#x27;hba1c_start&#x27;</span>, <span class="string">&#x27;hba1c_end&#x27;</span>, <span class="string">&#x27;hba1c_change&#x27;</span>],</span><br><span class="line">                           var_name=<span class="string">&#x27;treatment&#x27;</span>, value_name=<span class="string">&#x27;dose&#x27;</span>)</span><br><span class="line">treatments_clean = treatments_clean[treatments_clean.dose != <span class="string">&quot;-&quot;</span>]</span><br><span class="line">treatments_clean[<span class="string">&#x27;dose_start&#x27;</span>], treatments_clean[<span class="string">&#x27;dose_end&#x27;</span>] = treatments_clean[<span class="string">&#x27;dose&#x27;</span>].<span class="built_in">str</span>.split(<span class="string">&#x27; - &#x27;</span>, <span class="number">1</span>).<span class="built_in">str</span></span><br><span class="line">treatments_clean = treatments_clean.drop(<span class="string">&#x27;dose&#x27;</span>, axis=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">treatments_clean = pd.merge(treatments_clean, adverse_reactions_clean,</span><br><span class="line">                            on=[<span class="string">&#x27;given_name&#x27;</span>, <span class="string">&#x27;surname&#x27;</span>], how=<span class="string">&#x27;left&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p><a href="https://stackoverflow.com/questions/50607740/reverse-a-get-dummies-encoding-in-pandas">stackoverflow</a>里的例子.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">df = pd.DataFrame(&#123;<span class="string">&#x27;ID&#x27;</span>:&#123;<span class="number">0</span>:<span class="string">&#x27;0&#x27;</span>,<span class="number">1</span>:<span class="string">&#x27;1&#x27;</span>,<span class="number">2</span>:<span class="string">&#x27;2&#x27;</span>&#125;,</span><br><span class="line">                   <span class="string">&#x27;A&#x27;</span>: &#123;<span class="number">0</span>: <span class="number">0</span>, <span class="number">1</span>: <span class="number">1</span>, <span class="number">2</span>: <span class="number">0</span>&#125;,</span><br><span class="line">                   <span class="string">&#x27;B&#x27;</span>: &#123;<span class="number">0</span>: <span class="number">1</span>, <span class="number">1</span>: <span class="number">0</span>, <span class="number">2</span>: <span class="number">0</span>&#125;,</span><br><span class="line">                   <span class="string">&#x27;C&#x27;</span>: &#123;<span class="number">0</span>: <span class="number">0</span>, <span class="number">1</span>: <span class="number">0</span>, <span class="number">2</span>: <span class="number">1</span>&#125;&#125;)</span><br><span class="line">df = (df.melt(<span class="string">&#x27;ID&#x27;</span>, var_name=<span class="string">&#x27;Col2&#x27;</span>)</span><br><span class="line">        .query(<span class="string">&#x27;value== 1&#x27;</span>)</span><br><span class="line">        .sort_values([<span class="string">&#x27;ID&#x27;</span>, <span class="string">&#x27;Col2&#x27;</span>])</span><br><span class="line">        .drop(<span class="string">&#x27;value&#x27;</span>,<span class="number">1</span>))</span><br></pre></td></tr></table></figure>
<p><a href="https://stackoverflow.com/questions/26886653/pandas-create-new-column-based-on-values-from-other-columns-apply-a-function-o">stackoverflow</a>用lambda自定义functino的方法.</p>
<p>反过来可以用get_dummies.</p>
<p>将email和电话号码分成两个column.用extract.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">patients_clean[<span class="string">&#x27;phone_number&#x27;</span>] = patients_clean.contact.<span class="built_in">str</span>.extract(<span class="string">&#x27;((?:\+\d&#123;1,2&#125;\s)?\(?\d&#123;3&#125;\)?[\s.-]?\d&#123;3&#125;[\s.-]?\d&#123;4&#125;)&#x27;</span>, expand=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># [a-zA-Z] to signify emails in this dataset all start and end with letters</span></span><br><span class="line">patients_clean[<span class="string">&#x27;email&#x27;</span>] = patients_clean.contact.<span class="built_in">str</span>.extract(<span class="string">&#x27;([a-zA-Z][a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+[a-zA-Z])&#x27;</span>, expand=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Note: axis=1 denotes that we are referring to a column, not a row</span></span><br><span class="line">patients_clean = patients_clean.drop(<span class="string">&#x27;contact&#x27;</span>, axis=<span class="number">1</span>)</span><br></pre></td></tr></table></figure>

<p>大小写转换.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">df.columnName = df.columnName.<span class="built_in">str</span>.lower()</span><br></pre></td></tr></table></figure>

<br>
<br>
<br>

<p>用rename更改column名字.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">df_clean = df_clean.rename(columns=&#123;<span class="string">&#x27;oldName1&#x27;</span>: <span class="string">&#x27;newName1&#x27;</span>,</span><br><span class="line">                                    <span class="string">&#x27;oldName2&#x27;</span>: <span class="string">&#x27;newName2&#x27;</span>&#125;)</span><br></pre></td></tr></table></figure>

<p>使用value_counts快速了解column内的数值分布.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">df.columnName.value_counts()</span><br></pre></td></tr></table></figure>

<p>更改column内的数值:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">list</span> = [<span class="string">&#x27;valueWannaReplace&#x27;</span>,<span class="string">&#x27;valueWannaReplace&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> value <span class="keyword">in</span> asap_list:</span><br><span class="line">    df_clean.StartDate.replace( value ,<span class="string">&#x27;newValue&#x27;</span>, inplace=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure>
<p>附<a href="https://stackoverflow.com/questions/21608228/conditional-replace-pandas">stackoverflow</a>里的例子.</p>
<p>选中多列并更改的情况.<br>(isin是用value判定的)</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">df[df[<span class="string">&#x27;A&#x27;</span>].isin([<span class="number">3</span>, <span class="number">6</span>])] <span class="comment"># 选中A column里有3和6的row</span></span><br></pre></td></tr></table></figure>
<p>使用index.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">df_1[df_1.index.isin([<span class="number">231</span>,<span class="number">837</span>,<span class="number">885</span>,<span class="number">1480</span>])] <span class="comment"># 把df[&#x27;columnName&#x27;]改成index</span></span><br></pre></td></tr></table></figure>
<p><a href="https://stackoverflow.com/questions/12096252/use-a-list-of-values-to-select-rows-from-a-pandas-dataframe">stackoverflow</a>.</p>
<p>用assert来test条件.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> value <span class="keyword">in</span> asap_list:</span><br><span class="line">    <span class="keyword">assert</span> value <span class="keyword">not</span> <span class="keyword">in</span> df_clean.StartDate.values</span><br></pre></td></tr></table></figure>

<p>merge.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">treatments_clean = pd.merge(treatments_clean, adverse_reactions_clean,</span><br><span class="line">                            on=[<span class="string">&#x27;given_name&#x27;</span>, <span class="string">&#x27;surname&#x27;</span>], how=<span class="string">&#x27;left&#x27;</span>)</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Mapping from full state name to abbreviation</span></span><br><span class="line">state_abbrev = &#123;<span class="string">&#x27;California&#x27;</span>: <span class="string">&#x27;CA&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;New York&#x27;</span>: <span class="string">&#x27;NY&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;Illinois&#x27;</span>: <span class="string">&#x27;IL&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;Florida&#x27;</span>: <span class="string">&#x27;FL&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;Nebraska&#x27;</span>: <span class="string">&#x27;NE&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Function to apply</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">abbreviate_state</span>(<span class="params">patient</span>):</span></span><br><span class="line">    <span class="keyword">if</span> patient[<span class="string">&#x27;state&#x27;</span>] <span class="keyword">in</span> state_abbrev.keys():</span><br><span class="line">        abbrev = state_abbrev[patient[<span class="string">&#x27;state&#x27;</span>]]</span><br><span class="line">        <span class="keyword">return</span> abbrev</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> patient[<span class="string">&#x27;state&#x27;</span>]</span><br><span class="line"></span><br><span class="line">patients_clean[<span class="string">&#x27;state&#x27;</span>] = patients_clean.apply(abbreviate_state, axis=<span class="number">1</span>)</span><br></pre></td></tr></table></figure>

<p>数据类型转变.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># To category</span></span><br><span class="line">patients_clean.assigned_sex = patients_clean.assigned_sex.astype(<span class="string">&#x27;category&#x27;</span>)</span><br><span class="line">patients_clean.state = patients_clean.state.astype(<span class="string">&#x27;category&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># To datetime</span></span><br><span class="line">patients_clean.birthdate = pd.to_datetime(patients_clean.birthdate)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Strip u and to integer</span></span><br><span class="line">treatments_clean.dose_start = treatments_clean.dose_start.<span class="built_in">str</span>.strip(<span class="string">&#x27;u&#x27;</span>).astype(<span class="built_in">int</span>)</span><br><span class="line">treatments_clean.dose_end = treatments_clean.dose_end.<span class="built_in">str</span>.strip(<span class="string">&#x27;u&#x27;</span>).astype(<span class="built_in">int</span>)</span><br></pre></td></tr></table></figure>

<p>使用pad填充string.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Strip all &quot; &quot;, &quot;-&quot;, &quot;(&quot;, &quot;)&quot;, and &quot;+&quot; and store each number without any formatting. Pad the phone number with a 1 if the length of the number is 10 digits (we want country code).</span></span><br><span class="line">patients_clean.phone_number = patients_clean.phone_number.<span class="built_in">str</span>.replace(<span class="string">r&#x27;\D+&#x27;</span>, <span class="string">&#x27;&#x27;</span>).<span class="built_in">str</span>.pad(<span class="number">11</span>, fillchar=<span class="string">&#x27;1&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>remove some data.用不等于就行.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">patients_clean = patients_clean[patients_clean.surname != <span class="string">&#x27;Doe&#x27;</span>]</span><br></pre></td></tr></table></figure>

<br>
<br>
<br>

<h4 id="test"><a href="#test" class="headerlink" title="test"></a>test</h4><p>check重复.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Patient ID should be the only duplicate column</span></span><br><span class="line">all_columns = pd.Series(<span class="built_in">list</span>(patients_clean) + <span class="built_in">list</span>(treatments_clean)) <span class="comment"># patients_clean是df.</span></span><br><span class="line">all_columns[all_columns.duplicated()]</span><br></pre></td></tr></table></figure>
<p><a href="https://thispointer.com/pandas-find-duplicate-rows-in-a-dataframe-based-on-all-or-selected-columns-using-dataframe-duplicated-in-python/">Link</a>.</p>
<p>check所有有null的row.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">patients[patients[<span class="string">&#x27;address&#x27;</span>].isnull()]</span><br><span class="line">all_columns[all_columns.duplicated()]</span><br></pre></td></tr></table></figure>

<h4 id="analysis-and-visualization"><a href="#analysis-and-visualization" class="headerlink" title="analysis and visualization"></a>analysis and visualization</h4><p>以前的笔记记载的更多.</p>
<p>比如说用value_counts()来画pie chart.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">df_clean.StartDate.value_counts().plot(kind=<span class="string">&quot;pie&quot;</span>)</span><br></pre></td></tr></table></figure>

<br>
<br>
<br>

<blockquote>
<p>附录:read and write files with python</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 这里的f是一个python file,r是read only</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;my_path/my_file.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line"><span class="comment"># 这里的file_data是一个string</span></span><br><span class="line">file_data = f.read()</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># w是write.如果my_file.txt不存在,会创造一个新的</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;my_path/my_file.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">f.write(<span class="string">&quot;Hello there!&quot;</span>)</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure>

<p>with可以自带关闭file.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;my_path/my_file.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    file_data = f.read()</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">f.readline() <span class="comment"># reads a single line from the file;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_cast_list</span>(<span class="params">filename</span>):</span></span><br><span class="line">    cast_list = []</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(filename) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> f:</span><br><span class="line">            name = line.split(<span class="string">&quot;,&quot;</span>)[<span class="number">0</span>]</span><br><span class="line">            cast_list.append(name)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> cast_list</span><br><span class="line"></span><br><span class="line">cast_list = create_cast_list(<span class="string">&#x27;flying_circus_cast.txt&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> actor <span class="keyword">in</span> cast_list:</span><br><span class="line">    <span class="built_in">print</span>(actor)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>数学笔记</category>
      </categories>
      <tags>
        <tag>编码</tag>
        <tag>以头抢地(诚)</tag>
        <tag>data</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>两位精灵的笔记</title>
    <url>/blog/2021/09/25/P174/</url>
    <content><![CDATA[<img src="/blog/2021/09/25/P174/P174_2.png" class="" title="菲瑞塔斯">
<img src="/blog/2021/09/25/P174/P174_1.png" class="" title="萨贝赦">

<p>来源于梦的一个oc故事小草稿.<br><del>以为这辈子不画北欧神话系角色…</del></p>
<span id="more"></span>
<p>树哥写过大纲文,我依葫芦画瓢也这样记了两位精灵的笔记.<br>但我对大纲文的理解可能不大对,成了”写得下去就多写两字,写不下去就飞过”的屑笔记.</p>
<br>
<br>
<br>
<br>

<h2 id="大纲文"><a href="#大纲文" class="headerlink" title="大纲文"></a>大纲文</h2><h3 id="1"><a href="#1" class="headerlink" title="1"></a>1</h3><p>萨贝赦正站在绞刑架上.<br>绞刑犯在处刑前都会被套上头套,但他没有.他那碧蓝的眼睛和尖角的耳朵格外显眼.<br>萨贝赦看向底下的人群,那些人类在高声呼喊.咒骂着又像是恐惧着跟他们不同种族的生物.<br>其中有一位瘦小安静的少女,她戴着兜帽,紧张地盯着萨贝赦.那是和他拥有同样瞳色和耳朵的菲瑞塔斯.<br>萨贝赦想着,是我们败了.</p>
<h3 id="2"><a href="#2" class="headerlink" title="2"></a>2</h3><p>萨贝赦已经不记得自己跟菲瑞塔斯隐居于人类之中多少年了.<br>他们的种族在人类文明发展起来前就存在.<br>精灵永生,他们脆弱但不会自然死亡.<br>在漫长的岁月中他们习得了最后的魔法,换魂之术,来自于肉体与魂的关系.<br>世界树,处于世界正中心的通天的树.<br>树记载着万物的魂,树也会接纳所有存在过的灵魂,而肉体只是存储魂的容器.<br>那就是世界的秘密.</p>
<p>文明的一切只为寻找世界的理——所谓的”神”.<br>自从神被发现后,精灵的文明就衰弱了.<br>有的精灵发起”自愿灭绝”,拒绝生育,并”愿我们活得长久并灭绝”.<br>也许他们就是最后的两位精灵.</p>
<h3 id="3"><a href="#3" class="headerlink" title="3"></a>3</h3><p>人类短命.<br>在萨贝赦所了解到的历史里,精灵教给了人类石器的使用方式,并期望他们能为日渐衰弱的精灵提供劳动力.<br>因此人类逐渐壮大发展出了他们的文明,精灵的数量减少到只存在于他们的神话故事里.<br>萨贝赦和菲瑞塔斯反而依附于人类的社会文明而生活.<br>也许也是讽刺的事情.</p>
<h3 id="4"><a href="#4" class="headerlink" title="4"></a>4</h3><p>文明是有尽头的,这是菲瑞塔斯所相信的事.<br>经历过渐渐失去族人的痛苦,他们决定做的事是在必要的时候促进人类群体的生育.<br>精灵拥有很多的魔法,但对群体促进生育并不是魔法可以一下决定的事情.<br>凭借萨贝赦和菲瑞塔斯的知识,他们上一站成功隐藏身份工作于首都医院,计划从医学的角度提高生育生存率.<br>萨贝赦谈起尝试增加生理激素的方式,<br>“下一站我们可以去食品产业,如果拥有一定规模的产业,不但可以调控他们的进食,如果获得知名度,我们还可以传播思想.毕竟我们一直在暗地里调控,想直接出面说话太难了.”<br>心思细腻的菲瑞塔斯,却担心起了其他事.<br>“萨贝赦,关于传播思想,你知道我们一直在做外因的事情,我一直担心从内心深处的原因.”<br>“你是指自愿灭绝吗?”<br>“是的.”<br>“我思考过关于观念的事情,以前人们大多会跟牧师或者占卜师吐露心声并受到影响,最近心理学开始兴起,我觉得从心理学界入手也是一种选择.”<br>萨贝赦陷入了沉默.<br>“你所提到的兴起,我也可以了解多一些吗?”<br>“我们去一趟山另一头的小镇吧,心理学就是从那里传过来的.我读过了那位先生的著作,很有趣,的确是可以兴起热潮的作品.听说那里也有一群人在研究心理治疗,我想亲眼看看.”<br>“那我们看过后再做决定吧.”<br>萨贝赦同意了.</p>
<h3 id="5"><a href="#5" class="headerlink" title="5"></a>5</h3><p>从首都穿越群山是海边的小城.<br>山中气候多变,专业的商队会带上经验丰富的大象作为路和天气的导航.<br>萨贝赦和菲瑞塔斯跟着商队向海边进发,有的大象拉着货车,有的托着载客.<br>路途漫长,菲瑞塔斯悄悄跟他们所被分到一头大象聊了起来.<br>“这位小姐,您能跟我们沟通?”大象很吃惊.<br>“那是自然,不过这还请您为我们保密.”菲瑞塔斯看了一眼萨贝赦.”您有听说过精灵吗?”<br>“原来如此,这就解释得通了.”大象说道,”我有听说过精灵族的传说,你们见过了世界的尽头,能跟我们说话也不奇怪.不过出于好奇,我想问问这是一种魔法吗?”<br>“嘛,也不算吧.”萨贝赦接话,”语言里包括着信息,你可以把它当作信息按不同语法加密后的产物.但我们已经知道世界数据中心,像是神的存在,绕过解密加密的方法也是简单的事.我们能藏匿于人类也是拜次所赐.”<br>“原来如此,先生您好厉害,不愧是精灵一族.”大象很是开心,”你们真的见过神了啊.”<br>“见到神也不一定是好事呢.”菲瑞塔斯谈谈地说到.<br>“对不起,这位小姐,如果勾起了您不好的回忆我很抱歉.”大象换了话题,”我们一族有一个传说您知道吗?”<br>“是什么?”<br>“据说很久之前,一位精灵出现在人类和大象面前,说可以给予智慧,以此为交换为他们而工作.大象和人类都被邀请到了精灵的部落.人类看到了文明带来的便利和未来,大象看到了在次隐藏下的血泪和破坏.最后人类一族接受了协议,大象拒绝并回到了原本的安稳生活.”<br>不过今天第一次见到了精灵我才觉得这个传说可能是真的呢,大象补充到.<br>“嗯,还有这样的传说呢…”<br>“你们现在为商队工作,日子辛苦吗?”萨贝赦问到.<br>“如果传说是真的,那现在也是因果吧.”大象感叹到,”我们的族人有的留下来跟人类共处,不需要担心食物的来源.不愿意被饲养的族人往北而去了,那边的树林人类是不会去的.人类的文明也很有趣,留下来的我们说不定可以成为下一代继承者呢.”<br>随遇而安吧,大象笑了.</p>
<p>出了群山,萨贝赦和菲瑞塔斯跟大象道谢并告了别.<br>“萨贝赦,人类所对大象做的事跟我们对他们做的事是一样的呢.”<br>“是呢.”<br>萨贝赦回想起了以前刚与人类打交道,还是学生的日子,那是金黄色的回忆.<br>“他们会跟大象相处得好吗?”</p>
<h3 id="6"><a href="#6" class="headerlink" title="6"></a>6</h3><p>他们所前往的是一所大学.<br>萨贝赦和菲瑞塔斯以医生的身份会见了出版书籍的学者.<br>萨贝赦提出了生理激素也会影响心理的观点,并提出了生物学跟心理学结合的想法.<br>学者盛情邀请了他们在大学住上几个月来完善他们的理论.<br>进展不错.<br>解决了落脚后,他们去拜访当地的声称在研究心理治疗的组织.<br>那是一个小教堂,彩绘玻璃透过月光在地上留下了魔法阵.<br>穿着西装的组织人开始了他的开场白.<br>“谢谢各位今晚的到来.自从新的学术出现后我们了解到了心灵的重要性,对自己真诚,我们能发现新的自我.在我们的疗程中,我会说类似闭上眼深呼吸的指示,并希望大家跟着我念,这些都是用于治疗的心理暗示.”<br>菲瑞塔斯打趣到,”他们还是保留了宗教和占卜.”<br>当念白开始后,萨贝赦和菲瑞塔斯的脸色变了.<br>魔法阵和教堂,心理暗示念白.<br>这不是什么心理治疗,这是用来跟世界树沟通的魔法.</p>
<p>这不是好消息.</p>
<h3 id="7"><a href="#7" class="headerlink" title="7"></a>7</h3><p>坏消息一个又一个来得比想象得快.<br>研究人类的魔法列入了日程,与此同时萨贝赦留在了大学继续研究,菲瑞塔斯回趟首都去注册商会.<br>原本是这么打算的.<br>萨贝赦提前了四个月看到来敲门的菲瑞塔斯.她眼睛哭得红肿,不成样子,萨贝赦赶紧拉她进屋.<br>“大象出事了.”<br>过了半晌菲瑞塔斯只磕绊地说出这句话来.</p>
<h3 id="8"><a href="#8" class="headerlink" title="8"></a>8</h3><p>菲瑞塔斯原路返回首都,她想再见一面之前同路的大象.<br>去商队时她感到了强烈的违和感.<br>商队里的大象都木楞呆滞,菲瑞塔斯想跟他们谈谈,但在人来人往并不方便.<br>她拜托商队找到了之前带路的象,好不容易有单独相处的时候,她很关切的问起了象情况.<br>象看着她好似从没见过她一样.<br>要出发了,商队的人开始吆喝,赶着动物们上路.<br>象终于发出了声音,不是之前她所熟悉的悠闲的声音,断断续续的音磕绊不成句子,但菲瑞塔斯听清了.<br>它使用的是人类的语言.<br>这下她确信.<br>大象一族的灵魂被改变了.</p>
<p>这又和菲瑞塔斯所知的换魂术不同,比起换…更不如说是捏造了灵魂.<br>菲瑞塔斯发自内心地感到了恐惧.</p>
<p>人类的确习得了魂魔法,但还未在同族身上使用.取而代之的就是大象一族.<br>去除自我意识,只留下需要的技能和生育,的确是多么方便啊.</p>
<h3 id="9"><a href="#9" class="headerlink" title="9"></a>9</h3><p>菲瑞塔斯拜托了萨贝赦,她想用自己的身体作为容器进行换魂术向象问话.<br>如果菲瑞塔斯的推测是正确的,那现在的象在世界树里.<br>在她的记忆中大象的灵魂样子还很清晰,现在的话,还能找得到它.<br>萨贝赦沉默了.<br>所有的后果比他相信的严重很多.<br>如果换魂之术成功了,之后呢?<br>之后再商谈对策.我们需要知道更多,比如,比如他们魔法的细节,比如换魂后的象有多少的数量,比如他们现在有多危险!<br>拜托了!<br>菲瑞塔斯又要哭出来了.<br>萨贝赦想后悔,后悔他们旅途一切,但面前的菲瑞塔斯还等着他的帮助.<br>他决定把后悔留到之后,答应了菲瑞塔斯,决定今晚先潜入之前他们去过的教堂进行换魂术.</p>
<h3 id="10"><a href="#10" class="headerlink" title="10"></a>10</h3><p>单纯进行换魂之术对于萨贝赦和菲瑞塔斯来说并不是难事,魔法包含的地点,咒文,魔法阵都不过是写出来帮助思考的理论公式.<br>只是从世界树里换出灵魂还是第一次.<br>空荡的教堂只有他们两个人.<br>萨贝赦再一次问菲瑞塔斯,菲瑞塔斯坚定地看向萨贝赦,”我已经决定了.”<br>萨贝赦点起了蜡烛,默念起熟悉的语言,蜡烛熄灭,仪式结束了.<br>月光下的菲瑞塔斯看起来没有区别,她慢慢睁眼,第一句话却是,<br>马上阻止您的朋友这样做.</p>
<h3 id="11"><a href="#11" class="headerlink" title="11"></a>11</h3><p>洪水一样的声响从外面涌进来.<br>菲瑞塔斯失去了力气倒在了地上,萨贝赦愣住了.<br>声音像是防空警报,响声大到心脏都被震动.<br>他需要逃跑,不知道具体情况但得立马逃跑才行.<br>他抱起菲瑞塔斯往外跑.已经有镇民向着教堂方向跑来,他感到不妙,将菲瑞塔斯藏在祷告室,自己拼命往外冲.<br>往哪里跑啊,大街上的人都向自己跑来,路过的楼里也接连不断的有人跑出来.<br>那些人都在喊着同一句话.<br>那是精灵的语言!<br>是世界树的意志吗!<br>他很快就被人群抓到被摁在地上,在混乱中脸上身上挨了好多拳.<br>“您真不应该触犯我们的禁忌.”</p>
<h3 id="12"><a href="#12" class="headerlink" title="12"></a>12</h3><p>精灵长寿,长寿到永生的程度,萨贝赦并不知道逝者不能往生的魔法禁忌.<br>是世界树按照人类的道德审判的萨贝赦.<br>世界树为什么选择了人类.<br>站上绞刑架上的萨贝赦明白了答案.<br>既然世界树是所有数据的综合,那经历漫长的时光后的现在,在世界树中的人类灵魂肯定比精灵灵魂多太多了.<br>精灵已经该退出这个舞台了吗.<br>脚踩着的木板被放下,到此为止了.</p>
<h3 id="13"><a href="#13" class="headerlink" title="13"></a>13</h3><p>随着失落坠落,萨贝赦一下没有站稳,他摔在了地上.<br>周围爆发出呼喊,他抬起头,看到了被吊着的自己的身体.<br>自己的确是已经死了.<br>怎么回事…?<br>他看到了脚边掉落的花朵,那是菲瑞塔斯的头饰.<br>强烈的眩晕感袭来,他忍不住吐了出来.<br>那是菲瑞塔斯的身体,他现在拥有的是菲瑞塔斯的身体.<br>他站起来跑,他拼命地跑.<br>萨贝赦挤开一切,逃了出去.<br>留下不停狂欢的人群.</p>
<h3 id="14"><a href="#14" class="headerlink" title="14"></a>14</h3><p>亲爱的菲瑞塔斯,</p>
<p>我正在给你写这份信.<br>每每提笔都不知道如何开头,就原谅我的笨拙吧.<br>在教堂时的法术是成功的,我的确见到了象,世界的秩序已经跟我们所认知的不同了,我没有考虑到这一点,请不要自责.<br>我们成功换了象先生的灵魂后,世界树进行了警告,我作为异族被发现并处刑.<br>现在回想起来你可能一直是在等待着我逃跑,但我什么都没有做,所以你决定跟我换魂.<br>很抱歉给你留下了糟糕的回忆,一定很疼吧.<br>我被处刑的结果不是你的错.<br>也许我是可以逃跑的,但我没有,为什么呢.<br>我有想用自己的死来平息这场闹剧,但这不是唯一的原因.<br>我在后悔,<br>每每看到人类,我都思考文明所带来的利弊,我得出的是利大于弊的结论.<br>那可能并不是正确的回答.<br>我不想后悔我们为人类繁衍而做的一切,我后悔的是没能看透”文明”的这一切.</p>
<p>关于如何绕过禁忌实行换魂之术,我花了一些时间,很抱歉.<br>我决定让你回来.<br>你可能会想跟我辩论,但我不想讨论我们两者之间谁更值得活这件事情.<br>我可以说你温柔,比我更注重情感.但这些不能说服你.<br>你知道我们谁活下来都是一样的.<br>我们都已经无法再回到以前那个属于精灵的世界了.<br>我决定这么说.<br>因为这是你的身体,我希望能还给你.<br>请当作是我的任性吧.</p>
<p>在你不在的这段时间里,我成立了一个小的商会,也书籍的发布也准备得差不多了.商会的会计和学者我做过背景调差,他们跟魔法没有关系,是可以相信的人.更多的信息你翻看我床头抽屉的文件吧.钥匙在老地方.<br>商会的人三天后会来接你,食物我也有准备充足的量.<br>我的计划会连锁启动很多次的死者换魂,如果顺利的话在孤岛的你不会被人找到,但外面会大乱,请多加小心.<br>这个方式不能拯救大象一族,我很抱歉.</p>
<p>我所答错的问题.你会继续解答吗?<br>我希望,就算在夹缝之间,精灵拥有的智慧也能继续被时间检验,就像我们一直所做的那样.</p>
<p>你永远的同伴,<br>萨贝赦</p>
<h3 id="15"><a href="#15" class="headerlink" title="15"></a>15</h3><p>回过神来,萨贝赦正站在行驶的列车车厢中,窗外是黑色的宇宙和闪烁的银河.<br>“您来了.”<br>这个声音萨贝赦听过,他寻找声音走去,是他和菲瑞塔斯见过那头大象.<br>“菲瑞塔斯说您可能会来,”象坐在座位上朝着他微笑.<br>萨贝赦明白过来,他们正在世界树之中.<br>“你也在.”萨贝赦有些悲伤.<br>“叫我平吧先生,这里不止一只象.”平接着说,”刚刚我见过菲瑞塔斯了,她一直在向我道歉.真是善良的人.”<br>“我很抱歉,”萨贝赦也忍不住说到.<br>“您没有错先生,”平回答道,”我相信因果,也许我们一族所相信的与世无争只是一种逃避罢了.”<br>“只不过.”<br>“只不过?”<br>“只不过,先生,您所知道的神是这个样子的吗.”平往向窗外.<br>窗外的宇宙正高速地变化着,时而有星星出现,时而又有星星走向衰弱而爆炸.<br>“精灵一族所认知的神很纯粹,像数学的逻辑推导,没有过多的情感.”<br>“是吗.”平顿了顿,”先生,您觉得世界会变好吗?”<br>“这还真是一个困难的问题.”萨贝赦闭上了眼睛,”…交给时间吧.这个宇宙诞生了文明,而文明会自己沉淀并筛选.”<br>“那还是……有些寂寞呢,”平像是对着自己说到.”能见到一面您我很开心,”平向萨贝赦行礼,”我该下车了.”<br>“你要去哪里?”萨贝赦问.<br>“我会回族人的身边,先生.他们在等我.先生倒是准备什么时候下车呢.”<br>“那我们是时候告别了呢.”<br>萨贝赦站起身用精灵一族的方式回了礼,”我想我现在还不会下去,我会在这里等菲瑞塔斯.”<br>“是吗.”平笑了.”那祝您好运,先生.”</p>
<p>送走了平,萨贝赦回座位坐下.<br>萨贝赦看着来往的旅客,好似跟菲瑞塔斯度过的那些日子.<br>窗外的景象瞬息万变,无穷无尽.</p>
<br>
<br>
<br>

<h2 id="笔记"><a href="#笔记" class="headerlink" title="笔记"></a>笔记</h2><p><a href="https://mazui3.com/blog/2018/08/02/P089/">余老师登山记</a>的故事就来自于一个梦,梦中的女老师跟自己在公路上抢方向盘的情节过于印象深刻.<br>这次温和的大象兄弟在交换灵魂后对我的警告震惊了我一整天…<br>所以搓了两个角色记载一下.<br><del>是的,是为大象兄弟搓的角色,象哥才是真正的主角!!!</del></p>
<p>梦中的主视角是萨贝赦,和菲瑞塔斯是朋友关系.<br>名字找了常用(感觉牛逼的)拉丁词音译,萨贝赦(sapientia):智慧,菲瑞塔斯(veritas):真理.<del>没有想很多.</del><br>大象取名为平是表达文明不同所以选了中国字.</p>
<p>梦中的设定是意识(灵魂)是一种算法数据(ia),肉体是其算法的存储器.世界树就是世界所有的数据中枢,因此也会接纳死者的灵魂(因为是曾经使用积累的数据).<br><del>不愧是我,总会搞一些对着格式塔干的东西.</del></p>
<p>增加的设定:</p>
<div class="note ">
            <p>最后的两只精灵-&gt;文明进化到将物种自发性灭绝的地步.<br>跟精灵相近的人类-&gt;文明辅助生物生存,但其文明残忍.<br>大象-&gt;拥有智慧但自行舍弃文明以求安稳普通的生活.</p>
          </div>

<p>菲瑞塔斯的花花是彩蛋.<br>最后菲瑞塔斯活了下来,因为萨贝赦她不会简单地放弃生命.觉得可以接麻醉醉,”被寄生的永恒探索”设定,暗示一下结局.<br><strong><del>其实也没有想很多.</del></strong></p>
]]></content>
      <categories>
        <category>画</category>
      </categories>
      <tags>
        <tag>oc</tag>
        <tag>最后的精灵</tag>
      </tags>
  </entry>
  <entry>
    <title>关于stat的笔记 - sampling</title>
    <url>/blog/2021/04/10/P180/</url>
    <content><![CDATA[<script async
  src="//mathjax.rstudio.com/latest/MathJax.js?config=TeX-MML-AM_CHTML">
</script>

<p>为stat332的复习.附上没有过多关联的<a href="https://mazui3.github.io/blog/2020/12/26/P150/">前情提要</a>.</p>
<span id="more"></span>

<p>332的精华在于推导每个model,再按需求套数据…所以整理的是各个model.<br>Model的定义: Relates a parameter to a response.<br>老师讲的不细,所以笔记有一半是我的归纳总结,不是证明出来的,估计会有错.</p>
<h2 id="basic"><a href="#basic" class="headerlink" title="basic"></a>basic</h2><p>基本判定方式有p-value与confidence interval.</p>
<hr>
<p><strong>CI</strong>:<br>assume estimator is <code>$\tilde&#123;\theta&#125; \sim N(\theta, V(\tilde&#123;\theta&#125;))$</code>.<br><code>$est \pm c*(s.e.)$</code><br>等于<code>$\hat&#123;\theta&#125; \pm c* \sqrt&#123;V(\tilde&#123;\theta&#125;)&#125;$</code>.<br>如果不知道<code>$\sigma$</code>就取<code>$\hat&#123;\theta&#125; \pm c* \sqrt&#123;\hat&#123;V(\tilde&#123;\theta&#125;)&#125;&#125;$</code>.<br>(<code>$\sigma$</code>是知道的standard deviation,知道时取<code>$C \sim N(0,1)$</code>.<br>S是不知道的,估算的standard deviation.不知道时取t distribution.)</p>
<blockquote>
<p>est指的是estimate的值.<br>c指的是百分比confidence系数的对应值.<br>SE指的是standard error.在sampling中是standard deviation乘sampling error.<br>基础的是s.e. = <code>$\frac&#123;\sigma&#125;&#123;\sqrt&#123;n&#125;&#125;$</code>.</p>
</blockquote>
<p><strong>具体要参考model公式.</strong></p>
<hr>
<p><strong>p-value</strong>:<br><code>$d = \frac&#123;est - H_&#123;0value&#125;&#125;&#123;s.e.&#125; = \frac&#123;\hat&#123;\theta&#125; - \theta_0&#125;&#123;\sqrt&#123;V(\tilde&#123;\theta&#125;)&#125;&#125;$</code><br>given estimator is <code>$\tilde&#123;\theta&#125; \sim N(\theta, V(\tilde&#123;\theta&#125;))$</code>.<br>同样<code>$D \sim N(0,1)$</code> when <code>$\sigma$</code> known, or <code>$D \sim t_&#123;n-1+c&#125;$</code> when <code>$\sigma$</code> is unknown.</p>
<blockquote>
<p>H0指的是假设的值.</p>
</blockquote>
<table>
<thead>
<tr>
<th><code>$H_0$</code></th>
<th><code>$H_a$</code></th>
<th>P value</th>
</tr>
</thead>
<tbody><tr>
<td><code>$\theta = \theta_0$</code></td>
<td><code>$\theta \neq \theta_0$</code></td>
<td><code>$2Pr(D &gt; abs(d))$</code></td>
</tr>
<tr>
<td><code>$\theta \geq \theta_0$</code></td>
<td><code>$\theta     &lt; \theta_0$</code></td>
<td><code>$Pr(D &lt; d)$</code></td>
</tr>
<tr>
<td><code>$\theta \leq \theta_0$</code></td>
<td><code>$\theta  &gt; \theta_0$</code></td>
<td><code>$Pr(D &gt; d)$</code></td>
</tr>
</tbody></table>
<p>如果没有significance level默认:<br>p &gt; 0.1 : No evidence to reject <code>$H_0$</code>.<br>0.1 &gt; p &gt; 0.05 : There is evidence to reject <code>$H_0$</code>.<br>0.05 &gt; p &gt; 0.01 : There is some evidence to reject <code>$H_0$</code>.<br>p &lt; 0.01 : There is tons evidence to reject <code>$H_0$</code>.</p>
<p><strong>具体要参考model公式.</strong></p>
<p>Side:两组数值时的variance(standard deviation的平方),aka pool variance,<br><code>$s_p^2 = \frac&#123;(n_1 - 1)s_1^2 + (n_2 - 1)s_2^2&#125;&#123;n_1+n_2-2&#125;$</code></p>
<p>这里<code>$s_1^2$</code>是第一组的variance,<code>$n_1$</code>是size.<br>这里可以参考<a href="https://mazui3.github.io/blog/2020/12/26/P150/">前情提要</a>的表格.</p>
<hr>
<br>
<br>
<br>

<h2 id="models"><a href="#models" class="headerlink" title="models"></a>models</h2><p>Side:</p>
<ul>
<li><code>$Y_j$</code>是response of unit j.是random quantity.</li>
<li><code>$\mu$</code>是study parameter,not random but unknown.一般<code>$\mu$</code>指平均值,<code>$\pi$</code>是proportion比例.</li>
<li><code>$R_j$</code>是error term. Gives distribution of responses about <code>$\mu$</code>. Always independent.</li>
</ul>
<p><strong>Gauss’s theorem:</strong><br>Any linear combination of normal random variable is normal.<br><strong>Central limit theorem:</strong><br>Let <code>$Y_1,...,Y_n$</code> be a sequence of ramdom variable, <code>$E(Y_i)$</code> = <code>$\mu$</code> for any i, <code>$V(Y_i)$</code> = <code>$\sigma^2$</code> and is not infinity for any i. All <code>$Y_i$</code> are independent,<br>Then we have <code>$\bar&#123;Y&#125; \sim N(\mu, \frac&#123;\sigma^2&#125;&#123;n&#125;)$</code>.</p>
<hr>
<h3 id="Model1"><a href="#Model1" class="headerlink" title="Model1:"></a><strong>Model1:</strong></h3><blockquote>
<p>因为<code>$R_j$</code>normal, <code>$Y_i$</code>也normal.</p>
</blockquote>
<p><code>$Y_i = \mu + R_i$</code><br>where <code>$R_&#123;j&#125; \sim N(0,\sigma^2)$</code></p>
<blockquote>
<p>也可以写成<code>$Y_i \sim N(\mu , \sigma^2)$</code>.</p>
</blockquote>
<br>

<p>with confidence interval: <code>$\mu: \bar&#123;y&#125; \pm \frac&#123;c*S&#125;&#123;\sqrt&#123;n&#125;&#125;$</code><br>degree: <code>$n - 1$</code>(t distribution)</p>
<p>discrepancy: <code>$d = \frac&#123;\bar&#123;y&#125; - \mu_0&#125;&#123;\frac&#123;s&#125;&#123;\sqrt&#123;n&#125;&#125;&#125;$</code><br>distribution: <code>$D \sim t_&#123;n-1&#125;$</code></p>
<blockquote>
<p><code>$S = \sum \frac&#123;(y_i - \bar&#123;y&#125;)^2&#125;&#123;n - 1&#125; $</code>也就是standard diviation.</p>
</blockquote>
<br>
<br>
___

<h3 id="Model2A"><a href="#Model2A" class="headerlink" title="Model2A:"></a><strong>Model2A:</strong></h3><blockquote>
<p>Independent groups which have same variance.<br><code>$Y_&#123;ij&#125;$</code>是response of unit j in group i.</p>
</blockquote>
<br>

<p><code>$Y_&#123;ij&#125; = \mu_i + R_&#123;ij&#125;$</code><br>where <code>$R_&#123;ij&#125; \sim N(0,\sigma^2)$</code></p>
<p>with confidence interval: <code>$\mu_1: \hat&#123;\mu_1&#125; \pm \frac&#123;c*S_1&#125;&#123;\sqrt&#123;n_1&#125;&#125;$</code><br>degree: <code>$n_1 - 1$</code><br><strong>OR</strong><br>with confidence interval: <code>$\mu_1 - \mu_2: \hat&#123;\mu_1&#125; - \hat&#123;\mu_2&#125; \pm c*\hat&#123;\sigma&#125;\sqrt&#123;\frac&#123;1&#125;&#123;n_1&#125; + \frac&#123;1&#125;&#123;n_2&#125;&#125;$</code><br>degree: <code>$n_1 + n_2 - 2$</code></p>
<p>discrepancy: <code>$d = \frac&#123;\hat&#123;\mu_1&#125; - \hat&#123;\mu_2&#125; - \mu_0&#125;&#123;\hat&#123;\sigma&#125;\sqrt&#123;\frac&#123;1&#125;&#123;n_1&#125; + \frac&#123;1&#125;&#123;n_2&#125;&#125;&#125;$</code><br>distribution: <code>$D \sim t_&#123;n_1 + n_2 - 2&#125;$</code></p>
<br>
<br>
___

<h3 id="Model2B"><a href="#Model2B" class="headerlink" title="Model2B:"></a><strong>Model2B:</strong></h3><blockquote>
<p>Independent groups which have different variance.<br><code>$Y_&#123;ij&#125;$</code>是response of unit j in group i.<br>因为variance不一样,<code>$\sigma_i^2$</code>指每组的variance.</p>
</blockquote>
<br>

<p><code>$Y_&#123;ij&#125; = \mu_i + R_&#123;ij&#125;$</code><br>where <code>$R_&#123;ij&#125; \sim N(0,\sigma_i^2)$</code></p>
<p>with confidence interval: <code>$\mu_1: \hat&#123;\mu_1&#125; \pm \frac&#123;c*S_1&#125;&#123;\sqrt&#123;n_1&#125;&#125;$</code><br>degree: <code>$n_1 - 1$</code><br><strong>OR</strong><br>with confidence interval: <code>$\mu_1 - \mu_2: \hat&#123;\mu_1&#125; - \hat&#123;\mu_2&#125; \pm c*\sqrt&#123;\frac&#123;\hat&#123;\sigma_1^2&#125;&#125;&#123;n_1&#125; + \frac&#123;\hat&#123;\sigma_2^2&#125;&#125;&#123;n_2&#125;&#125;$</code><br>degree: <code>$n_1 + n_2 - 2$</code></p>
<p>discrepancy: <code>$d = \frac&#123;\hat&#123;\mu_1&#125; - \hat&#123;\mu_2&#125; - \mu_0&#125;&#123;\sqrt&#123;\frac&#123;\hat&#123;\sigma_1^2&#125;&#125;&#123;n_1&#125; + \frac&#123;\hat&#123;\sigma_2^2&#125;&#125;&#123;n_2&#125;&#125;&#125;$</code><br>distribution: <code>$D \sim t_&#123;n_1 + n_2 - 2&#125;$</code></p>
<br>
<br>
___

<h3 id="Model3"><a href="#Model3" class="headerlink" title="Model3:"></a><strong>Model3:</strong></h3><blockquote>
<p>model3测试的是一组两数据之间的difference(缩写为d).</p>
</blockquote>
<br>

<p><code>$Y_&#123;di&#125; = \mu_d + R_&#123;di&#125;$</code><br>where <code>$R_&#123;dj&#125; \sim N(0,\sigma_d^2)$</code></p>
<p>with confidence interval: <code>$\mu_d: \bar&#123;y_d&#125; \pm \frac&#123;c*S_d&#125;&#123;\sqrt&#123;n_d&#125;&#125;$</code><br>degree: <code>$n_d - 1$</code>.</p>
<p>discrepancy: <code>$d = \frac&#123;\bar&#123;\mu_d&#125; - \mu_0&#125;&#123;\frac&#123;\hat&#123;\sigma_d&#125;&#125;&#123;\sqrt&#123;n_d&#125;&#125;&#125;$</code><br>distribution: <code>$D \sim t_&#123;n_d-1&#125;$</code></p>
<br>
<br>
___

<h3 id="Model4"><a href="#Model4" class="headerlink" title="Model4:"></a><strong>Model4:</strong></h3><blockquote>
<p>where we have n outcome, and each outcome is binary.</p>
</blockquote>
<br>

<p><code>$\frac&#123;Y&#125;&#123;n&#125; \sim N(\pi,\frac&#123;\pi(1-\pi)&#125;&#123;n&#125;)$</code><br>with confidence interval: <code>$\pi: \hat&#123;\pi&#125; \pm c*\sqrt&#123;\frac&#123;\hat&#123;\pi&#125;(1-\hat&#123;\pi&#125;)&#125;&#123;n&#125;&#125;$</code><br>degree: <code>$C \sim N(0,1)$</code></p>
<p>discrepancy: <code>$d = \frac&#123;\hat&#123;\pi&#125; - \pi_0&#125;&#123;\sqrt&#123;\frac&#123;\hat&#123;\pi_0&#125;(1-\hat&#123;\pi_0&#125;)&#125;&#123;n&#125;&#125;&#125;$</code><br>distribution: <code>$C \sim N(0,1)$</code></p>
<hr>
<p>Side:</p>
<ul>
<li><code>$y_1,...,y_n$</code>是sample data,non-random,我们收集到的data.</li>
<li><code>$Y_1,...,Y_n$</code>是realization of random variable.</li>
<li><strong>Statistic</strong> is a function of the sample data, <code>$\hat&#123;\theta&#125;$</code>. 当sample data changes,<code>$\hat&#123;\theta&#125;$</code>也会changes.</li>
<li>我们可以把<code>$\hat&#123;\theta&#125;$</code>当作realibation of ramdom variable <code>$\tilde&#123;\theta&#125;$</code>,<code>$\tilde&#123;\theta&#125;$</code>叫做estimator.</li>
</ul>
<p>从<code>$\hat&#123;\theta&#125;$</code>到<code>$\tilde&#123;\theta&#125;$</code>是从<code>$y_1,...,y_n$</code>到<code>$Y_1,...,Y_n$</code>.<br>例子:<br>在model2A中,<code>$\hat&#123;\mu_1&#125;$</code> = <code>$\bar&#123;y_&#123;1+&#125;&#125;$</code>(statistic)所以<code>$\tilde&#123;\mu_1&#125;$</code> = <code>$\bar&#123;Y_&#123;1+&#125;&#125;$</code>(estimator).</p>
<br>
<br>
___

<h3 id="Model5"><a href="#Model5" class="headerlink" title="Model5:"></a><strong>Model5:</strong></h3><blockquote>
<p>completely randomized design.</p>
</blockquote>
<br>

<p><code>$Y_&#123;ij&#125; = \mu_i + \tau_i + R_&#123;ij&#125;$</code><br>where <code>$R_&#123;ij&#125; \sim N(0,\sigma^2)$</code><br>and <code>$i = 1,2,...,t$</code> (# of treatments), <code>$j = 1,2,...,r$</code> (# of replicates for treatments).</p>
<blockquote>
<p>the # of units are i*j.<br>overall mean: <code>$\mu$</code>. group average: <code>$\mu + \tau_i$</code> for group i. treatment effect: <code>$\tau_i$</code> for group i.<br><code>$R_&#123;ij&#125;$</code> is the distribution of values about the deterministic part of the model.<br>Constraints: <code>$\tau_1 + \tau_2 ... + \tau_t = 0$</code>.</p>
</blockquote>
<blockquote>
<p>举例:group 1的ave是65,group 2 ave是75.<br>group1与group2数据在一起的ave是70.<code>$\mu$</code>+<code>$\tau_1$</code>是65,<code>$\mu$</code>+<code>$\tau_2$</code>是75.所以<code>$\hat&#123;\tau_1&#125;$</code>是-5,<code>$\hat&#123;\tau_2&#125;$</code>是5.</p>
</blockquote>
<p>当i只为2的情况:<br><code>$Y_&#123;ij&#125; \sim N(\mu,\frac&#123;\sigma^2&#125;&#123;2r&#125;)$</code></p>
<p>with confidence interval: <code>$\tau_1: \hat&#123;\tau_1&#125; \pm c*\sqrt&#123;\frac&#123;\sigma^2&#125;&#123;2r&#125;&#125;$</code><br>degree: <code>$n - q + c$</code>(t distribution)</p>
<p>with confidence interval: <code>$\mu: \hat&#123;\mu&#125; \pm c*\sqrt&#123;\frac&#123;\sigma^2&#125;&#123;2r&#125;&#125;$</code><br>degree: <code>$n - q + c$</code>(t distribution)</p>
<blockquote>
<p>关于为什么是2r的原因:<br><code>$V(\tau_1) = V(\bar&#123;Y_&#123;1+&#125;&#125; - \bar&#123;Y_&#123;++&#125;&#125;)$</code><br>= <code>$V(\bar&#123;Y_&#123;1+&#125;&#125; - (\bar&#123;Y_&#123;1+&#125;&#125; + \bar&#123;Y_&#123;2+&#125;&#125;)/2 )$</code><br>= <code>$V(1/2\bar&#123;Y_&#123;1+&#125;&#125; - 1/2\bar&#123;Y_&#123;2+&#125;&#125;)$</code><br>= 1/4<code>$V(\bar&#123;Y_&#123;1+&#125;&#125;)$</code> - 1/4<code>$V(\bar&#123;Y_&#123;2+&#125;&#125;)$</code><br>= 1/4<code>$\frac&#123;\sigma^2&#125;&#123;r&#125;$</code> + 1/4<code>$\frac&#123;\sigma^2&#125;&#123;r&#125;$</code><br>=<code>$\frac&#123;\sigma^2&#125;&#123;2r&#125;$</code></p>
</blockquote>
<p>当i不为2的时候,variance也会更改,请注意.</p>
<blockquote>
<p>注:<code>$V(\bar&#123;Y_&#123;1+&#125;&#125;) = \tau^2 /$</code> # of samples in group <code>$\bar&#123;Y_&#123;1+&#125;&#125;$</code>.</p>
</blockquote>
<p>discrepancy:</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">grp1 =  <span class="built_in">c</span>(<span class="number">50</span>,<span class="number">53</span>,<span class="number">52</span>,<span class="number">58</span>)</span><br><span class="line">grp2 = <span class="built_in">c</span>(<span class="number">62</span>,<span class="number">55</span>,<span class="number">58</span>,<span class="number">60</span>)</span><br><span class="line"></span><br><span class="line">options(contrasts = <span class="built_in">c</span>(<span class="string">&#x27;contr.sum&#x27;</span>,<span class="string">&#x27;contr.poly&#x27;</span>))</span><br><span class="line">Y = <span class="built_in">c</span>(grp1,grp2)</span><br><span class="line">x = as.factor(<span class="built_in">c</span>(<span class="built_in">rep</span>(<span class="string">&#x27;1&#x27;</span>,<span class="number">4</span>),<span class="built_in">rep</span>(<span class="string">&#x27;2&#x27;</span>,<span class="number">4</span>))) <span class="comment"># makes a discrete variable</span></span><br><span class="line">model = lm(Y~x) <span class="comment"># builds the model</span></span><br><span class="line">summary(model)</span><br></pre></td></tr></table></figure>
<p>estimate:<br>intercept: <code>$\hat&#123;\mu&#125;$</code>.<br>x: <code>$\hat&#123;\tau_1&#125;$</code>.</p>
<p>residual standard error: <code>$\hat&#123;\sigma&#125;$</code>.<br>p-value: assume <code>$H_0:\mu = 0$</code>,<code>$H_0:\mu \neq 0$</code>.<br>assume <code>$H_0:\tau_1 = 0$</code>,<code>$H_0:\tau_1 \neq 0$</code>.</p>
<p>if we want to estimate difference between two treatment:<br><code>$\theta : \hat&#123;\theta \pm c*SE&#125;$</code><br>s.e. = <code>$\frac&#123;\sigma&#125;&#123;\sqrt&#123;n&#125;&#125;$</code>.n = 2.<br>with confidence interval: <code>$\tau_1: \hat&#123;\tau_1&#125;  - \hat&#123;\tau_2&#125; \pm c*\sqrt&#123;\frac&#123;\sigma^2&#125;&#123;2&#125;&#125;$</code><br>degree: <code>$n - q + c$</code>(t distribution)</p>
<p>p-value:<code>$H_0 : \tau_1 = \tau_2$</code>, <code>$H_a: \tau_1 \neq \tau_2$</code>.<br>discrepancy:<br><code>$d = \frac&#123;est - H_&#123;0value&#125;&#125;&#123;s.e.&#125;$</code><br>we have<code>$d = \frac&#123;\tau_1 - \tau_2 - \tau_0&#125;&#123;\frac&#123;\sigma&#125;&#123;\sqrt&#123;2&#125;&#125;&#125;$</code>.</p>
<br>
<br>
___

<h3 id="Model6"><a href="#Model6" class="headerlink" title="Model6:"></a><strong>Model6:</strong></h3><blockquote>
<p>unbalanced CRD.每组的数据量不一样.</p>
</blockquote>
<br>

<p><code>$Y_&#123;ij&#125; = \mu_i + \tau_i + R_&#123;ij&#125;$</code><br>where <code>$R_&#123;ij&#125; \sim N(0,\sigma^2)$</code><br>and <code>$i = 1,2,...,t$</code> (# of treatments), <code>$j = 1,2,...,r_i$</code> (# of replicates for treatments).</p>
<blockquote>
<p>Constraints: <code>$\sum_&#123;i = 1&#125;^&#123;t&#125; r_i \tau_i  = 0$</code>.</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">grp1 =  <span class="built_in">c</span>(<span class="number">50</span>,<span class="number">53</span>,<span class="number">52</span>,<span class="number">58</span>)</span><br><span class="line">grp2 =  <span class="built_in">c</span>(<span class="number">62</span>,<span class="number">55</span>,<span class="number">58</span>)</span><br><span class="line">Y = <span class="built_in">c</span>(grp1,grp2)</span><br><span class="line">x = as.factor(<span class="built_in">c</span>(<span class="built_in">rep</span>(<span class="string">&#x27;1&#x27;</span>,<span class="number">4</span>),<span class="built_in">rep</span>(<span class="string">&#x27;2&#x27;</span>,<span class="number">3</span>)))</span><br><span class="line"></span><br><span class="line"><span class="comment">#Group Averages</span></span><br><span class="line">grp_av = tapply(Y,x,mean,na.rm = <span class="built_in">T</span>)</span><br><span class="line">mu = mean(Y)</span><br><span class="line"></span><br><span class="line"><span class="comment">#Treatment Effects</span></span><br><span class="line">tao1 = (grp_av - mean(Y))[<span class="number">1</span>]</span><br><span class="line">tao2 = (grp_av – mean(Y))[<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#Estimated Sigma</span></span><br><span class="line">sigma = summary(lm(Y~x))$sigma</span><br><span class="line"></span><br><span class="line"><span class="comment">#Values</span></span><br><span class="line">sigma; tao1; tao2; mu</span><br><span class="line"><span class="comment">#3.447221, -2.178571, 2.904762, 55.42857</span></span><br><span class="line"></span><br><span class="line">anova(lm(Y~x))</span><br></pre></td></tr></table></figure>

<br>
<br>
___

<h3 id="Model7"><a href="#Model7" class="headerlink" title="Model7:"></a><strong>Model7:</strong></h3><blockquote>
<p>randomized block design.<br>block这里指的是每组,比如说model3中compare difference的每两个数据就是一个block.</p>
</blockquote>
<br>

<p><code>$Y_&#123;ij&#125; = \mu_i + \tau_i + \beta_j + R_&#123;ij&#125;$</code><br>where <code>$R_&#123;ij&#125; \sim N(0,\sigma^2)$</code><br>and <code>$i = 1,2,...,t$</code> (# of treatments), <code>$j = 1,2,...,r$</code> (# of replicates for treatments).</p>
<blockquote>
<p><code>$\beta_j$</code> is the <code>$j^&#123;th&#125;$</code> block effect.<br>Constraints: <code>$\sum_&#123;i = 1&#125;^&#123;t&#125; \tau_i  = 0$</code>. <code>$\sum_&#123;j = 1&#125;^&#123;r&#125; \beta_j  = 0$</code>.<br>By least square: <code>$\hat&#123;\beta_j&#125; = \bar&#123;y_&#123;+j&#125;&#125; - \bar&#123;y_&#123;++&#125;&#125;$</code>.</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">Data=read.table(<span class="string">&quot;blocked.csv&quot;</span>,sep=<span class="string">&quot;,&quot;</span>,header=<span class="built_in">T</span>)</span><br><span class="line"></span><br><span class="line">options(contrasts = <span class="built_in">c</span>(<span class="string">&#x27;contr.sum&#x27;</span>,<span class="string">&#x27;contr.poly&#x27;</span>))</span><br><span class="line">attach(Data) <span class="comment"># 用了attach之后,column里面的名字可以直接当作varible使用.</span></span><br><span class="line"><span class="comment"># 比如说应该是Data$Treatment,可以用Treatment.</span></span><br><span class="line"><span class="comment"># 这里Treatment,Block,Value都是column的名字.</span></span><br><span class="line">Treatment = as.factor(Treatment)</span><br><span class="line">Block = as.factor(Block)</span><br><span class="line">Model = lm(Value~Treatment+Block)</span><br><span class="line"></span><br><span class="line"><span class="comment">#To look at the output, we type:</span></span><br><span class="line">summary(Model)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<br>
<br>

<hr>
<h3 id="Model8"><a href="#Model8" class="headerlink" title="Model8:"></a><strong>Model8:</strong></h3><blockquote>
<p>factorial design.<br>例:radiation有1/4的效果,chemo也有1/4的效果,两个一起使用可以有5/6的效果.<br>用于寻找两个变量是否有这种关系(interaction).</p>
</blockquote>
<p><code>$Y_&#123;ijk&#125; = \mu_i + \tau_i + R_&#123;ijk&#125;$</code><br>where <code>$R_&#123;ijk&#125; \sim N(0,\sigma^2)$</code><br>and <code>$i = 1,2,...,l_1$</code> (# of levels of factor 1), <code>$j = 1,2,...,l_2$</code> (# of levels of factor 2),<code>$k = 1,2,...,r$</code>.</p>
<p>by least square:<code>$W = \sum_&#123;ijk&#125; r_&#123;ijk&#125;^2 + \lambda(\sum_&#123;ij&#125;\tau_&#123;ij&#125;)$</code><br>we get <code>$\hat&#123;\mu&#125; = \bar(y_&#123;+++&#125;)$</code> , <code>$\hat&#123;\tau_&#123;ij&#125;&#125; = \bar&#123;y_&#123;ij+&#125;&#125; - \bar&#123;y_&#123;+++&#125;&#125;$</code>, <code>$\hat&#123;\sigma^2&#125; = \frac&#123;W&#125;&#123;rl_1l_2 - l_1l_2 - 1 + 1&#125;$</code>.</p>
<br>
<br>

<hr>
<h3 id="Model9"><a href="#Model9" class="headerlink" title="Model9:"></a><strong>Model9:</strong></h3><blockquote>
<p>factorial randomized block design.</p>
</blockquote>
<p><code>$Y_&#123;ijk&#125; = \mu + \tau_&#123;ij&#125; + \beta_k + R_&#123;ijk&#125;$</code></p>
<blockquote>
<p><code>$beta_k$</code> is block effect.<br>Constraints: <code>$\sum_&#123;ij&#125; \tau_&#123;ij&#125;  = 0$</code>. <code>$\sum_&#123;k&#125; \beta_k  = 0$</code>.</p>
</blockquote>
<p>where <code>$R_&#123;ijk&#125; \sim N(0,\sigma^2)$</code><br>and <code>$i = 1,2,...,l_1$</code> (# of levels of factor 1), <code>$j = 1,2,...,l_2$</code> (# of levels of factor 2),<code>$k = 1,2,...,r$</code>.</p>
<p>by least square:<code>$W = \sum_&#123;ijk&#125; r_&#123;ijk&#125;^2 + \lambda_1(\sum_&#123;ij&#125;\tau_&#123;ij&#125;) + \lambda_2(\sum_&#123;k&#125;\beta_&#123;k&#125;)$</code><br>we get <code>$\hat&#123;\mu&#125; = \bar(y_&#123;+++&#125;)$</code> , <code>$\hat&#123;\tau_&#123;ij&#125;&#125; = \bar&#123;y_&#123;ij+&#125;&#125; - \bar&#123;y_&#123;+++&#125;&#125;$</code>, <code>$\hat&#123;\beta&#125; = \bar&#123;y_&#123;++k&#125;&#125; - \bar&#123;y_&#123;+++&#125;&#125;$</code>, <code>$\hat&#123;\sigma^2&#125; = \frac&#123;W&#125;&#123;rl_1l_2 - l_1l_2 - r - 1 + 2&#125;$</code>.</p>
<br>
<br>

<hr>
<h2 id="anova"><a href="#anova" class="headerlink" title="anova"></a>anova</h2><img src="/blog/2021/04/10/P180/P180_2.png" class="">
<img src="/blog/2021/04/10/P180/P180_3.png" class="">

<p><code>$SS_&#123;TOT&#125; = SS_&#123;TRT&#125; + SS_&#123;RES&#125;$</code></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">anova(model)</span><br></pre></td></tr></table></figure>

<br>
<br>

<img src="/blog/2021/04/10/P180/P180.png" class="">

<br>
<br>
___

<h2 id="sampling"><a href="#sampling" class="headerlink" title="sampling"></a>sampling</h2><blockquote>
<p>SRS<br>我们无法取population中所有的数据,所以取样(sample).</p>
</blockquote>
<p>最大的区别是在公式中有finite population correction.<br>n为sample size,N为population size.</p>
<hr>
<p>Example:model 1</p>
<p>confidence interval: <code>$\mu: \bar&#123;y&#125; \pm \frac&#123;c*S&#125;&#123;\sqrt&#123;n&#125;&#125;$</code><br>We have error <code>$E = \frac&#123;c*\sigma^2&#125;&#123;\sqrt&#123;n&#125;&#125;$</code>, solve for n.</p>
<p>Using SRS:<br>confidence interval: <code>$\mu: \bar&#123;y&#125; \pm \sqrt&#123;1 - \frac&#123;n&#125;&#123;N&#125;&#125; \frac&#123;c*\hat&#123;\sigma&#125;&#125;&#123;\sqrt&#123;n&#125;&#125;$</code><br>We have error <code>$E = \sqrt&#123;1 - \frac&#123;n&#125;&#123;N&#125;&#125; \frac&#123;c*\hat&#123;\sigma&#125;&#125;&#123;\sqrt&#123;n&#125;&#125;$</code>, solve for n.</p>
<hr>
<p>Example:model 4</p>
<p>with confidence interval: <code>$\pi: \hat&#123;\pi&#125; \pm c*\sqrt&#123;\frac&#123;\hat&#123;\pi&#125;(1-\hat&#123;\pi&#125;)&#125;&#123;n&#125;&#125;$</code></p>
<p>Using SRS:<br>confidence interval: <code>$\pi: \hat&#123;\pi&#125; \pm c*\sqrt&#123;\frac&#123;\hat&#123;\pi&#125;(1-\hat&#123;\pi&#125;)&#125;&#123;n&#125;&#125;\sqrt&#123;1 - \frac&#123;n&#125;&#123;N&#125;&#125;$</code></p>
<p>We have error <code>$\sqrt&#123;1 - \frac&#123;n&#125;&#123;N&#125;&#125; \frac&#123;c*\hat&#123;\sigma&#125;&#125;&#123;\sqrt&#123;n&#125;&#125;$</code>, solve for n.<br>注:<code>$\hat&#123;\sigma^2&#125; = \hat&#123;\pi&#125;(1-\hat&#123;\pi&#125;)$</code><br>often we replace <code>$\hat&#123;\sigma^2&#125;$</code> by 1/4(the worst scenario is <code>$\pi = 1/2$</code>).</p>
<hr>
<p>如何取sample size:</p>
<ol>
<li>Take a small sample, estimate <code>$\sigma$</code>.</li>
<li>Find n using formula.</li>
<li>Perform a large study with n units.</li>
</ol>
<br>
<br>

<hr>
<h2 id="regression"><a href="#regression" class="headerlink" title="regression"></a>regression</h2><blockquote>
<p>regression sampling<br>require linear relationship between x and y.</p>
</blockquote>
<p><code>$Y_i = \alpha + \beta(x_i - \bar(x)) + R_i$</code><br>where <code>$R_&#123;j&#125; \sim N(0,\sigma^2)$</code></p>
<p>by least square:<code>$W = \sum_&#123;i&#125; r_&#123;i&#125;^2 = \sum_&#123;i&#125; (y_i - \alpha \beta(x_i - \bar&#123;x&#125;))^2$</code><br>we get <code>$\hat&#123;\alpha&#125; = \bar&#123;y&#125;$</code>, <code>$\hat&#123;\beta&#125; = \frac&#123;S_&#123;xy&#125;&#125;&#123;S_&#123;xx&#125;&#125; = \frac&#123;s_&#123;xy&#125;&#125;&#123;\hat&#123;s_&#123;xx&#125;&#125;&#125;$</code>, <code>$\hat&#123;\sigma_r&#125;^2 = \frac&#123;W&#125;&#123;n - 1&#125;$</code>.<br>where <code>$S_&#123;xy&#125; = \sum_i (y_i - \hat&#123;y&#125;)(x_i = \bar&#123;x&#125;)$</code>, <code>$s_&#123;xy&#125; = \frac&#123;S_&#123;xy&#125;&#125;&#123;n - 1&#125;$</code>, <code>$S_&#123;xx&#125;= \sum_i (x_i = \bar&#123;x&#125;)^2$</code>,<code>$s_&#123;xx&#125; = \frac&#123;S_&#123;xx&#125;&#125;&#123;n - 1&#125;$</code>.</p>
<blockquote>
<p>estimators: <code>$\alpha, \beta, \mu_x, \mu_y$</code> are all unbiased.<code>$\tilde&#123;\mu_&#123;reg&#125;&#125;$</code> is biased estimator for <code>$\mu_y$</code>.</p>
</blockquote>
<p>confidence interval: <code>$EST \pm c SE = \hat&#123;\mu_&#123;reg&#125;&#125; \pm c \sqrt&#123;1 - n/N&#125; \frac&#123;\hat&#123;\sigma_r&#125;&#125;&#123;\sqrt&#123;n&#125;&#125;$</code></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">attach(women)</span><br><span class="line"><span class="comment"># assume we want to know the mean height</span></span><br><span class="line"><span class="comment"># assume we know the mean weight</span></span><br><span class="line">mean(height) <span class="comment"># unknown</span></span><br><span class="line">mean(weight) <span class="comment"># we known</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># using SRSWOR, we take a sample of size 5 and use this as our estimate for the height:  </span></span><br><span class="line">set.seed(<span class="number">1</span>)</span><br><span class="line">sample_heights = sample(height,<span class="number">5</span>) <span class="comment"># n = 5</span></span><br><span class="line">mean(sample_heights)</span><br><span class="line"><span class="comment"># [1] 63.4, this is \hat&#123;\mu_&#123;h&#125;&#125;</span></span><br><span class="line">sd(sample_heights)</span><br><span class="line"><span class="comment"># [1] 3.209361, this is \hat&#123;\sigma_&#123;SRS&#125;&#125;</span></span><br></pre></td></tr></table></figure>
<p>we can build SRS CI: <code>$\hat&#123;\mu_&#123;h&#125;&#125; \pm c \sqrt&#123;1 - \frac&#123;n&#125;&#123;N&#125;&#125; \frac&#123;\hat&#123;\sigma_&#123;SRS&#125;&#125;&#125;&#123;\sqrt&#123;n&#125;&#125;$</code></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">sample_weights = <span class="built_in">c</span>(<span class="number">123</span>,<span class="number">129</span>,<span class="number">135</span>,<span class="number">146</span>,<span class="number">120</span>)</span><br><span class="line">mean(sample_weights)</span><br><span class="line"><span class="comment"># [1] 130.6</span></span><br><span class="line"><span class="comment"># We note that there is a linear relationship between height and weight.</span></span><br><span class="line">plot(weight,height)</span><br><span class="line"></span><br><span class="line">sample_weights = sample_weights-mean(sample_weights)</span><br><span class="line">summary(lm(sample_heights~sample_weights))</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p> The regression estimate is given by:<br><code>$\hat&#123;\mu_&#123;height&#125;&#125; = \hat&#123;\alpha&#125; + \beta(x_i - \hat&#123;x&#125;) = \mu_&#123;height&#125;(\mu_&#123;weight&#125;) = 63.4 + 0.31(136.7333 - 130.6) = 65.3$</code></p>
<p>build regression CI: <code>$\hat&#123;\mu_&#123;reg&#125;&#125; \pm c\sqrt&#123;1 - \frac&#123;n&#125;&#123;N&#125;&#125;\frac&#123;\hat&#123;\sigma_&#123;r&#125;&#125;&#125;&#123;\sqrt&#123;n&#125;&#125;$</code></p>
<p>regression比SRS更接近.</p>
<br>
<br>
___

<h2 id="ratio"><a href="#ratio" class="headerlink" title="ratio"></a>ratio</h2><blockquote>
<p>ratio estimation<br>require linear relationship between x and y.<br>require an intercept of zero.</p>
</blockquote>
<p><code>$Y_i = \beta x_i + R_i$</code><br>where <code>$R_&#123;i&#125; \sim N(0,x_i \sigma^2)$</code></p>
<blockquote>
<p>注,variance中乘了x_i,我们在计算的时候会计算<code>$\frac&#123;x_i&#125;&#123;\sqrt&#123;x_i&#125;&#125;和\frac&#123;y_i&#125;&#123;\sqrt&#123;x_i&#125;&#125;$</code>.</p>
</blockquote>
<p>by least square we have <code>$\hat&#123;\beta&#125; = \frac&#123;\bar&#123;y&#125;&#125;&#123;\bar&#123;x&#125;&#125;$</code> and <code>$\hat&#123;\sigma_&#123;ratio&#125;&#125;^2 = \frac&#123;W&#125;&#123;n - 1&#125;$</code>.<code>$\hat&#123;\mu_&#123;ratio&#125;&#125; = \frac&#123;\bar&#123;y&#125;&#125;&#123;\bar&#123;x&#125;&#125;\mu_x$</code>.</p>
<p>with confidence interval: <code>$\hat&#123;\mu_&#123;ratio&#125;&#125; \pm c \sqrt&#123;1 - \frac&#123;n&#125;&#123;N&#125;&#125; \frac&#123;\hat&#123;\sigma_&#123;ratio&#125;&#125;&#125;&#123;\sqrt&#123;n&#125;&#125;$</code></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">attach(women) <span class="comment"># same data set</span></span><br><span class="line"></span><br><span class="line">set.seed(<span class="number">1</span>)</span><br><span class="line">sample_heights = sample(height,<span class="number">5</span>)</span><br><span class="line">mean(sample_heights)</span><br><span class="line"><span class="comment">#[1] 63.4 # SRS estimate for \mu_y</span></span><br><span class="line">sd(sample_heights)</span><br><span class="line"><span class="comment">#[1] 3.209361</span></span><br><span class="line">sample_weights = <span class="built_in">c</span>(<span class="number">123</span>,<span class="number">129</span>,<span class="number">135</span>,<span class="number">146</span>,<span class="number">120</span>)</span><br><span class="line">mean(sample_weights)</span><br><span class="line"><span class="comment">#[1] 130.6</span></span><br><span class="line"></span><br><span class="line">plot(weight,height) <span class="comment"># linear</span></span><br><span class="line"></span><br><span class="line">Sqrt_weights = <span class="built_in">sqrt</span>(sample_weights) <span class="comment"># \sqrt&#123;x_i&#125;</span></span><br><span class="line">sample_weights = sample_weights/Sqrt_weights <span class="comment"># \frac&#123;x_i&#125;&#123;sqrt&#123;x_i&#125;&#125;</span></span><br><span class="line"></span><br><span class="line">sample_heights = sample_heights/Sqrt_weights <span class="comment"># \frac&#123;y_i&#125;&#123;\sqrt&#123;x_i&#125;&#125;</span></span><br><span class="line">summary(lm(sample_heights~sample_weights-<span class="number">1</span>))</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>The ratio estimate is given by:<code>$\hat&#123;\mu_&#123;height&#125;&#125; = \hat&#123;\beta&#125;*x_i = \frac&#123;\bar&#123;y&#125;&#125;&#123;\bar&#123;x&#125;&#125;*x_i = \frac&#123;63.4&#125;&#123;130.6&#125;x_i$</code>.</p>
<p>= 0.48545x_i.带入= 0.48545(136.7333) = 66.4</p>
<p>build regression CI: <code>$\hat&#123;\mu_&#123;ratio&#125;&#125; \pm c \sqrt&#123;1 - \frac&#123;n&#125;&#123;N&#125;&#125; \frac&#123;\hat&#123;\sigma_&#123;ratio&#125;&#125;&#125;&#123;\sqrt&#123;n&#125;&#125;$</code></p>
<p>ratio比SRS更接近.ratio是biased的.</p>
<hr>
<p>proportion的情况下:</p>
<p>build regression CI:<code>$\hat&#123;\theta&#125; \pm \frac&#123;1&#125;&#123;\hat&#123;\pi&#125;&#125;\sqrt&#123;1 - \frac&#123;n&#125;&#123;N&#125;&#125;\frac&#123;\hat&#123;\sigma_&#123;ratio&#125;&#125;&#125;&#123;\sqrt&#123;n&#125;&#125;$</code> where <code>$\hat&#123;\sigma_&#123;ratio&#125;&#125; = \sum\frac&#123;(y_i - \hat&#123;\theta_&#123;zi&#125;&#125;)^2&#125;&#123;n - 1&#125;$</code>.</p>
<blockquote>
<p><code>$\hat&#123;\theta&#125;$</code>我们想要算的gourp of interest(占总人群的比例).</p>
</blockquote>
<br>
<br>
___

<h2 id="stratified"><a href="#stratified" class="headerlink" title="stratified"></a>stratified</h2><blockquote>
<p>计算subpopulation,每个subpopulation independent.</p>
</blockquote>
<p><code>$\mu = \frac&#123;N_1\mu_1+ N_2\mu_2 + ... + N_H\mu_H&#125;&#123;N&#125; = \sum_&#123;i = 1&#125;^&#123;H&#125;w_i\mu_i$</code><br>这里的w是weight,也是占总人群的比例.</p>
<p>confidence interval: <code>$\hat&#123;\mu&#125; \pm c \sqrt&#123; \sum_&#123;i=1&#125;^H w_i^2\frac&#123;\sigma_i^2&#125;&#123;n_i&#125;(1 - \frac&#123;n_i&#125;&#123;N_i&#125;) &#125;$</code><br>where <code>$C \sim N(0,1)$</code>.</p>
<p><code>$\pi = \sum_&#123;i = 1&#125;^&#123;H&#125;w_i\pi_i$</code></p>
<p>confidence interval: <code>$\hat&#123;\pi&#125; \pm c \sqrt&#123; \sum_&#123;i=1&#125;^H w_i^2\frac&#123;\sigma_i^2&#125;&#123;n_i&#125;(1 - \frac&#123;n_i&#125;&#123;N_i&#125;) &#125;$</code><br>where <code>$C \sim N(0,1)$</code>, <code>$\sigma_i^2 = \pi_i(1 - \pi_i)$</code>.</p>
]]></content>
      <categories>
        <category>数学笔记</category>
      </categories>
      <tags>
        <tag>Thank you Mr.goose</tag>
        <tag>以头抢地(诚)</tag>
        <tag>data</tag>
        <tag>R</tag>
        <tag>statistics</tag>
      </tags>
  </entry>
  <entry>
    <title>陆地海洋与天空</title>
    <url>/blog/2016/06/05/P108/</url>
    <content><![CDATA[<p>L(・∀・ L) ｵｰｲ　　(」・∀・)」 ｵｰｲ</p>
<span id="more"></span>

<p>#### 1 <br><br><br><br><br><br><br>我叫陆海空，出生在离上海不远的江南小镇上，不是像荷花一样出水芙蓉的妹子，是像荷花杆子一样直挺挺的汉子。</p>
<p> 我的童年是帅到没有朋友的童年，不要问我为什么一张帅脸勾不到女性玩伴，看脸的恶习还没有侵染孩提王国。</p>
<p>久而久之，为了吸引小伙伴们的注意力，我又不大喜欢用拳头说话，我就渐渐练出了嘴炮技能MAX，势必在三句话内逼得小伙伴们跟我滚到地上交流一下感情。</p>
<p>同求不要问我为什么满级的嘴炮技能没有带来三千后宫，走上人生巅峰，因为这里是吐槽漫啊。 </p>
<p>一直开嘲讽，却没有受到人身威胁，我自然也是开动了一番小脑筋的。小秘诀就是在开嘲讽的同时想好相反的赞美，并在适当的时机抛出去。</p>
<p>比如在痛斥炎焱蠢哭到炎焱青筋暴突，我也会立马表示你蠢在了我的萌点上，嘲讽谢子安四肢短小到谢子安试图召唤神龙，我也会当机立断的表示我跪下来比你矮多了。</p>
<p>而当我第一次在幼儿园遇见沈燕然的时候，我就想好了我要嘲讽他那像抹了一层均匀的蜂窝煤一样的皮肤，而当我想后路的时候，脑袋里居然是【你黑的气色不错】和【黑的倒也锃油瓦亮】。不过也从来都没用上就是了。 </p>
<p>被自己贫乏的语言震惊的我决定按兵不动，思量一下合适的赞美，可是搜肠刮肚了一个礼拜无果，我打算直接上。</p>
<p> “小子，哪个黑窟窿里钻出来的啊？” </p>
<p>“新疆。”</p>
<p> “嘿，真别说。你丫一到晚上娘都找不着你吧？”</p>
<p>沈燕然一对招子在黑黝黝的脸上显得光彩熠熠，他瞥了我一眼都像是翻了个巨大的白眼。</p>
<p>可惜他看了我一眼之后无论我怎么挑衅他都没有反应，每天都认认真真的脱裤子，撒尿，和泥巴。 我想这一定是成为种马男主角之路上必须收买的NPC。</p>
<p>于是接下来很长一段时间我都围在他身边，热心的嘘寒问暖，试图刷高一点好感度，皇天不负有心人，沈燕然对我说了第二句话： “有点痛，忍一下。” 接下来我的脸上就多了一个骨节分明的拳印。 </p>
<p>可是当我被沈燕然的天赋神力揍翻在地的时候，居然是喜滋滋地想着这小子还挺有礼貌，莫名其妙被揍了的我莫名其妙的把沈燕然当做了我的朋友。 </p>
<p>经过我对我的新朋友的一番观察，我默默的给他起了个昵称【呆子】。词汇是浅显直白了一点，胜在贴切。</p>
<p>我发现他唱歌像触电，跳舞像抽筋，画画像和泥巴，最可怕的是居然完全没有请教我的意愿！唯一愿意干的事就是在空地上傻跑，让我觉得他上辈子一定是条哈士奇。</p>
<p> 综上所述，我对我的新朋友并不是太满意，好在他并没有对我流露出嫌弃的意思，我妈妈也教导我搭伙过日子要懂得包容和忍让，于是我便勉为其难的答应了双方父母从小学到初中都给我俩安一班里，美名其曰【互相有个照应。】 </p>
<p>现在想想我的苦逼人生也是窝自己作死做出来的，要是我当初擦亮眼睛，寻找到一个在爱情道路上能勾肩嗒背地去偷女神内衣的革命好战友的话，我的恋爱史会颓废到掰来掰去掰不出第二个女人嘛！</p>
<p><br><br><br><br><br><br><br><br><br><br><br></p>
<h4 id="2"><a href="#2" class="headerlink" title="2"></a>2</h4><br>
<br>
<br>
对于我来说，岁月绝对是亲娘。

<p>正当我越来越出落的英俊帅气地令女生无法直视的时候，沈燕然好像只是越来越呆了，一副看破尘俗不近女色的样子。切，当心我告诉谢子安你曾经信誓旦旦地要用我们小学文艺委员的名字命名那诡异的拳法和即将要面世的剑法。 </p>
<p>大概到小学五年级的时候，第一次对恋爱这种事有点映像。</p>
<p>偶然间听到男生们在讲班花喜欢我，语气里不小心溢出来了羡慕嫉妒恨。如果我告诉那班花我的第一反应是自豪我无边的魅力的话，估计已经入土为安，化作春泥更护花了吧。</p>
<p> 班花的确是很漂亮，成绩也好的很，但是性格蛮横完全不是我的类型。</p>
<p>自从知道了她喜欢我以后，稍微一留心就会发现，那个女生表达喜欢的方式居然是有事没事骂我一顿。</p>
<p> “喂，陆海空，作业交了没？”</p>
<p> “当然交了啊。” </p>
<p>“哼，早上跟沈燕然偷打篮球了吧！”</p>
<p> “是啊。拜托，两件事情有芝麻大小的关系吗？” </p>
<p>“你以后上学来了就乖乖地给我坐在座位上早读知不知道！哪有学生到五年级了还跟你们两个一样只知道玩！你要是再被我发现早上去打篮球的话当心我告诉班主任！”</p>
<p> “……姐姐饶命！” 哼，臭三八！这么凶以后肯定嫁不出去啊！</p>
<p> 不过这个三八偶尔也会对我温柔一下的，比如中午吃完饭发水果的时候小番茄会多给我一个。于是我很怕这个三八在毕业的时候来个惊天动地的告白，我会超级困扰的。</p>
<p>于是我召集沈燕然开了一个紧急会议。 会议的大体内容就是共同商定一下，我要不要好心提醒班花【老子没有把她当娘们看】这件事。 </p>
<p>由于会议结果是一票赞成，一票拒绝回答，那么就当他默认吧。</p>
<p>我想我应该顺应人民的号召。 于是在一个下午，我把班花约到了公园里。</p>
<p>当然，我有说服沈燕然在隔壁篮球场打球，万一我不小心惹怒了那个暴力女面临生命威胁的时候，他还可以保驾护航挡子弹。 “陆海空，什么事啊~”</p>
<p>班花难得的眯着眼朝我笑 日！你要是天天这么对我，我就勉为其难地同意你喜欢我了啊。 “哦，就是我听说你喜欢我，不过我不喜欢你。”</p>
<p>观察到班花没有反应过来，我趁机大招放掉：“所以不要再喜欢我了。” 然后———— 我才知道沈燕然是多么的没有用。面对班花的杀气腾腾，我屡次发出暗号求救，结果那个家伙只是红光满面地练着三分球，从三分线练到中线！</p>
<p>啥也别说了，哥在他心里估计连颗球都比不上！ 而等第二天到了学校，不要说球了，哥的形象估计已经连坨翔也比不上了。</p>
<p> 班花居然是早已梨花带雨地跑到班主任那里控告我跟沈燕然对她进行骚扰。鉴于大家都认为【品行端正】的沈燕然绝对没有嫌疑，我现在已经是人人杀之而后快的流氓了。</p>
<p> 而我【品行端正】的好友沈燕然也精辟地发表了总结： “要你多嘴。”<br> <br><br><br> <br><br><br> <br><br> <br><br> <br></p>
<h4 id="3"><a href="#3" class="headerlink" title="3"></a>3</h4><br>
<br>
<br>
据说缘分都是天注定的。

<p> 当我在初中教室里看到沈燕然的时候，我感到黑幕大无边，缘分两字已经不能涵盖了我妈妈让我交【正经朋友】的良苦用心了。</p>
<p>而当我看到同样在瞪着我的班花时，我相信了这世上有一种缘分叫孽缘。</p>
<p> 天亡吾也！ 我尽量装作谁都没有看见，直奔最后一排小心为妙。毕竟我也是有尊严的，哥就算是坨翔也是天底下最帅的一坨翔，哪轮得到你用那么嫌弃的目光亵渎。</p>
<p> 可惜，走到一半我突然走不动了。 我又迈了几下腿，感觉像在跑步机上，我回头恶狠狠一望，果然是沈燕然那厮拽着我衣角。</p>
<p>我怒极攻心，不要命的朝他爪子拍去，幸好他闪的及时，没有造成仇恨。权衡再三，我认识到跟这种所有技能点都加在武力值上的人硬拼绝对没有好果子吃，顺从地停了下来。 </p>
<p>沈燕然那厮放开了我的衣服，轻咳了一声用手虚掩在嘴前：“我给你留了位置的。”说罢头向班花旁边的空位偏了偏。</p>
<p> ……你以为用手遮着脸我就看不出你一脸的暗爽吗！！说好要做彼此的天使的呢！？？ </p>
<p>我自然是不希望初中同学知道我的小学黑历史，那肯定不能表现出我跟班花关系烂到家，所以我现在只能期待班花一巴掌把沈呆子拍晕，作为想出这种坏点子的小惩罚。可是你他娘一脸娇羞地别过头，10个男人11个看着是欲拒还迎是怎么回事？我的清白果然又要葬送在这个女人手里了…… </p>
<p>我也没想到在这种基本已经立了【死亡FLAG】的情况下，事情居然有转机。门口跳出了一个女孩火速冲进了那个【留好】的位置，还特愧疚地朝我笑笑：“抱歉啦，你只能坐后面啦……”</p>
<p> 噢，女神！     开学第一天度过了损友设置的危机，连老师奴役我们去搬书也觉得可幸福了！ </p>
<p>放学的时候我顺便去探望了一下隔壁班的李狗蛋，叫沈呆子自己去车棚取自行车。</p>
<p>结果我探亲完在校门口等了半天也没等到沈燕然。</p>
<p>沈燕然肯定是不会自己走的，他妈妈要是看到他丢下我自己回来绝对会放个大招秒掉血皮尚薄的沈燕然。 于是我就寻思着那呆子摊上事了，没准摊上大事了。</p>
<p>虽然他今天对我不仁，善良的本性却使我无法袖手旁观，唉。 果不其然，沈燕然正被一个只到他下巴的女生数落，我偷听了一会好像是【两车相撞，我很心伤】。</p>
<p>沈呆子听人数落还得低着头，把那【真心悔过】的小眼神传达出去。</p>
<p>我在心里大笑三声，沈燕然你也有今天！当初你打老子就怎么就牛逼哄哄地直接揍地上了？！ </p>
<p>这时有个女生犹犹豫豫地想上前劝劝，恩？好像就是救我一命的女神？算了，看在你早上帮我渡了一劫的分上，我就不让你受这遭鸡同鸭讲的罪了。</p>
<p> “诶诶，同学你几班的啊？”我迅速的插进了他们中间。</p>
<p> “四班。”女生没好气的回了我一句就打算继续向沈燕然开炮。</p>
<p> “啊呀好巧好巧，我们也是四班的嘿！”</p>
<p> “那我今天就担起为班级除害的重担——”</p>
<p>等等等，这孩子怎么像脱缰的野马一样不受控制？</p>
<p> “啊，反正大家以后都是同学，姑奶奶行行好放过他吧！”我挡在了沈燕然前面，顺便在呆愣愣的沈呆子背上拍得啪啪作响：“呆子！还不道歉！” 嘶——拍得我手都疼了。</p>
<p> “对不起。”沈燕然一板一眼地说完，抿了抿嘴又道：“我帮你修。” </p>
<p>女生听了眉毛一挑，理了理书包真就准备走了。你看，多大点儿事嘛！ </p>
<p>这时候我发现早上的女生突然就特别尴尬地站在了半近不远的距离，好像进也不是退也不是。</p>
<p>啧，难道我好心办坏事了？ 我赶紧冲过去：“是同班同学吧？你好我是陆海空。”<br><br><br><br><br><br><br><br><br><br><br><br></p>
<h4 id="4"><a href="#4" class="headerlink" title="4"></a>4</h4><br>
<br>
<br>
后来知道那胆大包天敢骂沈拳皇的女侠叫谢子安，不过那不重要，重要的是她跟劝架未遂的女生好像关系很好，那个女生叫炎焱，后来坐到了我前面。

<p> 坐近了以后才发现以前一时头脑发热在心里叫炎焱女神多傻缺，根本就是一个菜市场大妈！不，长得很好看的菜市场大妈。</p>
<p>“啊啊~今天遇到了一个小正太萌死了！” </p>
<p>“欸，我今天也遇……” </p>
<p>“听我说！！眼睛超大的，睫毛有那么长！”</p>
<p>说罢用食指与大拇指比了一大段距离。 </p>
<p>“哦。”</p>
<p>天啊！谁来救救这个花痴 ！</p>
<p>“我上次也遇到一个皮肤超白的小正太，头发天然卷的嗷嗷嗷！” </p>
<p>“我会到学校贴吧里发帖的。”</p>
<p> “蛤？” </p>
<p>“快来围观我们班的花痴。” </p>
<p>“什么啊！陆海空！！！！！”</p>
<p> 后来越来越熟，就把企鹅号跟手机号都不小心透露给了炎焱，这下我真的就24小时受骚扰了。</p>
<p> 不过，也蛮不赖的。 额……我是说反正我也很闲。</p>
<p> 一天聊天的时候突然有了跟炎焱告白的想法，想到的时候感觉浑身都跟打鸡血一样亢奋，就像是一只脚跨入了成人的世界，带给我这种青少年大脑皮层都发麻的战栗感。</p>
<p>现在回想起来，根本就没有任何的深思熟虑，寻找刺激比喜欢占得更多，一定要回忆的话，敲下那句【阿姨洗铁路】的时候脑袋里想的都是好玩。 </p>
<p>打出去第二天我就后悔了，陆海空你看看你干的什么混帐事！你就应该滚回娘胎里重熔再生，融出个机器猫一样的手打不了字才好！ 不过想想还是有点舍不得我这张俊脸的。</p>
<p> 晚上打开QQ的时候发现炎炎只是回了句【啊？什么意思】</p>
<p> 慢着，先让机智的我判断一下她是真不懂还是假不懂。</p>
<p>这是脑内分析软体又想起了优雅地女声【我相信这是阴谋，如果你能找到比她更天然呆的女孩子的话】 …..总觉得这语气略带鄙夷是怎么回事啊，这年头怎么连我端庄的软件姐姐都用起来沈呆瓜那种姥姥不疼舅舅不爱的语调。</p>
<p>不过忠言逆耳利于行，几乎瞬间就激起了我对炎炎反应的好奇心，她不会晚上就绑了我去民政局吧？</p>
<p>好奇归好奇，我对自己告个白还扭扭捏捏的写了句日文，以及没有正确认识到男女在中日文化交流深度上的不同感到羞耻。</p>
<p>于是豪气云干地打了句【自行百度】 那边【噢】了一声便没有了后续，八成给吓傻了或者是幸福来得太突然！</p>
<p>这样也挺好的，等明儿炎炎三观修复一点，我在一边义正严辞【你能信我这种流氓吗？必须不行啊！】问题说不定就解决了，这样想想人生真是一片光明啊，没准马上我就能当上总经理，出任CEO，迎娶白富美，登上人生巅峰，想想还有点小激动呢！<br><br><br><br><br><br><br><br><br><br><br><br></p>
<h4 id="5"><a href="#5" class="headerlink" title="5"></a>5</h4><br>
<br>
<br>
我也不知道炎焱她是看到日文懒都懒得查，还是感到太羞涩而决定跟我玩放置play，总之后来的几天居然就风平浪静的过了，炎焱的反应淡定的让我觉得有点缺激情。不过该来的还是来了。

<p>到了周末，QQ上毫无预警地跳出来了炎焱的一行消息“可不可以做我男朋友。”</p>
<p>我想过无数种炎焱的反应，也许她会淡淡的“哦，真的啊”，毕竟她收到的告白比我写的检讨还多。也许她会像班花一样趾高气昂的笑“哈，窝就知道！”，那我也可以四两拨千斤的打发回去，或者她就玩笑一般的带过去，那我也会顺水推舟的告诉她那的确不是什么认真思考的产物。 </p>
<p>可是她说“可不可以做我男朋友”，我甚至可以感觉到炎焱打字的时候手都在微微发抖，这个大妈很少会用那么正经的口气跟我讲话。 </p>
<p>该死！随便怎么讲都好，为什么要那么认真？！我根本没有办法拒绝这样的口气你不知道吗？ </p>
<p>我颓然的倒在椅背上，缓慢的敲了一个“好”发给了炎焱，便落荒而逃地关闭了电脑。</p>
<p>直到晚上躺进被窝，我都觉得浑身的血都被换成了二锅头，也不是上次那种花儿与少年的豪情，我就觉得整个人烧的像只被四川火锅煮的青蛙，越挣扎越气闷。</p>
<p>真奇了怪了，按理来说有个貌美的妹子告白，又顺利的在了一起应该是我肖想了很多年的人生啊！</p>
<p>我讨厌炎焱吗？不可能啊，AV画风我都能忍，炎焱的脸怎么看都是豪华配置，性格虽然花痴了点……额，相当花痴，本质上还是蛮符合窝梦想的【温柔可人】 </p>
<p>反正睡不着了，我干脆起身做到了床边的大理石飘窗上，借着月光欣赏我倒影在大理石上的俊脸，好像透着一股淡淡的死气，我立马想到了我那脸上透着汹涌死气的好友沈燕然，便一拍大腿决定找他纾解一下心中的悸动。 </p>
<p>“陆海空。”沈燕然这个人接电话的习惯很恐怖，从不跟正常人一样说“喂？”或者“你好”，而是看了来电显示直接点名，被他凉凉的这么一喊我瞬间怂了一半。 </p>
<p>“小……小的在”我去你能不能不要这样条件反射的狗腿啊！ “怎么？”沈燕然六根清净的声音又传了过来，我瞬间意识到找他当知心姐姐不如立刻手动挖个树洞。 </p>
<p>“咳咳咳……你看月明星稀乌鹊南飞，小生实在是无心睡眠，只可惜我翩翩佳公子只能独守——“ “晚安” “哎！哎！不如我们——“ ……沈燕然直接挂断了电话 我去我对你又不是真心存歹念，你们一个两个的不要那么傲娇好不好啊！！ </p>
<p>我悻悻然地躺倒在飘窗上，觉得自己就是那湘水边的陆翠翠，跟六根清净的沈祖父相依为命，可怜我年方二八情窦初开，沈爷爷还只知道光了个脚满山嘎达疯跑，都没个人可以讲心事！<br><br><br><br><br><br><br><br><br><br><br><br></p>
<h4 id="6"><a href="#6" class="headerlink" title="6"></a>6</h4><br>
<br>
<br>
班里90%的人不知道的情况下，我和炎炎开始了交往。 

<p>其实我完全没有隐瞒关系的意思，也不会有早恋影响不好之类得困扰，毕竟大家都知道我的信誉等级一直徘徊在【健康的翔】和【不健康的翔】中。</p>
<p> 炎炎反倒还恶声恶气地威胁子安和笙芋不准说出去，在我看来她明明是挺想提溜个喇叭吼一声【老娘泡到了大学霸】的，这次的反常也许是她比我更清楚我。</p>
<p>我不在谈恋爱。</p>
<p> 虽然我很真诚的告诉炎炎我不介意告诉大家老子明草有主了这回事，但积攒的好感度十分有限，几次很冷淡的回应炎炎想一起去图书馆写作业的要求以后，我莫名奇妙的和女朋友陷入了冷战。</p>
<p> 我觉得十分冤屈，这种事情提不起劲就是提不起劲，喝脉动也轴不回来我与45度与竖直方向成角的身姿，而且我告诉炎炎，就算周末作业我也是可以在学校里写完的，如果她在图书馆里穿着文艺长裙，从作业中蓦然抬首那是很美的，但如果她一转头发现男朋友一边吃着薯片一边看七龙珠，薯片屑还掉了满书，那就很倒胃口了。</p>
<p>炎炎脾气暴躁的追问那你想干什么，看电影？逛街？吃饭？游乐园？说到最后眉毛一挑直接拍上了桌子。 炎炎这样一定是气急了，我觉得我今天必须给她一个答案了。</p>
<p>我诚心诚意的握住她的手道：【其实…我比较喜欢做铝热剂实验，不把学校车库炸了我心痒痒。】 出人意料的是炎炎没有发飙，反握住我手笑道上次不就把手给烧伤了么。</p>
<p> 我终于体会到了有人疼的美妙滋味，抽出手便在胸口bangbangbang三下，顺带豪情壮志的表示为了科学献身，小伤小伤别介意。</p>
<p> 炎焱柔柔的笑了开来，笑声清脆的让人想把它们串起来别裤腰带上。但是炎焱笑着笑着像是宿醉初醒的醉汉般幽幽道:”这也不在乎，那也别介意，你到底在乎什么啊海空？“ 我一时间怔住，不知道是被问题还是被答案惊到。</p>
<p>缓过来了以后立马流氓兮兮的低笑道：“不然我怎么这么久万花丛中过片叶不沾身的呢？” 炎焱歪了歪头像是想挤出一个元气笑脸，可惜笑道最后嘴角垮了下来，没等我再开口，炎焱便小跑离开了。</p>
<p> 这……这他妈的是吹灯拔蜡的节奏啊！</p>
<p> 虽然说开始谈恋爱的时候我就压抑的不像话，过程也想强奸一样的令人没法享受，不过我这人一向就算是漏洞的鞋子穿久了也舍不得脱，优柔寡断的要你相信，何况这次根本就是我先去招惹的人家，人家顺着我的意思往前走了一步，我反而甩了脸子，越想越觉得自己不是个东西啊。</p>
<p> 于是这阶段我的睡前冥思都从如何和沈燕然深入的聊聊我的恋爱物语变成了如何拍拍炎焱的马屁，结果就是我很成功的忽视了沈爷爷居然也身陷同样的困扰，不过那是后话了，按下不表。</p>
<p> 上天果然还是怜爱我这个英俊潇洒的小王子的，不多久就来了一个机会。</p>
<p> 我们学校会开设劳技课，虽然大部分时间都是老师板了个脸给我们放敷小鸡和种番茄的视频，但一个学期起码会有一次劳动作业决定期末成绩，这次的作业便是摆弄些花花草草。</p>
<p> 才过了没多久，一些长得快的就纷纷把植物带过来显摆了。自习课的时候谢子安终于把她那株弱柳扶风的薰衣草拿了出来，一个萌萌哒的喵星人小花盆里只有一株薰衣草颤颤巍巍地长在那里，长得倒是挺长，可是头大身子细，沈呆子一个眼刀都可以把头削下来，不过我知道沈呆子不敢，你看那个外表残暴内心十足猫奴的家伙盯着花盆的痴汉眼神啊！ </p>
<p>结果传到炎焱那里的时候，小薰衣草造到了围观，也许是红颜薄命，它被残忍的看杀了，硕大的脑袋耷拉了下来，茎也折成了两半。，吓的炎焱恨不得跪下来讨饶。</p>
<p> “炎焱，没啥大不了的，你帮我粘好了顺便再去抱老师大腿求个A就好了！”</p>
<p>谢子安咧嘴笑道。<br><br><br><br><br><br><br><br><br><br><br><br></p>
<h4 id="7"><a href="#7" class="headerlink" title="7"></a>7</h4><br>
<br>
<br>
止住炎焱被地板吸引的膝盖，我伸手夺过花盆：“没事，看我师奶杀手陆海空出场，分分钟拿A+.” 

<p>“可……可是……它断了呀……”炎焱颤抖道。</p>
<p> 看她情急之下自然的跟我搭上了话，我心下窃喜，附到她耳边轻声道：“当下也只要糊弄过子安就好了，就谢子安这么个五根手指连一起的家伙，谁粘不比她粘的好？”</p>
<p> 于是炎焱和谢子安共同的损友箫笙芋小同学被逼迫着花了半节自修课用透明胶粘好了薰衣草。</p>
<p> “啧，怎么跟高位截瘫似的？”谢子安鄙夷地转着刚修复完回到她手上的薰衣草。 </p>
<p>“呜！我觉得笙芋已经粘的很好啦子安！”炎焱趴在桌子有气无力。</p>
<p> “笛子粘的啊，”谢子安伸出另一只手开始摩挲下巴：“果然捆绑技术中透着一股不解风情的呆气。”</p>
<p> 萧笙芋忍无可忍：“安子你也给咱差不多一点，要是你自己粘不要说高位截瘫了，早就碎尸万段了！” 谢子安鼻子里嘭出两团气酝酿着回击。</p>
<p> 我心想炎焱这两个朋友说话真是一个比一个损，谢子安本来就这样，萧笙芋浸淫了三年也尖牙利齿了起来，我顺了顺气心想还好炎焱的灵魂没有被她们污染，转头一看炎焱居然托着腮饶有兴趣地看着她们互喷，一股女儿要被小流氓带坏的危机感迎面扑来，我立马托着炎焱上办公室。</p>
<p> 至于我是如何风怀绝代地搞定劳技老师的，观众老爷们就不要深究了……反正马屁又不是直接拍在女朋友身上，再帅也没意思你说是吧？</p>
<p> 出了办公室，炎炎小心的捧着薰衣草，明显心情不错。教师办公室和教学楼是分开的，这里的走道非常的狭窄阴暗，如果一个人走会觉得鬼跟在后面，两个人就觉得有只小鹿在撞墙了。</p>
<p> “没想到居然真的活下来了。” </p>
<p>“不跟我生气了？” </p>
<p>“本…本来也没什么…”</p>
<p>炎炎吐了吐舌头搪塞道：“反正你这次真是救了我一命啊！”</p>
<p> “算你有点良心，那…叫声恩公来听听？”</p>
<p>我故意超炎炎压了一压，没想到她居然脸红到脑袋上冒青烟，我只得轻咳一声，讪讪的退回去。</p>
<p> 气氛诡异的走到了走廊尽头，马上转出去就会是一阳关大道，想到这我不禁松了一口气。 </p>
<p>炎炎的脸正好也褪了颜色，她不好意思的朝我笑笑，若无其事的问道：“Y中的天才班你知道的吧，大家都叫它一休班的，进去了就跟老同学很难再见的那个。” </p>
<p>我挑了挑嘴角表示我怎么可能不知道，16年来我都相信【它】注定要变成【我】的。</p>
<p> “那你会去考吗？”炎炎的声音一如继往的轻快，句末却有点失控的吊高，清澈的眼睛也牢牢地盯住我，睫毛都在轻轻的颤抖。 </p>
<p>怎么觉得她讲话比谢子安还见血封喉呢，我低着头苦笑。 </p>
<p>没有人比我更想溺死在普通世界的温暖里了，也没有人比我更希望挣脱一成不变。</p>
<p>但从前我的挣扎都是小打小闹，好像只要朝父母撒娇地说着舍不得，就可以弥补今后的空缺了，他们最终都会微笑着把我送走。</p>
<p>这次，我却觉得炎焱把纤细的脖子贴到了我的手掌上，稍稍一用力就会溅一脸血。 </p>
<p>炎焱盯着我，像老鼠盯着地缝一样盯着我，想蚊子盯着母牛一样盯着我，像公猫盯着母猫一样盯着我。和上一次不欢而散的谈话气氛出奇的一致，只不过这次我实在受不来炎焱犹如实质的目光，率先别开头去，落荒而逃。 </p>
<p>结果到晚上我都觉得我五脏六腑里郁结了一口污气，咳不出来又咽不下去。 困扰多年的老便秘，欸。 </p>
<p>我觉得今天晚上是很难睡着了，脑子一热背着麻麻出门溜达。晃着晃着也不知怎么的越看越熟悉，抬头一看——好么，沈燕然家门口。 出乎我意料的是沈燕然的房间居然还亮着灯，要知道沈爷爷平时9点钟准时躺倒了，早上五六点起来混在真•老爷爷中打太极。</p>
<p>这八百年难得一遇的好机会，我干脆爬上去吓吓他，刷新一下沈呆子表情库也是为人名服务的好事。</p>
<p> 我挣扎了半天还是决定干点男人的事业——走大门。 想什么呢，怎么会是我爬不上呢，要是沈呆子家住三楼我早一阵风就上去了，只可惜他住4楼，差一楼啊，真的！ </p>
<p>沈燕然给我开门的时候穿着汗背心和大裤衩——哦，这不是重点，重点是他淡淡的扫了我一眼就就兀自回房间了，留我一个人漆黑的夜里颤抖。</p>
<p>我随意的在他家溜达了一圈，其实在沈燕然家我一向是很自由的，如果这时候沈妈妈起夜看到我，应该也不会觉得有什么不对，马上会很淡定的回去睡觉。 </p>
<p>溜达了一圈觉得还是没啥劲，我只好撇撇嘴进了沈燕然房间 沈燕然端正地坐在书桌前，低着头，显然是在读一本什么书，我坏心眼的抢过来，翻到封面一看——中学生满分作文100篇！</p>
<p> 我抽了抽嘴角扔回了桌上。</p>
<p> 不过沈燕然这家伙也是要看看作文书了，我还记得他到初一，作文水平依然是【今天我兴高采烈的进了门，妈妈在兴高采烈的织毛衣，爸爸在兴高采烈的看电视，爷爷在兴高采烈的种花，奶奶在兴高采烈的烧饭……】</p>
<p> “看着玩意干啥，陪我去考一休班？”我找了个椅子坐了下来。</p>
<p>沈燕然的英语马马虎虎，语文烂得名列前茅，数理化我真心觉得和我差了一大截，莫名其妙越到初三越拔尖，不过很显然也是考不中一休班的。</p>
<p> “没有。” </p>
<p>“那我更想不通了啊，你要直升我们学校高中部闭着眼睛都行。” </p>
<p>沈燕然摇摇头：“我要进资优班。” </p>
<p>我脑袋里冒出了一个猜想：“因为谢子安？” </p>
<p>沈燕然倒也大方，毫不犹豫的点点头。</p>
<p>本来这是我期待了千年的奇景，我一定要毫不犹豫的嘲笑沈燕然一番，揭开他道貌岸然的嘴脸，痛斥他这么多年装的苍山暮雪六根清净。可惜今儿个我自己内伤深重，再给他这么一刺激，整个人歪在他书桌上就像片被拍扁了的蒜。 </p>
<p>凡是我跟沈燕然独处，就像是陆海空的个人秀，沈燕然只是个勉为其难忍受我的听众，只要我一闭嘴，就像两个不认识的陌生人一样安静了。 “</p>
<p>也只有一年有机会同班了，高二分班的话，子安肯定选文，我要选理。”难得沈燕然主动开口，还讲了个大长句，但它血淋淋地反衬出了我的恋爱的不幸，我依旧瘫在桌子上哼哼。</p>
<p> “喂，要吃泡面么？”沈燕然突然伸手推了推我。</p>
<p> “当然了，给爷好吃好喝的招待起来！”我拍开沈燕然蕴含着怪力的手掌使唤道。 沈燕然居然没有回嘴，麻利地站起身去厨房了。</p>
<p>我翻了个身肚皮朝上，感到今天沈呆子乖乖顺顺的小摸样特别可人。 脑洞也没开多久，沈燕然就抱了两桶泡面回来了，姿势跟抱了两个排球在胸前一样，让人忍不住想笑。</p>
<p>沈燕然大概是觉得我又发病了，也没管我，坐下来就开始埋头吃。</p>
<p>我正翘首盼着他推一碗给我呢，结果他自己吃的头都要栽进面碗里了！ 唉，不就嘲笑了一下么，男人怎么可以这么小气？不过我也只是想想罢了，反正跟沈燕然讲男人的准则就是对牛弹琴，不如直接拿过来沈燕然也不会追究。</p>
<p>正当我的手神不知鬼不觉的伸想了面碗，沈燕然突然分开五指盖在了面上，这下子这碗泡面简直就像压在五指山下的孙悟空一样动弹不得了。</p>
<p>我怒道：“你干嘛？”</p>
<p> “我的。” </p>
<p>“QAQ两桶呢！你吃得了那么多吗？” </p>
<p>沈呆子一本正经道：“多乎哉？不多也。” </p>
<p>权衡再三，我还是放弃了虎口拔牙的危险举动，起身自己去泡了一碗。</p>
<p>把面和调料包依次放进碗里的时候，只觉得是乱上加乱，干瘪的蔬菜和褐色的调料乱糟糟的混在一起，就像扔满了彩色垃圾袋的沙漠一样，让人提不起劲。</p>
<p>加了水之后香味却瞬间溢满了房间，用叉子把盖重新盖在了面碗上，上面诱人的牛肉面图案就随着我走路的节奏晃了起来，好像我拿的真的是一碗货真价实的美味牛肉面，简直比我做过的任何化学实验都要快速高效且有欺骗性。 </p>
<p>回到沈燕然房间的时候，沈燕然已经在吃第二碗泡面了，但咀嚼时的速度与激情丝毫不减第一碗。</p>
<p> “说起来一休班……”</p>
<p> “我不会去考的。”沈燕然出声打断到 。</p>
<p>“干嘛说得那么肯定，试一试啊！”我赔笑道 。</p>
<p>“没有意义。你要去自己去。”这次沈燕然回答的时候头都没有抬，仍是埋在面碗里。</p>
<p> 我对沈燕然这种冷漠的态度怒从胸口起，把面碗重重地砸在桌上：“你明知道我会去考的吧！如果考上了就会分别，难道陪我最后一次也不愿意吗？” </p>
<p>沈燕然难得的皱起了眉头：“你是女孩子吗？上个厕所都要人陪？” </p>
<p>“不要用这么无聊比喻打发我！”</p>
<p>我上去揪住了他的领子：“明明是你们没有一个人愿意陪我去考吧，为什么总是要弄得好像是我抛弃了你们一样？不论是你，还有炎焱，都是因为我根本不值得你们拼上全部去试一试吧？那就不要说得好像我什么都不在意，什么都冷漠地丢弃！”</p>
<p> 沈燕然垂下了睫毛：“没有什么抛弃不抛弃，只是大家没有能力再陪你了。”</p>
<p> 啊，是啊。其实大家的轨道早就已经分开了吧，只有偏得最远的我还妄图把大家都拢回一起，连沈燕然都在不知不觉中变得那么成熟了。</p>
<p> 我笑了笑又趴回了桌上，沈燕然也哧溜哧溜地继续吃他的泡面。我注意到作文书的一角被洒上了面汤，大概是我刚刚太激动，砸面碗的动作太大了，连汤里的胡萝卜和干菜都洒了出来。</p>
<p>加了水的面汤依旧是泥一样的颜色，泡开了的胡萝卜更像菜场里的塑料袋，随着面汤一页页的下渗，香味也消失。又重归最开始的丑陋与寡淡。</p>
<p> 所以说我啊，到底还在期待什么？</p>
<p>世界上再守身如玉的蒸馏水也不能把康师傅泡成一碗真正的牛肉面，沙子加了水也只能变成泥，泡不出爱和理想。 </p>
<p>真的只剩我一个人了啊。<br><br><br><br><br><br><br><br><br><br></p>
<h4 id="完结章"><a href="#完结章" class="headerlink" title="完结章"></a>完结章</h4><br>
<br>
<br>
接下来的日子就跟我预想的一模一样，参加了一休班的预选，复选，最后等来了通过的结果，中间也由炎焱提出了分手。

<p> 一般来说初中升高中是不会有爸妈闲到办升学酒的，但是因为考中了一休班，就会保送一流大学，所以在大家的要求下，我们家大宴三日，我抱着沈燕然痛哭流涕的喝了半箱啤儿茶爽，沈呆子也一反常态地送了我一块喜羊羊橡皮当纪念物。</p>
<p> 然后就开始时高中生活，听说沈呆子剑圣护体，考进了资优班，谢子安却马失前蹄，阵亡在了数学上，结果只进了普通的班级，听到他们被命运无情的捉弄，我怎么有点小高兴呢？</p>
<p>炎焱也直升进了高中部，没能和谢子安分在一个班级，萧笙芋进了美术班。 </p>
<p>比起吵吵闹闹的初中，高中因为学习很紧张所以日子过得格外的快，每天都有像头脑风暴一样的课程，却不用进行高考就可以进大学，简直就像在肩膀上加了千斤顶，却抽掉了脊柱。</p>
<p>把涂得满满的日子的一角掀开，就会看到渐渐泛黑的棉絮。 就好像今天晚上应该会下雨，可是我等到了9点，晚自习结束要回宿舍了，都没有一点征兆。 </p>
<p>我也不是喜欢下雨，只是觉得一年里面下雨的天数比晴天和阴天都要少太多了，如果一定要选一天干一些不平凡的事，当然要选不平凡的雨天啊。 </p>
<p>不过报了下雨却没有下雨的今夜，是最特别的吧。</p>
<p> 我把雨伞扔在了舍友头上，在他们的惊呼中跑向了围墙。</p>
<p>      炎焱家我去过很多次，都是像小偷踩点一样在外面溜达了一圈就回去了。</p>
<p>每次想要打电话叫炎焱开门，都会觉得自己像个跟从狂一样猥琐，还是不要破坏炎焱心中我高大的形象了，所以有一次被出门的炎焱撞到我也立马装作观赏架子上的紫藤萝，大概是我疯狂化学家的形象过于深入人心，炎焱居然相信了这边的紫藤萝非常与众不同。</p>
<p>当然它其实完全没有什么特别的，一定要说的话，就是那天下雨了，沾着雨水的紫藤花和撑着伞的炎焱都很好看吧。 </p>
<p>多亏了多年踩点经验，我顺利站在了炎焱房间窗口正下面，从一休班乘车回来，又去同里晃了一圈，已经是深夜2点了，明明是有史以来最不合适的一次踩点，我却很自然的拨通了炎焱的电话。</p>
<p> 本来我都做好了上交手机的炎焱没有接到电话，或者睡前把手机开了静音的炎焱没有接到电话之类的准备，那么也只好有缘再见，没想到响了几声后，电话是没有人接，炎焱房间的灯却开了，发型堪比贞子的炎焱打开窗探下头： “陆——海——空？！”</p>
<p> ……我真的是对这个蓬头垢面的大妈念念不忘了两年？  </p>
<p>如果一定要说炎焱最可爱的地方，应该是她全身心被我吸引的样子，而完全不会考究我本身的合理性。就好比她现在蹬蹬蹬出门的声音我在楼下都可以听到，她却一点都顾虑都没有地，因为某单身男子一通未接的电话在深夜2点出门了。</p>
<p> 虽然炎焱屁颠颠的出来了，不能把我拉进家这点常识也是有的，于是我们干脆坐在了楼梯上。</p>
<p> “嗯……好久不见了啊，初三最后就基本见不着你了啊。”炎焱笑道。 果然，这个家伙根本不会注意到现在的我应该身处y城，进行深度睡眠。</p>
<p> “是啊。”我顿了一顿：“你是高二了吧？” </p>
<p>“喂，你什么叫【你是高二了吧？】搞得我好像会留级一样，大家不都是一个年级的嘛？” </p>
<p>“我们学校没有什么高一高二之分啊，课程完了自然可以进大学了。” </p>
<p>“诶？那你不会……”</p>
<p> “恩，已经报送大学了。9月份就可以去报到了。” </p>
<p>炎焱兴致勃勃的表情好像有点黯淡：“这样无论如何也追不上你了吧。”</p>
<p> “不要追了。”几乎是脱口而出，但是看到炎焱定格的表情又觉得自己很无情:”有一种爱叫做放手你造嘛…” </p>
<p>“陆海空，你半夜里叫我出来不会就是想说这个吧？！”</p>
<p> “怎么可能，我可是来送福利的。”我立马摆出招牌流氓笑，边笑边在包里摸索。 </p>
<p>炎炎抿着嘴看了我半天，最后还是当做什么都没听到一样爽朗笑道：“福利？夏日泳装美少女的海报去送给笙芋啦。” 我掏出了三大袋在同里便利店里买的真空袜底酥给炎焱：“不，是美丽古镇的灵魂。”</p>
<p> 炎焱双手接过袜底酥，翻来翻去的看了两遍，最后探究的目光落在了我的脸上。</p>
<p>大概是半夜两点让我觉得今天很快就可以翻篇，我告诉他在同里，袜底酥的酥与梳是一样的意思。</p>
<p> “就算是梳……又是什么意思呢？” </p>
<p>“你不知道啊……”我笑道：“一梳梳到底，二梳白发齐眉，三梳子孙满堂。” 我并没有撒谎，这是我的想法，只是我的确不应该再次向炎炎表达。</p>
<p>初中里的表白并没有深思熟虑，但是却收到了相当勇敢的答复，第一场恋爱就像是构建在炎炎的一腔热血上。即便是这样，却还是没有坚持下去。</p>
<p>时至今日，不管是天时地理人和都没有，构建再绮丽的告白，也只是许给炎炎巨额的空头支票。何况这表白不过是一场没盼来的大雨激发的，太阳出来以后，还可以苟延残喘多久呢？</p>
<p> 炎焱果然安静，或者说僵直了，楼道一瞬间就闷的像是在酝酿一场倾盆大雨，而炎焱紧握包装袋发出的簌簌声，则是万物无助的求救。</p>
<p> “所以……你是在告白？”炎炎目光忽明忽暗。 “你不是一直嫌我告白是用日语吗？这次够不够含蓄典雅，博大精深？”</p>
<p>我一只手搭到她肩膀上：“你能想象回忆那种傻气的告白是怎样一种会呼吸的痛吗？” </p>
<p>“陆海空！不要嬉皮笑脸的，你是想要继续交往的意思吗？”炎炎拿掉我在她肩膀上的手，攥在了手里。 </p>
<p>“你怎么每次都那么主动？上次也直接问我可不可以交往…”手上传来的巨痛使我停嘴，没想到炎焱小胳膊小腿儿还挺有蛮劲。</p>
<p> “如果我不问的话，你会提吗？”她松开了手指，低头笑了起来，尾音压在了笑声里，把问号压成了句号，好像这个问题本身就不需要答案。</p>
<p> “……不会。”我沉默了一会道 。</p>
<p>“我好像永远弄不懂你，只能被你耍的团团转。”炎焱的语调低低的，认真地撕开了包装袋。</p>
<p> “毕竟男人心血来潮的告白…保质期还比不过一包小浣熊啊。”</p>
<p> “没有保质期的告白，根本就是发霉的小浣熊！”炎炎嘟起嘴。</p>
<p> “喜欢一个人的心情，本身就是特定的时刻的注脚，干嘛要深究呢？” </p>
<p>“那么这一刻，你说喜欢我是真的咯？为什么连交往的意愿也没有？” </p>
<p>“因为我没有恋爱脑啊..” </p>
<p>“因为我喜欢你和你喜欢我都只要点到为止就好了，你最重要的还是自己吧！“</p>
<p> “如果你是说报考一休班，我很抱歉。”</p>
<p> “……不必。”炎焱呼出一口气靠在墙上，闭眼道：”你不知道我看到沈安卓报考本部的时候有多羡慕子安。“ </p>
<p>”……那个家伙本身也考不中一休班吧？“</p>
<p> ”他根本就没有去！你明白它的意思吗？那是选择…”炎焱睁眼道：“他选择了谢子安，而你没有选择我。“ </p>
<p>“蛤？一个无情无义的前男友会半夜给你买袜底酥啊？”</p>
<p> ”那这种看上去情深意重的东西有多少分量呢？“</p>
<p> ”一袋一斤吧————“ </p>
<p>”五六分真心，不会再多了吧！“</p>
<p> ”额……如果是希望你的日子像袜底酥一样甜蜜蜜的心意是十分的……“ </p>
<p>“差评！退货！我最讨厌羊头狗肉的假货！！”炎焱把袜底酥劈头盖脸地砸在了我头上，站起身就往回走：“顺便一提，老娘是玛丽苏，不是袜底酥！”</p>
<p> 结果还是……下雨了啊。 我顶着一头袜底酥也没有回家的兴致，索性坐在了炎焱窗下。</p>
<p>我觉得这个时候从神坛上跌落的我特别需要烟酒的慰藉，像个成熟男人一样把愁与痛深埋在今夜的酒精里，可惜我还未成年，于是只能跑到小卖部里买了两支水蜜桃味的棒棒糖，塞在嘴里代替香烟。</p>
<p>我一边撕包装一边想，舔的快一点分子会不会直接汽化看上去像冒烟呢？那样就真的像满怀心事的抽烟了吧，就真的可以派遣难过了吧。</p>
<p> 吃完第二根棒棒糖的时候天已经微亮了，嘴里好像真的全是酒味，脑子也不大灵光，觉得对面满架子的紫藤花都是我摸过的那一朵，上面还有我因为太紧张按出的指印，下一秒炎焱就会撑着伞出现，笑着说一些平凡到我早就忘记的话。</p>
<p> 我起身拍了拍裤子上的土，告诉自己，翻篇儿了，陆海空。 还有啊，下次不要再买水蜜桃味的棒棒糖了，那个水蜜桃的样子实在太像炎焱两颊的皮肤了。</p>
<p> 那么……买西瓜味的吧？ 恩，希望下一个女朋友的胸能像西瓜那么大。<br><br><br><br></p>
<p> ——Fin——<br><br></p>
]]></content>
      <tags>
        <tag>树哥是神</tag>
      </tags>
  </entry>
  <entry>
    <title>关于法语的网页收藏</title>
    <url>/blog/2021/07/16/P168/</url>
    <content><![CDATA[<p>除了以下备注的,我觉得doulingo作为初学者体验一门语言蛮好.<br>duolingo能学的东西较慢,但能cover各个方位(听说读写和语法).<br>我也很喜欢它的故事模式.</p>
<span id="more"></span>

<h1 id="Gramma-notes"><a href="#Gramma-notes" class="headerlink" title="Gramma notes"></a>Gramma notes</h1><h2 id="Present"><a href="#Present" class="headerlink" title="Présent"></a>Présent</h2><table>
<thead>
<tr>
<th>Subject</th>
<th>+ er</th>
<th>+ir</th>
<th>+re</th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td>parler</td>
<td>finir</td>
<td>vendre</td>
</tr>
<tr>
<td>Je</td>
<td>+ e</td>
<td>+ is</td>
<td>+ s</td>
</tr>
<tr>
<td>Tu</td>
<td>+ es</td>
<td>+ is</td>
<td>+ s</td>
</tr>
<tr>
<td>Il</td>
<td>+ e</td>
<td>+ it</td>
<td>+ nothing</td>
</tr>
<tr>
<td>Nous</td>
<td>+ ons</td>
<td>+ issons</td>
<td>+ ons</td>
</tr>
<tr>
<td>Vous</td>
<td>+ ez</td>
<td>+ issez</td>
<td>+ ez</td>
</tr>
<tr>
<td>Ils</td>
<td>+ ent</td>
<td>+ issent</td>
<td>+ ent</td>
</tr>
</tbody></table>
<br>
<br>

<h3 id="Les-verbes-irreguliers"><a href="#Les-verbes-irreguliers" class="headerlink" title="Les verbes irréguliers:"></a>Les verbes irréguliers:</h3><table>
<thead>
<tr>
<th>Subject</th>
<th>Être – to Be</th>
<th>Devoir- to have to</th>
<th>Dire- to say/to tell</th>
<th>Sortir- to go out</th>
</tr>
</thead>
<tbody><tr>
<td>Je</td>
<td>suis</td>
<td>dois</td>
<td>dis</td>
<td>sors</td>
</tr>
<tr>
<td>Tu</td>
<td>es</td>
<td>dois</td>
<td>dis</td>
<td>sors</td>
</tr>
<tr>
<td>Il</td>
<td>est</td>
<td>doit</td>
<td>dit</td>
<td>sort</td>
</tr>
<tr>
<td>Nous</td>
<td>sommes</td>
<td>devons</td>
<td>disons</td>
<td>sortons</td>
</tr>
<tr>
<td>Vous</td>
<td>êtes</td>
<td>devez</td>
<td>dites</td>
<td>sortez</td>
</tr>
<tr>
<td>Ils</td>
<td>sont</td>
<td>doivent</td>
<td>disent</td>
<td>sortent</td>
</tr>
</tbody></table>
<br>

<table>
<thead>
<tr>
<th>Subject</th>
<th>Avoir – to have</th>
<th>Savoir - to know</th>
<th>Écrire- to write</th>
<th>Venir- to come</th>
</tr>
</thead>
<tbody><tr>
<td>Je</td>
<td>ai</td>
<td>sais</td>
<td>écris</td>
<td>viens</td>
</tr>
<tr>
<td>Tu</td>
<td>as</td>
<td>sais</td>
<td>écris</td>
<td>viens</td>
</tr>
<tr>
<td>Il</td>
<td>a</td>
<td>sait</td>
<td>écrit</td>
<td>vient</td>
</tr>
<tr>
<td>Nous</td>
<td>avons</td>
<td>savons</td>
<td>écrivons</td>
<td>venons</td>
</tr>
<tr>
<td>Vous</td>
<td>avez</td>
<td>savez</td>
<td>écrivez</td>
<td>venez</td>
</tr>
<tr>
<td>Ils</td>
<td>ont</td>
<td>savent</td>
<td>écrivent</td>
<td>viennent</td>
</tr>
</tbody></table>
<br>

<table>
<thead>
<tr>
<th>Subject</th>
<th>Aller- to go</th>
<th>Voir- to see</th>
<th>Mettre- to put (on)</th>
<th>Partir- to leave</th>
</tr>
</thead>
<tbody><tr>
<td>Je</td>
<td>vais</td>
<td>vois</td>
<td>mes</td>
<td>pars</td>
</tr>
<tr>
<td>Tu</td>
<td>vas</td>
<td>vois</td>
<td>mes</td>
<td>pars</td>
</tr>
<tr>
<td>Il</td>
<td>va</td>
<td>voit</td>
<td>met</td>
<td>part</td>
</tr>
<tr>
<td>Nous</td>
<td>allons</td>
<td>voyons</td>
<td>mettons</td>
<td>partons</td>
</tr>
<tr>
<td>Vous</td>
<td>allez</td>
<td>voyez</td>
<td>mettez</td>
<td>partez</td>
</tr>
<tr>
<td>Ils</td>
<td>vont</td>
<td>voient</td>
<td>mettent</td>
<td>partent</td>
</tr>
</tbody></table>
<br>

<table>
<thead>
<tr>
<th>Subject</th>
<th>Faire- to make/to do</th>
<th>Prendre- to take</th>
<th>Boire- to drink</th>
<th>Vouloir- to want</th>
</tr>
</thead>
<tbody><tr>
<td>Je</td>
<td>fais</td>
<td>prends</td>
<td>bois</td>
<td>veux</td>
</tr>
<tr>
<td>Tu</td>
<td>fais</td>
<td>prends</td>
<td>bois</td>
<td>veux</td>
</tr>
<tr>
<td>Il</td>
<td>fait</td>
<td>prend</td>
<td>met</td>
<td>veut</td>
</tr>
<tr>
<td>Nous</td>
<td>faisons</td>
<td>prenons</td>
<td>buvons</td>
<td>voulons</td>
</tr>
<tr>
<td>Vous</td>
<td>faites</td>
<td>prenez</td>
<td>buvez</td>
<td>voulez</td>
</tr>
<tr>
<td>Ils</td>
<td>font</td>
<td>prennent</td>
<td>boivent</td>
<td>veulent</td>
</tr>
</tbody></table>
<br>

<table>
<thead>
<tr>
<th>Subject</th>
<th>Connaître- to know</th>
<th>Suivre- to follow</th>
<th>Pouvoir- to be able</th>
<th>Lire- to read</th>
</tr>
</thead>
<tbody><tr>
<td>Je</td>
<td>connais</td>
<td>suis</td>
<td>peux</td>
<td>lis</td>
</tr>
<tr>
<td>Tu</td>
<td>connais</td>
<td>suis</td>
<td>peux</td>
<td>lis</td>
</tr>
<tr>
<td>Il</td>
<td>connaît</td>
<td>suit</td>
<td>peut</td>
<td>lit</td>
</tr>
<tr>
<td>Nous</td>
<td>connaissons</td>
<td>suivons</td>
<td>pouvons</td>
<td>lisons</td>
</tr>
<tr>
<td>Vous</td>
<td>connaissez</td>
<td>suivez</td>
<td>pouvez</td>
<td>lisez</td>
</tr>
<tr>
<td>Ils</td>
<td>connaissent</td>
<td>suivent</td>
<td>peuvent</td>
<td>lisent</td>
</tr>
</tbody></table>
<br>

<table>
<thead>
<tr>
<th>Subject</th>
<th>comprendre- to understand</th>
</tr>
</thead>
<tbody><tr>
<td>Je</td>
<td>comprends</td>
</tr>
<tr>
<td>Tu</td>
<td>comprends</td>
</tr>
<tr>
<td>Il</td>
<td>comprend</td>
</tr>
<tr>
<td>Nous</td>
<td>comprenons</td>
</tr>
<tr>
<td>Vous</td>
<td>comprenez</td>
</tr>
<tr>
<td>Ils</td>
<td>comprennent</td>
</tr>
</tbody></table>
<br>
<br>

<h2 id="Le-futur-proche"><a href="#Le-futur-proche" class="headerlink" title="Le futur proche"></a>Le futur proche</h2><p>Aller(présent) + infinitif(原型)<br>Ne + aller + pas + infinitif</p>
<p>(I am going to + near future, use for talking not formal)</p>
<br>
<br>

<h2 id="Le-futur-simple"><a href="#Le-futur-simple" class="headerlink" title="Le futur simple"></a>Le futur simple</h2><p>更正式的future说法.add ending to the infinitif.等同于英语的will.</p>
<blockquote>
<p>除了re词尾外,直接在infinitif背后增加后缀,re词会去掉e再增加.</p>
</blockquote>
<table>
<thead>
<tr>
<th>Subject</th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>Je</td>
<td>+ ai</td>
</tr>
<tr>
<td>Tu</td>
<td>+ as​</td>
</tr>
<tr>
<td>Il</td>
<td>+ a​</td>
</tr>
<tr>
<td>Nous</td>
<td>+ ons​</td>
</tr>
<tr>
<td>Vous</td>
<td>+ ez​</td>
</tr>
<tr>
<td>Ils</td>
<td>+ ont​</td>
</tr>
</tbody></table>
<br>
<br>

<h3 id="Les-verbes-irreguliers-1"><a href="#Les-verbes-irreguliers-1" class="headerlink" title="Les verbes irréguliers:"></a>Les verbes irréguliers:</h3><p>aller → <strong>ir</strong> → j’irai - I will go<br>avoir → <strong>aur</strong> → j’aurai - I will have<br>être → <strong>ser</strong> → je serai - I will be<br>faire → <strong>fer</strong> → je ferai - I will do<br>pouvoir → <strong>pourr</strong> → je pourrai - I will be able to<br>devoir → <strong>devr</strong> → je devrai - I will have to<br>savoir → <strong>saur</strong> → je saurai - I will know<br>venir → <strong>viendr</strong> → je viendrai - I will come<br>voir → <strong>verr</strong> → je verrai - I will see<br>vouloir → <strong>voudr</strong> → je voudrai - I will like/want<br>The examples above are all using the subject pronoun je/j’.</p>
<p>Here are some further examples:</p>
<p>il aura dix-huit ans dans trois jours - he’ll be 18 in three days<br>nous pourrons venir chez toi - we will be able to come to your house<br>elles feront leurs devoirs demain - they will do their homework tomorrow</p>
<br>
<br>

<h2 id="La-negative"><a href="#La-negative" class="headerlink" title="La négative"></a>La négative</h2><h3 id="Ne-Pas"><a href="#Ne-Pas" class="headerlink" title="Ne..Pas"></a>Ne..Pas</h3><p>In order to make a sentence negative, you add “NOT” in a sentence in English.<br>In French, you add « ne…pas » around the verb</p>
<ul>
<li>Je suis heureuse. (I am happy.) -&gt; Je ne suis pas heureuse (I am not happy.).</li>
<li>Tu fais tes devoirs. -&gt; Tu ne fais pas tes devoirs.</li>
<li>Nous aimons le film. -&gt; Nous n’aimons pas le film.</li>
</ul>
<h3 id="Il-n’y-a-pas-DE"><a href="#Il-n’y-a-pas-DE" class="headerlink" title="Il n’y a pas DE"></a>Il n’y a pas DE</h3><p>N’oubliez pas! Si vous changez les phrases avec des articles indéfinis (un/une/des), vous devez changer ces articles !</p>
<ul>
<li>with les articles indéfinis <strong>(un, une, des)</strong>, when the sentence is in the negative form, the article changes to <strong>de/d’</strong>. The gender or number of the noun does not matter.<br>Ex. J’ai un livre. -&gt; Je n’ai pas de livre.</li>
</ul>
<p><strong>the articles change to DE/D’ in a negative sentence</strong><br>but… <strong>le/la/les</strong> - stay the same in a negative sentence!<br>du/de l’/de la/des (some)  also change to de/d’ (any)</p>
<br>
<br>

<h2 id="Le-futur-anterieur"><a href="#Le-futur-anterieur" class="headerlink" title="Le futur antérieur"></a>Le futur antérieur</h2><p>过去将来时.</p>
<table>
<thead>
<tr>
<th>Subject</th>
<th>avoir</th>
<th>être</th>
</tr>
</thead>
<tbody><tr>
<td>Je</td>
<td>aurai</td>
<td>serai</td>
</tr>
<tr>
<td>Tu</td>
<td>auras</td>
<td>seras</td>
</tr>
<tr>
<td>Il</td>
<td>aura</td>
<td>sera</td>
</tr>
<tr>
<td>Nous</td>
<td>aurons</td>
<td>serons</td>
</tr>
<tr>
<td>Vous</td>
<td>aurez</td>
<td>serez</td>
</tr>
<tr>
<td>Ils</td>
<td>auront</td>
<td>seront</td>
</tr>
</tbody></table>
<br>
<br>

<h2 id="Les-verbes-pronominaux"><a href="#Les-verbes-pronominaux" class="headerlink" title="Les verbes pronominaux"></a>Les verbes pronominaux</h2><p><strong>verb要加agreement</strong>.</p>
<p>| Subject  |   |<br>|—|—|—|<br>| Je  | me |<br>| Tu  | te |<br>| Il  | se |<br>| Nous  | nous |<br>| Vous  | vous |<br>| Ils  | se |</p>
<p>Example:<br>Je me suis promené en ville.<br>Je ne me suis pas promené en ville.</p>
<br>
<br>

<h2 id="Le-conditionnel-present"><a href="#Le-conditionnel-present" class="headerlink" title="Le conditionnel présent"></a>Le conditionnel présent</h2><p>一般用于礼貌,建议,猜测.</p>
<table>
<thead>
<tr>
<th>Subject</th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>Je</td>
<td>+ ais</td>
</tr>
<tr>
<td>Tu</td>
<td>+ ais​</td>
</tr>
<tr>
<td>Il</td>
<td>+ ait​</td>
</tr>
<tr>
<td>Nous</td>
<td>+ ions​</td>
</tr>
<tr>
<td>Vous</td>
<td>+ iez​</td>
</tr>
<tr>
<td>Ils</td>
<td>+ aient​</td>
</tr>
</tbody></table>
<p>在词的原型(infinitive)后直接增加后缀,特殊词前缀会发生改变.(肯定有r sound)</p>
<p>Exemples :</p>
<ul>
<li>Si je pouvais, je jouerais plus souvent.</li>
<li>Si j’avais de l’argent, je partirais en voyage.</li>
<li>Nous voudrions rentrer plus tôt.</li>
</ul>
<p><strong>(-re verb group will remove e)</strong></p>
<table>
<thead>
<tr>
<th></th>
<th></th>
<th>1er groupe</th>
<th></th>
<th>autres groupes</th>
</tr>
</thead>
<tbody><tr>
<td>je / j’</td>
<td>-erais</td>
<td>aimerais</td>
<td>-rais</td>
<td>finirais</td>
</tr>
<tr>
<td>tu</td>
<td>-erais</td>
<td>aimerais</td>
<td>-rais</td>
<td>finirais</td>
</tr>
<tr>
<td>il / elle / on</td>
<td>-erait</td>
<td>aimerait</td>
<td>-rait</td>
<td>finirait</td>
</tr>
<tr>
<td>nous</td>
<td>-erions</td>
<td>aimerions</td>
<td>-rions</td>
<td>finirions</td>
</tr>
<tr>
<td>vous</td>
<td>-eriez</td>
<td>aimeriez</td>
<td>-riez</td>
<td>finiriez</td>
</tr>
<tr>
<td>ils / elles</td>
<td>-eraient</td>
<td>aimeraient</td>
<td>-raient</td>
<td>finiraient</td>
</tr>
</tbody></table>
<h3 id="Les-verbes-irreguliers-2"><a href="#Les-verbes-irreguliers-2" class="headerlink" title="Les verbes irréguliers:"></a>Les verbes irréguliers:</h3><p>Aller - ir<br>Avoir - aur<br>Courir - courr<br>Devoir -  devr<br>Envoyer -  enverr<br>Être -  ser<br>Mourir -  mourr<br>Pouvoir -  pourr<br>Recevoir - recevr<br>Savoir  - saur<br>Tenir -  tiendr<br>Valoir -  vaudr<br>Venir  - viendr<br>Voir -  verr<br>Vouloir - voudr<br>Falloir - faudrait<br>Pleuvoir - pleuvr<br>Faire - fer</p>
<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><h4 id="si-present-le-future-simple"><a href="#si-present-le-future-simple" class="headerlink" title="si + présent + le future simple"></a>si + présent + le future simple</h4><blockquote>
<p>如果现在(——)将来会如何(——).</p>
</blockquote>
<p>Si j’ecoute(présent) au prof, je saurai(future simple) quoi faire.<br>If I <strong>listen</strong> to the teacher, I <strong>will know</strong> what to do.</p>
<h4 id="si-l’imparfait-le-conditionnel-present"><a href="#si-l’imparfait-le-conditionnel-present" class="headerlink" title="si + l’imparfait + le conditionnel présent"></a>si + l’imparfait + le conditionnel présent</h4><blockquote>
<p>如果以前was doing(——),I would able to(——).</p>
</blockquote>
<p>Si j’avais(imparfait) assez d’argent, j’irais(conditionnel présent) au cinéma.<br>If I <strong>had</strong> enough money, I <strong>would go</strong> to the moives.</p>
<h4 id="si-plus-que-parfait-past-conditionnel"><a href="#si-plus-que-parfait-past-conditionnel" class="headerlink" title="si + plus-que-parfait + past conditionnel"></a>si + plus-que-parfait + past conditionnel</h4><p>J’aurais fait un gâteau, si j’avais su que tu venais.<br>I would have baked a cake, if I had known you were coming.</p>
<br>
<br>

<h2 id="Placement-of-Adjectives"><a href="#Placement-of-Adjectives" class="headerlink" title="Placement of Adjectives"></a>Placement of Adjectives</h2><p>形容词(adj)也会需要跟名词词性change form <strong>(+e/+s/+es)</strong>, mostly after the noun, except following:</p>
<p>B-beauty (beau, joli, laid, etc.)<br>A-age (jeune, vieux, nouveau, ancien, etc)<br>N-numbers (premier, deuxième, etc.)<br>G-goodness/badness (bon, mauvais, vilain, etc.)<br>S-size (petit, grand, gros, etc.)</p>
<p>其中有三个词根据名词读音会有特别的form:</p>
<table>
<thead>
<tr>
<th></th>
<th>m.s</th>
<th></th>
<th>f.s.</th>
<th></th>
<th>m.p./f.p.</th>
</tr>
</thead>
<tbody><tr>
<td>old</td>
<td>vieux</td>
<td>vieux/vieil</td>
<td>vieille</td>
<td>vieux/vieils</td>
<td>vieilles</td>
</tr>
<tr>
<td>beautiful/handsome</td>
<td>beau</td>
<td>beau/bel</td>
<td>belle</td>
<td>beaux/bels</td>
<td>belles</td>
</tr>
<tr>
<td>new</td>
<td>nouveau</td>
<td>nouveau/nouvel</td>
<td>nouvelle</td>
<td>nouveaux/nouvels</td>
<td>nouvelles</td>
</tr>
</tbody></table>
<br>

<h3 id="常见形容词"><a href="#常见形容词" class="headerlink" title="常见形容词:"></a>常见形容词:</h3><table>
<thead>
<tr>
<th></th>
<th>m.s</th>
<th>f.s.</th>
</tr>
</thead>
<tbody><tr>
<td>good</td>
<td>bon</td>
<td>bonne</td>
</tr>
<tr>
<td>bad</td>
<td>mauvais</td>
<td>mauvaise</td>
</tr>
<tr>
<td>beautiful</td>
<td>beau</td>
<td>belle</td>
</tr>
<tr>
<td>pretty</td>
<td>joli</td>
<td>jolie</td>
</tr>
<tr>
<td>ugly</td>
<td>laid</td>
<td>laide</td>
</tr>
<tr>
<td>fat,big</td>
<td>gros</td>
<td>grosse</td>
</tr>
<tr>
<td>thin</td>
<td>mince</td>
<td>mince</td>
</tr>
<tr>
<td>big,tall,long</td>
<td>grand</td>
<td>grande</td>
</tr>
<tr>
<td>small(people)</td>
<td>petit</td>
<td>petite</td>
</tr>
<tr>
<td>long</td>
<td>long</td>
<td>longue</td>
</tr>
<tr>
<td>short(item)</td>
<td>court</td>
<td>courte</td>
</tr>
<tr>
<td>young</td>
<td>jeune</td>
<td>jeune</td>
</tr>
<tr>
<td>old</td>
<td>vieux</td>
<td>vieille</td>
</tr>
<tr>
<td>warm,hot</td>
<td>chaud</td>
<td>chaude</td>
</tr>
<tr>
<td>cold</td>
<td>froid</td>
<td>froide</td>
</tr>
<tr>
<td>strong</td>
<td>fort</td>
<td>forte</td>
</tr>
<tr>
<td>weak</td>
<td>faible</td>
<td>faible</td>
</tr>
<tr>
<td>full</td>
<td>plein</td>
<td>pleine</td>
</tr>
<tr>
<td>empty</td>
<td>vide</td>
<td>vide</td>
</tr>
<tr>
<td>clean</td>
<td>propre</td>
<td>propre</td>
</tr>
<tr>
<td>dirty</td>
<td>sale</td>
<td>sale</td>
</tr>
<tr>
<td>smart</td>
<td>intelligent</td>
<td>intelligente</td>
</tr>
<tr>
<td>interesting</td>
<td>intéressant</td>
<td>intéressante</td>
</tr>
<tr>
<td>polite</td>
<td>poli</td>
<td>polie</td>
</tr>
<tr>
<td>kind,nice</td>
<td>gentil</td>
<td>gentille</td>
</tr>
<tr>
<td>mean</td>
<td>méchant</td>
<td>méchante</td>
</tr>
<tr>
<td>new</td>
<td>nouveau</td>
<td>nouvelle</td>
</tr>
<tr>
<td>old</td>
<td>ancien</td>
<td>ancienne</td>
</tr>
<tr>
<td>sick,ill</td>
<td>malade</td>
<td>malade</td>
</tr>
<tr>
<td>dead</td>
<td>mort</td>
<td>morte</td>
</tr>
<tr>
<td>alive</td>
<td>vivant</td>
<td>vivante</td>
</tr>
<tr>
<td>dry</td>
<td>sec</td>
<td>sèche</td>
</tr>
<tr>
<td>wet</td>
<td>mouillé</td>
<td>mouillée</td>
</tr>
<tr>
<td>clear</td>
<td>clair</td>
<td>claire</td>
</tr>
<tr>
<td>dark</td>
<td>obscur</td>
<td>claire</td>
</tr>
<tr>
<td>soft</td>
<td>mou</td>
<td>molle</td>
</tr>
<tr>
<td>hard</td>
<td>dur</td>
<td>dure</td>
</tr>
<tr>
<td>easy</td>
<td>facile</td>
<td>facile</td>
</tr>
<tr>
<td>difficult</td>
<td>difficile</td>
<td>difficile</td>
</tr>
<tr>
<td>happy</td>
<td>heureux</td>
<td>heureuse</td>
</tr>
</tbody></table>
<br>
<br>

<h2 id="Le-comparatif-et-le-superlatif"><a href="#Le-comparatif-et-le-superlatif" class="headerlink" title="Le comparatif et le superlatif"></a>Le comparatif et le superlatif</h2><p>better和best的使用.</p>
<h3 id="adjectif-comparatif"><a href="#adjectif-comparatif" class="headerlink" title="adjectif comparatif"></a>adjectif comparatif</h3><p>需要change form.</p>
<table>
<thead>
<tr>
<th></th>
<th>m.s</th>
<th>f.s.</th>
<th>m.p.</th>
<th>f.p.</th>
</tr>
</thead>
<tbody><tr>
<td>bon</td>
<td>meilleur que</td>
<td>meilleurs que</td>
<td>meilleure que</td>
<td>meilleures que</td>
</tr>
<tr>
<td>mauvais</td>
<td>pire que</td>
<td>pire que</td>
<td>pires que</td>
<td>pires que</td>
</tr>
</tbody></table>
<p>Example:</p>
<div class="note ">
            <p>Le fromage(1) est(2) meilleur(3) que (4) le pain (5).<br>Cheese is better (1) than (2) bread (3).</p>
          </div>

<p><strong>noun # 1 + être verb + meilleur form + que + noun # 2</strong><br>*It is written in the same order as it is in English.</p>
<p>speical case: petit -&gt; plus petit == moindre.</p>
<h3 id="adjectif-superlatif"><a href="#adjectif-superlatif" class="headerlink" title="adjectif superlatif"></a>adjectif superlatif</h3><p>需要change form.</p>
<table>
<thead>
<tr>
<th></th>
<th>m.s</th>
<th>f.s.</th>
<th>m.p.</th>
<th>f.p.</th>
</tr>
</thead>
<tbody><tr>
<td>bon</td>
<td>le meilleur</td>
<td>la meilleure</td>
<td>les meilleurs</td>
<td>les meilleures</td>
</tr>
<tr>
<td>mauvais</td>
<td>le pire</td>
<td>la pire</td>
<td>les pires</td>
<td>les pires</td>
</tr>
</tbody></table>
<div class="note ">
            <p>La pizza(1) est(2) la(3) meilleure(4).</p>
          </div>

<p><strong>noun (the only noun) + être verb + le/la/les meilleur(s)(e)(es)</strong><br>*Just like the comparative, the sentence is written in the same order as it is in English.</p>
<p>speical case: petit(e)(s) -&gt; le plus petit == le moindre.</p>
<br>

<div class="note ">
            <p>Celery is the most crunchy (crunchiest)<br>Le céleri est le plus croquant</p>
          </div>
<p>*“le” agrees with céleri, as does “croquant”</p>
<div class="note ">
            <p>Chips are the most salty (saltiest)<br>Les croustilles sont les plus salés</p>
          </div>
<p>*“les” agrees with croustilles, as does “salés”</p>
<div class="note ">
            <p>Stew is the least appetizing<br>Le ragoût est le moins appétissant</p>
          </div>
<p>*“le” agrees with stew, as does “appétissant”</p>
<div class="note ">
            <p>Fries are the least nutritious<br>Les frites sont les moins nutritifs</p>
          </div>
<p>*“les” agrees with fries, as does “nutritifs”</p>
<p><strong>noun + verb + le/la/les + plus/moins +the adjective-it agrees with main noun)</strong></p>
<h3 id="adverbe-comparatif"><a href="#adverbe-comparatif" class="headerlink" title="adverbe comparatif"></a>adverbe comparatif</h3><div class="note ">
            <p>About adverbe:<br>Bien is used with all verbs other than être.<br>Le chef cuisine bien. (The chef cooks well.)</p>
          </div>

<br>

<p><strong>We do not change form.</strong></p>
<div class="note ">
            <p>Le chef(1) cuisine(2) mieux(3) que(4) ma mère(5).</p>
          </div>

<p><strong>Main subject + verb + mieux que (only this form!) + 2nd subject</strong></p>
<h3 id="adverbe-superlatif"><a href="#adverbe-superlatif" class="headerlink" title="adverbe superlatif"></a>adverbe superlatif</h3><p><strong>We do not change form.</strong></p>
<div class="note ">
            <p>Gordon Ramsay(1) cuisine(2) le(3) mieux (4)<br>(Gordon Ramsay cooks the best.)</p>
          </div>

<p><strong>Subject + verb + le (never changes!) + mieux (never changes!)</strong></p>
<br>

<div class="note ">
            <p>Le chef(1) cuisine(2) le(3) plus(4) vite(5).</p>
          </div>
<p><strong>Subject + verb + le (never changes!) + plus/moins + the adverb</strong></p>
<h3 id="comparatif-avec"><a href="#comparatif-avec" class="headerlink" title="comparatif avec +/-/="></a>comparatif avec +/-/=</h3><p><strong>plue:</strong></p>
<div class="note ">
            <p>Les pommes sont plus nutritives que les chocolats.<br>Apples are more nutritious than chocolate.</p>
          </div>

<br>

<p><strong>moins:</strong></p>
<div class="note ">
            <p>Le chocolat est moins nutritif que les pommes.<br>Chocolate is less nutritious than apples.</p>
          </div>

<br>

<p><strong>aussi:</strong></p>
<div class="note ">
            <p>Les pommes(1) sont(2) aussi(3) nutritives (4) que (5) le chocolat (6).</p>
          </div>

<h4 id="adjectifs"><a href="#adjectifs" class="headerlink" title="adjectifs:"></a>adjectifs:</h4><p><strong>Noun # 1 + être verb + plus/moins/aussi+ adjectif (must agree with noun # 1) + que + Noun # 2</strong><br>*Remember the adjective must agree with the first person or object in the comparison</p>
<br>

<h4 id="adverbes"><a href="#adverbes" class="headerlink" title="adverbes:"></a>adverbes:</h4><p><strong>Subject # 1 + verb + plus/moins/aussi + adverb + que + subject # 2</strong><br>*Remember that adverbs do not change</p>
<br>

<h4 id="nom"><a href="#nom" class="headerlink" title="nom:"></a>nom:</h4><p>plus/moins/<strong>autant</strong> + de + nom (+ que de)</p>
<p>le plus/le moins de + nom</p>
<br>

<h4 id="nom-1"><a href="#nom-1" class="headerlink" title="nom:"></a>nom:</h4><p>verbe + plus/moins/<strong>autant</strong> (+ que)</p>
<p>verbe + le plus/le moins</p>
<br>
<br>

<h2 id="les-adverbes"><a href="#les-adverbes" class="headerlink" title="les adverbes"></a>les adverbes</h2><p>FORMATION DES ADVERBES en -MENT :</p>
<h3 id="on-ajoute-ment-au-feminin-de-l’adjectif"><a href="#on-ajoute-ment-au-feminin-de-l’adjectif" class="headerlink" title="on ajoute -ment au féminin de l’adjectif"></a>on ajoute -ment au féminin de l’adjectif</h3><p>lent → lente → lentement<br>sec → sèche → sèchement<br>grand → grande → grandement<br>doux → douce → doucement<br>heureux → heureuse → heureusement<br>idéal → idéale → idéalement</p>
<h3 id="on-ajoute-ment-au-masculin-des-adjectifs-termines-par-une-voyelle"><a href="#on-ajoute-ment-au-masculin-des-adjectifs-termines-par-une-voyelle" class="headerlink" title="on ajoute -ment au masculin des adjectifs terminés par une voyelle"></a>on ajoute -ment au masculin des adjectifs terminés par une voyelle</h3><p>poli → poliment<br>vrai → vraiment<br>absolu → absolument<br>unique → uniquement</p>
<h3 id="quand-l’adjectif-masculin-se-termine-par-ent-ou-ant-l’adverbe-de-termine-par-emment-ou-–-amment-et-se-prononce-ament"><a href="#quand-l’adjectif-masculin-se-termine-par-ent-ou-ant-l’adverbe-de-termine-par-emment-ou-–-amment-et-se-prononce-ament" class="headerlink" title="quand l’adjectif masculin se termine par -ent ou -ant, l’adverbe de termine par -emment ou – amment et se prononce [ament]"></a>quand l’adjectif masculin se termine par -ent ou -ant, l’adverbe de termine par -emment ou – amment et se prononce [ament]</h3><p>récent → récemment<br>suffisant → suffisamment<br>fréquent → fréquemment<br>général → généralement</p>
<h3 id="cas-particuliers"><a href="#cas-particuliers" class="headerlink" title="cas particuliers"></a>cas particuliers</h3><p>précis → précisément<br>profond → profondément<br>gentil → gentiment<br>énorme → énormément</p>
<br>
<br>

<h2 id="Le-passif"><a href="#Le-passif" class="headerlink" title="Le passif"></a>Le passif</h2><p>Aka被动态.<br>Auxiliary être + participe passé.</p>
<p>La voiture renverse un homme -&gt;    Un homme est renversé par une voiture.<br>Les passants appellent l’ambulance -&gt; L’ambulance est appelée par les passants.<br>La police recueille les témoignages -&gt; Les témoignages sont recueillis par la police.</p>
<p>The passive can be used in all tenses as well as in the subjunctive mood (le subjonctif).</p>
<p>Examples:<br>Imparfait – Un homme était renversé par une voiture.<br>Futur simple – Un homme sera renversé par une voiture.<br>Passé composé – Un homme a été renversé par une voiture.<br>Subjonctif – Il est terrible qu’un homme soit renversé par une voiture.</p>
<p>The agent of the sentence is usually introduced by <strong>par</strong>, similar to the English by.</p>
<p>Example:<br>Un homme a été renversé par une voiture.</p>
<br>
<br>

<h2 id="Passe-compose"><a href="#Passe-compose" class="headerlink" title="Passé composé"></a>Passé composé</h2><p>最基本的过去式.有两种动词,分别加avoir和être(present tense)再加动词的过去式.</p>
<table>
<thead>
<tr>
<th></th>
<th>+ er</th>
<th>+ir</th>
<th>+re</th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td>parler</td>
<td>finir</td>
<td>vendre</td>
</tr>
<tr>
<td></td>
<td>+ é</td>
<td>+ i</td>
<td>+ u</td>
</tr>
</tbody></table>
<p><strong>être的情况:需要agreement.</strong></p>
<blockquote>
<p>插播之作为auxiliary verbs使用être的情况:</p>
</blockquote>
<ul>
<li>DR MRS P. VANDERTRAMP</li>
<li>reflexive verbs: Je me suis trompé.(I was mistaken)</li>
<li>以下动词used without a direct object:<br>naître/mourir, aller/venir, monter/descendre, arriver/partir, entrer/sortir, apparaître, rester, retourner, tomber<br>注:这些动词可以跟avoir也可以跟être.<br>Il est monté(He went up),动作没有对象.<br>Il a monté le paquet(He brought the parcel up),动作有对象.</li>
</ul>
<h3 id="DR-MRS-P-VANDERTRAMP"><a href="#DR-MRS-P-VANDERTRAMP" class="headerlink" title="DR MRS P. VANDERTRAMP"></a>DR MRS P. VANDERTRAMP</h3><p>Devenir (to become) : devenu<br>Revenir (to come back) : revenu</p>
<p>Monter (to climb) : monté<br>Rester (to stay) : resté<br>Sortir (to leave) : sorti<br>Passer (to pass) : passé</p>
<p>Venir (to come) : venu<br>Aller (to go) : allé<br>Naître (to be born) : né<br>Descendre (to descend) : descendu<br>Entrer (to enter) : entré<br>Rentrer (to re-enter) : rentré<br>Tomber (to fall) : tombé<br>Retourner (to turn around) : retourné<br>Arriver (to arrive / to come) : arrivé<br>Mourir (to die) : mort<br>Partir (to leave) : parti</p>
<h3 id="Les-verbes-irreguliers-3"><a href="#Les-verbes-irreguliers-3" class="headerlink" title="Les verbes irréguliers:"></a>Les verbes irréguliers:</h3><table>
<thead>
<tr>
<th>Verb</th>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>avoir</td>
<td>have</td>
<td>eu</td>
</tr>
<tr>
<td>être</td>
<td>be</td>
<td>été</td>
</tr>
<tr>
<td>faire</td>
<td>do</td>
<td>fait​</td>
</tr>
<tr>
<td>pouvoir</td>
<td>can</td>
<td>pu</td>
</tr>
<tr>
<td>recevoir</td>
<td>receive</td>
<td>reçu</td>
</tr>
<tr>
<td>savoir</td>
<td>know</td>
<td>su​</td>
</tr>
<tr>
<td>voir</td>
<td>see</td>
<td>vu​</td>
</tr>
<tr>
<td>vouloir</td>
<td>want</td>
<td>voulu​</td>
</tr>
<tr>
<td>devoir</td>
<td>must</td>
<td>dû</td>
</tr>
<tr>
<td>dire</td>
<td>say</td>
<td>dit</td>
</tr>
<tr>
<td>lire</td>
<td>read</td>
<td>lu</td>
</tr>
<tr>
<td>boire</td>
<td>drink</td>
<td>bu</td>
</tr>
<tr>
<td>rire</td>
<td>laugh</td>
<td>ri</td>
</tr>
<tr>
<td>écrire</td>
<td>write</td>
<td>écrit</td>
</tr>
<tr>
<td>prendre</td>
<td>take</td>
<td>pris</td>
</tr>
<tr>
<td>mettre</td>
<td>put</td>
<td>mis</td>
</tr>
<tr>
<td>vivre</td>
<td>live</td>
<td>live</td>
</tr>
<tr>
<td>connaître</td>
<td>know</td>
<td>connu</td>
</tr>
<tr>
<td>courir</td>
<td>run</td>
<td>couru</td>
</tr>
<tr>
<td>offrir</td>
<td>offer</td>
<td>offert</td>
</tr>
<tr>
<td>dormir</td>
<td>sleep</td>
<td>dormi</td>
</tr>
<tr>
<td>ouvrir</td>
<td>open</td>
<td>ouvert</td>
</tr>
<tr>
<td>croire</td>
<td>believe</td>
<td>cru</td>
</tr>
<tr>
<td>attendre</td>
<td>wait</td>
<td>attendu</td>
</tr>
<tr>
<td>falloir</td>
<td>need</td>
<td>fallu</td>
</tr>
<tr>
<td>pleuvoir</td>
<td>rain</td>
<td>plu</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>Verb</th>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>venir</td>
<td>come</td>
<td>venu</td>
</tr>
<tr>
<td>finir</td>
<td>finish</td>
<td>fini</td>
</tr>
<tr>
<td>partir</td>
<td>leave</td>
<td>partie</td>
</tr>
<tr>
<td>se souvenir</td>
<td>remind</td>
<td>souvenu</td>
</tr>
<tr>
<td>s’inscrire</td>
<td>sign up</td>
<td>inscrit</td>
</tr>
<tr>
<td>naître</td>
<td>be born</td>
<td>né</td>
</tr>
<tr>
<td>s’asseoir</td>
<td>sit</td>
<td>assis</td>
</tr>
<tr>
<td>s’apercevoir</td>
<td>realize</td>
<td>aperçu</td>
</tr>
</tbody></table>
<p>注:passer can go with both avoir and être, <strong>être passer</strong> means <strong>pass by</strong>, <strong>avoir passer</strong> means <strong>pass away(die)</strong>.<br>se passer(take place, happen, not a person) goes with être.(reflative never goes with avoir)</p>
<br>
<br>

<h2 id="Le-plus-que-parfait"><a href="#Le-plus-que-parfait" class="headerlink" title="Le plus-que-parfait"></a>Le plus-que-parfait</h2><p>比过去时更过去一点的时态.按照passé composé变动,avoir和être也要变动.</p>
<table>
<thead>
<tr>
<th>Subject</th>
<th>avoir</th>
<th>être</th>
</tr>
</thead>
<tbody><tr>
<td>Je</td>
<td>avais</td>
<td>étais</td>
</tr>
<tr>
<td>Tu</td>
<td>avais</td>
<td>étais</td>
</tr>
<tr>
<td>Il</td>
<td>avait​</td>
<td>était</td>
</tr>
<tr>
<td>Nous</td>
<td>avions​</td>
<td>étions</td>
</tr>
<tr>
<td>Vous</td>
<td>aviez</td>
<td>étiez</td>
</tr>
<tr>
<td>Ils</td>
<td>avaient​</td>
<td>étaient</td>
</tr>
</tbody></table>
<br>
<br>

<h2 id="Le-conditionnel-passe"><a href="#Le-conditionnel-passe" class="headerlink" title="Le conditionnel passé"></a>Le conditionnel passé</h2><p>用passé的格式,être和aller conjugate with conditionnel,再加passé.</p>
<table>
<thead>
<tr>
<th>Subject</th>
<th>avoir</th>
<th>être</th>
</tr>
</thead>
<tbody><tr>
<td>Je</td>
<td>aurais</td>
<td>serais</td>
</tr>
<tr>
<td>Tu</td>
<td>aurais</td>
<td>serais</td>
</tr>
<tr>
<td>Il</td>
<td>aurait</td>
<td>serait</td>
</tr>
<tr>
<td>Nous</td>
<td>aurions</td>
<td>serions</td>
</tr>
<tr>
<td>Vous</td>
<td>auriez</td>
<td>seriez</td>
</tr>
<tr>
<td>Ils</td>
<td>auraient</td>
<td>seraient</td>
</tr>
</tbody></table>
<p>例:<br>negative: J’aurai rigolé. → Je n’aurai pas rigolé.<br>se: Je ne me serai pas trompé dans mon calcul.</p>
<br>
<br>

<h2 id="Le-passe-recent"><a href="#Le-passe-recent" class="headerlink" title="Le passé récent"></a>Le passé récent</h2><p>Just + past participle,刚刚做过.<br><strong>Conjugated form of the verb venir + de + infinitive.</strong></p>
<p>If we refer to something that happened just before the present moment, venir is conjugated in the present (le présent).</p>
<table>
<thead>
<tr>
<th>Subject</th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>Je</td>
<td>viens</td>
</tr>
<tr>
<td>Tu</td>
<td>viens ​</td>
</tr>
<tr>
<td>Il</td>
<td>vient​</td>
</tr>
<tr>
<td>Nous</td>
<td>venons</td>
</tr>
<tr>
<td>Vous</td>
<td>venez</td>
</tr>
<tr>
<td>Ils</td>
<td>viennent</td>
</tr>
</tbody></table>
<p>If we refer to something that happened before a moment in the past, venir is conjugated in the imperfect tense (l’imparfait). This can be compared with the English structure had just + past participle.</p>
<table>
<thead>
<tr>
<th>Subject</th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>Je</td>
<td>venais</td>
</tr>
<tr>
<td>Tu</td>
<td>venais ​</td>
</tr>
<tr>
<td>Il</td>
<td>venait​</td>
</tr>
<tr>
<td>Nous</td>
<td>venions</td>
</tr>
<tr>
<td>Vous</td>
<td>veniez</td>
</tr>
<tr>
<td>Ils</td>
<td>venaient</td>
</tr>
</tbody></table>
<br>
<br>

<h2 id="Le-passe-simple"><a href="#Le-passe-simple" class="headerlink" title="Le passé simple"></a>Le passé simple</h2><p>只出现在书籍中的一种老语法.</p>
<table>
<thead>
<tr>
<th>Subject</th>
<th>+ er</th>
<th>+ir</th>
<th>+re</th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td>parler</td>
<td>finir</td>
<td>vendre</td>
</tr>
<tr>
<td>Je</td>
<td>+ ai</td>
<td>+ is</td>
<td>+ is</td>
</tr>
<tr>
<td>Tu</td>
<td>+ as</td>
<td>+ is</td>
<td>+ is</td>
</tr>
<tr>
<td>Il</td>
<td>+ a</td>
<td>+ it</td>
<td>+ it</td>
</tr>
<tr>
<td>Nous</td>
<td>+ âmes</td>
<td>+ îmes</td>
<td>+ îmes</td>
</tr>
<tr>
<td>Vous</td>
<td>+ âtes</td>
<td>+ îtes</td>
<td>+ îtes</td>
</tr>
<tr>
<td>Ils</td>
<td>+ èrent</td>
<td>+ irent</td>
<td>+ irent</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>Subject</th>
<th>avoir</th>
<th>être</th>
<th>venir</th>
<th>tenir</th>
</tr>
</thead>
<tbody><tr>
<td>Je</td>
<td>eus</td>
<td>fus</td>
<td>vins</td>
<td>tins</td>
</tr>
<tr>
<td>Tu</td>
<td>eus</td>
<td>fus</td>
<td>vins</td>
<td>tins</td>
</tr>
<tr>
<td>Il</td>
<td>eut</td>
<td>fut</td>
<td>vint</td>
<td>tint</td>
</tr>
<tr>
<td>Nous</td>
<td>eûmes</td>
<td>fûmes</td>
<td>vînmes</td>
<td>tînmes</td>
</tr>
<tr>
<td>Vous</td>
<td>eûtes</td>
<td>fûtes</td>
<td>vîntes</td>
<td>tîntes</td>
</tr>
<tr>
<td>Ils</td>
<td>eurent</td>
<td>furent</td>
<td>vinrent</td>
<td>tinrent</td>
</tr>
</tbody></table>
<br>
<br>

<h2 id="L’imparfait"><a href="#L’imparfait" class="headerlink" title="L’imparfait"></a>L’imparfait</h2><p>另一种过去式,可以类比与“我曾有过”.<br>使用情况:1.habit/daily routine, 2.作为背景一直在进行(imparfait),被突然打断(Passé composé) , 3.另一种礼貌/假设的用法.<br>(可以当作<strong>过去进行时</strong>用)</p>
<p><strong>Take the verb in present(with nous conjugation)</strong>, take off ons then add the following ending.</p>
<table>
<thead>
<tr>
<th>Subject</th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>Je</td>
<td>+ ais</td>
</tr>
<tr>
<td>Tu</td>
<td>+ ais​</td>
</tr>
<tr>
<td>Il</td>
<td>+ ait​</td>
</tr>
<tr>
<td>Nous</td>
<td>+ ions​</td>
</tr>
<tr>
<td>Vous</td>
<td>+ iez​</td>
</tr>
<tr>
<td>Ils</td>
<td>+ aient​</td>
</tr>
</tbody></table>
<h3 id="One-exception"><a href="#One-exception" class="headerlink" title="One exception:"></a>One exception:</h3><table>
<thead>
<tr>
<th></th>
<th>Être</th>
</tr>
</thead>
<tbody><tr>
<td>Je</td>
<td>étais</td>
</tr>
<tr>
<td>Tu</td>
<td>étais​</td>
</tr>
<tr>
<td>Il</td>
<td>était​</td>
</tr>
<tr>
<td>Nous</td>
<td>étions</td>
</tr>
<tr>
<td>Vous</td>
<td>étiez</td>
</tr>
<tr>
<td>Ils</td>
<td>étaient​</td>
</tr>
</tbody></table>
<h3 id="ir结尾的动词有些要加入ss再加-ais"><a href="#ir结尾的动词有些要加入ss再加-ais" class="headerlink" title="ir结尾的动词有些要加入ss再加+ais."></a>ir结尾的动词有些要加入ss再加+ais.</h3><table>
<thead>
<tr>
<th>Subject</th>
<th>Réussir</th>
<th>Finir</th>
<th>Choisir</th>
<th>Réfléchir</th>
<th>Remplir</th>
</tr>
</thead>
<tbody><tr>
<td>Je</td>
<td>réussissais</td>
<td>finissais</td>
<td>choisissais</td>
<td>réfléchissais</td>
<td>remplissais</td>
</tr>
<tr>
<td>Tu</td>
<td>réussissais ​</td>
<td>finissais</td>
<td>choisissais</td>
<td>réfléchissais</td>
<td>remplissais</td>
</tr>
<tr>
<td>Il</td>
<td>réussissait</td>
<td>finissait</td>
<td>choisissait</td>
<td>réfléchissait</td>
<td>remplissait</td>
</tr>
<tr>
<td>Nous</td>
<td>réussissions​</td>
<td>finissions</td>
<td>choisissions</td>
<td>réfléchissions</td>
<td>remplissions</td>
</tr>
<tr>
<td>Vous</td>
<td>réussissiez</td>
<td>finissiez</td>
<td>choisissiez</td>
<td>réfléchissiez</td>
<td>remplissiez</td>
</tr>
<tr>
<td>Ils</td>
<td>réussissaient</td>
<td>finissaient</td>
<td>choisissaient</td>
<td>réfléchissaient</td>
<td>remplissaient</td>
</tr>
</tbody></table>
<h3 id="oir需要把o也去掉"><a href="#oir需要把o也去掉" class="headerlink" title="-oir需要把o也去掉."></a>-oir需要把o也去掉.</h3><p>-oire需要更改i.</p>
<table>
<thead>
<tr>
<th>Subject</th>
<th>Pouvoir</th>
<th>Croire(believe)</th>
<th>S’asseoir(sit)</th>
</tr>
</thead>
<tbody><tr>
<td>Je</td>
<td>pouvais</td>
<td>croyais</td>
<td>m’assoyais / m’asseyais</td>
</tr>
<tr>
<td>Tu</td>
<td>pouvais ​</td>
<td>croyais</td>
<td>t’assoyais / t’asseyais</td>
</tr>
<tr>
<td>Il</td>
<td>pouvait</td>
<td>croyait</td>
<td>s’assoyait / s’asseyait</td>
</tr>
<tr>
<td>Nous</td>
<td>pouvions</td>
<td>croyions</td>
<td>nous assoyions / asseyions</td>
</tr>
<tr>
<td>Vous</td>
<td>pouviez</td>
<td>croyiez</td>
<td>vous assoyiez / asseyiez</td>
</tr>
<tr>
<td>Ils</td>
<td>pouvaient</td>
<td>croyaient</td>
<td>s’assoyaient / s’asseyaient</td>
</tr>
</tbody></table>
<h3 id="在nous和vous的情况下如果"><a href="#在nous和vous的情况下如果" class="headerlink" title="在nous和vous的情况下如果:"></a>在nous和vous的情况下如果:</h3><table>
<thead>
<tr>
<th>–ger, Manger</th>
<th>Nous mang <strong>e</strong> ons</th>
<th>Nous mang <strong>ions</strong></th>
<th>Vous mang <strong>iez</strong></th>
</tr>
</thead>
<tbody><tr>
<td>-cer, Placer</td>
<td>Nous pla <strong>ç</strong> ons</td>
<td>Nous plac <strong>ions</strong></td>
<td>Vous plac <strong>iez</strong></td>
</tr>
<tr>
<td>–yer, Payer</td>
<td>Nous pa <strong>y</strong> ons</td>
<td>Nous pay <strong>ions</strong></td>
<td>Vous pay <strong>iez</strong></td>
</tr>
<tr>
<td>–ier, Étudier</td>
<td>Nous étud <strong>i</strong> ons</td>
<td>Nous étud <strong>iions</strong></td>
<td>Vous étud <strong>iiez</strong></td>
</tr>
</tbody></table>
<h3 id="dre中有些d会被去掉"><a href="#dre中有些d会被去掉" class="headerlink" title="-dre中有些d会被去掉."></a>-dre中有些d会被去掉.</h3><table>
<thead>
<tr>
<th>Subject</th>
<th>Manger</th>
<th>Attendre(wait)</th>
<th>Prendre(take)/Apprendre(learn)/Comprendre(understand)</th>
</tr>
</thead>
<tbody><tr>
<td>Je</td>
<td>mangeais</td>
<td>apprenais</td>
<td>prenais</td>
</tr>
<tr>
<td>Tu</td>
<td>mangeais ​</td>
<td>apprenais</td>
<td>prenais</td>
</tr>
<tr>
<td>Il</td>
<td>mangeait</td>
<td>apprenait</td>
<td>prenait</td>
</tr>
<tr>
<td>Nous</td>
<td>mangions</td>
<td>apprenions</td>
<td>prenions</td>
</tr>
<tr>
<td>Vous</td>
<td>mangiez</td>
<td>appreniez</td>
<td>preniez</td>
</tr>
<tr>
<td>Ils</td>
<td>mangeaient</td>
<td>apprenaient</td>
<td>prenaient</td>
</tr>
</tbody></table>
<h3 id="ire的特殊情况"><a href="#ire的特殊情况" class="headerlink" title="-ire的特殊情况."></a>-ire的特殊情况.</h3><table>
<thead>
<tr>
<th>Subject</th>
<th>Faire</th>
<th>Plaire(please, appeal to)</th>
<th>Conduire(drive)</th>
<th>Dire(say)/Lire</th>
<th>Écrire(write)/Décrire(describe)</th>
</tr>
</thead>
<tbody><tr>
<td>Je</td>
<td>fai <strong>s</strong> ais</td>
<td>plai <strong>s</strong> ais</td>
<td>condui <strong>s</strong> ais</td>
<td>di <strong>s</strong> ais</td>
<td>écrivais</td>
</tr>
<tr>
<td>Tu</td>
<td>faisais ​</td>
<td>plaisais</td>
<td>conduisais</td>
<td>disais</td>
<td>écrivais</td>
</tr>
<tr>
<td>Il</td>
<td>faisait</td>
<td>plaisait</td>
<td>conduisait</td>
<td>disait</td>
<td>écrivait</td>
</tr>
<tr>
<td>Nous</td>
<td>faisions</td>
<td>plaisions</td>
<td>conduisions</td>
<td>disions</td>
<td>écrivions</td>
</tr>
<tr>
<td>Vous</td>
<td>faisiez</td>
<td>plaisiez</td>
<td>conduisiez</td>
<td>disiez</td>
<td>écriviez</td>
</tr>
<tr>
<td>Ils</td>
<td>faisaient</td>
<td>plaisaient</td>
<td>conduisaient</td>
<td>disaient</td>
<td>écrivaient</td>
</tr>
</tbody></table>
<br>

<table>
<thead>
<tr>
<th>Subject</th>
<th>Connaître(know)</th>
<th>Boire(drink)</th>
</tr>
</thead>
<tbody><tr>
<td>Je</td>
<td>connaissais</td>
<td>buvais</td>
</tr>
<tr>
<td>Tu</td>
<td>connaissais ​</td>
<td>buvais</td>
</tr>
<tr>
<td>Il</td>
<td>connaissait</td>
<td>buvait</td>
</tr>
<tr>
<td>Nous</td>
<td>connaissions</td>
<td>buvions</td>
</tr>
<tr>
<td>Vous</td>
<td>connaissiez</td>
<td>buviez</td>
</tr>
<tr>
<td>Ils</td>
<td>connaissaient</td>
<td>buvaient</td>
</tr>
</tbody></table>
<p><strong>注:L’imparfait跟conditional的后缀一样,但词的前缀是不一样,imparfait肯定会有r的发音.</strong></p>
<br>
<br>

<h2 id="L’imperatif"><a href="#L’imperatif" class="headerlink" title="L’impératif"></a>L’impératif</h2><p>可以理解为使动句.用于order,advice,prayer,recommendation和ban.<br>There are only 3 personnes Tu, Nous, Vous.</p>
<table>
<thead>
<tr>
<th></th>
<th>+ er</th>
<th></th>
<th>+ir</th>
</tr>
</thead>
<tbody><tr>
<td>Tu marches</td>
<td><strong>Marche!</strong></td>
<td>Tu finis</td>
<td>Finis!</td>
</tr>
<tr>
<td>Nous marchons</td>
<td>Marchons!</td>
<td>Nous finissons</td>
<td>Finissons!</td>
</tr>
<tr>
<td>Vous marchez</td>
<td>Marchez!</td>
<td>Vous finissez</td>
<td>Finissez!</td>
</tr>
</tbody></table>
<p>除了粗体字的情况下,其他跟普通的conjugation一样.</p>
<h3 id="Les-verbes-irreguliers-4"><a href="#Les-verbes-irreguliers-4" class="headerlink" title="Les verbes irréguliers:"></a>Les verbes irréguliers:</h3><p>They based on subjonctif, instead of indicatif.</p>
<table>
<thead>
<tr>
<th>subjonctif</th>
<th>Savoir</th>
<th></th>
<th>Vouloir</th>
</tr>
</thead>
<tbody><tr>
<td>Tu sache</td>
<td>Sache!</td>
<td>Tu veuilles</td>
<td>Veuille, veux!</td>
</tr>
<tr>
<td>Nous     sachions</td>
<td>Sachons!</td>
<td>Nous voulions</td>
<td>Veuillons, voulons!</td>
</tr>
<tr>
<td>Vous sachiez</td>
<td>Sachez!</td>
<td>Vous vouliez</td>
<td>Veuillez, voulez!</td>
</tr>
</tbody></table>
<br>

<table>
<thead>
<tr>
<th>subjonctif</th>
<th>Être</th>
<th></th>
<th>Avoir</th>
</tr>
</thead>
<tbody><tr>
<td>Tu sois</td>
<td>Sois!</td>
<td>Tu aies</td>
<td>Aie!</td>
</tr>
<tr>
<td>Nous soyons</td>
<td>Soyons!</td>
<td>Nous ayons</td>
<td>Ayons!</td>
</tr>
<tr>
<td>Vous soyez</td>
<td>Soyez!</td>
<td>Vous ayez</td>
<td>Ayez!</td>
</tr>
</tbody></table>
<h3 id="verbe-pronominal"><a href="#verbe-pronominal" class="headerlink" title="verbe pronominal:"></a>verbe pronominal:</h3><p>Tu te lèves -&gt; Lève-toi</p>
<br>
<br>

<h2 id="Subjonctif-Present"><a href="#Subjonctif-Present" class="headerlink" title="Subjonctif Présent"></a>Subjonctif Présent</h2><p>Verb conjugate with ils 然后再加后缀.<br>subjonctif 的句子中必须有<strong>que</strong>(或者qui),属于附属句子部分.<br>用于表示一种mood, WEIROD, wishing, wanting/ emotion / impersonal expression/ request, require, recommend/ doubt, demand, deny /opinions.</p>
<p>例:<br>C’est formidable de voir de la solidarité.(<strong>de + infinitif</strong>) = C’est formidable que tu viennes demain.(que + subjonctif)</p>
<ul>
<li>il faut que / il est nécessaire que/ it is necessary that</li>
<li>bien que / although</li>
<li>avant que / before that</li>
<li>afin que / in order that</li>
<li>à moins que / unless</li>
<li>jusqu’a ce que / until</li>
<li>pour que / so that</li>
<li>quoique / although</li>
<li>sans que / without</li>
<li>vouloir que / want that</li>
</ul>
<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>Je</td>
<td>+ e</td>
</tr>
<tr>
<td>Tu</td>
<td>+ es</td>
</tr>
<tr>
<td>Il</td>
<td>+ e</td>
</tr>
<tr>
<td>Nous</td>
<td>+ ions</td>
</tr>
<tr>
<td>Vous</td>
<td>+ iez</td>
</tr>
<tr>
<td>Ils</td>
<td>+ ent​</td>
</tr>
</tbody></table>
<h3 id="Les-verbes-irreguliers-5"><a href="#Les-verbes-irreguliers-5" class="headerlink" title="Les verbes irréguliers:"></a>Les verbes irréguliers:</h3><table>
<thead>
<tr>
<th></th>
<th>être</th>
<th>avoir</th>
<th>faire</th>
<th>pouvoir</th>
</tr>
</thead>
<tbody><tr>
<td>Je</td>
<td>sois</td>
<td>aie</td>
<td>fasse</td>
<td>puisse</td>
</tr>
<tr>
<td>Tu</td>
<td>sois</td>
<td>aies</td>
<td>fasses</td>
<td>puisses</td>
</tr>
<tr>
<td>Il</td>
<td><strong>soit</strong></td>
<td><strong>ait</strong></td>
<td>fasse</td>
<td>puisse</td>
</tr>
<tr>
<td>Nous</td>
<td>soyons</td>
<td>ayons</td>
<td>fassions</td>
<td>puissions</td>
</tr>
<tr>
<td>Vous</td>
<td>soyez</td>
<td>ayez</td>
<td>fassiez</td>
<td>puissiez</td>
</tr>
<tr>
<td>Ils</td>
<td>soient​</td>
<td>aient</td>
<td>fassent</td>
<td>puissent</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th></th>
<th>vouloir</th>
<th>savoir</th>
<th>aller</th>
</tr>
</thead>
<tbody><tr>
<td>Je</td>
<td>veuille</td>
<td>sache</td>
<td><strong>aille</strong></td>
</tr>
<tr>
<td>Tu</td>
<td>veuilles</td>
<td>saches</td>
<td><strong>ailles</strong></td>
</tr>
<tr>
<td>Il</td>
<td>veuille</td>
<td>sache</td>
<td><strong>aille</strong></td>
</tr>
<tr>
<td>Nous</td>
<td>voulions</td>
<td>sachions</td>
<td>allions</td>
</tr>
<tr>
<td>Vous</td>
<td>vouliez</td>
<td>sachiez</td>
<td>alliez</td>
</tr>
<tr>
<td>Ils</td>
<td>veuillent​</td>
<td>sachent</td>
<td><strong>aillent</strong></td>
</tr>
</tbody></table>
<br>
<br>

<h2 id="Le-gerondif"><a href="#Le-gerondif" class="headerlink" title="Le gérondif"></a>Le gérondif</h2><p>Like the “-ing” from of the verb.<br>Need past participle nous stem, then adding 后缀”-ant”.前面要加en.必须是同个subject.</p>
<p>例: Il se détend <strong>en</strong> faisant du sport. He relaxes by doing sports.<br>J’ai dîné <strong>en</strong>(simultaneous) lisant un roman. I ate dinner <strong>while</strong> reading a novel.</p>
<h3 id="Les-verbes-irreguliers-6"><a href="#Les-verbes-irreguliers-6" class="headerlink" title="Les verbes irréguliers:"></a>Les verbes irréguliers:</h3><p>|  | être | savoir | avoir |<br>|—|—|—|—|—|<br>|  | étant | sachant | ayant |</p>
<ul>
<li>LA CAUSE<br>Elle a perdu tout ton argent en jouant au loto. (parce qu’elle a joué…)</li>
<li>LA MANIÈRE(方式)<br>Ma soeur est tombée en sortant de la piscine.</li>
<li>LA CONDITION<br>En regardant des films en VO, on peut apprendre le français. (Si on regarde…)</li>
<li>L’OPPOSITION(反对)<br>Tout en étudiant beaucoup, il ne réussit aucun examen.</li>
</ul>
<br>
<br>

<h2 id="代词"><a href="#代词" class="headerlink" title="代词"></a>代词</h2><p>要放在动词的前面.</p>
<p>Order:</p>
<table>
<thead>
<tr>
<th>me</th>
<th></th>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>te</td>
<td>le</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>se</td>
<td>la</td>
<td>lui</td>
<td>y</td>
<td>en</td>
</tr>
<tr>
<td>nous</td>
<td>les</td>
<td>leur</td>
<td></td>
<td></td>
</tr>
<tr>
<td>vous</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h3 id="person"><a href="#person" class="headerlink" title="person"></a>person</h3><p>à(prop) + one person -&gt; <strong>lui</strong> (to him/ to her)<br>à + more than one person -&gt; <strong>leur</strong> (to them)</p>
<h3 id="place"><a href="#place" class="headerlink" title="place"></a>place</h3><p>à(prop) + place -&gt; <strong>y</strong></p>
<h3 id="noun"><a href="#noun" class="headerlink" title="noun"></a>noun</h3><p>noun -&gt; <strong>en</strong><br>如果有le,la,les,将le,la,les提前.<br>注: le,la,les被称为direct. direct词组在做代词时动词需要进行<strong>agreement</strong>.</p>
<h3 id="se"><a href="#se" class="headerlink" title="se"></a>se</h3><p>同时包括se的direct东西(不加preposition的动词)也需要<strong>agreement</strong>.</p>
<h3 id="numbers"><a href="#numbers" class="headerlink" title="numbers"></a>numbers</h3><p>带数量的物体,将名词替换成en后,数量留下来.</p>
<div class="note ">
            <p>Le professeur fait passer <strong>un</strong> test à ses élèves(students). -&gt;<br>Il fait leur en passer <strong>un</strong>.</p>
          </div>

<br>
<br>

<h2 id="Prepositions"><a href="#Prepositions" class="headerlink" title="Prépositions"></a>Prépositions</h2><h3 id="Les-marqueurs-temporels"><a href="#Les-marqueurs-temporels" class="headerlink" title="Les marqueurs temporels"></a>Les marqueurs temporels</h3><h4 id="en"><a href="#en" class="headerlink" title="en"></a>en</h4><p>Means “in”. Use for anything with time(specific time, no vague).</p>
<ul>
<li>durée pour accomplir</li>
<li>on parle du temps qu’il faut pour accomplir l’action - verbe au passé, futur ou présent<br>C’était en juin, en 1992.<br>Phileas Fogg a fait le tour du monde en 79 jours.</li>
</ul>
<h4 id="depuis"><a href="#depuis" class="headerlink" title="depuis"></a>depuis</h4><p>Means “since, for, ago”.</p>
<ul>
<li>continuité</li>
<li>au moment où on parle, action continue - verbe au présent ou passé<br>Elle est rentrée depuis 3 mois.<br>Elle nous attend depuis une heure.</li>
</ul>
<h4 id="pendant"><a href="#pendant" class="headerlink" title="pendant"></a>pendant</h4><p>Means “during, for”, for an action not finished.</p>
<ul>
<li>durée limitée</li>
<li>au moment où on parle, l’action achevée - verbe au passé, futur ou présent<br>Il a travaillé pendant 24 heures à l’hôpital.<br>L’école sera fermée pendant les vacances scolaires.</li>
</ul>
<h4 id="de…a…"><a href="#de…a…" class="headerlink" title="de…à…"></a>de…à…</h4><p>Means “from…to..”.</p>
<ul>
<li>pour limiter une période (début-fin)<br>Les magasins sont ouverts de 9 h à 17 h.<br>Le service clientèle sera à votre disposition de 8 heures à 24 heures.</li>
</ul>
<h4 id="il-y-a"><a href="#il-y-a" class="headerlink" title="il y a"></a>il y a</h4><p>Means “it has been”, a <strong>certain time</strong> that has past.</p>
<ul>
<li>moment dans le passé</li>
<li>on parle de quelque chose qui a eu lieu. - verbe au passé<br>Julie est partie il y a une heure.<br>Nous nous sommes mariés il y a 20 ans.</li>
</ul>
<h4 id="dans"><a href="#dans" class="headerlink" title="dans"></a>dans</h4><p>Means “in”, and will happen in future.(can be vague)</p>
<ul>
<li>moment dans le futur</li>
<li>on parle de quelque chose qui va avoir lieu - verbe au présent ou futur<br>Je vais à Berlin. Je reviens dans une semaine.<br>Dans quelques jours vous recevrez le colis chez vous.</li>
</ul>
<h4 id="jusqu’a"><a href="#jusqu’a" class="headerlink" title="jusqu’à"></a>jusqu’à</h4><p>Means “until”.</p>
<ul>
<li>pour indiquer la fin<br>Je serai au bureau jusqu’à 18h30.<br>Mon stage dure jusqu’aux vacances de Noël. / jusqu’à Noël.</li>
</ul>
<br>

<h3 id="Prepositions-avec-les-noms-geographiques"><a href="#Prepositions-avec-les-noms-geographiques" class="headerlink" title="Prépositions avec les noms géographiques"></a>Prépositions avec les noms géographiques</h3><p>Use <strong>en (in, to) and de/d’ (from)</strong> before all singular feminine <strong>countries/provinces</strong>,<br>and before all singular masculine countries/provinces that <strong>begin with a vowel</strong>:</p>
<table>
<thead>
<tr>
<th>PAYS/PROVINCE (F.)</th>
<th>EMPLOI DE L’ARTICLE DÉFINI</th>
<th>EMPLOI DE PRÉPOSITIONS</th>
</tr>
</thead>
<tbody><tr>
<td>l’Alsace (f.)</td>
<td>On visite l’Alsace.</td>
<td>On va en Alsace. On revient d’Alsace.</td>
</tr>
<tr>
<td>l’Égypte (f.)</td>
<td>On visite l’Égypte. ​</td>
<td>On va en Égypte. On revient d’Égypte.</td>
</tr>
<tr>
<td>la Roumanie</td>
<td>On visite la Roumanie.</td>
<td>On va en Roumanie. On revient de Roumanie.</td>
</tr>
<tr>
<td>l’Alberta (m.)</td>
<td>On visite l’Alberta.</td>
<td>On va en Alberta. On revient d’Alberta.</td>
</tr>
<tr>
<td>l’Iran (m.)</td>
<td>On visite l’Iran. ​</td>
<td>On va en Iran. On revient d’Iran.</td>
</tr>
</tbody></table>
<p>Use <strong>en and de</strong> before all <strong>continents</strong> (they are all feminine expect <strong>Antarctique</strong>):</p>
<table>
<thead>
<tr>
<th>CONTINENT</th>
<th>EMPLOI DE L’ARTICLE DÉFINI</th>
<th>EMPLOI DE PRÉPOSITIONS</th>
</tr>
</thead>
<tbody><tr>
<td>l’Afrique (f.)</td>
<td>On visite l’Afrique.</td>
<td>On va en Afrique. On revient d’Afrique.</td>
</tr>
<tr>
<td>l’Asie (f.)</td>
<td>On visite l’Asie. ​</td>
<td>On va en Asie. On revient d’Asie.</td>
</tr>
</tbody></table>
<p>Use <strong>au (in, to)</strong> and <strong>du (from)</strong> before all singular masculine <strong>countries/provinces</strong>:</p>
<table>
<thead>
<tr>
<th>PAYS/PROVINCE (M.)</th>
<th>EMPLOI DE L’ARTICLE DÉFINI</th>
<th>EMPLOI DE PRÉPOSITIONS</th>
</tr>
</thead>
<tbody><tr>
<td>le Québec</td>
<td>On visite le Québec.</td>
<td>On va au Québec. On revient du Québec.</td>
</tr>
<tr>
<td>le Sénégal</td>
<td>On visite le Sénégal. ​</td>
<td>On va au Sénégal. On revient du Sénégal.</td>
</tr>
<tr>
<td>*Le Québec refers to the province; Québec (without the definite article) refers to the city.</td>
<td></td>
<td></td>
</tr>
</tbody></table>
<p>Use <strong>aux (in, to) and des (from)</strong> before all places names that are <strong>plural</strong>, including islands:</p>
<table>
<thead>
<tr>
<th>PAYS/I^LES (PL.)</th>
<th>EMPLOI DE L’ARTICLE DÉFINI</th>
<th>EMPLOI DE PRÉPOSITIONS</th>
</tr>
</thead>
<tbody><tr>
<td>les Antilles (f.)</td>
<td>On visite les Antilles.</td>
<td>On va aux Antilles. On revient des Antilles.</td>
</tr>
<tr>
<td>les États- Unis (m.)</td>
<td>On visite les États-Unis. ​</td>
<td>On va aux États-Unis. On revient des États-Unis.</td>
</tr>
</tbody></table>
<p>Use <strong>à (in, to)</strong> and <strong>de/d’ (from)</strong> before islands that are <strong>not plural</strong> nouns, <strong>and cities</strong>:</p>
<table>
<thead>
<tr>
<th></th>
<th>EMPLOI DE L’ARTICLE DÉFINI</th>
<th>EMPLOI DE PRÉPOSITIONS</th>
</tr>
</thead>
<tbody><tr>
<td>Cuba</td>
<td>On visite Cuba.</td>
<td>On va à Cuba. On revient de Cuba.</td>
</tr>
<tr>
<td>Hawaï</td>
<td>On visite Hawaï. ​</td>
<td>On va à Hawaï. On revient d’Hawaï.</td>
</tr>
<tr>
<td>Athènes</td>
<td>On visite Athènes. ​</td>
<td>On va à Athènes. On revient d’Athènes.</td>
</tr>
<tr>
<td>Québec (the city)</td>
<td>On visite Québec. ​</td>
<td>On va à Québec. On revient de Québec.</td>
</tr>
</tbody></table>
<p>For cities (very few in number) that have a definite <strong>article</strong>, à and de contract<br>with the article in the usual way:</p>
<table>
<thead>
<tr>
<th>VILLE</th>
<th>EMPLOI DE L’ARTICLE DÉFINI</th>
<th>EMPLOI DE PRÉPOSITIONS</th>
</tr>
</thead>
<tbody><tr>
<td>Le Caire</td>
<td>On visite Le Caire.</td>
<td>On va au Caire. On revient du Caire.</td>
</tr>
<tr>
<td>La Nouvelle-Orléans</td>
<td>On visite La Nouvelle- Orléans ​</td>
<td>On va à La Nouvelle- Orléans. On revient de La Nouvelle-Orléans.</td>
</tr>
<tr>
<td>*Cities with a definite article: Le Caire, La Havane, Le Havre, Le Mans, La Nouvelle-Orléans, La Rochelle.</td>
<td></td>
<td></td>
</tr>
</tbody></table>
<br>
<br>

<h3 id="Le-verbe-et-ses-prepositions"><a href="#Le-verbe-et-ses-prepositions" class="headerlink" title="Le verbe et ses prépositions"></a>Le verbe et ses prépositions</h3><p>介词和动词的情况.</p>
<p>La phrase en français contient habituellement un ou deux compléments.<br>Par exemple, on dira :<br>Apprendre qqch : J’apprends le français.<br>Apprendre qqch à qqn : J’apprends le français aux étudiants.<br>Apprendre à qqn à faire qqch : J’apprends aux étudiants à parler français.<br>Apprendre de qqn à faire qqch : J’apprends du professeur à parler français.</p>
<p>Rappelez-vous que les prépositions à et de se contractent avec certains articles :</p>
<ul>
<li>à + le = au</li>
<li>de + le = du</li>
<li>à + les = aux</li>
<li>de + les = des</li>
</ul>
<img src="/blog/2021/07/16/P168/P168_1.png" class="">
<img src="/blog/2021/07/16/P168/P168_2.png" class="">
<img src="/blog/2021/07/16/P168/P168_3.png" class="">
<img src="/blog/2021/07/16/P168/P168_4.png" class="">
<img src="/blog/2021/07/16/P168/P168_5.png" class="">

<br>
<br>

<h1 id="Websites"><a href="#Websites" class="headerlink" title="Websites"></a>Websites</h1><h2 id="Tools"><a href="#Tools" class="headerlink" title="Tools"></a>Tools</h2><p>Text-to-Speech in French, <a href="naturalreaders.com">online reader.</a><br><a href="Wordreference.com">English-French online dictionary.</a><br><a href="https://leconjugueur.lefigaro.fr/">Verb Conjugator.</a></p>
<br>
<br>
<br>

<h2 id="General-Learning-Online-Resources"><a href="#General-Learning-Online-Resources" class="headerlink" title="General Learning Online Resources"></a>General Learning Online Resources</h2><ul>
<li><a href="https://www.1jour1actu.com/">1 jour 1 actu</a></li>
<li><a href="https://www.thefablecottage.com/">The fable cottage</a></li>
<li><a href="http://www.bbc.co.uk/languages/french/">BBC</a></li>
<li><a href="https://bonjourdefrance.co.uk/learn-french-online/grammar/choose-level">Bonjour de france</a></li>
<li><a href="https://www.lawlessfrench.com/learn-french/daily-practice-ideas/">Lawless french</a></li>
<li><a href="https://www.frenchtoday.com/blog/easy-french-practice/">French Stories</a></li>
</ul>
 <br>
 <br>
 <br>


<h2 id="Reading"><a href="#Reading" class="headerlink" title="Reading"></a>Reading</h2><ul>
<li><a href="https://stories.audible.com/discovery/enterprise-discovery-21122523011?ref=adbl_ent_anon_ds_ds_dccs_sbtp-0-8">Audible books</a></li>
<li><a href="https://lingua.com/french/reading/">French texts for beginners</a></li>
<li><a href="http://www.saberfrances.com.ar/reading/">Reading comprehension texts based on French culture</a></li>
</ul>
 <br>
 <br>
 <br>

<h2 id="Writing"><a href="#Writing" class="headerlink" title="Writing"></a>Writing</h2><ul>
<li><a href="https://www.scribens.fr/">Gramma correction</a></li>
<li><a href="https://bonpatron.com/en/">Another gramma correction</a></li>
</ul>
 <br>
 <br>

<h2 id="Speaking-amp-Listening"><a href="#Speaking-amp-Listening" class="headerlink" title="Speaking &amp; Listening"></a>Speaking &amp; Listening</h2><ul>
<li><a href="https://www.learning-french-online.org/podcasts">French Podcasts</a></li>
</ul>
<br>
<br>
<br>

<p>附录我写的贼乱的<a href="https://www.notion.so/a041281d3c6b469fa9e1def7fb997969?v=f5f42d7ed3ab40df8e21e116f4bdaeb7">notion词汇笔记</a>…</p>
]]></content>
      <categories>
        <category>语言笔记</category>
      </categories>
      <tags>
        <tag>以头抢地(诚)</tag>
      </tags>
  </entry>
  <entry>
    <title>以头抢地(本篇)</title>
    <url>/blog/2021/10/15/P162/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="2a18f2680b6dbbf24e42549ae313839cfb57250371b27ee73fbfebcca73577d4">6702ac8591e9b25480c46177f55a448903826d9157538be9fd6b804003d55985ac75660a6111ec0bd9e99dcaf12d5413e9e74ea898412a922b72e9dafa161b9dc6b09aec070a539b5ef003ac881b2f5f5cbd4869cf50827ea965eb733b16bc86ebdeb394e617846785bbb476420e6140bbd8bdc9252d1f9fe3c95881030d4e68ff35be76a98eed5c12eac1e1968f39c65774ca9702aea06aa58177016abf9970f55c905d87959cee2e2045d34a7033b641163940c99a8993fe39b395bd8ddf36c2390dc91bb66d6ed560c30b415f577e28559bc5847e515203f05a02689943e12bfbbd3a3499b1f619886be1a5d272253535e3da51bf9fe901f6b581266eabcbd46f0a449522e251bd8316739b3c98e989687a1afa54bef3787e1a2f2e77d1cf2d2b72f4e52ec328baa4092a1cc726e02cdb6893ddd62c5fc4faceabc1286fc67ae13f6f00e7c4cb48bd663725d3ba981ff4ceb10237f68d2b5ded5578cd35ed097eb9d92de493656cef5ad0546fbadae443071af3b263b4ab354d805979c800c83bd03e67189d234707064f332b0d529922905883bb1fd0cb30674bab7b5ac4c96591eba6d6dc59f4862908b83c0cbf8d23c639c125f3f6ec3cdc2bfe2120efa15664f7feb6a89c2a86f9dd28cc537b744fd8a816e05f767ebfc0466bb334655b428f4fa7031b47e024ec466cddb42056ca17f3817d23221f4d98894f7c0ac084afd33c9af931e67bf0807a017aaafaa5c17884b211087f613da8ff53e4e8d700ba9d4ef68b2f458fca06c8ddb43faba6df6aacd7efed20ef8d46cb34177349b5f3f6f421b8c9e4c7b267e29d1975ead7e138bee6bf8463f1fdc76c9b62e83745f97ad4ce3dbec590a632ca6b438c94e85078d6737735a6b2f3c2f31c64b95335e5ba51b62c88c63aabf03f77a7049e10eda60d475b8dc2c1971e5f39601a578c781bac4afb8f9bdd9974efae29cb476ade9d9573a23ba5e108ce2806f0f174ab80ee83207fed70da4b767057a3a7d356e0469fce8075261eaf6b521861631b56056fb7db1c0afcef169dc264cf1fdc0c699b01e9c8050465435be2f927462c48198b7bfd7b968229aecb5a3192fab26a424801e95658b86ba0a8d985f040570a7e9ce851edb3b4e30b0569f53a7b97114d55fb9aed6b2c634ba51cddeff1fe717ad8fcc908b3ed6fadcfeacff7254d05d198be863542d41c9c2193722a611734abd358a75995dc26dadcebec68f17720e9e8fa775bc70557b25bf005114ac8bd7270cd345d4e00e4e6e15c703a0841abe50f230ebbe419b22a289ba2333234f0e62b8c6aa2c6e0868120e7de914adc3e62dea2b4afc522b5ea6f50a8da9f042699d8d250ce8bfbb8e038673277a502f36a8d468954ed5134cc667669b01d7ae997dd141545fbdc0636ade8afa205279ac51f5fadd1be4f2c743c646311d5f7acdcc9c1d7edc77f47572f3dac9c3a6e40f43f7a1e8baf919345c87d4b46c8de91892d0e58581e9bf1d252b7e545ef0871f249d88e490850486f8d881da7cdab9e3eec596b491f331f952e5259f1322026e0905eeaf1d4d570287851cb57ee35d697d45ab3bf12825378fc16584146e5b0769faad4b5c905b3ca0bc3ebaf30a1c013659815a54b0ce54a215824795adc52b2d67e05aa8c3c976eeb01cac6f6e357054ffb53043fd791451ba16dac38a158c54a1f5bf06a8bd746a99c363787226d9c44dc3741630eed6435367df5ed7025873e7d2df5daa2b8c7dd0a6545293c971a7dc2523e6e7fda9a487884a7e13b63623c24ecbed2fc890c20dce66f5343475eaa6ae77761917e18fbd6d06dc750b5f0ba287cc3cf101a417601da42eecb8b6381aae432348d33c43e3b594a76f35062e8be14af27dd400ffe5e6c629121ecfd1d64cc77f924a46b338cdb4fa6df1509085137e8d6619443e08e4e4b1dbe46faac09599386ba02d96d5894b9312fba5e47c09f79293c354291099a61ce2a1f2f2ef26ce4459cde7b521fdad3a1162b6c752ee635a555b87bc0622c8fccbf2061b678a0ab63f35c280b621a0a2ffbabf660dab7956257ee5c0c027cf265dcd7482b8b59f8b695e8b1c102601b60f1e3d5249b579aba93a7831f52910ec67ad72a3fcb0c580d2fcef9dbd86fa49ca49ec8fc91181f9714c5a57a6d58730a5b4e83acf97eee63250aff6644f6716c77c13d89812753d2cd0bd084f971c40866ae641ec3899a17ca2ebd61cadff5f8b657b14315efeca5e67b4c5b0a1709f5519f1f363d21814b326e4f078c2c55149eb43a8e2d0f9f681b82e6662a0c6d004a0d021d5722851231c9d8f00279774122c01df8a5ce5e8474d6920a7acf35658e7309aa9c87157c996ffe1663e29fa1b068d1daec1ceff3b9c3a8d96bd82d411c91f44ca15c2284226445c29f3201e8fbb3cab4991dc7f18bdfa643d726a5d837d95693e5b81f3b9a44dbdf6b794ce167133ebccd1a5a3c8a8d230dff4a4426f63b241dbbf013fbaed140eb182629945681364c5a5b29431bf735a66fb99ed78605cff2d1dcf1f64e02238f8ba8ad513bebaef7da9dafeec970e8a0268b108c645b252fb19d028f08eb8aee6b17eb841f1e7a00591a2d1b219272aeca2074db578593c3bb71e5dd4550a231efe215722073fc484ca7ff5a97b34697ece7cc7e7252a6926231a8ac020910a0b802c69aa3fec73355df4c62cfae19c01a4e0d3673295bf2657edef5840be250b5045456e0f09b6fdd455ff7377eabc9225f83d9ad06ed7c30ea9f69a2b066dcae4b6eb3b4340e64770130b23a11309c0e5cfbf51d2658f9332316962f19c4defe0043c5eb9d6f9fe7c86cb2ce108d86f93e78f42d686ca77f8370f85f60c92838581f3f57c1174c755fe751fc410b425c32be7690a725fa564178f86ac192f83291db1b8de6be2fe02c1ad3651768eab371ddfbd0fd0da3025e98f3d1bebdb8f344469a289ed0fab67b015a809136c317a82c23cce4b03aeb7042162219349a9fed17f5874fa285176ffed1ae94e5a6e7e67cdbb400e4f46dbef396d4763ecf574e511b62edadb2b662467b7ff6d9f17960a145aed534e882d83fa26b7217e84947da598154ab393ef84bef34d527701923353e0a2c16a7e2864902ce0e4fd036bea5c24b1ae68b4fffa30fc1f8ed59e84c62b1450c9b882f979ef2d8c2c1bac003249040eb78966dee47fc47a44caf2fb6a825dfaa4fa479dab1fbd4f6adb593961131028291abe8d0128abe6bd3e11d949a5dcc38b43ae7413c34569e481256b0add8030d0914d9f9b143131a8b1bee596cd7c2c41852796ef89d36f283f107bc26fe4bd36075fa5a4c2beefa3352e4c197fe4d81dd7217b24c911572e9839a35fc768128e199f87b1fe01c2746868c5d814895c48847481f3b47962c57b5ae2bd90e728a8d1a0c17cd342c7d4af7453751b50ae4eec9caac5fb744e55db34f07dd3344ad01a0bbffccae5df6fbf549a32e6cdbe1d563150fe8acca4a79606e5e84862af51da92be935e11e3dde42c92c8594863dc87a232b5e69024c63ab938b61bb6761577500503753d6f98566cd41b1158054d88313e000ee12db19a423de819f729891b71e844aa5fd4e48914eb427f1602516108f33c974f78a9ed15b318c6ffe994e49fbb14f85befc66bb2ff38e2c19582096a507b326dbc9dc24322f553755f46d69715e45b8216092d604abba3fcd98f891a18ebba0ce9650469852e1b74a1207f621814d771606a0037e9a086a1aa46b061b5bb9a510ecd364263c959cc1e645eaefc597e1f38963c7da628817ead937250c2947f85ecb0a122ffce98026685e8f6e82e10536d6b7a68ab3f7ce89d86f8f80f7c13a641f167a6610ca3ac1d1d10df1daf93cc97650f6508d66b55f6db828cd61038bea1c4ebc44347db272a5b9fa1e1c1c352b8be2c5848f2650b187716958c87a579aead0a931d3225fcca50824ce52cc0a93e381549c60b850427d50d5c0eb8bb87507fa1577b4dd0ceefba0850d65943d07e8bb867da776abd34c4b0baa5c4180b8eabbbb3225cc5a86b03a0e04fbc2ccb8606f0287be00c5a83c98665361f420c578d479787376973b7c104be4034883dfc6e8c65b51f542343d960200c0a9e1cd14a2b93938cb862ed9daf4b44622cd163f95a387c061d6c7888d506121ec8c9e004075098668c716dcdb26844263f11966fab8e0d61787674d57f70554e564be61530a8c4bb960093fc1116c4eeae029e6e047a1ea9985deec5d6d00981ccc402dfd7066a53bbb22048450ae0217b7e1c6d453a2e79ccac16b85db185fadc95c261106a5a4fb9190355a149bdeef1cc2d584e06d4fadf410ee8961bd17b6a1ea826f58a9f0644da091fc976e60601cbad8b64fe37f9eab9ed75723bd1dce089fca20445312fadad28b20f1fba503701bcafe3c3d28256b819325479bc4efb16febe8c1afd7bd0a1ff2c6070a47d45e5e948930194d705f248e4db7ee32ff6c0553b2a4ae17a3ba68d028ae54cec6ebe266d1e16a304cecdc4189cba9c4d890700b7a24c23c629696cdff80d33e8985eeb0480540b9e67f2ab8d843c33b6ed2a56febdf8a90c98b0dd3f616b91b1d7e90d9296fd094756c0c9b1c2c059c92179ca06653d1b34c1539e7b9f2030b25af1a4cea998c5217a8eed2ec2c4258c9c1b0d9b3e59cb109a133ec87fd5f78301f72419901e9c651733350359503e0b0b3642a106f99a674fe6e97a35c3e524e4ea75ddd0522e7ac096066c2bdb778227684f9cd74f7ca1def2a94bf3d258c2703f5b298ee847a4d230dbc60b8bed9e4b7f68e9530dd02474ecfc4cc9110ab456513ede12140c5b7d6c36cd40f48013b7996fb67c0f57a840f042e2ddc8c6e44ec32f42d8a71aeb29ec72182733bcb42a6394774faa350343bd4875e1e9d171a41183ab500ff48f83462185a6dc5eef4b0f291b7297508d6baf15edf28ea61416ec8b0fdb898fd6bb1fcde162e246a5ad526c8cb4c76af3ae64dbd885e9754660687ab7dc29bd7c7544545a876df678b05b06702130587a5e6937a940e13c9535ab0197f9ff462429b647115e1338bda02b84eea84c1881bbb1e98aab7f609d2af84baf7bd4b73e249c2143b421773eca4ef2ed7485f7492532fa4c244a664b87db7fea78f1ce890ccbc6fac2381c774cc5df464a0419d156651523afb4e35c6e6eaa24881b54e7b7cc00839d928ebd505643c2fef77a9fde58d6c6f5f2bb9e0f039af9cdfc0fb3fdf9d54507889a451dbd8aa5903ff385873122f9efea1850f6ba59f3fbaaa6f77290b4f2b201c878f56c4d03c95638332995df4fb6eafef86e5cd2b13cddf0c1e1d62bd8fcb511f99d86be9783d5ca68ff11f4b196a9126d372fd758c695152f0e046c8f20c2f1f982705fc38f9b6800e1499bcc78a35203061556cd7b55a4ecddc8d9722f73a6a0bb6c7d9757e8f74295cef9727f38cf7e3303a0ac9d66b54559b32b76ef793b592661a01fb43fa96edfb3a24b7273f1392698a1cee7bab278246d7b374cda37592c17caa5ea9ebf58ecc6049c6dda11ef4cf38d30e5df27647ab4a9b698503c5a15c5ac850b60771e2d015babdb0661042e76e982e452b83eb715b624789152ebc33b7be6b9a6093d1ad3975a368ccef8af4f7e7e64904df598918d53896952ddd3542cdca779ae54105be71f5d61747ba42d5e5eb603f93d5a864f21a1a52da9bb9f0c240544191e08c4710b41cd7ccb6ba171deffa92de3fa6e858c63aa565f2d2f6b561d4571cbfaaf995d5285fb3cf0d0249d20d011f6f79a2185e3d3d4eb5f08b8bd751c78a3ec76f80933d165e169bbe9ee045cf22f1a2026e1aa9034a0269f6b51dd381e028d3a5ea870fbc156ebbe40f538550cfa1a84c690adacaf1a6edad3dbf0fd775ada42c9de6fef4a68b14177167860741a791a0049cf6441928d49a2fe8db85481bd358882a2648bcbe3861af92d2f6610423bf309366ec261b595fe40419dbcdeb5ba04fc8ee0327477c23921d3eee4fce171396f9f88342af469e10bfd21ced2a48109f334a6c3f2ffb3ed7ba9f2db7768f4aea17fbb965468648fd11d386dcb3eea8f2dd1cd205618961b8fe683b9901fdc3e20f0ced5fcb028cb71f0a0346ea5ccd372038519ab53c4143c6fcfd290d19f491a245d0c16e6769843014735afa815a3baf12d86cf33e0cdae566abc3af652cded060780b0eafcfcfb543076497561f491eeb0f8ab3aeb722d9fa7a125af4afd133336593681fc8a0ee84362901a83b941aa395afd1cac8cfb47b9a54988c418463b9f5f3ff2659e8101638c54d4137ecbfb4558f320d2b41c9dc1e4141762d4d5f6cafe3af321bc6a28365d7c2d300606b9892a371055301ae7ec46b4a6c20cc3e7c3bbbb3ef7b9a9b48ab7b2eb84a7f9479e02b3c1f89c45b0cfc1574fff24353e19d228ab687923972083728a72883b24d8d3cfe554238b13147daa92d17609eeae4dff10264e30ca0ff6add3e23badd34b937b46ea9b9f719d49ffa936341052bd21a232eeca59827b752bdd2e1dda11566d6b2e7b4677cc5f17762f4f14b6a125343df5a767e09a864598f87dfffd0fbb12793cf311adb2d4204f07e6ae0072d4e54af2d4d445dde5247f5cf011fe71913316cb6198dbfcd6fa81d305d429856884dadfef54376dd909d4f53651493c32baab630fb44abb4c901f1fb9d1315037b2913120e5db015673cdfb0b6f1082890a02faa17869b0113e3b44790089a6be0e34661378bc234e2f16cc683e5a98624293eb286df6917c5a162d0b04b6b43c37d5eed7fa207e78dcd3966d3bcd56648b042f0bbe38c2a90144d56889beb48b03e29b4299aa5278c7585e30d827a3b8714ce646c39468698cd93ce81753a05d260a0205c1c05c5b993d944111d6a57f8bbac740abb843e99d4ba27cdcfab2400c13ce01f4e41e2eeb59ac49d8cefb15608039393c4651412cecbcef9c0a13134fe2562885ce6ff305752f5bca3ce82198be996c04d80b031bbf52e43018c3faf5352df16da8260c9e3223610a8ea8229fe9f4f90ac860587fa5b7f852a0d8ea16784b8089f0b517bb5653fb71996b46805e0859ddd69400916196ea57e369ef8aa25f871830b3eed5a96bd34b35cc3310aa4ce65194ced9ac05923829500a6453c4cb5e2f3936e5631c997f2c96a4f90d7189aaf619f18513bb0af4329fede9ed634990acf6619a665e652807718cab57c863b42d74349de1fd0ad5ea427575f13a58a373b712412c37655407b7e80e4955bc579a1007e0b4a35354ac6f8104d37a8a541103890f1fcd565c8fad50238d3423b67272fb8dd6323771076901677ca402effab0c852c021768c283a4d54bac7b124196993beedd4527fb626a8d44066c85f210f7a0c4dc5679e7d74fe632933ef4b62e63b44968797f69810ff1efb6c6f53a8b40b04ebe84d7118417ef973ebca643acb3c1ba82e2ad31c164e1d26716065145455d5f3bb9735e6e98fb393621729a0afa47a5e056785f646af314fd9d484bb8810bd40e2adfefe843b3066d9f2c2b2c127ba89c5b82d56e61eb32cb8f985af4a48f282cb3bee12d5198c0881d36c58d0ff3f9850f9203f86591d090f992a9e9150f64c1677e8a2e131946e7d819a22e3e0d9a322191cf3403d17c30deae5a24edd072a733b5d5272e240c7e47e58b04db7fc9182ca4595cf54baa4946b1add7a68f4c8456987c82a4bfb196f6b05dff955a2de2a5a6076dddb422d401f3d0ccd1af80ea358abed7c6b964a75d7d3c0aa26c2130304dc35d929a7b11203e7e1fc0b12b8676d4e79faabfe2097db042dc84b2e4528f7d471f1d4f9048f82002d59ea7832eb12932f1c29bae101876eef4fea13f3546a9d8789d25e014faf8b332f7538a75a807a67a9280f8f851b5277e43d78288b96db5e331ac2aa093437830e2084c9f4ff6d2f05a5159ccc554b92e5445d063c1c69f1303d7d9eccb93b6b79a126c44f5770063e04d29d0f56c6ae561b8233a762e09d674f34491602e75a56766478b49da9cd85a6a38f0c718ab111b94f7cfb5108df4c2c3459e731511829ee4606fcfae8740b51f4c800f7286066ff9b24fcab6a2f6f6b31197ea93f668a09e16bf2b13d85126d48121d0894886eed06d116777edafe230fe6092995427f2fd22a302c61373df6c0f6771963b405e169570492234a5d9d88b5b7e0e8c5e9594c415a7b3ca10a18b851d2c48bd241bf031afc7ad3c4e2c026775a475b6788a4c44fb971617d7654ebade24f59e51e11fd768dd2cc0a5afb786f5b4d250192596b8ee029064cdb56cf908a73d1e0cd307c71f6608755e9e0c8c96a25b3e318965daaff0c0a48bc78dce34c6da34216240fec361d5e3ecd737fc88f580d36661da31f8cca8ee435276c0bbc76f6448cb80c3090433ea8ec8109e74d23561b8956b331e3d2fd853bdf6a4e91df4e4a0d13cf851a46f093687a4d9fe23c514f88193d990e017f6c420195be74fef5a42c0f364c514f90a0f823772610480d3d58245032a2466816826072cf6fe9c8fc1ce98a560358dc62f8fc5095f9cc4da28d959893429c2f173cef41688142cbb628d0d2bd99f73e51dd8e3712b706b9056f636c2cd5235592840880afeb42a523bf29af45ee1cb0ce80a8bff2b61f93438b9273c02f359ad8d40e343bc8dc99157c26d0f9cebcf48dfcc0087a051398acee4b56728eeae3bd701dc9f4958e0babe3e0ffa61c50b5c91ddd7ed3329cc609ed9f18c558ac695ec4cd4170a6c119aa1795d75c7189125e0697a580ebdc3f62f2c25a939e4683650507f4e5cfdec710733b3f74d61a831e6da690edf9effdf176ac8bee95ca813a21929499631fcf442ed14aa15609855946c2fb08529bb1b681ab3baa20fa3182537d0f147442078c2dfcfc1b991c24a18778cfb6af989fc17285d5ecbe458ab4f1c0ca8b9e9796c392ad03085ade0c3e66d4a264ebbe5007bf37f08920e0889a3eec1b4c2942c85914f07e251f89e7b964f576d04f76a5806dcca97d859f45f2e33d417db6e9321bae11c005f64c8df16b4eea98e29e60c8bb275d6fe91b5e0e344dcfd5b1e3e31c4e6794cf43c65400f7c5b14ac44843cef9044c90f5a31ab4fb0f5430df85bbe3a67fb3a28647c12107a01381772d4f0c98347cf3188f7d6efb417cd514a899cb0dd129b449037c999798dc242e10990587f07945d9fa86b6ae39b2cf148aeb89a29fe63bc352845b680f5b3cb35101a8c9c15842fe6d26ca79afdf3f593a270aa7c878901b2ec643d60b96ee48a42b430761762c14536351ade1916c6f0fb29e178b5ccd76b0ca8cfc9f8867b10e3dd444eb0f219133e08ef17412946b5bdbb1047e2f92f3f6adf0509d6e420518cb8b093dabd1416d9f774348fffb1f9ce4aed3f24a3a319e5d95ea609958b6ffc601e66298753642d6d27984609c86998923105f324d4f5abf6a29aeefa5af929db10a72c171d8fc49203076efcaafe1044ac4c561aea724cdff62cec256ea1baf72f6e0f4ee66c413ecbfbae32bd6de72f9b83ca64560a44f29ccff65f6fa9950cb73169744f9dc618a1a8e91f35643664d446be8fbb5bb8a8116c35880caee9a10817ce22b16a681945230cde5aef8d73905e92cdd6b5d57d2b3d419998aebecc038081885486f6462c436e1484f7bba920ada1af1c053e270ab98ba6397e02ef9db08afd6dbc10825fd5ed7d5b2111a942e09bc5776e4e8780076975bbaa5af38a2b784f0ef18a9c84088d5621e5ceb1bf5e7086a8925a674daa7c5131464445418d5bfae2dea222bf1a9f9085252260b9ddb18c44746f3a6199a484b52deff5db61444ef39b04bf92a99908df685052f6ef77957a21c29ab57ba30d32195711185dd381f8b3c9b38cfde2780b43d6552ad66e190e8e0d93afd263ec0667c9c06431dae21d0b58fb3afbc32ced23d44af8318f5f25746c7982541e0743c02622b1870f9d89c69cc8f9ac38503f04b141547e81178823cd4e6f66657f82a401f554432c26ae763c39bc848fb6dc9928cce5081829d082cc1cef9c530f3cd5a5ca09b553d18005b0d14692e1a977fbdf87d0a5347f79eccf4513bae3005dd756eebc243b6d56a1206694a31ebd193712c3328e9c88408e44aabfd63500bb4e16df8e3049314b3c35ca269d21c57bb734436a8c961ce2206900545880978b79ecd931be05c6fead7c26095d8ca6d4f0b08387ab7b7d7478cf1deb6ee4c6eb4160156fada6806594ef8cc20505ac3680c5c5be3a8314298a666f51df83b7ceae6e772625930b04aeecf0bb661ffc70055602f54c2fb67b6d78d43c89bbaf8bd95e27af1a9f27c5b00baa061e9932e92583bbe2bb9b937cbbf05cb8b6f3af1bbd132554625c2720cad662b935066cc821a32afefc4b2b190cdad69abbd0de8eedb49906d02140c37164d0ee0f5640957d0f769d7950adb63912983a3084fe11d41b1faff35ca4facf12ef09b42e9dbbbaca4f9fcfa10d895941d3b62aaa490e6891fb5c2eb35b91531fb22dc4856df7519481074bbafa6a120e654b36c5e4a6fe958ab0bf89550ada7893eee28bec796f5ef98b653711b31fc68586c8764c8218892be5f89de0532b50248a6221c9fe073f3d990399c8f1ebb6046561f3b8aba4d382d416db9b39414faaabe0be3f800fba0869468078ba07389718470187c2b5cb5f9801ce4f7554f2e93add4ad5286fff679db860838f07e205c6208dde41c2f702150bdd6dd26b7262e12dd70f9e95f4e17c029f206b31aa5272c37a814e4b109243b455ca05e45e634fbd6b7a4931b5b769367762fe20d852425a35f480f60876b154e68eae2d8b8219ec2b4cfa363146ec62cd8b10254c3da011c773a846ac7506f20575e91712ea3cb96fdd5d8fac8987b2bd5c7cbf6a9bc3ec75d986e76cacace535beef7d7e7e2e30f6bd81cc7508f6900dc23a6dd44885501101e8b8f696e3642c95f0056cf4a7d212d652b9509d69f6e42023e54117c7821d8c017c136cc5166971fc99383db5060b012fef7290eaf7337d946640577f4bf11527274ad7caeb6bbe78d89801fa271e796eacf832e3e3d7ae59ee10d0ecb9840a42148539e7e0317db9d6a0cd514ea29b74d83e6150853ca246707e500099bc0bf5971d37c38423d8f7dab6e4674e65e2c78fecbd3a099746045bc14c48573a1fe377e719cc4f476bd33a9de87bffee9695d10f5a28ff4873cea7f1f5858ed36d34e57383c926e3a189946def0c1379ff7d1e285dd9aff6972a7524477d936b5dcf9764a1e1601e74c7d3be5e3e74fcbdc6dacfe78b335cb5c0708a4d53446c615458a68da3044aaad0600c2b9ba0d19011b68d4ba7c360f8ec2748a836da6dd0795dfddb88b251037cfe152c53fdb9904fade9b0ea439322e9153fdb2f6c931e47bbb5d22473cb39414d0a7664f9c5dc8dcf7a77e6f76565f566078ae43943d05b37aef4d6274896493119240a272f4b414c757489303de68529186d8557b68d183c15959f2a96bea006dec0afb26a8345e964d9f0d32b962609b10214b30aa29e929e5cae4011470213c0faef448c4386dcf31b00ae184bcf00d5453a362cd9cbac29b06157c768d84353cf6abbdfa07051784b05db6facd59e7332dcdf039f182364eb81c7fc10cd78bf1176423241e1328a34a743d6229d2a6de4018d2badb49136c2b2dfbf54ff7f74b99d33e1b127e02a6e9bdb5c39c81b3d9c2e66a4074744eef35fa6b62291ef3d43ce361b10b30016d005a35f68587dcb26fa1e59958150366617be75b2f5c581db80ecc958129c5ba2f841440490e16e355c5d727c39674329403a00cef0e729b22e88f42760191cb48b8cd4deb5b4b47915a5c72a54fbb35ae36f9e1b4fa14a88a8fa294ec9d8c2aadcda5a76d7aca2bd3cda132c3cdb0215cde0c4ff7d50e8d0f6e2dcbf0d8f37f450729fd3e21b57a09b98c2a208c3853649f2349a0db4fbddc7e550772ec24aa5171f8aa5c9e6971a0ef7a55a72122698df7107b296cb7ca5acbf7b44e9b4dff3fe37cb2780e6317a9410ff9226183dca8972fbd798619a938acc1990198db256626cf7c33eaa46f6ef2fd0c38b96ecba95fdf757c37b06550a8f02133c9526a82b499021ca8df43adb6a567e10cf4dedcd1c4c0824e811110642484b77125361d356433cfa31e1faa5a5c536457b9d77b66cf7ab617ab0bf62b58df4fd89bf0634216a46895c2b66b58f9a5a0f50d58711aa3ae8fa098525870a0aeaf2306c5d11e7671460b35dd79f25b61f2e2df2536a022359a8a5f3285989e81b989c1451695a49671f3c61a37a85f37ba877e78a7976989a0025f82fd1ee9990f89851c6270394a591f6928b08e23df53bb7dfe396de2c6078346d7d9378306a746d561e04f390a90a3253e23fb60cc759d290d3bd959954ebd4239c3ef6291dc0b05c7e31c6f5c9355fc84b68bf258a013e851196a5e10c51b0af9689716fdbc7a58d15f9264ee352911f1a6111957c564c544cb602c5fdfb246be1f0427c83d4a8cd4d683a4d9a2a689ab9166e10dccb948ef4630b02a68e07155c7f046235d05d638a64ca9765bc332b22110e774719ce0aebabcde85d29542ad3c9359d49cd982f7648f2dadd83e2155c154ffae3ba8772aaf281c03a38ee364432f740b4779bf9bcb1414649032273aa3506c0fe0d7e215785b8e0d6b95741dfe969c11a61d9127554ea9bc8ef303394f9ef66b934327d396ecc983069c97c61437183854f5c986f465d834317faeba8205119c7a37c332b530922e4c7413233cb8aa0b19d9981d578b46c95bae8a7cb27514c2ec1265dd737daa8cb5955ca15bc4e19e12c834397022801d58879785705cc0bee40f3b5ea96be7ae38a3f8ff4e6ea1db51d7dbcaf602585f6b14d1cf6a432ab68a1e9a924dac346343073f045cf7cc6a71030a39438e68d289f042f4139cd4c7716298f7f2b3331c714f1ba93d5cdd09cce786d3143525b997c335310c1ef0545cf3cb961b13d4de89e131f754ec3e09da88bfd809a79d7656acbf3718ddc6e3bb0475a318f20c7a6a6fdc1b4799431da72436e04b5659b4e7911d9ec740d5ded7a492f070e7a7d8b13143e81cf1de2db6c6c084a5299c6f00ce92256bdb9acdd19345cfab5614a4a7ab36bee10e6769885a321bdb6b92789ae26f49b24913b5914658d33e3cfce90c245a0313c192fbe9ea6a18082893621e75b87a7f68e664ac52de17d6574797ac086afbd525dada446856ab80ae996fa4bb60b4a81b78e4dbc220ee057caaec21b1849043af7102bc878b01092388bbabc71f4c00db71c03de5dcc81b3c96dbecadde9e4aa050a941cbc741b8d94e2a0b735d2d0c2402298b366a75bed8e0b82e665c5fea8351e04f8b66e0b04ca7234f1e3910f3eba742b6a22211519011d3a7b8399e64c51c8438e5e717c02b669c2e370e1eaa4a956b30a531f5ba01c097ea0c74d481675435508bd39629ea6ff0a349f01b521a6300c8220afcd26efa32c8c1d3aaabf959ab6b09375dc54cd154633133466c4ffc55aac9764d7c8c76ff0f7fac666ae9630e5cb829fcbdb7f6db152b5b781e6b03e20b07a7efa24ed5c3ba42cfd6ba08111f4d61a429a07a1bc1f20452a372f5e3011fd55a54c2788fa8c2457a722661a3abd05a8ebe547aa46541f768a47032cadb38d3e500c905f1e3bfcca73feae6c42042c01d9368c2b2c5493f9b4fae90cc5fe0782e2a4be35d44534dbb461e4d094b0c3dc8a4b3732b4b0de01d3385dd36e69970b5a390a369bcc47d860a25d9159caae697b806901cc9ac46e50ed07407db2bce0fbb76efad98d39601691044219b7371177f93c5a115bd62d6aa710fbc6393da92574a947556ca8e5f8be5d4fa0236eb23c0cca42ac86acdae3866d24f16e51a578072d009f8eb3bf535421a374913cba7429df3a33ed8d3fed0c9c7bab6327a34acc5268c1fff10e548a47d4caca84a06b04ebcafc36a58f151cee4d7af7febc556dfce7a51594fd93407f4cb240a52a37400e39695d6efbf74470ba2179160ef5b5d6fb5e0e24b4f356f42adf12d096708cc48e23a33bb679a8613cd2d6a140342a41b9cd221763d98a56c703617445d86eceb97661a13df41c9b4840fb2683e73138f5092c1b6fda3157c8855f7b43a4417aee0aaa7b5d04c1d275419bb08f48c6b8c5efead10ae16be6bb9fdfc8d374d08149230d044ba3a0b778fe89b3ef5b7f8c6b8e6881b5943fde6be09f77b716a15afecd10ba6d2f869e042d59a6c5c0eb54823c62833c23e6b8ccbcc09fa58dce5be85a54112ed5c197319bffc0ce185c47e8b080fbf0173a244c607c47a4e92020a64d109e89708e400ed3417b7a738c0a27f7909f8d9495e7bb359af2aeb12d70ea1d781dff494a9b03a6ab1d39ee9bc1672bce415ead26637bb2c2669aefdf5dafa9a95426f2e6333937dfe6f710ee64e5202af80e0da5e3bd2f3f384f4070097fe4e677c5709c256ed144e229613b74a4b915089437890ef097931d410aaa7a7aa2fc5b26ad3ea703e8a85cd49b1af2eab28980bdd391eacbf1b668598ae8daf30f43a39f140bbaeab2a9f95c7be881bf493e43b4e8e778c5c35c006f9c91f33a8421b8e2c7d30c382c0ded53731848f9527277b0b31f6191138345e802227b4b95e8cb3af7337f824ad52487cd0a23031d2de6723445a5c2f7ddf30904c0ebe04dec1f008d7dc7ae734cb6ce0924519e1b58aae1841b823af689ee2e27bd95100a75865cabb16730cbff7b362a3dd77dcc35ea6e77e311728a6f51c562a996cf44a261730e85b47d2e6e85a4432f1f35bb7ea5bcd8333e5b734de6df36b0a8fa3ad8069b1110fedb0e9bbf5b84db5d2ff3f06a38f8d1b0e8c7a78bb1dbc74a09f9e44e011f70c1ff182c99aa145ba7b4887e578b268cb167dab8c4d057d3423a5e34cd4a23d79b335f40b2f3a3747ee49fe5e2d8477900c187c4bb7a0c3e6606bcc8b14b869292bd0366455149ecd18776328113dff3d3c70aded67eb60c1876f68c36ff22e1f329c7fd06d22bc06d86d51e4206ff4c2e1866a5559a7fa1990b4cf870d47e3beff12caf5bbdecdbc0a3cec91a4331ceb226be7244839a937fd47d3c719889f5ae9677d7c359e2cbbbcedb4e620b4a1173d8a9f2ef8644ad5cd4aa2685156c5094df7b58e402da388260ca60ab924b871e830852d8cf9575d136f0a406dd18c88289e836b4990de0d2e761290f351b1a34024ad7cfe2bd4edbb514f5b2a2a92ae8fe4302b36f96657eae5d8b4a97e4f3b72fa85764b6cf09edc0a95ab55e78e540311faa0700a1a2f20b78c47148edad4dfe0b0f645bdfac308f79b758f0a6f32fd55b83509b95ccf77645ef1b431bd9ff3a4618f04d44fa8cf79d9b385c9a5a6fd0d99fd929d01fdeec8dd0fad689f8e9ff23666c9b7131c87234c01df90f3a52c0c886da257d45a4ea747aeb2bd41f84065bbf5840aa101b5ea24a0eb82e9e55b2f14791bfcd2daf956450ef8100ba8ff37ff416153675b109f2bdda06083ff4b19783de4b4468c257a74593ed6f52070be323037f076cf2c87434ba0112dac5a2c51b4e54d454e0302e85fe8bcf663f3e9e378c2d7ee863ddfa9dd4b85eb6e157488d7076e2a109ddc7f9be3351635ec897ec6a1183b2096ca23f0c8499a2472cc5d61dface4bcb96f4d71f6b8030ba87e88e761532d4fb0e5185b58b135037f48322be146ea303f2359c22f821aa3b74be5102eba2052c12c185fd91857057b2ff94dcddbc718d89ed52f879164318e06f6b536bed4ba0b37be93ae36b9c54fe58c55c45ce50ffa1fdca362c6fd59623f3f50f5aa72d4eca3473879f07642c454b4679e9fd3fff0eef9a7f19c6402531ee1ee2e88c874df935af6a1a696165682460717a70c93d61671e4c4c9b41309d12ebd942cedfc1890ebeb6f7ae4318582fc77b89b7d7f5eba53682f5ace6036b5643d147ac6a32e2086981521c154aaf1daa52dffb57bad1267f7397edc0bf737352b19c6f4230f6ec97a5cc8e864332960ec1289f76f8d7709461c045fe4d6e0e32893062fedf142350b254b45c3da25fdf21d641073737149755c052b278acde8e43e95e2220d0df6e31aa103ba5d17d20649a38f53484029fe84388d25100be89eb5a5f91faaeb7a32c03ce915ca06c9437ea13b9d3de2b0598de5314f8bd412cda98ca4df32f111123450ba10069b12b0f07302989f9f0ed10ca4c6d79fba6ea905dde47997a5181989068431e34e71efbcf897fa2edd84143fe76752863284338c64f9328893a9d2bbc31e995489837cc4d483d8aa16dcf033d80cc67c7fd7bdbb9284c76f4da71b92fc78056475db68f7b0fa03bea8dda00b817c3eb201fb9059ee3ac1c95a8d18341743ca3e425f38dde3be9974a50ec563539a8d6a004533d093ff9830e8e7b6100c8c1c30c63928eabe2f97ea6ec9468ea772e87d81f5575885cea482b4adcdb9d40630a833341ce474ea748b29b5db88d81ad92f858f968511fb07d84a6b1a6ddb6c12b74e39febfe385f71bf1ade85c70f3b2663858628ccddf9f07f89144a28f39f7e7b7a019555d8f00da18f567772be5f14631258862bcb072469044544d02ad658588291dfa718ca3ccee93009329691683790ac12d32dcbfa00e16042d1bbad919febc454c023287296415287ac712df85909d65f8f0f55dee39936196db0f3c8cbbf19e8edad1b319b1b9c8aaeb67a275dab8ffef764eacabccea3f1b5ba107f88c163a082ca7ffb325241416292a19ebd8fcecfd13b5d12efa0d1d577267f28f1e106efe95ca45d99b78700bc2b3a4a747fb34ef3df8ec6237cd702c7ff73ae8def0bfd0cfbd53d47b615543e2b7a7ed474263baafe771e1d2f24fb91ee5c9a2bc2d59faca8cf36478570af23d09f760833302454769d204f111b9b2b27242c1bf81ab8bad7dee89949d3c015ed57d1c5ecda915a5e20a648e229af9e5e71e15ed68d01e7b5c5bbdb54312c3136b65cf3a51918c2b75814d0cf946d84c6354a34b25266255e1d83102f715c4e16a86dcc78bc961f215dcfc0154795490875103849ea3b5246b39d13c53cdd8b2aac8bc58f618be547440088b20b5fa9abd3fe788c7da23ca96d80ec41b63b6d1f750b605ffe6848e7dce3998346033e580f5780fec0c3a30763bfed725b2f64bb121158d02cf60c8afe650b76ff54d708783ef9ff2f6a1a557dd542eaf6002efcc1ab20529e1c591cecfd943fb47f4e8edde71b26fcb9af2f4d32d90ddc464b8cde6b5926b247a6cd88b7fee9755a79d4552380c49dff66645da1719508f98cfc34c7809b358df66ee5817f89f42e7a3b6a76b199b9c5e6627da10d6c5ccb7664667cabeb38a4b8efdd5a0f2de569d14134e70658067980fd4efcc6aad99f311f0e61a8b7c1c4f227b27c39c05cbae69da7a2f6b02d14f287b1e4eceb0f8f781c45ec9ccd6464dd7aa1b5c5ffcfb77979603b9dc53cc79ddaafb01f98da8ad2f7f8319541eb2a70f162e69e90bfe093d5537315251163e0e207d3c13e0b40ce0ab265e58c00e2e92d0509ec20bcd5d602d25f7b1ef86c6146b70681504d9ec83960b4f7569ceeaa8ec1996804d76f02f449cfdbb64fa1bfe0664a27fabf1d9a0470e824ef55d0dfae698c340489f79d1e612fe18f4217791ad66f78ac022e6186270365024c625feea61751e3ba934e4ba4a47862f98c48d107cae9ca2f78aa6f2f2f4ae0422dfe15d93192152d5f3b39d751f6d5829ee57a9e2b9d7074dc7d5a2ae11f5a9b2f6ae7184b51c38267e7e04a0cabe1b49a2bab36b85c0230aa06687d0c3609d4711a4222600b1c6f4c0b5d961749d57dda93748db283f7e4df430ebf59fed96c87abd07133f5c26e9380ff11fab6f63079490abe165f104ad3e8bed14011c1bdde66f810aa98dc60fdd69832a84c9e6e1ef952cc5ecb929cff344538e45c67845414c55dad42d818d45b37ec8b7ae48f4eb0818793b0ce533cdf99afbee4d611af847be104dbd72d539a1be0e78ee087abe512a5be76828f49a437896788625ccd1460c8e15bdcd6e3beb0692329be242a4d5a427f8d143947f2f25a4afbd16392ffa5d0530c61054c56a4fba44ce295fb8b0ea21cda75b4a6cfbf5a16aed0146646a0ec8ca7113af34973d7b007c64eb92d410b64a92d2a8ac6d57c1a9e3c5b75b0816fa69dcfb92288f279694bb873d2f32184776c7e563978b9daadd4f0966941c42fd1484f219745632be939fe18deded3988729b99abb8de06103c8494835dd34968e29e8c53a5673f5db5cab17d6e7f5eb411d92cfce688563f62e822688eacb05e605084f4f43e4113138e13d83d6d868c587da5f3564923ddd1a720df472dcd6e59985613e2ba924917f1b43659df1a1e257259e1f53b4e5d5ae9e91ef476c55819b6c0d2d5fb33ba7cdb33029872cdbe10fd1317fef033c63565c00444be5bbb02a985c78c9243113e740a3aafffca204e7557acefd800ca8fdd9d3eb7bf0ae7c373fcd70178269999fa088ef5356ec1b7f365809ce77be7e59988ae35b8844416d7e715088e84106246528fe7ccf711b90451d6b4da8dde3a31067da0e4d1fe8b50152c3c06321e2a997b37ffd50b717677477410eecc9ed90b8fb8ffeee433055ad9c6e4e358d369cf9bb34b14ad87e4f617fbf7a7ba87a9c065897e95308cfd63c57d37a7fae5b206ad46900273a816ab1ce25112da343ca20d87556e4529242a23b1fb8a5d3a7af95f3d043ae94ccc2810b5604b363a1293d36485716c4221ee019dcc0f1134d90acd4d4d0692160077a23a45f1480940cbabc6e35f1216d1db994694358e97de211f9d1a9eccbda1d0e87530b7a786efe48716728666834312db6b6127e8a9d0290b880b2fc69d493e4eecb878929b22e6a0282aa678476979373d546eb95521e5eecdbf3e06287deb4498c2f34841e5a76b374d7d29a3d134be28e6fc65422d7a02853f8d235f7fa99efaa9637d41ff4a12b15d59f16f14a3c369c9d296993dd32fd61aa925f02236d837f1320d4d2221b620ef2b63fc507ff86e42b2965437ec9205ee849dd31574858340593c74d59d66d87905f96250bf483862577f4555f0c855227288c16fc62981ee7fc6b491f6dcf8a5eff9c26fee15053adb2729b78c572086e85f7a202d969d8e5e924af23e705e252d4b8e46ec6dd1173fd38492d1c23d48c0aacbcec525f348a3f12aaa59ba6a5505ba142a9813c619a266d5bcf45ced0a205869f49bb0948792a49ff5cab0bcebfb75b08f84ad6a537ec01d8de38ab989fe6471dd2e9091ec02d3ea5238a575f98ad7f6ba3e1401ec38d7285444ed191a020a5958dcbba92cb023e8293d67023d24615abe5b50d94fd1bbc02188497557e962a80ea60e80fccd9fa9e88f64585689f162f4a852356525349ee7b0154359eb054d590ff477cf157be7e7bb3c2f5c08d92400d7ef43134c451fe7ac5d3658ecbacb92a7fa76fb1209f99acabbe429fd63ae62d27750924604d54cac9e024a8db177747eeab81976859da6b6882df5acd14767f6f4fca797241e9edb1d280c79bf2cd863f26d6c45c082e11b021d3dcc5cf3de5e8991016bf8b7ce24240e29dae3dd233b93c01abc0a959079494908f84dc67aa2f6b8892cb83bb6c144af0f88ababb54507390becc371824787565dd0439ea8f86d93c93699e5d3b08c955f308e9fe5eed25103efde2f9724f274410f5f90fed9e84157c3eac1fa95f9ee20d2c158248aa2c6cbdfe24d499620a12aca4897adb8ce55f23aa9491a61b6d592cee4b49ef2c8a1d52644e1a834a7e85fdc70fbcecbd71d9ed01ae9d423ba8eff73a5febd6af7d87700dcf16340c9db433a30add76232712dd0d7529b937b9bfb4b1669383f5807053756407de8949e4f783e89d99977e4d3a5f433118aaa964cf14411902a1b6b85a0789f604c822eb46a4cc62a376bf33548e9ff2beb91997bcbbeaf444bf21e4726495a49c00608dd1ec43cc6ae642d420141ed2c7bc35e1b9dd4b71da7254c0fc515c1d969405b086e843d2e7f49a9338d73510a8f6e7b9959e213a3a2b6b82d1fac1b965126e26b02109e8a37eaa1eb98741b6a2b2a9285e41e70cd233b81c057b64f1360a8a437b2afcd26550a702c62ae3c8f4effdcfca686b627b7407410826b66cc2efea3595e68881e169eb2918a859d50082e5ba326e763e41d07e6200d2bebfc3b84fc5845b64045ca6404cbeaedf5784a8b632def6d2e74edeb631aa293f317797da5ac8fad9f50fc8feb476fd031ddacc2732123cafc9e1f5ead1ccffa6d067bbe48f6b656bf71fd3619d9aece52f9a8634178b0e66e20e92b1ede75c52d99f43952d92ef876f53ec79c2fdf843452dc6a7d919d273b6b5575ed52369e815437b46b3cd0d651cdc1b4c274e842ff1cec1f6d387b799d9a66c0ca65062cb55a95e250ec276998fbc27cdc751c64ff0842cd3e37ec8e808ed7fb657ea9191bb5e831908bf8fdd08148b7d774177afeaf44b90540abdd3d48f4ddc7a78d86ec0fa32117c81530177574ce89fbd261a429b09ccc50e128aa6b22f9c34b140bdbcf17704c366044b49d3f264c2b3e54cc3bb047fb59f415339cd6d4d769a8e6a7d8c7606695b7aba9af7a75551dcb2134bb9e0173ad7c2c7f7e5a372a1d4e62d379f3a9b3f2ef15a992ea5bf19761ddf6584e03d250bdbacf783ab961d189b920d3b4b8a589eb9939964dc97198a12d242f3e915e2cb4c76971e117964ea4286c5fecad4860c92c7b0a63baa8c82675ca2557a96c5bd066ff5e9e4882575266b491e1b8f02e7288345b373d957e98a5423a85af0a6121864f385b5cb4676898bdcf6cdece49140c4ad158ec7282fb9ac4b98276c7d7572d2d49d2b9adf2af757868a6959396cd5502bc3642ab0a6d1597f4ebdf1333b4f8b47e5e032c1136fac4979b1798953002065c8dbf1a3993264ed03ff058a52dfef4e219c5e93f9c9fa53a4ac1b052809af360a6a2ba96286c70bc0bafcef7995d22a26be77d855dbb42ae38140f614d394ef9d541e91ddeacd5ddacf6cf60e9179c3aca548ff78c25c969aaede10021f8dbec739e2bfbf101c41a8bdaa89d59256edb90068eb9482564aeb221101317dc217534d8884b94235f01b44662965f0faea6875c28cfc771c75ae5f74b8f6bb335d5fc0bde889b87e8c323187360c072332711409bf9d8a744beb52e55bbc19f05c60b14697fbd43357a924d2d2845c4744f29375b3b11aa72a0b3c180733514cf049b61524fa454c965986742c5c8b0d5d1a6b6c1bea6c20af45e63e02deeb5cfa7c752a25121618d8f1b797be1818a9f9c8bb85def4fc6501c174b2e3ff54a5d87a5c838536bdc060d9a59dc1305bdee8c8336fcafad2bdd1664993b0fd482a505650b45a8db0d4482ea2c6bfc9e429ee449f8f7b5a5e0aac25b3bcc9893f467d2fd202887050303d76e9e6c9da97a815af87993883bb421f7d7ca7d90f394fe38103534633cca24937fa3d2b8e031fb2e5903c1f3e0334230405f852fe53f203bfc729fd8400ed590b668e8b947e70135743abeab517f54a61fcfb61057385431e00d8a72b807be8e662b5e848b9afe460a0af9b8f316bbf259b30c05fcb9f39ae8f5924a5c021f1c74ef5d1f3ca35cf19c1070e98e19253768ab5f70a559193d3b7b77f5b98887746f334af5e1febad3e8152dafb96e34f9d801860a2e81111360b13f294f33c8a09740b5a4c90995c3c7dee5a6bc401e9aa49b24802a281e461bf2be864ad4320449a1908aceb3f7ed009cfa7328b43644673b26fee4d132ccae240b24562661b9bbdbe346f2fe52a69c10a972e0c466d54ab1c589867ab023b62e9a90866d0e3f92e683319b7e1f83c88a064ffee70627352641f0641818d64ffbc682bdcc8cc2440ec1d5d7ef5fbc19d0ba11b651df11ca20a4c5350111134a5de822fddd2a787da7fd0b4cde7b6a678dad2050fb78f10e340353c7257090870ac4d043c71540d5d3bb51e7287fad88fde4cc38db28f6595e8810933f156cf50e7ad5ea12af03938c61ad64eb9028ca903d276c37e458c6a904e8b0960b80e2e197fdb4eb9848cf5de25714825121074e84ad2a7a294a18c09f837aed3da7dbe8d49c47348228996c499e031beb858bc1573f75cc60e5bafa02ebe2eeee3a7b214bf6c35eec6f422362b7c0819eea15cfc61eeaeb2565371f822f8a9b8c242499cc60bb8c4d4eaa384632126045d104049118b480815dd77e013368075ddeb315e2836663d9eaca3aeefa1b64126591d029cfbe3d95d2a924b9863ab81843af396713a68e1a3d9924adb43a5b9a2f61f5ba56d59c261482e0c600b15e3757dd602721d8df2d0ed4f9262835e3fdb8608aa44b4dbeda2ada982cfceef5c66741239a14de243d12fbd05cbee2afa7db6348339e6d85243b3dba05996c5978a23441bb55a7147bebedb94c5719092ad23142b1a051fc9f9e8e8f7beab23a51afc16f7ed870b85662ec68241da669049533f1aa3a6ee26452e5450798110533b54d2b963dafc989f6d52db188fdf7542b8e51b2f00e6567c38d766e37f91e66a46f920c2237638daa1ac85efff2013713083083dfb55e802339e3811dc4d11a937c3e32ea486b79aa54f872702c0984cd8d0de878ecca605183559ed92d59669c264670c108e76e9118095450d03cba132cf376d91ca503dd8257ef63d420adfb49098676d13eda9473af9af9795b4b2dd20a74e0cc3dc81b9ea1e008e65f9b7897316dadb8575bd80dcddea875f138fec6c097b5163a4791efaf3eeee9de63538b0fdbe42d1a9af7f7334c53ca8ed6a2c59c10a6f41e70bb36ac362648d16b0736d9d0437700979f2ec78e167730b4ab7bc60c78030dac0298a743074e5715e479dbc43f0c3ca4f8043b8360cbd14a3ed08e9266ef477b726eb6800b8279fc4075fb22c4b7c7e512fc2c909caab44422b584363c2239110ec4b944299a4ad28f218987fb7689b39ec09f76aee39a0665b1fc915dae4bb843d4c462aa0e84c9ce0bef5bf80ac0c38187e8d954655045fff35f0ac79642b9018ddfc3d04cdbd88b88f444daff126272d212f9b98ffe7c28de48eeec07c902ecce21458253ae46aa28091ed05c8dcc736b83015dbffaffccef31092fcc92e8362babb2b7f7d3acdea5aa2a5303cb3ff469ba11fbeccf1d12bfc86aea5d94dd4373110fa830dab0da450c5232bf129f73e1b63efb50e1f1e1b888d51bd6c3fdc187e2c303e599715bb71d89cf7f2c9ded5e7098926366d08dcf20f93b6d26facaeb19bf6d162ea91c8643f2deb5562f1dbdfc9bbac3a1dd924cb6556e9bf046973d37eabc025f712e7dd06366296e3bdbccc2b984545271e001bd53b6b39507581d87b7d6556a693178b448172036c8746799832c5d333cc69f23afdab47d7b8833988b29072aee6a3d466307b9d275fd79812570ffad06ac7435e2b4197307e8796f2e8f941c9fecaced0436eac7f5ae0dc2a838ffd4f6bf05dff0f35dc88cf8d3461bc54f05c2449949d6470a57704a87c8163401fdb3766638df2b916e3cae07e0fc604d50d40633777ecf2969eb86a459693955ecf3f8b6c65c33a751128b80983e5d503665f56de47231a3d36dd9d21e2500213799842282f667fc0fbd306ac75600c6ef8a476e4be3f249d841c1e1de94f18ce59cf66a1a8eb3d7e241b79b6113479c72d9d6ab00712301c00c9665631b5906c3ef6ccdcabfc8ae80baf2d40b4f36fc37be607fcff9134315cce7161e33763a897ff60255c2c07702f98656081b820482b7eea92b15aab1afb9213b1a753e212078e679d69a5e44799ea70a0ef2bb0c2b109461cac8051b3eac48c139328aa3d63416c68f8330d7a0cdb7418f06e61496565c860a3b6f8af6597eb9ef321ff7060de134a7d10ccd5fe146c6434b8c3df4ad27c23bef2e9b8484da07d02b7dd3f1dc0cc2868fcadb0d6997abf2e0595c0ba7d013d68d8ee468bf06ebebaf494193a83f049f9cc8c49724687fbb2cdfb8fb010bf286e39aa6e073f16a3ef03e6468e6aed5cd4642911158c228c76fae2d8b9f0fca1da3a6f8d0ae33838f884999bb6be8ae8935a1d0c78bd9f0271b4f734d3cc8569663bad8f4e722a619315e2c73acbec1ba52b8776fe357cdbde4ab9e81160d0d2e257834fecd0b0adfee3bae5e846d4390850eb9c89c315bfe9697a6baee00dafb7563e0f8650969ca188babd3a82dae4a6fa3ad87188e34f2f9291651dc2ed100d9f3e70c94d8144be0e95d4439e5a8a263c15399fc7d290fd81ff9e1710a656c2c839581705075e12fd181643c737c5f5f705f6b53ba4f809fbe0e17c326517a856506ab1009ef69022655a6f2d927301bb330e9ce256c769942de62839329a3147e957272ce2b577e22b093069cee7f03beee7bfb37a6ee0dedac11bc9313ceac513ceb194e3c70dcc0f9d07743937afdb75094226ca39800c2dd974cad24d928da5267018d9bb8ea736f25bd1b9ccd50131b3997e83c3b47b80444105358e8566830261d7caba9a9872f521e4b137e319947323778b16125e99d159d19dfd7292fc57a4f24c5dd0792615b0767b7d61f5a59172a04d8779fdce322e9e87b62ad1364659fc3d05bce97c2adecea3e669e8acca7bc9608b039373035cca0a4c71a4acb8b89ec8f79ca98008db6a38a70301ef265a29193825d94ed711246650fc05b5fb0e020944b4de8885f76e3b7231493316f776eadce7ced88e17b8dbba0e0da788d52ddcaec0d02bac3915f269f18f168034abf57c84f836ccc0ebd4dac9f0d60b482916a3b048eae1680cb3f8c117cdfd63406c6345e03d42928824765831dcdccdc798e199e0f8e3ea4ee936bc803b34f041b23f90c4391d2ff163dd6383992e21d6fa7489dcc6c16e41de7696072f6208b3db924caddb4efd1776614a75443af0547a7498f35cb42b379ed8fa6bcf0441499ffe7c37ad24de6505211339a03033647724be385c5ffe0fd501d70c6d924514300b110cf7b30db0db1aa27d87c5df7e686758ed3dcd61bab2b32bf2f560ce795f5892653f68617914c9068f32e3e4215e4f4fee736181de999b3e76c58cfd6b2de92d91908f9e215d6df85cbed7c646b66ce569b08b70d7c224cb41110b94c1443ba014a0ad81b121c23972e633153baab3ac38ef7a3da3722de6469d8d86ff2b1714f5a924a85a849d3566b047786d29c42bef8181029a7e5a7853cbc04f238c0bdd4c63e5ea0d2b5f2c07af243e5b732734e93796b1d2d7fd10957d20a55b47f08b69535bf31086bf2087f1412d210313fd5e0ee8d7aa3bbe8361642d778e5b786331072b74b3766e1b55090e85c79884bc66a4ad55196adcb2b457f38f0b7aa73b49141c61e155703eb33971e89b4f781d2c41cd4eb16e63daf4f5329da3ef653c06594c49361d4e2c30777c1af28827e79550dfc2909c79deaf990dfab1ff62e7667fc3a7f42d8e842ed148a7d0b9fdcc02ff86394d2c2936327ba053b806483ef5f4f561055323191c47cca26e8c142d410f17836cd3f6deb2a7929a7adad9d4375b012e4adaa0e303d2986c95cb578ad0768fbf6b90ad10c52b136b4c55bdecd9c15e6bb3af19e1c046109caed82d1e353361c52fe52fb7096fd6b975e5713b5ba545c31b9b87e7f075a7a33d2d8fcd45b2ec200875a5243ab2e5e961b7ddd448fefbdeffc47361af814d8c31e28c5a3af9f8c2826dcc3b45135cdb745d051543d99c22db0cda4b59f8485ecaf716fd7919b379dbffbce7331008d3b83b5586a159b7d152850326315737e87c943185ccff8f4f9557bde4554bc15140919f8def6551e24a9c853333523ae3a4a83bfd9077e67dbfaa389626ae0054e439b450d27241869a88a66a0ccb5e1644a7d01f1ce25755a416be6c208aa41595bdd37d8fa5e4e37a25ec09c115dbd954f05ad6f0233bb527cc28df14fe75f25adeb16e49a9c9e4574e8152d19b01022ec96b452a987b8f8856744beb68ab5ea6c3717f29b3846dfbefd0989ce5ebd9dcbea3f01d898b5b36d6fa8cbf4e503490fd26248a6e65ab62c967acec893da2ade59334823e45db3890b69e973ad6e44ee01cb5812ab49db0b4adb8a069bc429ea76286ea5440bbaa4b5cacc6ad8a81d4247a930826aec3b82a89234c5080b86212cfc3cd20fb0bdf8bb27dcc35a4d8acf8342bfd78ffbfce8eacc1dc0978b184c089338591ca1f120f19aeae889f89204dd1ec1328b48e2cce19772507db17171a97f4a5dfa53e800433ece3d2f0cb6bfe497c61bb9a0edac11c779c1665d3bfbb4ab9c9e8bacd9e90a1c95c130de69b7a3ff78eda2ccb250a14d4fa7556314288928b3101be928069abcdf726a5ea0867d445675830e8b87185999cc3e9cefd1e9a26cf6cd221af3a2395dfde7ff0faa6eee5ad7e9ca5ea0b9d2e85b63900df5e209f19fc0f0371ba2a9a021796ee389e93c38854857fa109a493ec638032ef4b998eb3e4d33c10a60c467e5a6c91e8e1d7e14cfff4b8d147e8beefa90917fa446d6cb16658e4a855c0b7278cb7f07020ad280e412fd6534ebc6e034e6457de646ba64f30afabea4f18a7b64f82b909228593b1dd022e5ce18071093936c17f8bee69bd9cb1a569bfcf403404e03ecab919f6cdfc9642942d0e878c3bab87fad108b74117df4822c727c951d8f2217f8a0fdd6abea0d98c3b63153fb7c10615c1512888cb57709c49018321dfdc33de9cfe95f26afff9db2d34f6d2f6a44e568edb2b73842311ec14f6548c8460109e975b3ce61fc68519d2065465e462beeea4f7a2106da480475b19fd5eebd9b7e7a849569e48f0665443874a7ac87722ed915dc7ffbe9bb7f916d823d47ab71c5c4b029b8ac929dc0ac1621768ce228989619fe8d7ffdca5a2be2b8c2a900d884e1edb378b0cb810635f82e5cd88c2879766406b6fc40729d2f3fffa8395be80bb3e6babc3cec2d37e31e70a4d6afee4480915fbe794c060e36d15e9099be36e07a279c6c78d38239fe8d64edc32d84d6d4e7be57abf718256991c2bbf656c255bcd12bce09b2f7ae68b82523ba6e495710bde21c11a1953cab983e1c94a0e856603bc61c047fd8fe38de0f2a255dbd8818b3a21380294ea8f29ab43180da667befd5e89f75e7a694a8cc83b1547b2c6718c88f02bb3986f6c4d7099a6dce40df60f7634cef0870e269b925f477996e752f6f9f17e03df6a571ee018993acecec767b53b0e9633889b7b724e327b250997938567c968e421253b0211dcd23a9921408ae3a3dc67ea27665e4475e522ba022633c8d48f4cfa4b52cb82866a645d11c1e08ef4ac3b0cab921626b85427942f163b752300ef94c9961e0924f6de339fdc7ca79de8e1441916b166073a03c6924e3c783dbf2084ad8d51bd51984dbaee364d3b4e689d940314ec03dfd294abf067403d52d336084de32688448990a1e8cec2e0a575b10ef6fbc0166b0da786448cc0186da6fa1e2d900f9fd75421fca20a878b3d4871f21075113402476c7483ec8fa9625b023d0bfab3b42693f08076fb48bb58b3bb75214b9908d5a61849a793f8f1ca4a0922c9f5e32d467078f3168e04f767286dafca5fc1f6698b1723147d37244a3d8889a50da866728c2bf9da727cb09a7d08a509be05e677622cce3d2c719ba85f65703f54af31cc585aa17536ab5323b71b59dff12822fbc500a2f59e9d2a19e89b7d08fb2ade85c9a3ee0603a81a4f44729c6ce8baf6ce16f989571f2fa94d209471286c39fd37d1e848e2c206750dcfd5d4bf27c4fb81de224e44d3ab929dbf4b155912e3263670a069c6e48a2279c5f19651b43654d99156ced043a5fc6195d55c186cfa9d982def8416f327d1d6c6ae01a5a2b1fd8bb72598f2937f68b45959661d272952f2d72c9ae7a185ac6305ac3b782c027a50472521cfbe21c4a85eca9825833c3973b9b27d5e17b09a3fbd029f08895aaac967a1bec5fc924bb43d85fcb42f11dbf287859a33daf201fcbcce66853fd1254cb4c1d3133e515e7a131a196d33edbf65988aa965cba804561c95095ca0907b09c12ff24dc6cf92aff3ed426464df5a87db9cefe864919613d5a7b9f866c026c9ba677cdb9a6253bb69ad6b04931469f40571bce2db78054843e56f9eef979dab8bef60de0f204d785ef5d578096808934490adc74c346b4c22e9f803d62934a2e457ce26c647a42c94940845dcd05d77a73150a51604d6d2ab7dc4c061956354195e80a446c8d5822d3617503ca065c722ebd7043384a3e80b86252d50238bcf32adbc42616d125c3cf799b3d0b4dbdc36491affed831872f536d7dcf4636ee517a3a2b1267917a864686617c0f93b94577dafcb5fe422442b655aa23003adb806660b0b361257ae1a81ae894a409c9745ff638a00aa695a9fbca4ce2068d10b96c08b83c79bea0763d56d80e77282d561e2c5ec8ceb24b3ea1f658088ba866d9d9a517291f8f0a64b14869fc049261ed7e82c931dc095c8568d7807ae141a83bbb6002846201fcc25b2fd9e14b7ca0969ffef0fd008cf3a3b8728d741b6612146102099bcefdc394404901bd0a8c1917915217fd5f2dd94cc7f43f7f4feeb4a60adeeb8b43d597fc518aff98ed4f970de66dddb4f7f3fbcd2a0c129a75811a2de1f0ee3ba7f5ce413f19bf2b8756362c09d16b206be76ae47dcd53dd6296044f8d531ee710250ff93ac6c299f25e1020587a015e2ad669997aef83bdc32191bb67bc6bf8b60b562ee8b20f0b9b81645ac08115500f2c961c2650886d0ccdfdd7161d6225f74f8b50ca8078a66b522a6d74f36ca2ae9cf8714b704ca280821cb1b71a9080ceac4fa95a5acb58d44a6809c9460de2179a0891f7ba967da1657bc1b8096d4ead60f0a028fa29a2515ebe898a52a68472b53f762fcb3b82f7fca39deae735c1c31f2cdf39f383d579f30c46f6e9ef8d8eaf7cb580b4e45711e4d2f4e30844cc13fda705931b4ffa89405ca34133e94daa46613a6edb4bd2541a80a4b03976869a8716e9921483cd713eba14256f74a7d12ba5d30ac0d4097ba1ffbd64641c0362e509334ef42115bee7c0a4d0d313cf245a6b608f687226fccb3dbe807a76cc037a03a31064818a364ffb29e8fb713bce0705d741f57cc87a609069b2b9e7bc078d19ec1cf408fe2dee96c482214834a61532238d79d2cadf62e0a1bc953c61a76a7e67e2b528fd707ce4c36f96d040a55d43f3d6f00edff6514c3f39b2ebf64b8f0ff7ef0e1ffd885bdeb38d6cd433e796ba5bbd3038c1a96423d3fb24435906c6b250f128645164473274291af6c412e0c016e9d4c0cf8e8762b11825f1b1fe1f98c41c24bc34856b7d7939978bb9d738ce308c2aad30ee2bf5a8182c8b9fa15b9ab461caad03efbc720db2a7d3c2ee0159062cf06dc89b784592765b3ffb914fa4e81aded8d92b7014f3905c1a433ecca76c342d86dd03f5ccd46424573f3b4fe428910107d256323aa38378523526d34a7f794fe298a9cf4ba6510ea131bcc78e0a9b8ab2ca1dfa6d37917ebd11ddf27f37a3e6248ef707ac4c6253f2cabeba6046e2c6340f7174d35505c1a8b6fc26cdcac87171ee0ed66dca7d96cedfdd616c94cb4e442e7a4596bca72941ed3413630f81a969765ddf4ea54384cef4efeebe5c97bdab7914dad102456fde9186220ea815ab99aea7b0103e33bb63fbe0690f1079414f9f74780e6d44bfb2eafbc57e54f3ecae7b495981709817bdaa4f6ee6777d9d869e3eff054fa93d1186bb948a2f9d6de5d4f151a4382bffe02e8fcde34a9a3fbc8dce285740e4edf82c4dd405bf669d211f2b728f35ecfab08a9d45891741c4e7913dda67d70e20050a02a522f2a128ef1ff225cf7817dbb8713cd0b93cd091e382afa3af276e8d5e12063bf02d7e682b22e574d01cb86bbfa0abc3ca2a160bfa7691949363f2a5023cb580ba00636b471bc8eecb5c5793c78703e043a8fa9c6cba4cde1a52b93078a75b9186cb57a25acf3c1724f137659bf8426d4149bc8fb7cdbad5cc39159e5cc032ee1a57b7510622cbc479b23d00d869f93c47fd3527b42396d78fec793d87653c360e8164e1d85bfddb4ab40c9f480bc694c1f01cbeebdf4fe5821ceb9745f72d05df027146f73d6332addf7aa2218baef062ca88db63f612f2b92c35af84e5c53bb1cf711408bd0ad40d7410e466460f7de2cb8f9103041cf7fd31f226b8ccee59fffa8a07a26aa48d19c66077cab391cf87be19a07a87e014db66054b20f92f1a5a54cc40b60eed7b72b965bacd6b794153c5dabc3b81b696229fb5d71b41268498f3b0832d36c0f8ac58b0268502e95a56a95b07d2208a272a9fb09c12c8987337d85ac254bf5d69debbf921cd55e9e7f0d999fce4b6e19577db1c8fe7e65463830987624e279589b537e0b2a0ca3399bde060d1942a760662dfc77fd0620d3044d789fa64a7ea777325a7d622c2b9935249d18f6cafaccc32d58cf7c6fb9450a5d266f45d635fa88d1237faac150aae2e399e85b8cdec14b881528063960aed2c2959c4ce2ae6154245729f9af7474169b70d4d34d77551e179164e5f19a4234bce03e5a9dd53bf8ee24291430f108ccc263797fcc96e53d3be86b654ec778eb0ae3a60edfbbed755a81250ec4a419e4eed2f7b79803b257e7845495099f70813b3b834ac9ee32e69e849717fee2d55b37af11d507cf70115875ef1cddee7f272536dacc76824f7ba9ef8b92619000a8d4c3b041e75432fa73cd7a0917b1b87d5eb296801ec07fe2da13b6c0caeedf52d6e7a6e840368ce99622f8260f466fe99559059f1f0f93023ce9f6194f0a9f5064def3b94174b7abdde846351c16705bc4dcde97600d3e09d3c6df20f37f58410feb3ee1353cb920672413d2e57737a107b6cb3c6c0d2c71e82cf5f0680d37ba080d66220bb03d8fc4e5cf4e72405069ab47dd4c2d82fca2a76029867672ad0420fa1d7e5337aed47375420fad14cbdcf09c0ffcc8352366eeb8a26da433ae99624a27962f2494a3875a7ba68f61133b778fedf907f1aa54b3f2ebec5601601d79ae8cde2d5b955e48c4376649f851969313bb4b8b7392bd11a80316940b09eeeff3ccf447df8fd854424e5c7d93cc91569ba10ba7ef8ee2aa1c306b3516a6e739febb2a13cdb4a84a144a4c12602cc49e3c9c606c7d1b2b15061152495959fd56604e994d45b7fe6d1e67323fcae3837c17eecca9ffc1314c67c17cb9a42df3a049051ee531cf7f53422c678a10fd1bee1d9e3e2ebab3dbd88a3b082e4c22fe9971bb27baa4d006b493a712ac5da04492907341cd369ed5e1f9144849d447d9ffd994209fc3240c605a7e652f94168823807bee22347cd581f8efcd0263413bd53b86fa21104c461cb385e755553e24e4d054aa262510f7b52f06344cf261b3660a89284fd404987040ebbd706b84ba5b1959c9e16ec423e5f56668d0d93657fea570bdff91a6a774706267f284258da64c8de11f860fc413f510809d9110ea839175e99da61fc7490f8896624a5314c16d27e1e8ef564d12acfb6874fe3da3f57ed552d11de6a1dc4cc0d87c830d58fcf0b51d1e65425d242a35b2137374a65e333e9cb51fce8d0e5a844707a4451863423b9589d9d58a00877fa26290cb1c01487156e26643778e989f57762883a8e3c0d5753feecb0693c8680f1d33dc56f65df3e005baf4d97b8d394c07014c7b8a662a82ab9926556083e6cb7f71929b8a7cf89e96e3de93f6fbb9e8323ccb316c0765fdf03dbe72773b91f550fd9ffef73bffe39912aeb5c8f4f0c3a47e6f070a0e3c0e88bbaead2376ecc4b1899ba35b66302f3cfb6bc13756f6b0da95c41fd76ec3d6ea66e87369c4dde6d86386129ab2056d88e24b1d61cc4c5471bb91c8a948ae7278afb6367a928ef8ffb72efa9440f3d0437364702b632fe41a5cd48553d1fad1fc300e8c34f0ae5b1bb435818f124b4962e10eee13d57d05ae35fe1a861eb2704aad2fa75c36760cca9fd9ef950fdbf1f08405861dabe524e06de97698eeefea58bf12a9e61a1530ed9ce851a9f30ba9ea6eee1fd559f6b82acd43a74bffe23a639d6ea3cf442d320844d7b1093d0d686ede4ef59cf9463b7fd3e31b97ebc7e51983fdaf40bacc82f80fb6e6ce12dc3a16a498714e1e4dbdda8c610fdbb0cb16fe823225dc9ac58aa6794214398db2951498df2f2c1e3d605af1261824c1bf5bc88faf7fae21f7ffa9213c7408a82d17e6da700c9f1c814d4b1b033d799409f2596fecfafc09895acf07d069d887411e7a5bdbacbfec08626f84066f40191fd82d17762b9ce27b404eeaacd6546bd05941d2c56d4bb54ba2f5bda4ea7a30303e1c710c0e4ced7b014af7ea8eceb5930f7050dfdee05eb7194004fc1f9172a2b9ca61b1a63e8b27bb81050f55e8dc7646115b61e4e77d6a5a272b54bfd0053b20f9a248354d2a305609b66183a5e7da7783734403beab87b42649b9a6fe213cae0c5c50fd6c4852ee09f7df5e6cd1b88ad496505db0ac29a789a49f71269525cf3906cc37f3f98bcbbb2e86db4974c1dbbc77cbe7bc39808b2310aa5580d71433d36f2aa6cbab0e8277b49eb479c39994e5086c702cae7ab10bf7f35514bce542706ce06736e9e52e10fb92c3fd47b9190e7725637d74098e2c138c96d431a67d4cc3064d38097caaa2eee76653a8b7de3bcbf35887ffbc0417532a4b3920fe9094ad05a31cb5bdd7c2eac973ea6456cfb3dcea84761910db3d8b83b2642a2c0a5f8f66f79231588f0487ea961594370a90cd1e0013084222001392af283085d92787ee187ac6689b3db3de7ad6cf186b2db8b6d0017bd587a00329416b562b908ebad99ab2b6da4c05d432800eb1cc6cf862686d7abd2a2a6c0664db5b8f4cf78f5c8e83e08923a8130ea74d10dbf68e3df83f1cf2ea625a9aa0eebae6870f9b8577b7ef91ec38117aa6332a617d7878659b74dbdf92042c305225236a138af62976cba4db2b4d4f73833dff77f8d4342b243295e5ec1fff01a9fa3856edcfce205e9f9c84ef6d08995bc2b054255ed108ad57ee6b814cbb95549374f65248530ab49426b0cab13f71b2d8a6b706b2d56f74beb6a452eb634efe9e1cfa9e7797a3346c7d6a60544427f219be8c4d9100197e4a13fe15436d261af272ca9a1f4afc31fd49be350d9c1679fad9c11ea5d09d829c6a33034e932d18c33eb578bdc0148210fe424c65f267c7921e7bdab5fbd375e12dcb1c47d86815a07ac65b40c99452c796d205bfd7510dae17ee62a25680669a1f20a99c0ad05e848110c448b24d471fa74a4ef4e4c4f6627c986cb01e1b56ed0939e45ed170d2f666b06351ed19fbff0f0c337b8b9861f10133f58f008909d050505070b97498550e9bf501e43ecfc4a5cea7e70af06c59a79f00cabd013be509e9f013213ea415d20a4e60f148a6a5f2cbded71ab8f8fdc27165e6a480def8aa65f8a321de8b6a57b05e56531ca663b746cb5c39fe9481d75f07ef2323b23217fed16b1f5fbd7823d46f8d3d3585087daaf8cb423331b599fadf98d18a2d2dd558f9dddc30b1182ba871aa7948e700130febd5dfe9068a72476a63023cbf218433f66f29c45bde0e7762703fa976a8ed9647a3e8e7609555f63266f02eca8f05284a873ac31274bb9cd612eeadaa28c82860017abca1df49ffeb42b8eab16ed4fe113cc37c18d0053b448e4dcaa281992ab9c0d7a55de793fb2ad592f93e2816457181f61842ed678db9ae43e0c146dc708831cdb631ba68557c1aa768e518fcb9b685ade0b38cd4a088d604038d6bf4adb5dbe0399e7a08c80f8ac40665d11e4ba82145606714d6a5f06829e9a9dad1e2fa2ec234259ea71fa0cd46d04c97f5f3e80a9938eaf3115cbb7dfe68db015f8b53ed2f68eb07276dce16c0ac6b43e779a82c237c4f9435b05100afe7052394e9ff4a6c6911744d0b756480741e76e09490d6578fe737838b75bd9ff306daee649d45a8bdc68221d71dbafc59e4b231319eb3f26be095be955bd9a16041ddcf5fc6dc27e9955f375ab4dffe699493c099162406e9b676eccbabaec4f4c8b360d1ecaa44af936cbb2ef7d8b87a39b2a0f2b6ba0cbb12c8362edb0bf6014dc6c6041808632a2f618814e5cf9068f7cb271d4f0277345692413e663e341b3ba798a1eb15c4958b9b47c76bf2bc231cf9f980953690a537468d43130c8b8b0ae34936f76b4c4570189bdbebbaebbc79850c2240f26ebdd1a8360042cdd05a9fdd09ba853bbc088567a3ef07f0c3cb7642d583868fbe120ff3942dd2bb464210819d3131749d8fcb6166eeca55c8278e97ccb2a06c62d616681454fffe83cf6df4219edcc5919bd432fdc26bdf208c10326a1d07061765454989c4ab0e354c4aeeeab65ca09fc9dd518f50fcf3b17efca5e994b1beca3049f360dfab69c89e2cb81d287df14b9ec589089b8147af201f7e9ddb963af4f3ef6666b588873760ba247b35010afa58b3cacfb7d32bae1f564b6cc57afa96781bbda1534d951c4b96a4ba10b3282bbc50a2a60ee896e0be790ba9045c7615f717a9b21585758c79b34a8944721e4e99af382d46b8629baf6be4ffd370cac36edf8b7bb518edaa0d8b442293eddf51dd1957a5ccda1fbd00c246d0e0d5da6b1487590bc41b7d5dff185fc241deeba695412f9fbacb17fb5c16f707e70f003e7cfb15d1e072838909645e668942d73b681bc7664d7149accbc4c61f62f2bc7581457caf142441a8d916dedefe04043eb1d9de64944b2aec2bc0fc37bc6d7b5890660f74824d917161d6c21db56ba465af11e5483425f3091c2fb332e5b4f32e39c6533cbfd8a97b5320cce0ec1b8fff023cdae5008c3ff964c53e1efc7b207b32e6674929617424f839ce184ad843c5067f37c8999d6d49dc8c09420e47c097c6c4588d54670144761f50ea9df8fb87100903e10d0aa43c21ec52d0d84772ad3ab26fa3ec52421e4959fe8a7610d57cc013030faa087f64ecd612204de5d7fa62c5804653296f50346fa52eec05d41ac2734a17e2eeb4cad80d5b1bd8757882c35ec9b173a9419c1a50302c3f2d76456cd39e8c6f222bae3bd3c4ca05ff20a8b03b4a564796359bce05f0e951d7bb77ddec1036e7666ce63e98d528670077a8a13c9cab8929200cd593da4844845ccd6f08591a89baec80f4749d94901c3777051c045f81f79cd4e4989d5b350ef8722ee2e2aeaba4af20df61019696150eb159ed0e803b054dd3d6721f2dbab3b1de8d3205a179144c01f07e5991241345ca1b445846e7522c1adc6cc3b5bafa53780e8dcb04e54f31149e7b8aff33d01cd132b38f7e6e7ec7942829fea32d56b56557ee43aa5b0027ee1384ed11ef05b251ea2cf4683b44e37a7e99a31403ff6f682f19ccc45d6e602e6f061458f2bc9f61e11a34c6e8f1bbcd25bbfb9cddab47600b359f13bb14b0ff0f6e73560b2e4e626caaddb5a43e3497f0aa625800d12bdc81e2e969d17fdcf6d9736561ff68c242450ba229da96a9ce04305942bced34392c68ca9d0b6ab85b2b088911ba884fcb05ba3e11373f5e3f6d70c319266e8eaa0d7259c3a06bfa68aff5157d001552c44571824caa251265a361baff99a3cd36b6a1ef45732ea8d51f3a4b345a7d12efbc70890af70137161378d401b9ae45cf414021de4382b4a8f92c369b5548df6163eec2cf6a308a75d8954b67fd6717b8a46db0720b32221a94aa7cd8b839b9914b67aefe266ba9a7b251bc8919f031126ef573db305f69c1d1dc50e244a1b1010a3eda2269fcb8157c8ff2ab016df3bac8da510aa82ba65e09416a96f14cbbaec3b580b0530c97f9e03e30cb1a87c1b7e6e0aa2095e0a7273741ac4c25c748984c082ec0ec373984fa6c0f8746686ae004288da05ac6528fd3ac306476143a5c72df078a6a1cb88de543a39e9604d9d7435989f7496cec2280ce1f84118fa96e6af9e4dd5e94a0ae4cfa62a4918823192453c9e808cd256207922a5ba5cb22361b3b555995aa0f0881e51e1de26a83f4b8eba0ea23f81f2af2f951189429f75b0bc8f686ffbdf326060edc121f320face534e3843461f62f3abf80d4b6af7108cb7411e2175c3b772629697704bc99a2e4046293bf7b253b050c3a073926f2262e86b1048ca1a41a3be6577274ea40a491c2925735b46af3ef13b058c782f51fc56bcf9fb0a04bd44d545f20364ba369f9ac5a67f06c3de7155dd66266fc79aec535ab1cbc85610e93e1db5992bb17f17b8b5bc5aa8d362d692b317e68cf3a578184c4867b9b0e2f88dd01460cebe1602e78bd28836e7a3a6af5a4312cdadd68f027aa9ddcfe8b42259435364be8235d88e4c1f9b8c5ebf831c2523910bd649bff5c98275f8ecd4da86d5772516ef0b124f7c0b70af0e5aa2ae76c5f898e62e49a0be7bac19db118025c48e5a7ea5c6e3c8c7c54c6cc4d3fa9736da54e7124cf0959f3810955ddb9a421e85bf424f830d9f0b7dcfec86b225816c3eefca0b5f18708e5493d6aa2b6b340ef85fc10ed2155fd4cc804d9a7efe95aeb4df179153d19997293228ba3cfc80f9acc326e4c3199397cf33d2c94157122a83b327859d2d7eb84a8409cad6eced5fdd2921d83fd26b42c119254988832310133d155fc960e9a84c82858fb0f54183d7f7ef80191d6ff204c8ab7f54c246bafa46b5e234ea94bf5b1c3a98471625cf973420e53a450fde91251bbedcd48eba44f1eee91d52b0feb88a930e4d6ca454a7ea6400c0b9ba7cf7bec351e2b8f63ccf669bdea20c6380f58abd1690f3ba3bb0cb3da63fb27e23e645e9b9315672736518d9f36b86baaa96f24b4efc197659a80f472f18390b5cb965a4e31c1f529a29482cfba3b44dd3cb5842fc73cbef3000d4fdb27d6b2fe305d58cbbe021c615c6b7d94c65846993206379c412e32540721f0069000ae9f07b48a52e55c57289d1ab591a371d7757cd56731a48f26059062530071061c7aa3d3cafede9a731e7ba796251272c5ace5f343313250c51b778f3ab7517de2bf37f7bceb8d06159f879e04edc93de866b69c431beb6e7eb3dccb9f046dad30b36b9cb505bbfd5d25b03e95928a7c65421d54fee51176aabe42167f15683a188888fa0d5dbedb4217a6e7ba36b32e20b31c57a5d397490fd4cddd919a599af2e747941bdceb0a8b8c9859c47e136d656e67328e970eb422f2ae8a2b72b5c9a67a2caa228c44e324dd02b2e838aad2b657746b2bddc787e137467db35d983e3f32923aeb8f7967ae2de9083816ca96fbe1bec0f3b58618635ad4207ba98e61cf3d020c1deb3b2a1b64e590321884c0ac19b87a450899aef721cb29eb398c65e249c24900c2a1961dc5a3515f0f6065106939c73c71012060f1af24a14268638bdf852eeb6dabb2d49e4c715838baf4621b61377c960af2d38eed9462bb5f603676aa714db1c2e8f3680f98f2a0f3d4693199adba675b5bae7c8babee28c9ab1d04aee29b5b71768d7324a0ff23c115d6c644a78149dd12271e8396156afb5ac0470341e3be14649cf4b546a9effc582f0cb9a174b731ec62e2b769ff4ec7ae85b4f81993e0d1b70b81361ab95fb407c58e3c1b618d101650cdb29838ec59c91e0bb6d3800ebf7c66c718ee3cd4e5e42d7d412b5b40bd43a181189a389d3115f51a44f41190d1e21265cdb83f30d5623b0e5cd639dd04fccfdf01ffbccff5d710b46c8be68c02b026fdc920294281347c46eac61077c6456b29434b26c8a388e797dd42d5088bfc636ee11d5d566ffddc74be2f257b918bdabfbd93619b3b0a0bd8823ca2d35801d999119394580b00a622e9b97982d7fb733cfb25031993b4b793a4520dae2121e279797df658015c36842da748c6d023d7cc0d6be73519cb56d998698bccced70ec7d4b411af8b6db8f28f588d2c0a1768d98cebe869ecd82f8284ebc14921e7f4c09b02b4b93081f28b8a983ec6b06f5cdfeaa7475746a0ad386afcef948e3a69b5b398ce7f731907d9cee2a7cefde591b3dbf7d948f9cc843d123a3fcac03095f9100f33f22bccad6358c745b9d74b7f7b6984838b97684353bf0904dac8e228a338ad2b53fe91423f12e41402c97ba6612c1b7482612bdbc15e7a3b03b7360bfa6bce659d6e977876302606280faeb10f3f5bc68543366a9dd53443f120715bdf1f0ea38574fc9ec0f4ce0a303db33441d5072d885a30d379186fc3a1a7325d0e43bcf03c2293094634059ef00121c83f188b965cc5d1a6d574f8958f0b5aae68f9c0b7c3a22fe71d21f3bf05d07531a565ebb400e1b40d85f627e2c664327e2fc2c38608bd549947ce1730f42aabff4097f1d3f7acce9e3bc0ede95a6f3f6e392a38f928114a2675bf25c532cd083f2e7146e433a536bc12e7c8160a607705a45afdb6cf3eefa45e5422c262094426deb6002e21ebef0759c34598766fab25cd682c4e70752d8e7d9cf5236782fa8494aae04cc67a0ee226bade354115dc1296645b9d4c7f073c035707822a5966d4ea4e8a2a0903a00abb6a3515de8eaf3f5ddc744d7254d0e02e83cb98858da4827347b9b121fff1a2637a32bd102c38fd6b8508377f6b7fa3478ba0bec7decbb232b0e281c99da53a20b83b4281378f0bb30a58cb167af72de814bc79d5b0e1e264f49f23f9036f626e77e383fe7be98a546a108adad6b2eefbae1cec6bde883d50c6c64f76c8cb9777e2f7b10bea67c6e23e4a5a5736e6afe66b1b280000ce955d84a014ab2c78877f374e133b14821cbc8e40a6d29b5c6422c5fa5ac2eb6c6bbb6834fa1142e00321c7cf53ce32868ac5f7e79aa50d062ce8b356dee920d036949a2ce2802d2bb4631394b831b323ad07adb96b75b948af28e23973c189d11f2aaca336f593600ac81cefb642d4a2e0314365595467e4816de7450960dbfc4dd16630a5861120d6a40f2051c1fdbbb76c803611f395d18c747dc9afa81d87a1fae6bd16edc3b66c7d2fb6bd067a0c4aa8cca27ae522baf1bbf3a78e97ad8ed1e30ef497872de601b3b7320045f79b8b272730a2b3bca58a4918c17537ccc6131d175b417e71d13205d8f4d82a2e1b1df6e0fed82325d002d20b3767d6f25b866ed03feef32017b340e769341852e29049fe7f94db8e14f11e2432e4fc26f4eb3adb9f229b3cbf7afa0c6adee4f023489031a2c7e74f569c3ddaba97669622deb5deba571399b620dab78e934d956ec2ec81a668d63767c39694189d5ec3941fb68de6b5113a46190d490afc7d21da602a7a7013ef117d0d01da5708b92d319e9dab7b13d130435bc90f5650bbe6bf9b1114da2b7e13749a25cedf85fa76f892ffe57ea0d723f557a3cfc1659320087bc8f8e5d68bcaaf51ba812c5c41e6788d42f383dd1ce4ebbe702b7bd14785ef3f03fa7256ea8aeafe6319819c1ebb92fab82d70961930bca5691b9a29a94742ccc32b93a1c2a1734827de5a9ad528dab7354bcdd7157daad8bd3511df819bee254b456f1d9e8b9c85259830dae02653079a23262179c39a1349eafc6b1812fafca5e4e86de3f3dc905e608eb0038d010973f131ca4fd49202f67d0df9d319e4a3d97eb97829bd49f57aa909ffbe5e2cb6fc82a949fe44e8d41bce25c36b5e262c76409b667a71eb8994a707c201b975d6b326d5a2cf4abcbc195fee12bc81b29289b84b009dd631df46fea51ce3f04e3be5519a85e47daa3ccfeb52bf4d32e085ce9ded8f74847aec0345990318e81331555451f835e88ce7c1195aef9326af130a8bef2edad1acb804df8ad0fc95e03bd8db24a22fe6ae09d284cbcd056bc549b89087c542aa5748aa66ad39cd77c69cf5c942243d582a851825101af2a32a2256392c064c7c64daaa3a7e4d80f05dc2876eb9eb269ccc0c5023305c3e1a45b6db8583a89a430b8437235ea015da89be3e0e698d0b9e057247b607055c3b9c128ad5e0a4bbd355762c18b85947996a28438d26ee05a9725665372d5b4c48e579465849549353883c0fe40c30503293857716411ea69486549040d4fa019aab4795b06575e1cfffe5d1c524b43934cb22ab840da5be6bc60d7379c82c854aa78aaab77a178b0c162d720130b17e9a4520d20a7107e804868421e5ed78c14a95186ec997c5742f72c5aea4f6bdc43f93fc4e3d70038f3142b5033a7cd5aa4d84efc0c9dca540ea7c04af6713dc3a96255ddabdc5b63a33230c759ceea226f2b7c19cf110b04c6cbee313f10488eb8734729c7bac514e027c539c46d379655ed1beafd3be8603be2c286465a3850755b421521e811f02145e2140bde64c4ea52c0ed0986595b22e02168bafe7592e8f38ad8b00085ae5ec7ebec0c4a0a5d20d0b0e83f4e19cd16c9ebb5c50b79e5e5b0f308640944f58b9c357ba9d36c220b8fc6920d9bba87470279b8cb29014dc7eebda83b177a513dadd02caa4add282450bc293ff63e05f24a2c2c4fc523fad2dfd1127eaedeea03e0e083c2e07864a037f2091cde2d075b042192c7d08d74ab7d73236f57d62625f66ce8bd548888b2d75fffb6fb2eb197f15fce1692bfa6fdb3fca5775d4bccf30436a4e2b1fd38592833b264a5c31dd66cb84f928fb53bf075804056c037b67899ac3da73e3aee20420c6fa065043fd9871410c2f8cd1fe0d8756683e9a6a72d7f1403adbc1a7781bc46f17ba7cb5b8f620c225b44751e8aaf76758e87ea72144a1bbce7ea97d8bb093e593b58856ae00433acd254fccb2bf4375812900c6eda16c3646c1b767208fe18559747aa7bb4dcb082d960e754055c3e1e21eef3e8f9f7ee5896362729a81ad9b17008259456a0f96fcd567aab571697c8dddc7f0d854365ab5ba24370389e92631589213ec28d266ec61eae750ea98db34d424d84fd6503c5cc2d457f5d176c2a1a18aefdfaf9778629ba62b16d9dacd7ad523df4938b097ef850af1839224dadf0c9208271bc7a0138cf2d788d778068e9622cb9eb5e170ac5d9c401ba4fc223372282e45ac80ac301edf1fe948dde96a2eee4f654f9fcd5d8d627e1b27491adf8ab354e5197aad88c093187cbe6c55e38632f23486812a6d70e03e9ff2fa00a8c53c9603b4a246d9fe8fad8ae62b9e33101905648ee4181fc55b20e8e18c8c81a6d8af479cdecebc9aa039a58fdcec63ae6bec7af9c53dcc252ac170b11878289fdd3cda3360eafc3ebadbbb599474990d53e8f084da73660da8c2958e68084e236482756d3e832a551c6683745e77185457dfda546855101fd6d69e90cccf3e897c17d0f42398f612629645dd491e46164d63331d6c4903c107be0e18ffe3d4c146bb101ee1b8f275c0f317ed4ad63adbacd7ca1c47bc3e397db5f8f6d8598c30d6fe8c5857784f575f194088fa16ee7ae1b00cc90a5cce775e4cd1075405e9ed552e3b18c86016f1464faa4a89fcfb30394ce3ddc08bde15764609dcb359b6d7bb36c428530b9768b4f02f9288ca6bf13b1451564a1f37000baaec9737f9ee2a56bffcc1ba3beaaccd5b924c897f3b404a982d95b9d94a21982b2cd2c31de9c6cf962561621a8d8e3d1593386b9cc53b09d2d96495fb5469474ae48dc74c476cebb16c3dc90d7d0e3ed8d8cb532786bdbe736a61398520dcf2b895c835d1f2a474c8053d208eb7538a56a6079c4299ccba730f61546bc77c22b836cd149cdd223aff2da6cf016102aca494d11328c14245ca129fa4f3f701b59b3c4025889425a5d432598d69fb340af26fcfcd77663862a96df56db5f8b9cf337d8f44db50b37ba81fc2d2975e2c3921dd025decb82403ddd7e77e249517b907dd46da8c2873b099f48064f868fe10a805224d42c72ac0c72a11b2c46f611930d4252cf3016417ae17887e3d552ea1adda9e8277e6ceb99e90876c325fc026079bda0ad4be47af7c782720e6f7e728f8560ec4a1c4c6ed63ae2a8b12ad7d12652c4ad1d137a2e568faa3637f772a7b1388be08406eeca34812c9d74d0d7290d9b80a922010dbbe80572dc1155513fc35e1effd3d1747adeb990e319092de2daef3152906bf6c73a7e9ef06977170dfd901d0e804d298ead1c392af93e65a2c6c76402d9aa2ae0f84394a4926de7baae134579b81550be0afbcfc1f6698e6629ea5ed03d1df545be232ebcf200d789e71359d6a2ebffb90434e4d2cb5005cd0629e943156a03198bdcd080e612d8b5b01a9491091773aaa336cb4ab5dded31f03e12608d36a88cd260ed707a3a4f2d95b152dfb30a8b87f8b90a8693ef7f474e9f598eee00d992860e8c008e01009b8c71d91087ec9aa0b88d00d5e4ba3cee6c9ecfe0085dac9d9f4f5c92a90d2c2bfb1fa6573b857b51b6e938548242bd34154cb1d1db720c5de55e2438430e8ad9be410650f4310c2611b742742051457e7e6581cd0249651b68ffcfd39d2730622170f7aacf1e1363289efef2b96a0c4e37ab9bab534714a6a0e6e8d499bf050e32ceb8a0f13cc13847a4d97fb3adfe49390206ca55f80a2aaa1da78e42ecac7afec07695ce6ebd91642f3ce0657c379bca20967e459fcbc384833d25166747ea9c1e6f6fdaed0c3ef0326156d0f3890bed6eaebc9b2d69228c489ce701d12491030ee3b4aea9a5bfde2f12dbd7686bf89c9393cf02665899fc490892fa762372b3011d8bf4c76ed5fdbbb0416a3ad3e5536c15dd68aef627822292d119c1f0765e4f680707a94354137458e43f12be520c206db32864d99b35958196736bbed8b21e1d28cb01ff09c58422f20693f6651a07ecc9578b4d739e52ef1afbdbf5f9528dc9bd142023a924a1a6451bf2f3739567936ca3ffd4aa191511f0f37809e06f5b112ab2f25f31443a9a2340faf374ba806faf5117a6802f98c8d7b3a8be91f55c2b2721df6e2d762407605d881f329fceb9080661a57324f96567ea86ec78b0c784d6c32921971fa0b717aa902e7a6dd7ed9d88664122e4523a96508e1f4d09eb0999df158d29b964b1be9e2c7c925356c8747954973ef7ade3c1b3205918db1919fddc196af09c977d05808fa50acb7edcdd4d40b654cc74d0d993e312de96bdfaea875b8982ab015071235936654ff8e6899315b90e9c010434eb7e0ff392cdc62ffa312d305d22dff8b722b3e9419176f86dc8cd983df2b3fe97b258b90833332f113b181cc499458b894055cd53c1496fa61421890024c69056a4758d06574bc3c98dc6c3f9fa0e06f3a60f2da43e0bd14b3b6cd029c70c79bf55ca4c8b06127bc42d9a5de9bb14b4444fa1a2e8a4d3c79a3ddb5b0a458ea5fb1851ed6341938e37a1df85d1f7601c0ab29a7250cdd1cd85195bfc2dea212ac4f4ae4739fdfad39e1fe12a165799b00de1d65b773b9fd4909b1cafd6cd8a66d32a03c083ffd65041693783f69c6605e2dc85915ae28ab63f85c9c01a3bc94107b468af82830f4a4a22f0ccbbb1d9ae5879ef997eb5b37fdaeb1cb3af97cc09a85741b3b8375d0e6cc11d485b71a98eb9845f9c0f3dfbc4b00c451d78a28fd9082ccccfcc572e4643606d601192a5001c833783a460a9ee7af2a95845c0129438d1a91e5ab16982fc16c62224eeacf78d598bad4cd6b9610e04c46a7c2ffb224d3f3addb1df4779c47ad4812939298b00d52ec9854516803e961ac37926a52300eef48075d7d88fbad9f076060f27e8fd57b2f3e3e582b3cdeb322a07c303efa0fbb99f37fa1e202abe4d7d41ac62dd17ea544b520b97fcb550bd34e6ba24415070c7f51084fbe74bf4524ebc8ee8fef0a725d44d8eabd6112496e64678d2d51523adbfb838fe95e0a4428c6c5cd99ee6cfea0c5040be79ee64b9fba37bb6f23dcf6d8a5180e98d88b790881af5d4f137a6afa3b42077fb5c6a93a0931affbccee95e774dcb4ef7294a9cd977bd8667a997d48a82e37fd12f2d83c89d9d0a2b8c3dc8f21d044e92079c217b7eb3b4c43e45c61106b6d8ab0eed39bad5406cbd7bb15aae49a452c4249c247298add7aac66dcb08267eeadb814c87ee6cf88c584b62e5499f1b4a985cba75ca70a7852d96bbc93d3953ddc9cb2f1953c4ea09a5c0f14064bfd3bdc0551cdb12cfde00a05daeffcea916f6b4ad98d171b29b025019d956df7be482d0c35f30f38a938fd83a6695b2aeb16779b9f9d2343319aefd2fefb4fa7a212c0daeed07c7250bccff638a774bc4c5ec38f1f26ec6fe82311af25aae723d0e3b4d0184e193a14a5245ebb1c44b509c77e88e471e44603a638c54e6b5890833411eda0ef650b38a4f3ed1a5f03dfcfbdecef1474f0fdc6410cf7f85e3fc01c190bb44189a1e65f0f82488fffe5b1e3ec0079314a77e1ff035a1859809ea96d2b96aedc3ff6def80b15fc0483a62e16cedd4618906feef7e3954ad56902548be5e4756f815161ecd6c374e6e6faeed64bb7b4aa2744e36aef033d2b6ef89684ee207023834a2b47d782afa7c1dc2f59dc5f60dee37786f6565864d571662e64ce6e00e1cc8b966db35c21813909cb7af0b15406fcf00685dc04bd644a70ab0eef68701391020b02feb167b680b9af8611c293309e913a63addeffe6a2b01b4ee0becd826abd2c4fc8b364eb2c61468881c1de15043acda68961f3811e1f665696ac9b7d0f6c765c7e83c9417c19ffbb5475f213e7c16fa42bc6687fd5e165809242ffe54674f80710b18c22172c0ddc92622657c853797733a5939a8712663401a6fe1c44f01321697111f2adc3628cae7b009d916dc28a0e65143f09f95781eb2e88ef3866b50cef4d44d034fcb907720c37079fb89978c3fad0516e63b81fd66370a8778267367df4fca18822016edc74d3af496183779dcfd0f926117c54d335d8273f033d76a74db59528f98ae1ac26bfff800fbd3717b2988c0b63ae5bb058d2c0fd5e91d3a3c8857de5da7e6c45e03a5951ce9bfd9e79e31debd0d9c5e5b1dc75b4e0f25b8c06165ed3327b22e511c847370c0106e7e7cd0ffb7a6ceebd995f44811a647e3e24812b2318f70c32cca0c5650bb4c335675c8008be8d74abdded7754fabea01e1bcf3df119e30d49a1e1892c58dfcd7a92709c824549d2649154ee7e8732b6375613027e593a0bc45dc4d1dfd4ffe9c428432019954366819b9b161a35a6b1741aed41b88efb279bd88dfb3692be6ac9e1a85e259d35a467d5abf1abb5b034def1f312d2788f957f04bb2f83b10e6d56426cc3af02f646b8e0bcbe47b0a7c7ea6870b3e030fe27762157775b9b7e290888baadda9e725f021d3f59cdca62ad5ac4e3b1ce43307eaa83b8b672d7131f8b2f79782f4c42156b0113916bb7eb0cfabced128c852cd6376d2146089a24819782505fbec5ba1a7b1a310c57eb5408f0484805f43ffa68efd56ee595295a7222c221cd5267035dfbb78ca7dcdc073a9169decb015f476f09ecef6e53cad464068700803dd4702b52bf6d5bd31d9a3b20e691ce83b78e00c77b738db498d476a9e89d5356cdcaa14ba909e1e02929a3446ad9996615ba5776b767456f64af15975bcef9058b166490bae7df77395b25d8960594122fdae9bf139a230c000d93625c9f3cfbca1f3bcc9e87be6fa1e2a9351eb1cc8cbea7030409fe6a80d2ace1859a33568c095eff315c60362c0b80c4a29725095d5b33b4b42a72baa189587dc591504af7f62d5b87312297fb3c3b23442a43f522efc541669ef4db68ad299ff477b52bbcb4610c91ba8e60f06aa5be25a4b5876f43c929b738973d68045f2381a716f5c8680a3055e0ef9f61820d5d9dade1a1d7d27865537a3f0f39591966cfec958957f60cbb26ae088fc81f26cad558073ca88d629c975c892576182a5831b346d38e472a9ef57bd7acd073fb237c22cdc9420d42babb86e00aa5b98503a602822d6633b19e1cca9732f100ab2323bc9593edcd82e78c15caa8ca8531e413b2200b6f4cfb957583556e285fae2e1c2de961c1c016b59d8e91a68009ceea528b9d70daed158d1f0b3f974727ec182611b8af35b7e1207ce91e0192ed2985efef058a6f1cf7b6d8317473619fa1317a36305c77dca4cdd6c151f92059d2bcb9671bf347c3bfda072390bda1ffd7fdddd6a0355b244c63b744f3e5c88189093fae7626c34609d064b49038da9415d8dee4de1aaf3db9913128662e90257c58148918af90a4748a29b892f9eee95964409e1d26e1a2af276125ef6d4780ee25e2f13f18175b6b04b2bbc4f88d750b8ff8238f8bc7ac61e5480a63099b67d064045adb1727bb0e68b281bf7794fb0e4db06687665a59ae98e9a3eeb95da73c28c0a3ce893c1a26625208d5196ac463866704bb8016c375e280716b6dd1eadbb00285fe98eb1bebb342287d235222cf8d1f74ed41b2ef4cbffd26295bea7184c955a26d5b10da539f5a54bc1ec7584d4372cb5fe55c8341a703aa8f2afb22656e02cdc1db525332e44b087bff1306b83874b271d9ee093baa67c1cf16afeccc53b04dcbd72631792e525b82677ab7e89cd5a74a5ae19eb98ad4c7ad4eb9b48aa4d5a41e4f2be442b441a1fa80ed97ef3f03689a1af12ef3eee49f88ae4f1a135f49a22bb0dcb77f203283f01582d9b7080dae6ec61318fb2ec15e04c64aee8a4560165882833ba5c04a668b27c3fc844060ead3c354b3acb1c4e93658af7608963f5aeb9ae6fd88440e4ae24e4f0bf3eaedaec835e9b411788c6178cc16afe39b0aac135d7a1cd0c5598425957c3e9b817e534dfcb2b2ed5b8f657e4b3888895c3e5c558c906d8de4e7208bf1423b07ce079402fc66a236123faf8c2437dedb10cec8f2106ad2706606324eedac46a9b4812ea705bbf20704c62d144557410639021636ae76e0e1d705e61ef62d8e03a3b698804704af9ca2323f4fd1c4a95e10384036c66ac37bf75c3abf7bcb8cc6b09523b2eb157ea8050d94ebd5d134bba23472a2a33b75c4dc00ed458126d163dd1dc489c1b69d6366bdfd88169d36fb5f0a3104b74eccc661aef6dfcb5e7afc654785d02abe24549046f70f97bcd64d8eb4bb91291d7312d374974c4bded8c91a4c66c2a2c6aa9ae11205ef20ba0d014d05d9a8005e17fc6d77909f913af7e6ba6e56a4fb09c59a2f1be77cc2d66fc2be0c919b257c4b6bbc0acb01b8fd3004cd7f9e564d3c87e11f1f2eec3ecbfb872ff19e31172d5f5ddd34c54ef9268785bd055c349b6a34adb4314ef48853cbf7997d5304a20931e2fb598894cd295df7f9c36d2690502642b5562a23b4564affc9491227c440bf1717b4388b9f7a209df307938d40569f9e1670fa17f99f7816e1558867c713f59dea0540596859c39e20c226908fd6d67c03e00c3bf767e3a37bfe0fce4e69a6ca19a48c50e7043c351e579c28f322bfdb7ded697577756a37cdac3e9df6c1805a163b96be300c66287787bae5e8c19476725bb4349c18e289df55e943f8f915497f9b2e1baf844948dba064737bb1f7bc478f9777da5814770e5b6cbe566d6dcd021a0758ac51146ec2411f4840a4ab68c669d0502cae50bbe804a868b71df097a1d1c91697e5181edd9e7db26af2b05e036a374b317db396ab62ffcb30097f3044c2657a4218dfc1275d5e30089cd50dca265b67f72b4e0f2546406a01fe264fcf4f93da8260a37d93b09a0e8e02164a97d03142161b6d0a224a5c78dc078fac0d32988c8db022a2d892092513cea836e8af98097845030773d23b7cebb117cc37957a63ad65abc49bca1a498d81c65ed2427361895a43ae30114ce66615c7c1c7a773c509fc3e0980eaa2af7677ead008a12f3f3ee7a11cdfed6cee06f9356cb3c63563cbda066665103cf59d498a249f607a34538f8bec724d5fe72f97f29ab0c2526485d27c000797b2d9dba98c7b9c846d27229092db68c70e31a1232f4c014a1d1a53f57141c91af11dcd8475414e5f441036da210fbc941cfe145cb25529101de4b27b3590e5c11e01f357c05d72042317399b791ed0707cea0f58b2a54e98f98495de7a4debaec581343c97cbdcd4749e6c81633cb0f56193f21b4aa187f930ff000a61642b87df556440f9e10308ab2ba912b057927be2408f525d03a627070fbd3062e1dedddd7e79267bd142a19d3aa6a872f41e1cf796b24b5c90d73a8c02720f87527eca7c22782abe9ea3962c541b49990e02fbdaf4cbd7241acbd4fe34763b6018a6fa8ab5240e57e96d6de605ea81e8ae366f386b226c5b9999ea168661a26688ae172378de4e5476587668d8e06c1ed79108c667d64557e84eb0b5e3b3c4eec2da8fc60c1a16a2b17b2871fe912fbbc4070b1dd338aa2afbbbe985f6bc89bb31c9104bfbd37f023b5ee7ff719d8c65b7d616efa540e5e3b04c0df1801438f0298c8a38409e617c591d3e31413b1a03bd327b0d6f964d31421407c3aa21e27042d6f9ae1c5e12b7daa168e561b41df9f325fc7aa9e6033cadd63e201e14c710cb7b14d0221151256264f5872100d206cd277a16097dd6b14e101ba65589fab653c2ca26805fd68e70725dc6da576a5801f4fe5247dcc14d3337d73eb3d954c5f55da2fbaac5c49f139ea9aae6c2c4509e76dfa3fa147e1790007acdea1c3ae4280ae17b3b01c6d033226bc85967188edc55e3f7942b9f277a9c1c1283268e589d409fe5c657bf3587db42d5c909fbdd094a1afeb7d1ba9300daf6d1148b77dc45dafd369cc5785dd619c1e2f55cd662563296edc1646381c716a7fd4af8f6b7de1ab42970a60c632548350db5d9179ba38ebfa26f991b159706e2a35fcb12be7fbb600e23fcf67f0f4ac00fd79d11ef86908768f461ca65eb9a266ba4777268a61c2a0fe2e72954639fab3681590d4c82bed65d5d607d428777b18f93707f297d9903ec10969cead45fa4db1160ee7e9b2ce0502f8defb5fd8401f86e02dbce567a3799bc6b843d8ceb1fdd51d31a99da27cd4da006e159ac394e06f106e80441e304907772f5e4cd879f8bca6e61629855f76555c199c90a68ce55f57886818b9519cb7869ad43cf51df51a7a1268c87dc8ab8a2c40009baf912a82a90b6be42d43454b9dd72af6cfd1a1528bda84a7e3af547b9f65bb658a958a6a77aa9372087867bf3771d0d6ad3e5fa281823cecb731bbabf7de4441f726b513e9057b18423b6d4987069bb2f3220fdb3b10f82f15cfbbf0ba74da81b163232a4a752fb10867632e03b3dc7f8d31a43d7b95b0c79b12d9607f48ef66e4ee8b8ef974d495d20e1efc9971457fcf888114dd74e63d2f57cdf59a736ae0ab983075c8d253ba8bfdbee2fd617066eb01a1084d5470835a9012f5eec96e751bdc0167479880d2eb1d1efaf62678700ffa3222992e500a7a6d874403a624480e98eb80015796bce1acc0f6d63344f06fc8f21c056cb0eafb8a55ca811b96523019a123d6121ffde8a17cdb688eeef7dd2c54f793de60cbccd099a4c94a8eb39ddbd37e13a042e781f3e044eb6fe361665dc113a21e29e4849e2e3ab18988d2335a17f7a625bfae631a77c6b3c7d3807637a021dddefeff6fe9578a1c60fb2f41953c5eb00da1b3f5a68e2ac1b42e5d4f7f9413d6df2b1bfb868efbc7202e4f7501dfc09de10e743104418b98dfe22db8d96c270d1ef8285cdc17d19f95ec9b96f443f86ea5e3535cc54d195862fc2ae2c3910662dd64751c2dfeceb01fccc2605b8ff9c525678a718b2d8aa01519bfeaa2c3c086f06e0b99e80dced1179b175b41c17f61b12a44f5983e1f3c7a80dc2b006231d8849d4ba6eee10b3175d9b33d7d4d9105f55cc66c5877e8ce9126850cfff61e023eb262daa70308cddecd9a871f570d98a33b66035d4ef214d44067963d0a60334e894694ead58f2de57dc4c5c9b2672a3dd823c812497d24116a74b8a3bc84da9bf5094f220080b9f5866b5a8a701e106b464ef734bae70c6c648028b1053f93a0878e0c1c9aaf5db4dd3c7544f5a70a515fae3780afecb7c2b76bfee8fae162659211594adf8fecd6745b8f22693359babf4fb6e694ef84524696fed0e12561efb6c207e5a8699c4db5c3ca6b47f03772c4007b21cd60576bec55b1b9526109ff5000a210fbaf1d2f417fb1cc4bd8f08b90638f6d88eb926424c55879b5d9a5823314a25eee748374943f5a625aafb6520bc356ee85902d7f5f9d855b536295067bf307b2361e98bfbbe7d981f79181b7694017747d9fb8255faf406e24a78194c321d6ffc4120dc5904d9fbf81666fb5d9c7588738cddf4c4dd3209d48cb0eb2e440d9e1de852f94164016066dd5c9f3d4c98b2d094fee456ae539bd15f5725b7dae309dcb35c15606f680f1090cbfea071bf7c455b1a2f1507f4cd735c35c0b7342144d22ff13c7706b1d57f73a7d1188f6f1d26b025fdd5c03e25e0a70f03654e8fc38b807554956dd6b50e1a1dc56792c7e12a2be807e3e21b5434d380e2233a7a27176fba74c314c45bd83ab33634d22e072d42490e22ef978c03fd3ef69d34e56f12ad721ca2247476707a47721199d40707338e090b1a5d10de5935596f2aeadb31e8a8f40d940f5b18cf3b8a70844db40b104fc91a1332b16480811e276241dd6dd4278a59d9ea8d072ec04186daa6836d426051fd8df06e6c9dff8693b26acb17cde1539019147d714a86358ed1ff9ff44e674d591f2750418eafc5a6e0610a945105215c80b6f9c0f6b8e90d512149f5a584f1da025dfd0de8f05f1d29dae89ce279553a9cbada73c33289f928af914c86682bedacd1ebf35ca842bb3f815ec84ab8a8cc1a75c2835bec65cc93a3de22448f0342ff373e5f0b9715f8ba492811a14fe539d0955f303752b49dd0bd889e8d8e64a9b7448e3e801f5d335d36327374ef8260b2532132fcc9f365ed88abdef5d119f756c9db7f92adfc7fc4a81e72c02b6ab0306f0c25fb637a4d60592ddd2785dbda3dea7a7deec976e50bd3963783ea0b2dab8a2281faa1171669fd34a27fd24a5af2ce359cd2cca2576845adbef7dc9027a9508740832c8dd7bdefcc9acc600fa5f2ba1f7267cf9db65bd7a050642a6b4e852faf1906cf781bb42285cc7a1547b0675dcf3a4d0330458b6e8a3beff15c46a9dc8f01df66cafff12682bbdcec4cb64fe28ff792326a0993275cbb598f1d55231650b3d5cb7be8ec2547165b3c20ef6fd02f317efb6d4e369f389b566a2df2ebe786f87322c4207048a57f694f7225e3fec408d954ce35ba398dbfd7035b4b995ba3faacc962bcbe4e79256d4e152b992d51d28a821db3acf016f3222cf991f158dbf2ad1adcc8860d76cd02823d99190c4eb25a0aae67ecf60618324d298f13576a8e4c998219b37df098565b533a7af75a7d4c62f5883359c7e996b2905621d6f25a476eeb035b9270b26b4825a1a89b00b4ed6bc7889f292a5c2db66dacddb4358d60fda923f4374a4883ed8cc91dd89d4140121c4472d6070fd2d41ccb2306fcb5d7722477c036b7896c9142ead326faaa2887aa628597fdb957a33c9bc5bbc7d4f4e2521da9aa72020e52b16cb3b37d1cb58164bacf67b5d1d5fe2b0bad7135187ade7ff3a9d9464ddd514ca406cd0f1a537249e2e6dfa55b0a51450d3c11dc2f1acf1fb1a577e38d2a00ab05c464c1b2ab6869df221c140e66c093b6fc721d8355cd4fa6320c0cdf637232f11d0acff3d773dd7a76a6cd72ec79feab8ed2ec8fdf20ffe54a756aa99eb9d975c35169e17b44efc5c5914a65db0e0102a861707c1c09440043c0e6d5afd2a4eb08f24c250ec7a451d6b26fcc607ac4d3d4bea68a371bc25743e760a080d993469ac1c145b998a46a4dd879fca4fe73b4cc0a410f1464120d18aa567df97132d963a5ee560e7580b415bb3cc3a1512cf74484f3cf417e056d5325d342b0b7fe659b987ba2df957e5b640eff876b7b4e423b11c9125cfe904d855144c12f71649d05d72a182813c73fb40ddaeb2604e7d59072ae12dbf37c7ad4c996b6e40c2b87a7eff474199740fd351a241e909c12c9148d0347ed0a8ff4f6c24a21633325418d6071ec35f9c120c0373519fe834db33b60aae4603424fcb7179dfe22660afb439926b3bc0a38b80c320247b25ae3a52636cc2bc002034eb67a8e8615a6c324fa89d4dec02a541f65dcfa1dd09483edccbbcbab3f9df214986a00bbc5e411a947cfa8ac8a83b82ce6e5c6249a7217f33b962ed45f4127bd08423e212461433fe3362b23334198c552a29adf0954c29f923de0ea555454078a5691f6d9c25a1fc53442afaef58a24142c2bb053b0aec4ec686d5e56fb0d5d2ffe3a73ad608528cfc1e07fc4a85e4d9a6734496ccc45657eca06559667a7eed236a685eab19db853072fd4266f698540a5394b90a5710384e203c12f2e6e8da7badb14ccc2f2de5742353c6db7212837911042dac369cfea08e344c365bef5e367bc8e1300c4f741b438131d77a302267da5311cd2be5161eda9a63803e85723f457fdc35ae84bf9d088239fb9cee2ebca8629a77c3f0ed54f0791e4187110bf8a5c3c23ac8bcaa2962e8f0cfd223a0c7d9e008d47fe3f7ae2e1f1228c131e6b28473ddab2a78fc56788743b5d75a2b2a1ec8c758d68f41ad87405e712b2291a49babd8c7f096996342d0e4beea8d8f99b544b466dfa5592554f9ea85df92d094a2668cd436487807add4e7f26f6f984c14805c8ad3b2d45de1d0bb45466c3801d8eab75ff08c943d8c3141d5ed0d5268b674943f3104bae442b19a6e80ba3bae6d4d9cf8596d74437fbe37eced96456e0eccb0ace2a9ca6b75035bdc8cf034101f4324db50f58978325a95d167a289a33fdffb0793e3585a7784646e947fc8453705eafab2fa9ec0dcd1ee5487f66f4e34bcc8d1e19738ac3a716d4fca404440ae06c559073bd804f2098a26bc0f3afd158bd8e89a906a493da8dfcc0d0710bdffe1045a72db2aedad22183ccf9dbf8180c4cf0b9123651c20ad6af45b7c862a0ad11d4acfdb449c186bfb551c0dc1e270af9381a7e7992d999b368ac2e962dac151cac745c2faac7613dd13115df9262b01ed2a3d54154e338401110a2e442f7098ad69efd93cba70f3a1dc49607bcc863e98657de3452f3dbb1d187843a7dbba0e1c575d7904209682cd8451674eaf61f67d5b25cf3ca7836f096b1f25d98bfac6ee8abc75128c29918d1ba2e7e83d2f717607553262f976acde837f5abeee9e5d80161de9f45d16c623771eb5e72db27256941e95696ca7c1212f500559317239cecfaf2d5557527ba29e99ff6f46f6b8065f96a3e2282c30b2d0d923f0b080f40ad7ae7221b70257cf8a167841df125efa60a4f54fee84061c76711e1023bd7a960b269c01e39b11e535d25b4737e6513f01b890078329700996ba8b07edf114b2da33296bab2d88191e370447337ee9b28a4769396346cce8cd823299ab21da391f9d78c04e921040b94c2b0fcad9a33572e62d23d0b6f2949218137c0439fe8064099196a259554a8e1f2ff51850eaf8e51b8c47447b3f26af6783d20c603c12fffe3fa27a14356fdc1709db6797980e2c5a90929f621031669ed7ec23ec34072cddbf4f462bb81103369310d0ab64a5317f6b2e638d5f788619946fa006b6b67b56bb7db1c2e53e523cd5a492378ef529ddf3e6ab708d92c869186814e4230174ea329a27307780e74ea5a0d85840f460e1827dc235ee3a9fb800c8a8617529ad9dd8620b066be513ac8d6844b1ae7127389e433317fb5b34caa11506f3a0fb993258b2038907ece396832884ce756cc32cd08a03d45b12537934d5d688e7c0ed54bdfada459c8f59426ea843fb8bc9973ba3a3327d44b34730bf4f96c4508e3f2c8eaad57868851b332f11169f20fbb21aa9ded4613cee7e0e52976fc0fbcf822030f518df643e707a35e64e587010520e7a604197469ae691428e35bf4814afa963f5fa329c8c0b03c96994b5fc4dcd1e6385323334d400ea2f793c15cc7eb330f727d3ff2d9f749b08197ef7bef644191a4917fc1364b69edfb03d65f17b9211621340b67a3c1fb9116753f4ac924679d7bdebddc21daf14c8b6fa0895fb915f985dcf7cc491b0edc001942779b294f08db2f207894e4c3fb4363bf584f370553243ce7da36fd8e232d9ffc1f21ad78f87135f9595d83d995b785190f538f91ed14030d4526f1237ab4166088111f88752f9328690d7cb66d9aae3030d930ce65164ff2cabe2dade8ab4c8c4b7aa7fa42b4c1f250d9fa0d7026bcff0bec17cde4b6cdd42b30654963dd395bf66a63551e4759556838508017e7d0bcce471f413866282c840659cd5c53f2e8c7d8e6ed3c81119c4d2a6deb211c6f4849b386b7d6871193e7127e1ef86fcc81e950a798057e1dc19ddb918cc12e4c0e5ba619149341f827abe074a33d78cf047b7ef19ebbce938c592435b1963b9e45c47492dc510ec95c095da49aea282e7c8c890bdc0471e204c27de83ddc828fbe9f909e12e9f564480208f8153a401e34dec14d9aebb111e21da25a6a383d8923ee8962f3bfa5f836d1b5b4017b29ffd62dc204c021d88c09bb38c5aabba91af3ad6523123782fca741fc4d964ffa7cfe8dee8138829689a8cc415205e858353b2cc93c449cae0a11df7b00259b706dfafef6882ee393b1aca9e952c2ab014e916c73991282094928f7d62af97175f5212cdcfc4a32c1ef66862ca5063d488e0c71315b0fe3617a6ad80094f932ad0b345b9de95ebe82013e7144e145d8eba05e0ae26ef47e5035d177ac32e392bd4d3e2647b43a76a0c0f2631e11be44483ef14eead1ed13af81a57cd8903e095f5e46df850a48ff909f81b473de585ddec8a6516b0fd6a97a891e9e3bf336593958f01ba6b99988985e3ce2baaebf34e1e5226a1cd13ffa63e37ee09b8c51d0a50999e5c71616f949156b607ff7667b7961159b1afefcb9b275f5f2db2cc80b7c49774c52518b4ed621f1636b8cdfd6a9bba943db94c3268bcd3a56b6b39322a1dbc822a72dcedd8341584d512cae6a3dcdaf694eb3c80352a4e566b54b980072fe7f61fb7ea9a3bab20ffd9b84e53cdf5f8422a10d84c4d09192f8dc086d6bde4fd31565374023b68e3bdf26969a36abd524ef11515a2e139cf63581d24c807c966824ec32d389b7fad00ab9cdc3220ea339b436bed37888cde745a48ab227ce954b5fa7d564e9d53ce1a89b3381f03577f61c00b77f862587133a32e4a69421753d043def995ba7b0305de9446fb20092653c4dda189153b3d8aadcffa17cf4ee1903c4051f6c51bec853ef1545e3134fdc6ae6ba5495adc4c7c159bdbb0ce9080c14c2a349a5122eedde1db58d2de147b73da6550dff30d9ba2e9566940f164411ab67ddc8136dcc94757b7d82a2ebf05ab294406e07e70a9bd84c4b12ed64783e53c6e1d62c77627bb37ec7c4e4874a426b7eea4e530391644ca06dc205f592c89b538c34ba04a08f2a8f2057a4f0390ea1ea0b2ce73602c932029db3f234232aef593372072df9fd33554d6a5bf7caba84d053f0a3d759cb8739204f34ec907df2a8b81da73adee3fea6bcf87e500382a6e34c382980853ec2b1b41316fd4872fd38612cdd75332ac4f52c066b47cd4e40dc661c6e09e7bc81452d1564d5fa0ba4e99ca3e17468fac92f0f1b41ee6c1e820de9969ce1c318a5bb65c614a556006e8d60079351f8e83d84751ac040ccce50b910bdf48b4b5d4b97e75d234ef2ce1147ed63fc048d0c3fdf9e75b1ecdfd3aa832d53e4a94251d4d7c4e3ee8dfffb16986c462860a9dd6c13cd5460bcc5b3bdfb32efda463d564d4baaa44c3246499dba8e7be002579b516ad168664cd9bcbe0f4c6e67fd5763ed2ab1fc6e3460c833a87ffe2bbd23fdd1b04a29e6b939c6da4f7dc9aa9849fffdf8de82ddb76f4f7ef978114260e1a9beeaa9b7863fca098e182548fe0c1e83e879e465aeae1964fa0610fabc15067379d0faa85a0c74a5288ce9a0c2c796e04ed8d6d394070628e8712c73d7e4d34cb87c4c97a310cba714aae6d3c53181ea055c4dacaf864438bf38fe3c478317e8667934886ad4c606b96fb1eec51718546be7ecb41e107d512bddcf64a29085d60d0ccf51c912c991a7b47905129870e8e23ceeed30c0fcab87bd3e00a3cd5b953691a0f9ce2593892901eaf4fb04aea1bff83a972cd1e5cb68d0505461ae8307c3e3ea36a7520503580fb0a9deb745686a147160f50a672b4f707842e0553814bacc6d4ad496e22b329d0cbb84094e63e6deecc72f8e1bdd531aa2788210ea7a3dc1c4ead13aaebde96022e9e87c1e8ed22da1f4a73d134ae2110f95b509868273108e2354ba1bbbaf7f9f7c2bb69a2ea051fcdcb07c25a1510157280aa68f8e2c6a4abe83500e4e0a814b447ee2a28cd6f3cceb00ae5b328739409143b1fff2cf43382e5bb2755b76bd9f4ab29c5d5aea982a5f2dad4c87d795a112625726d88d71cc7193eca52f23b8e3725c9d8919da6cb9432c7430a0d089f3b14be4cec87a1477ec3671fbcbabbdf32eb0654845f4dda8955f8bf3faa7124a51970e44340b907b89676ba6598719e8a50d2df8961d5c6544a8363b933a73dc6210e59109cb9083f2a87364d69569a82e5054f101e62a880fb416d01509c9473ff54d63c7c25353f5db363cb607da1a431a49f13c5de5dc2470e8affc65b028838c14ec296dfbe236bc321b36c8cfcdaba7058a3f8a1b2115c0eb5d25a2ad0e46499f4ff65b76e05de7b7ca34fa7432b5b6f0937ae68cbd69cd4efab988c4f5d8d66168c4cc64dcec5e12feb641e66903f225457b480e2e729d3f60bc8d22af80dd29d71adf72da6ec861dcbbb22191260c5f0960e1d57a4539f02ffc7309b1c31681ef5b6fb5f1af55c87b2338be694fbd573bfbe59522d940a330452c0d27cf21b839d8e94fcc7b3dc9b4dd69eb1389bfe67de67a92c54753515ffea10daa4a00cbf084df158f5fd0176eca63b7a353cd2ea82f9e485f321e6d4469b31e84867c8612f857b08f33810cb057b3a25f29884d5f9de0776aeeef774a26bdf32ace7a37cc080d1bb74ec3b157f2fed17ffd4a15d64266dfe4e952906bb883dab67b3faa21ea821d38ad933ffbd89d6dbfa907ff7189864203e6743acb3831f6e9b7e4f7e0b93602cd33f2c078c62cb7c3954b57192abbbaedbd37f4b5f6a954d37d18dd96752f9caeec61599d32c339931af0d89d2306492d1c3c3ec5e4b52cc38313f392defe90f3279ff43af3f40b573fe679132f70acd7afd33cf42ef33c7de7b4abc45463656fb56912c9cbcb572c93a5997e727dfcbeefdb725c161aab62e73a052ff4964b1f0836be87eeb27e664a69373bb0f8f9c999b4541b302b2ecf901bbefd464dfeeddae72d741c6af12b3ff25720548ce6281f1bcf7a6ab2f825041fa1ca22f30b32a1b68c2e80ce7a33266ad48988ba6fdbaa12e4bf73d491c2a53bf9f7f92d3772ee30c76fd424809a4a2350f01e92de833f2109f998f59881f3b2780fe8006b63a716cd409770c3e32920582fbdf37142311502517b167016054911b204355848531f8f4bab55695429db4b7667db1c74a61865283668eb818f04bab345bf657e07b80654e775d2e925c5137bba27fa18e34de5cbb4448cb356fce8fe2254d42afbbb327828ed5aa9d84d86970e7702f7fe9aad2d4751c0127489d0b2792dadb6ebe178e3918aa70f000ee55638967a635f15d2505ca68f207c05e24f945e3755c844722b4f8251cbd2ed7f76dbba907c491ec513abc5fc19fc2d4d7b75b2dbe818895386be91ff70f28dc54ee50d7407af119943c1ea762cb3e392e83edf0c25109497689d1d37dcf2c5b2acc8034cc0f87c96b48deb36b6e07615adb75d8b1fc855080085e9100b426b4a2f675137f9f3c59920cc1e25dc42569783fe5d6205a5467c7325b5c82cf6919beb1ed3d7d92218b87344dc868992ce87ef95ad80acfe83d0e2b09e8e8421b3916e1b37570dd8a1d09b6adad538f3594aad1eb9d7ffbe782aabc6c552428dae33dd4705daad8696845d7ab0b7a747436792004a75885e26d16bcf2a9b0b838173dfc6fd4c8fc8c35f38c869894a552e6c04d20ec527c407e9bf9a519c8d53ba2f0396ade020dfe17ba4bba757eea3e02fcf732af17d6365b832ff25d1549455a72d00879132920bfe8a5b1256bf25e5695725fb372a3125bed06cc990c4a7cf6ae365272b3b7c99b0b51372b16e31f29799e7da9d3a44c58e345ec57a73feee6596c68ca309d446c4bd5d2dd5ad55d5bc9883ff1685d6fbc6708a2d49ec61dc5fa11b31793a9f37c0d93612cb4d2284a7fd92caa66b83c464a85e73c984b43429e20005b6285c622fc4834718d7914cca104063fd2954b19e162a80a6b1cf727ae8b90b2d08a0f66cef8d8c0b763671de5df6fd0020a65d89672fb31a32d2c24044da6b5682590b3c4a9c726ad79589d021a258d7dc9c538f0d60684e935d739ecd3385b0916d39adf03b028d614ac1f8f3e09e7768f6022232b597e57a5307057393847f87abff493b782f50f482b4f4a77944583a718c45b619c34e1af50006599fc9bd8a57af0ac4c7f6c68d67d68a743b3ef14c18a4807e406bd371d578461da40844433569ef3ce565afffc83b1162d9000565f7ff2e80a573b8b5f4f05c618d2daca0db92bbf7138a92fc51c4f301b8f2b22388712876b72164c4dd72e490ce6f29f726dad02a736d2cb111d52442758a85a2b4bdd36bad4267bb79859db180a0a1014c80c0d897887a45b8e1f4a0a9424b70b12132a51fd41519fde492adf2ab477d6e8172608fb2d43865314b146f53f0f893551863c725e4dbcf7acdf2d9069d7be6ceeaeffbb9f2d854624f104328d0716cd7c2b902013ac0c0ae105083ff5008a6b26d707030730e9ca6cb90469c5b6df209e705430fbf3df534c776e24690cb33541950a323ff2607eab6a0cff92578d02691e866c3d508a840cd7235c68b872e792f51c97aebc71e1cb5824c5421cdc60bd3bc0339f3ae512c2c37d991db8ea106f99507a7e3a517161e494031cee9f60cb70bd6c1bee45b428aefbe0336b032ec1ccf25c920a4f7d37a0b36446fe5c07a6e2894ffa75f9aaf88dbf9f1cbc1288dc631e156741b018adecce60ff407d339069727e6dfd9e266cdd3656ae26c9a283a49847a9d74e709351e556fdb2fd2ae0ed3a95a20168e5b7fdc13e298d94d75776e331713ff949781c4b3745021083a644f482b4f4153a7a19e8f449de3f1ee50dad45795c1ecd197175208682253ecb91b6e58795913bed75f3bd336521747aa7cb825d64f2d5a97dade0bea60cfcb1fbc5f9749df65c582063c254addaf5a98b342834f857554fdef51d6d29079ab160fe1f5cfc1cc3e630ad12c2386104b27d9017a3d790658babce180ae437fb90ef5f6ced416a472801655d562e118187530a8a743081f6ea24b4b41f85ea7f179493ef8e087516c84683a7a602e93d5df0206ff3985fc1965c1e91fc062e7e69949e2d1a1e0a761474f5cdad9087bd2799eb35bbd5c46b9e01b1e2c96c4b9196155dade17625cda27a698a8c0fce637d8cf28728fa6900f5496148a4486b74f29b00aef89303b89ace9515c8a3d0bbc11878d40ca42660268a764d34528eebd98da0a5b3c60338e345e4fa49810be081bd6e1eeb514f048cd0f88fefc5946463dac76af9e6e9c7cb87743562ac85edb9c3eebb4fd539f6c10bd68944d096a098a6875f48740e4012a45ecd019cfa8f841cf08023e0af0c4e03aab34d3e4834eeb6e35ded5a5907ec9b69ac3040749678c25243b3a271577eb1256ca4749bf0ab0024c3a87a533c3c84ad7a17709f25c31834a46ded4f24f9624bf5e051e1d272fe588f65ce3944050451de963077a7173336e0617ed6c82fe5b81008de4863417bdfe90181d72673f790bee0837c632a1a4ca11c3b6eece9c4a7a46ccb115b8f5d79726d2b423b1adccecb5ce3bf305b3ba450f2edbe622cd1034c9b2a98e6302ebe4a6da01442e243ed0078dfcaa05f4773eec2f519b175c60cf8bbd703855a7fffb17b8c0e16ff8128976425ba4e911e799949af7d8a6e81ae21804babf10ba184ce8af91060f2fdb572d5a11f4782cf84b2a999d97dc80ac97babd3d719961ff5264f20092b8fc2928c46991cb7f5b5cfcc00285e96df310297d2d6f5fe8a7962f4936586da14324066bac1a7d594a4b5b16e54d379ee1dc534377335ad3b059db2178a411060ada8a72ee002379495168361e7b4e3b0136fc3c24eefd5284150ba5849cde7305257b22c29f9e26efbc216d69cfefa8e9bfdb6823cf6ab623331ed61c012f7ab70404422fdd669b273750197d3155bedf282debefbbb779db750266f238899f7a597d76125244a5ce5663d4b06255be5b3060f1a032329c30edd4de4731261bb0e63626aa68dc8cb444ea048adeff90272800ad68118c94ac2e3d6a2e5d457f639e7ca09a8e3471037cc9b5e07add553f733afeb6aeef58320000c2a0230effd3d1d9eb20e34abd8ea56f98f94692a99d5b5077fe1da35ce9f1ad1dfee6e025a66cdfa01b2b5581e575d844c404b167034676f709ce770bbac1d7ba6eea4694d0bea39fcb4240e67fd382267b3f5b2118d48eb9f7bacf81065755a2db83a8a5dd53a09cc7b19896a9bd8cb63dc27a8f229b0ffbce72f7179b26ca9bdb2b2c967b9795e672277399b97a92a91f97c5463d5ffb01aaaa1d2216d1fdacf33568508944ba9a5481bc378ffe65dd7ea94440f5efbef564ebe99939c1da586b3b4ccb21d97b2122ba9edbb74ddcace3cda0a41bd9537089ddd2c8faae472c16f906750d84648e5269f10ac37f8b32367e557454b0de1fcb1018af36f597d9bf4a302be9984c2a66187f6068c9f02374a99c28be71f0f0163146b261efc05f2abc942baeaf94dc338ee35a7d3d2ef9e4e0f084af61b454ce82ac62fdff4537aa0cbcc7048f8b7db66eeb5a056dee76626e00f222f463fc19d6199211d5380ca0e3fda60117294ca5b15f173e64d109e9bdb66a4c825712926a561b228322c493463b7508b879c9afe92f3b38f5d6e3ffff5c98520d8987f3e4163e56b62a18f3dc45353d496ccbfb398e4023b0d0e5b4ef04539f08d09386852895096f12a85653947880a0a20aed369a41971a45ec73b4575a2d4feaf03e392cda78f566f7853c30e649c1a6b9ccc7d58d087a8d1aa33a5988273aa1570e1a6617631759909948d909488ff90a47925cd2c87a6f471f85cda0c8a873a14f5a6f9fff6c77420a217eaf6491f8771114179736611329d156920c0ee65eedecac095e18243e43ffd11fd0de95185f1599ffac60d733e1d087dda9d768640d04c7115eea71e0f53d11f6cf6d4004225fa65071ce55a782d7ad00ced1a98fc7de0a9bb85e571efa517aa2659c440389f5041431595b43578d8227d7efe0ea748b63b0f9c4a64dd1f259ae13307b92a7edc3db7be0fc39f5ebfc645c9dc4a04f590a03053199365760c70de51ce65c845a96b285401f4665aa8a54c47cad074e61e3e898cdeb6f093b86a2bd72bf1e12ac3c8cfedaab45e0f85eda61d0b22a2e964e55f4f5b7e8bb633f27adaacd4a6d007bcdb52c243fd7814d6c2b947e8b3f10de5f0def189c746b6cade5aeb026cc691a080a622ddfaa640a581f9aa273930cf13a942e70e51a2242152460dad21b222627f4965af6c8bf528374a31d7e485dcffd547484f32461cb20240828e6758cfa2dece101352af5a6828e7b101174cdc57cfbd1d31b63803039a2dda52dcf92cb223aeea382460d50974538e4504db098c5b6888daaeb5f7e0f2c01ee721c95240f356c186716e62c62dc51a747698e26eda960769f6e841ce65322582f157f97ccede3ae7d2f0219c47c7aa332d6a90184281bd7e1ada47979ee81ec2dc22b5985e4329614e7a23b9f</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-shrink">
      <input class="hbe hbe-input-field hbe-input-field-shrink" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-shrink" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-shrink">密码:东南西的国籍,三个大写字母.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/blog/lib/hbe.js"></script><link href="/blog/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>数学笔记</category>
      </categories>
      <tags>
        <tag>以头抢地(诚)</tag>
      </tags>
  </entry>
  <entry>
    <title>关于stat的笔记 - estimation</title>
    <url>/blog/2021/05/12/P194/</url>
    <content><![CDATA[<script async
  src="//mathjax.rstudio.com/latest/MathJax.js?config=TeX-MML-AM_CHTML">
</script>
<p>为stat331附录的estimation相关代码.</p>
<span id="more"></span>

<br>
<br>
<br>

<h2 id="Simple-Linear-Regression"><a href="#Simple-Linear-Regression" class="headerlink" title="Simple Linear Regression"></a>Simple Linear Regression</h2><p><code>$y_i =β_0 +β_1*x_i +ε_i, ε_i ∼N(0,σ )$</code></p>
<br>
<br>

<p>我们通过Least Squares Estimation来estimate<code>$β_0$</code>和<code>$β_1$</code>.<br>(省略证明的步骤)<br><code>$\hat&#123;β_1 ^&#123;LS&#125;&#125; = \frac&#123;\sum (y_i - \bar&#123;y&#125;)(x_i - \bar&#123;x&#125;)&#125;&#123;\sum (x_i - \bar&#123;x&#125;)^2&#125;$</code></p>
<p><code>$\hat&#123;β_1 ^&#123;LS&#125;&#125; = \frac&#123;S_&#123;xy&#125;&#125;&#123;S_&#123;xx&#125;&#125;$</code></p>
<p><code>$\hat&#123;β_0 ^&#123;LS&#125;&#125; = \bar&#123;y&#125; - \hat&#123;β_1 ^&#123;LS&#125;&#125;$</code></p>
<p>Maximum Likelihood Estimation和Least Squares Estimation估算的<code>$β_0$</code>和<code>$β_1$</code>是一样的.</p>
<p><code>$\hat&#123;σ&#125;_&#123;ML&#125;^2=\frac&#123;\sum_&#123;i=1&#125;^ne_i^2&#125;&#123;n&#125;$</code></p>
<p><code>$\hat&#123;σ&#125;^2=\frac&#123;\sum_&#123;i=1&#125;^ne_i^2&#125;&#123;n-2&#125;$</code></p>
<p>当n大于50时,这两个没什么区别.</p>
<br>
<br>

<p>注: <code>$S_&#123;xy&#125; = \sum (x_i - \bar(x))(y_i - \bar(y))$</code><br>同理 <code>$S_&#123;xx&#125; = \sum (x_i - \bar(x))^2$</code></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment">#--------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># lecture 2</span></span><br><span class="line"><span class="comment">#--------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">## correlation demo:</span></span><br><span class="line">N &lt;- 2000 <span class="comment">## sample size</span></span><br><span class="line">b0 &lt;- 0   <span class="comment">## intercept</span></span><br><span class="line">b1 &lt;- 0.5 <span class="comment">## slope</span></span><br><span class="line">sig &lt;- 0.2 <span class="comment">## sd of errors (sigma)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## generate data</span></span><br><span class="line">x &lt;- rnorm(N,<span class="number">0</span>,<span class="number">1</span>) <span class="comment">## covariates</span></span><br><span class="line">y &lt;- rnorm(N,b0+b1*x,sig) <span class="comment">## outcomes</span></span><br><span class="line">y2 &lt;- 2*y</span><br><span class="line"></span><br><span class="line">par(mfrow=<span class="built_in">c</span>(<span class="number">1</span>,<span class="number">2</span>))</span><br><span class="line">plot(y~x,xlim=<span class="built_in">c</span>(-<span class="number">4</span>,<span class="number">4</span>),ylim=<span class="built_in">c</span>(-<span class="number">3</span>,<span class="number">3</span>)) <span class="comment">## scatterplot</span></span><br><span class="line">abline(b0,b1,lwd=<span class="number">2</span>,col=<span class="string">&quot;blue&quot;</span>) <span class="comment">## true line</span></span><br><span class="line"><span class="built_in">round</span>(cor(y,x),<span class="number">2</span>) <span class="comment">## correlation</span></span><br><span class="line"></span><br><span class="line">plot(y2~x,xlim=<span class="built_in">c</span>(-<span class="number">4</span>,<span class="number">4</span>),ylim=<span class="built_in">c</span>(-<span class="number">3</span>,<span class="number">3</span>)) <span class="comment">## scatterplot</span></span><br><span class="line">abline(b0,<span class="number">2</span>*b1,lwd=<span class="number">2</span>,col=<span class="string">&quot;blue&quot;</span>) <span class="comment">## true line</span></span><br><span class="line"><span class="built_in">round</span>(cor(y2,x),<span class="number">2</span>) <span class="comment">## correlation</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#-------------------------------</span></span><br><span class="line"><span class="comment">### Back to Data</span></span><br><span class="line"><span class="comment"># load Dr. Gladstone&#x27;s brain data</span></span><br><span class="line">brain &lt;- read.csv(file = <span class="string">&quot;brainhead.csv&quot;</span>)</span><br><span class="line">head(brain) <span class="comment"># take a peek at the data</span></span><br><span class="line">summary(brain) <span class="comment"># summarize the data</span></span><br><span class="line"><span class="comment"># create variable names that require less typing</span></span><br><span class="line">x &lt;- brain$head.size <span class="comment"># head size</span></span><br><span class="line">y &lt;- brain$brain.wgt <span class="comment"># brain weight</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># histograms</span></span><br><span class="line">par(mfrow=<span class="built_in">c</span>(<span class="number">1</span>,<span class="number">2</span>))</span><br><span class="line">hist(x,main=<span class="string">&quot;Head Size (cm^3)&quot;</span>)</span><br><span class="line">hist(y,main=<span class="string">&quot;Brain Weight (grams)&quot;</span>)</span><br><span class="line">par(mfrow=<span class="built_in">c</span>(<span class="number">1</span>,<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">### point estimates for beta0, beta1, and sigma</span></span><br><span class="line"><span class="comment"># prepare some quantities</span></span><br><span class="line">xbar &lt;- mean(x)</span><br><span class="line">ybar &lt;- mean(y)</span><br><span class="line">Sxy &lt;- <span class="built_in">sum</span>( (y-ybar) * (x-xbar) )</span><br><span class="line">Sxx &lt;- <span class="built_in">sum</span>( (x-xbar)^<span class="number">2</span> )</span><br><span class="line">n &lt;- <span class="built_in">length</span>(y) <span class="comment"># number of observations</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># beta1 (MLE)</span></span><br><span class="line">b1.hat &lt;- cov(y,x)/var(x) <span class="comment"># quick way: sample covar. / sample var.</span></span><br><span class="line"><span class="built_in">c</span>(b1.hat, Sxy/Sxx) <span class="comment"># compare to longer way</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># beta0 (MLE)</span></span><br><span class="line">b0.hat &lt;- ybar - b1.hat * xbar</span><br><span class="line"></span><br><span class="line"><span class="comment"># sigma2 (Unbiased estimate)</span></span><br><span class="line">yfit &lt;- b0.hat + b1.hat * x <span class="comment"># fitted values</span></span><br><span class="line">e &lt;- y - yfit <span class="comment"># residuals</span></span><br><span class="line">sig2.hat &lt;- <span class="built_in">sum</span>(e^<span class="number">2</span>)/(n-<span class="number">2</span>)</span><br><span class="line">sig.hat &lt;- <span class="built_in">sqrt</span>(sig2.hat)</span><br><span class="line"></span><br><span class="line"><span class="comment"># display</span></span><br><span class="line"><span class="built_in">round</span>(<span class="built_in">c</span>(b0.hat,b1.hat,sig.hat),<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># OLS using built-in R functions</span></span><br><span class="line"><span class="comment"># 做model</span></span><br><span class="line"></span><br><span class="line">M &lt;- lm(y ~ x) <span class="comment"># fit (l)inear (m)odel</span></span><br><span class="line">M</span><br><span class="line"><span class="comment"># The return object is called a list</span></span><br><span class="line">typeof(M)</span><br><span class="line"><span class="built_in">names</span>(M) <span class="comment"># see ?lm for meaning of each element</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># regression coefficients (betas)</span></span><br><span class="line"><span class="built_in">round</span>(M$coefficients,<span class="number">3</span>) <span class="comment"># access via list element</span></span><br><span class="line"><span class="built_in">round</span>(coef(M),<span class="number">3</span>) <span class="comment"># access via accessor function.  see ?lm for others.</span></span><br><span class="line"><span class="built_in">round</span>(<span class="built_in">c</span>(b0.hat, b1.hat),<span class="number">3</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>


<br>
<br>
<br>

<h3 id="Confidence-Intervals"><a href="#Confidence-Intervals" class="headerlink" title="Confidence Intervals"></a>Confidence Intervals</h3><p>注意confidence intervals分为知道sigma和不知道sigma.<br>知道sigma用normal distribution,不知道用t distribution.</p>
<p>通过MLE的distribution得知<br><code>$Z = \frac&#123;\hat&#123;\beta_1&#125; - \beta_1&#125;&#123;\sigma / \sqrt&#123;S_&#123;xx&#125;&#125;&#125; ∼N(0,1)$</code><br><code>$V = \frac&#123;1&#125;&#123;\sigma^2&#125;\sum_&#123;i=1&#125;^n e_i^2 ∼X_&#123;n-2&#125;^2$</code><br>在知道sigma的情况下,95%的<code>$\beta_1 = \hat&#123;\beta_1&#125; \pm 1.96\frac&#123;\sigma&#125;&#123;\sqrt&#123;S_&#123;xx&#125;&#125;&#125;$</code><br>1.96是Z常数.</p>
<p>不知道sigma的情况下,我们使用<code>$\frac&#123;\hat&#123;\beta_1&#125; - \beta_1&#125;&#123;\hat&#123;\sigma&#125; / \sqrt&#123;S_&#123;xx&#125;&#125;&#125; ∼t_&#123;n-2&#125;^2$</code>,95%的<code>$\beta_1 = \hat&#123;\beta_1&#125; \pm q\frac&#123;\hat&#123;\sigma&#125;&#125;&#123;\sqrt&#123;S_&#123;xx&#125;&#125;&#125;$</code><br>q由r计算.写作<code>$t_&#123;1-\alpha/2,n-2&#125;$</code></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">qt(p = <span class="number">0.05</span>/<span class="number">2</span>, df = n-<span class="number">2</span>, lower.tail = <span class="literal">FALSE</span>)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>虽然老师讲了很多的代码但不如直接用r自带的confint built-in function好了.</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">conf &lt;- 0.95 <span class="comment"># size of confidence interval (1-alpha)</span></span><br><span class="line">qval &lt;- -qt(p = (<span class="number">1</span>-conf)/<span class="number">2</span>, df = n-<span class="number">2</span>) <span class="comment"># inverse-cdf of a t(n-2)</span></span><br><span class="line">qval &lt;- qt(p = (<span class="number">1</span>-conf)/<span class="number">2</span>, df = n-<span class="number">2</span>, lower.tail = <span class="literal">FALSE</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># CI for beta1</span></span><br><span class="line">s1 &lt;- sig.hat / <span class="built_in">sqrt</span>(Sxx) <span class="comment"># standard error</span></span><br><span class="line"></span><br><span class="line">b1.CI &lt;- b1.hat + <span class="built_in">c</span>(-<span class="number">1</span>,<span class="number">1</span>) * qval * s1 <span class="comment"># confidence interval</span></span><br><span class="line"><span class="built_in">names</span>(b1.CI) &lt;- <span class="built_in">c</span>(<span class="string">&quot;L&quot;</span>, <span class="string">&quot;U&quot;</span>)</span><br><span class="line"><span class="built_in">round</span>(b1.CI,digits=<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># CI for beta0</span></span><br><span class="line">s0 &lt;- sig.hat * <span class="built_in">sqrt</span>(<span class="number">1</span>/n + xbar^<span class="number">2</span>/Sxx) <span class="comment"># standard error</span></span><br><span class="line"></span><br><span class="line">b0.CI &lt;- b0.hat + <span class="built_in">c</span>(-<span class="number">1</span>,<span class="number">1</span>) * qval * s0</span><br><span class="line"><span class="built_in">names</span>(b0.CI) &lt;- <span class="built_in">c</span>(<span class="string">&quot;L&quot;</span>, <span class="string">&quot;U&quot;</span>)</span><br><span class="line"><span class="built_in">round</span>(b0.CI,digits=<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Compare to built-in functions</span></span><br><span class="line">confint(M)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<br>
<br>
<br>

<h3 id="Hypothesis-Testing"><a href="#Hypothesis-Testing" class="headerlink" title="Hypothesis Testing"></a>Hypothesis Testing</h3><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># H0: beta1 = 0</span></span><br><span class="line"><span class="comment"># test statistic: T = beta1.hat/s1</span></span><br><span class="line"><span class="comment"># T | H0 ~ t_(n-2)</span></span><br><span class="line"><span class="comment"># pval = P( |T| &gt; |Tobs|  |  H0 )</span></span><br><span class="line"></span><br><span class="line">Tobs &lt;- b1.hat/s1 <span class="comment"># observed value of test statistic</span></span><br><span class="line">Tobs</span><br><span class="line"></span><br><span class="line"><span class="comment"># want P(|T| &gt; |Tobs| | H0)</span></span><br><span class="line">pval &lt;- pt(q = <span class="built_in">abs</span>(Tobs),               <span class="comment"># |Tobs|</span></span><br><span class="line">           df = n-<span class="number">2</span>,                    <span class="comment"># degrees of freedom</span></span><br><span class="line">           lower.tail = <span class="literal">FALSE</span>)          <span class="comment"># return P( T &gt; |Tobs|)</span></span><br><span class="line">pval &lt;- 2*pval                          <span class="comment"># add P( T &lt; |Tobs|)</span></span><br><span class="line">pval</span><br><span class="line"></span><br><span class="line"><span class="comment"># compare to built in function</span></span><br><span class="line">summary(M)</span><br></pre></td></tr></table></figure>

<br>
<br>
<br>

<h2 id="Multiple-Linear-Regression"><a href="#Multiple-Linear-Regression" class="headerlink" title="Multiple Linear Regression"></a>Multiple Linear Regression</h2><p>也就是多个系数的model.</p>
<img src="/blog/2021/05/12/P194/P194_10.png" class="">
<img src="/blog/2021/05/12/P194/P194_13.png" class="">

<p>其中有系数是categorical的,需要特殊处理.</p>
<img src="/blog/2021/05/12/P194/P194_11.png" class="">

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#--- categorical predictors ------------------------------------------------</span></span><br><span class="line"><span class="comment"># data</span></span><br><span class="line">mercury &lt;- read.csv(<span class="string">&quot;fishermen_mercury.csv&quot;</span>)</span><br><span class="line">head(mercury)</span><br><span class="line"></span><br><span class="line"><span class="comment"># predict MeHg as a function of weight and fishpart</span></span><br><span class="line">M &lt;- lm(MeHg ~ weight + fishpart, data = mercury)</span><br><span class="line">summary(M)</span><br><span class="line"></span><br><span class="line"><span class="comment"># since fishpart is coded as:</span></span><br><span class="line"><span class="comment"># None = 0, Muscle = 1, Muscle/Whole = 2, Whole = 3</span></span><br><span class="line"><span class="comment"># model assumes increase in expected MeHg from None to Muscle is</span></span><br><span class="line"><span class="comment"># exactly equal to increase in expected MeHg from Muscle to Muscle/Whole.</span></span><br><span class="line"><span class="comment"># Imagine if we encoded: None = 0, M = 10, MW = 11, W = 20?</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># the &quot;design matrix&quot; X for the problem</span></span><br><span class="line">head(model.matrix(M))</span><br><span class="line"></span><br><span class="line"><span class="comment">#--- fishpart as categorical predictor -------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># convert fishpart to non-numeric categorical variable</span></span><br><span class="line">fishpart2 &lt;- mercury$fishpart</span><br><span class="line">table(fishpart2)</span><br><span class="line"></span><br><span class="line"><span class="comment"># &quot;levels&quot; of variable fishpart</span></span><br><span class="line">fplevels &lt;- <span class="built_in">c</span>(<span class="string">&quot;none&quot;</span>, <span class="string">&quot;muscle&quot;</span>, <span class="string">&quot;muscle_whole&quot;</span>, <span class="string">&quot;whole&quot;</span>)</span><br><span class="line"><span class="comment"># using for-loop</span></span><br><span class="line"><span class="keyword">for</span>(ii <span class="keyword">in</span> <span class="number">0</span>:<span class="number">3</span>) &#123;</span><br><span class="line">  fishpart2[fishpart2 == ii] &lt;- fplevels[ii+<span class="number">1</span>]</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># without for-loop</span></span><br><span class="line"><span class="built_in">all</span>(fplevels[mercury$fishpart+<span class="number">1</span>] == fishpart2)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># in R, categorical variables are coded as &quot;factor&quot; variables</span></span><br><span class="line">tmp &lt;- factor(fishpart2)</span><br><span class="line">head(tmp)</span><br><span class="line">levels(tmp) <span class="comment"># alphabetical group ordering</span></span><br><span class="line"></span><br><span class="line">fishpart2 &lt;- factor(fishpart2, levels = fplevels) <span class="comment"># custom ordering</span></span><br><span class="line">levels(fishpart2)</span><br><span class="line"></span><br><span class="line">mercury$fishpart &lt;- fishpart2 <span class="comment"># replace in dataset</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># run regression in R:</span></span><br><span class="line">Mb &lt;- lm(MeHg ~ weight + fishpart, data = mercury) <span class="comment"># intercept model (I)</span></span><br><span class="line">Mc &lt;- lm(MeHg ~ weight + fishpart - <span class="number">1</span>,         <span class="comment"># no-intercept model (0)</span></span><br><span class="line">         data = mercury)          <span class="comment"># note the &quot;-1&quot; to remove intercept</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># compare design matrices at selected values</span></span><br><span class="line">ind &lt;- <span class="built_in">c</span>(<span class="number">102</span>, <span class="number">35</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">14</span>, <span class="number">106</span>)</span><br><span class="line"></span><br><span class="line">mercury[ind, <span class="built_in">c</span>(<span class="string">&quot;MeHg&quot;</span>, <span class="string">&quot;weight&quot;</span>, <span class="string">&quot;fishpart&quot;</span>)] <span class="comment"># original dataset</span></span><br><span class="line">model.matrix(Mb)[ind,] <span class="comment"># with intercept model</span></span><br><span class="line">model.matrix(Mc)[ind,] <span class="comment"># no intercept model</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># interpretation of parameters:</span></span><br><span class="line">coef(Mb)</span><br><span class="line"><span class="comment"># fishpartmuscle: estimate of E[MeHg | ...]</span></span><br><span class="line"></span><br><span class="line">coef(Mc)</span><br><span class="line"><span class="comment"># fishpartmuscle: estimate of ...</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># note that model predictions are identical:</span></span><br><span class="line"><span class="built_in">range</span>(predict(Mb) - predict(Mc))</span><br><span class="line"></span><br><span class="line">&lt;figure <span class="built_in">class</span>=<span class="string">&quot;highlight r&quot;</span>&gt;&lt;table&gt;&lt;tr&gt;&lt;td <span class="built_in">class</span>=<span class="string">&quot;gutter&quot;</span>&gt;&lt;pre&gt;&lt;span <span class="built_in">class</span>=<span class="string">&quot;line&quot;</span>&gt;<span class="number">1</span>&lt;/span&gt;&lt;br&gt;&lt;span <span class="built_in">class</span>=<span class="string">&quot;line&quot;</span>&gt;<span class="number">2</span>&lt;/span&gt;&lt;br&gt;&lt;span <span class="built_in">class</span>=<span class="string">&quot;line&quot;</span>&gt;<span class="number">3</span>&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td <span class="built_in">class</span>=<span class="string">&quot;code&quot;</span>&gt;&lt;pre&gt;&lt;span <span class="built_in">class</span>=<span class="string">&quot;line&quot;</span>&gt;&lt;/span&gt;&lt;br&gt;&lt;span <span class="built_in">class</span>=<span class="string">&quot;line&quot;</span>&gt;&amp;lt;img src=&lt;span <span class="built_in">class</span>=<span class="string">&quot;string&quot;</span>&gt;&amp;quot;/blog/<span class="number">2021</span>/<span class="number">05</span>/<span class="number">12</span>/P194/P194_12.png&amp;quot;&lt;/span&gt; &lt;span <span class="built_in">class</span>=<span class="string">&quot;built_in&quot;</span>&gt;<span class="built_in">class</span>&lt;/span&gt;=&lt;span <span class="built_in">class</span>=<span class="string">&quot;string&quot;</span>&gt;&amp;quot;&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span <span class="built_in">class</span>=<span class="string">&quot;line&quot;</span>&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</span><br><span class="line"></span><br><span class="line">&lt;p&gt;<span class="comment">#— Hypothesis testing —————————————————-&lt;/p&gt;</span></span><br><span class="line">&lt;h1 id=<span class="string">&quot;Question-How-to-test-H0-fishpart-not-associated-with-mercury-in-presence-of-weight&quot;</span>&gt;&lt;a href=<span class="string">&quot;#Question-How-to-test-H0-fishpart-not-associated-with-mercury-in-presence-of-weight&quot;</span> <span class="built_in">class</span>=<span class="string">&quot;headerlink&quot;</span> title=<span class="string">&quot;Question: How to test H0: fishpart not associated with mercury in presence of weight?&quot;</span>&gt;&lt;/a&gt;Question: How to test H0: fishpart not associated with mercury <span class="keyword">in</span> presence of weight?&lt;/h1&gt;&lt;p&gt;Mfull &amp;lt;- lm(MeHg ~ fishpart + weight, data = mercury) <span class="comment"># full model&lt;br&gt;coef(Mfull)&lt;/p&gt;</span></span><br><span class="line">&lt;h1 id=<span class="string">&quot;degrees-of-freedom&quot;</span>&gt;&lt;a href=<span class="string">&quot;#degrees-of-freedom&quot;</span> <span class="built_in">class</span>=<span class="string">&quot;headerlink&quot;</span> title=<span class="string">&quot;degrees of freedom&quot;</span>&gt;&lt;/a&gt;degrees of freedom&lt;/h1&gt;&lt;p&gt;dff &amp;lt;- Mfull$df&lt;/p&gt;</span><br><span class="line">&lt;h1 id=<span class="string">&quot;F-statistic-using-subset-of-MLE-of-full-model-betastar&quot;</span>&gt;&lt;a href=<span class="string">&quot;#F-statistic-using-subset-of-MLE-of-full-model-betastar&quot;</span> <span class="built_in">class</span>=<span class="string">&quot;headerlink&quot;</span> title=<span class="string">&quot;F-statistic using subset of MLE of full model (betastar)&quot;</span>&gt;&lt;/a&gt;<span class="built_in">F</span>-statistic using subset of MLE of full model (betastar)&lt;/h1&gt;&lt;p&gt;betastar.ind &amp;lt;- <span class="number">2</span>:<span class="number">4</span> <span class="comment"># indices corresponding to beta’s for fishpart&lt;br&gt;betastar.hat &amp;lt;- coef(Mfull)[betastar.ind] # subset of MLE&lt;/p&gt;</span></span><br><span class="line">&lt;h1 id=<span class="string">&quot;vcov-Mfull-sigma-hat-2-X’X-1&quot;</span>&gt;&lt;a href=<span class="string">&quot;#vcov-Mfull-sigma-hat-2-X’X-1&quot;</span> <span class="built_in">class</span>=<span class="string">&quot;headerlink&quot;</span> title=<span class="string">&quot;vcov(Mfull) = sigma.hat^2 * (X’X)^&#123;-1&#125;&quot;</span>&gt;&lt;/a&gt;vcov(Mfull) = sigma.hat^<span class="number">2</span> * (X’X)^&#123;-<span class="number">1</span>&#125;&lt;/h1&gt;&lt;p&gt;betastar.ve &amp;lt;- vcov(Mfull)[betastar.ind,betastar.ind] <span class="comment"># betastar.ve = sigma.hat^2 * V&lt;/p&gt;</span></span><br><span class="line">&lt;h1 id=<span class="string">&quot;long-hand-calculation&quot;</span>&gt;&lt;a href=<span class="string">&quot;#long-hand-calculation&quot;</span> <span class="built_in">class</span>=<span class="string">&quot;headerlink&quot;</span> title=<span class="string">&quot;long hand calculation&quot;</span>&gt;&lt;/a&gt;long hand calculation&lt;/h1&gt;&lt;p&gt;X &amp;lt;- model.matrix(Mfull) <span class="comment"># design matrix for full model&lt;br&gt;V &amp;lt;- solve(crossprod(X))[betastar.ind,betastar.ind] # crossprod(X) = t(X) %*% X&lt;br&gt;range(betastar.ve - sigma(Mfull)^2 * V)&lt;/p&gt;</span></span><br><span class="line">&lt;h1 id=<span class="string">&quot;Fobs-betastar-hat’-V-1-betastar-hat-q-sigma-hat-2&quot;</span>&gt;&lt;a href=<span class="string">&quot;#Fobs-betastar-hat’-V-1-betastar-hat-q-sigma-hat-2&quot;</span> <span class="built_in">class</span>=<span class="string">&quot;headerlink&quot;</span> title=<span class="string">&quot;Fobs = (betastar.hat’ V^&#123;-1&#125; betastar.hat / q) / sigma.hat^2&quot;</span>&gt;&lt;/a&gt;Fobs = (betastar.hat’ V^&#123;-<span class="number">1</span>&#125; betastar.hat / q) / sigma.hat^<span class="number">2</span>&lt;/h1&gt;&lt;h1 id=<span class="string">&quot;note-betastar-ve-already-includes-the-denominator&quot;</span>&gt;&lt;a href=<span class="string">&quot;#note-betastar-ve-already-includes-the-denominator&quot;</span> <span class="built_in">class</span>=<span class="string">&quot;headerlink&quot;</span> title=<span class="string">&quot;note: betastar.ve already includes the denominator&quot;</span>&gt;&lt;/a&gt;note: betastar.ve already includes the denominator&lt;/h1&gt;&lt;p&gt;Fobs &amp;lt;- t(betastar.hat) %*% solve(betastar.ve, betastar.hat) / <span class="built_in">length</span>(betastar.hat)&lt;/p&gt;</span><br><span class="line">&lt;h1 id=<span class="string">&quot;p-value-large-values-of-Fobs-are-more-evidence-against-H0&quot;</span>&gt;&lt;a href=<span class="string">&quot;#p-value-large-values-of-Fobs-are-more-evidence-against-H0&quot;</span> <span class="built_in">class</span>=<span class="string">&quot;headerlink&quot;</span> title=<span class="string">&quot;p-value: large values of Fobs are more evidence against H0&quot;</span>&gt;&lt;/a&gt;p-value: large values of Fobs are more evidence against H0&lt;/h1&gt;&lt;p&gt;pf(Fobs, df1 = <span class="built_in">length</span>(betastar.hat), df2 = dff, lower.tail = <span class="literal">FALSE</span>)&lt;/p&gt;</span><br></pre></td></tr></table></figure>

<p>其中系数也可能有nolinear的情况.</p>
<img src="/blog/2021/05/12/P194/P194_14.png" class="">

<p>插播stat444老师的名言:<br>all models are false but some are useful.</p>
<p>在Assignment1中的例子,按照scatter plot看出跟exponential像,所以plot exponential.</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">log.sigma2.y = <span class="built_in">log</span>(sigma2.y)</span><br><span class="line">plot(Week.x, log.sigma2.y , pch=<span class="number">19</span>, cex.axis = <span class="number">1.5</span>, cex.lab = <span class="number">1.5</span>, ylim=<span class="built_in">c</span>(<span class="number">0</span>,<span class="number">12</span>))</span><br><span class="line">var.model = lm(log.sigma2.y ~ Week.x) <span class="comment"># exponential</span></span><br><span class="line">abline(var.model , col=<span class="string">&quot;blue&quot;</span> , lwd = <span class="number">1.5</span>) <span class="comment">#从log(y)中求出系数</span></span><br><span class="line">summary(model)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">plot(Week.x, sigma2.y , pch=<span class="number">19</span>, cex.axis = <span class="number">1.5</span>, cex.lab = <span class="number">1.5</span>, ylim=<span class="built_in">c</span>(<span class="number">0</span>,<span class="number">36000</span>))</span><br><span class="line">var.model.exp = <span class="keyword">function</span>(x,</span><br><span class="line">  a0 = var.model$coeffient[<span class="number">1</span>],</span><br><span class="line">  a1 = var.model$coeffient[<span class="number">2</span>])&#123;</span><br><span class="line">    <span class="built_in">return</span>(<span class="built_in">exp</span>(a0+a1*x))</span><br><span class="line">  &#125; <span class="comment"># 提取a0和a1</span></span><br><span class="line">x.plot = seq(<span class="number">1</span>, <span class="number">17</span>, <span class="built_in">length</span> = <span class="number">100</span>)</span><br><span class="line">y.plot = var.model.exp(x.plot)</span><br><span class="line">lines(y.plot~x.plot, col=<span class="string">&quot;blue&quot;</span>, lwd=<span class="number">1.5</span>) <span class="comment">#再plot</span></span><br></pre></td></tr></table></figure>

<p>从R-squared中看出数据比较大(偏差比较大),model可以再优化.</p>
<br>
<br>
<br>

<h2 id="ANOVA"><a href="#ANOVA" class="headerlink" title="ANOVA"></a>ANOVA</h2><p>(这个在stat系列中有记载过,再次备份一下)<br>ANOVA: How much of the variability in Y is explained by our model?</p>
<img src="/blog/2021/05/12/P194/P194_15.png" class="">
<img src="/blog/2021/05/12/P194/P194_16.png" class="">
<img src="/blog/2021/05/12/P194/P194_17.png" class="">
<img src="/blog/2021/05/12/P194/P194_18.png" class="">

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment">### LECTURE 11</span></span><br><span class="line"><span class="comment">#--- first make categorical predictors (from previous lectures) ------------------------------------------------</span></span><br><span class="line"><span class="comment"># data</span></span><br><span class="line">mercury &lt;- read.csv(<span class="string">&quot;fishermen_mercury.csv&quot;</span>)</span><br><span class="line">head(mercury)</span><br><span class="line"></span><br><span class="line"><span class="comment"># predict MeHg as a function of weight and fishpart</span></span><br><span class="line">M &lt;- lm(MeHg ~ weight + fishpart, data = mercury)</span><br><span class="line">summary(M)</span><br><span class="line"></span><br><span class="line"><span class="comment"># since fishpart is coded as:</span></span><br><span class="line"><span class="comment"># None = 0, Muscle = 1, Muscle/Whole = 2, Whole = 3</span></span><br><span class="line"><span class="comment"># model assumes increase in expected MeHg from None to Muscle is</span></span><br><span class="line"><span class="comment"># exactly equal to increase in expected MeHg from Muscle to Muscle/Whole.</span></span><br><span class="line"><span class="comment"># Imagine if we encoded: None = 0, M = 10, MW = 11, W = 20?</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># the &quot;design matrix&quot; X for the problem</span></span><br><span class="line">head(model.matrix(M))</span><br><span class="line"></span><br><span class="line"><span class="comment">#--- fishpart as categorical predictor -------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># convert fishpart to non-numeric categorical variable</span></span><br><span class="line">fishpart2 &lt;- mercury$fishpart</span><br><span class="line">table(fishpart2)</span><br><span class="line"></span><br><span class="line"><span class="comment"># &quot;levels&quot; of variable fishpart</span></span><br><span class="line">fplevels &lt;- <span class="built_in">c</span>(<span class="string">&quot;none&quot;</span>, <span class="string">&quot;muscle&quot;</span>, <span class="string">&quot;muscle_whole&quot;</span>, <span class="string">&quot;whole&quot;</span>)</span><br><span class="line"><span class="comment"># using for-loop</span></span><br><span class="line"><span class="keyword">for</span>(ii <span class="keyword">in</span> <span class="number">0</span>:<span class="number">3</span>) &#123;</span><br><span class="line">  fishpart2[fishpart2 == ii] &lt;- fplevels[ii+<span class="number">1</span>]</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># without for-loop</span></span><br><span class="line"><span class="built_in">all</span>(fplevels[mercury$fishpart+<span class="number">1</span>] == fishpart2)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># in R, categorical variables are coded as &quot;factor&quot; variables</span></span><br><span class="line">tmp &lt;- factor(fishpart2)</span><br><span class="line">head(tmp)</span><br><span class="line">levels(tmp) <span class="comment"># alphabetical group ordering</span></span><br><span class="line"></span><br><span class="line">fishpart2 &lt;- factor(fishpart2, levels = fplevels) <span class="comment"># custom ordering</span></span><br><span class="line">levels(fishpart2)</span><br><span class="line"></span><br><span class="line">mercury$fishpart &lt;- fishpart2 <span class="comment"># replace in dataset</span></span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#--- ANOVA ----------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Fit model</span></span><br><span class="line">M1 &lt;- lm(MeHg ~ fishpart + weight, data = mercury) <span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## ANOVA Decomposition</span></span><br><span class="line">SSTotal &lt;- <span class="built_in">sum</span>((mercury$MeHg-mean(mercury$MeHg))^<span class="number">2</span>)</span><br><span class="line">SSReg &lt;- <span class="built_in">sum</span>((fitted(M1)-mean(mercury$MeHg))^<span class="number">2</span>)</span><br><span class="line">R2 &lt;- SSReg/SSTotal</span><br><span class="line">SSRes &lt;- <span class="built_in">sum</span>((mercury$MeHg-fitted(M1))^<span class="number">2</span>)</span><br><span class="line"><span class="built_in">round</span>(SSTotal,<span class="number">10</span>)==<span class="built_in">round</span>(SSReg+SSRes,<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># F test for all covariates</span></span><br><span class="line"><span class="comment"># testing \beta_1=\beta_2=\beta_3=\beta_4=0</span></span><br><span class="line">n &lt;- nrow(mercury)</span><br><span class="line">Fobs &lt;- (SSReg/<span class="number">4</span>)/(SSRes/(n-<span class="number">5</span>)) <span class="comment">## by hand</span></span><br><span class="line">pf(Fobs,<span class="number">4</span>,n-<span class="number">5</span>,lower.tail=<span class="built_in">F</span>)</span><br><span class="line">summary(M1) <span class="comment">## R fn</span></span><br></pre></td></tr></table></figure>

<img src="/blog/2021/05/12/P194/P194_19.png" class="">
<img src="/blog/2021/05/12/P194/P194_20.png" class="">

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#--- F test  ----------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Question: How to test H0: fishpart has no effect in presence of weight?</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># full model:</span></span><br><span class="line">Mfull &lt;- lm(MeHg ~ factor(fishpart) + weight, data = mercury)</span><br><span class="line"></span><br><span class="line"><span class="comment"># reduced model: all levels of fishpart have same intercept</span></span><br><span class="line">Mred &lt;- lm(MeHg ~ weight, data = mercury)</span><br><span class="line"></span><br><span class="line"><span class="comment"># degrees of freedom in full and reduced models</span></span><br><span class="line">dff &lt;- Mfull$df</span><br><span class="line">dfr &lt;- Mred$df</span><br><span class="line"></span><br><span class="line"><span class="comment"># F-statistic, using LR definition</span></span><br><span class="line">SSRes_full &lt;- <span class="built_in">sum</span>(residuals(Mfull)^<span class="number">2</span>) <span class="comment"># sum-of-squares for Mfull</span></span><br><span class="line">SSRes_red &lt;- <span class="built_in">sum</span>(residuals(Mred)^<span class="number">2</span>) <span class="comment"># sum-of-squares for Mred</span></span><br><span class="line">Fobs &lt;- (SSRes_red-SSRes_full)/(dfr-dff) / (SSRes_full/dff)</span><br><span class="line"><span class="built_in">c</span>(Fobs, (SSRes_red-SSRes_full)/(dfr-dff) / sigma(Mfull)^<span class="number">2</span>) <span class="comment"># equivalent denominator</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># F-statistic using subset of MLE of full model</span></span><br><span class="line">beta.ind &lt;- 2:<span class="number">4</span> <span class="comment"># indices corresponding to beta&#x27;s for fishpart</span></span><br><span class="line">beta.hat &lt;- coef(Mfull)[beta.ind] <span class="comment"># subset of MLE</span></span><br><span class="line">beta.ve &lt;- vcov(Mfull)[beta.ind,beta.ind] <span class="comment"># beta.ve = sigma.hat^2 * V</span></span><br><span class="line">Fobs2 &lt;- t(beta.hat) %*% solve(beta.ve, beta.hat) / <span class="built_in">length</span>(beta.hat)</span><br><span class="line"></span><br><span class="line"><span class="comment"># check two version are identical</span></span><br><span class="line"><span class="built_in">c</span>(Fobs, Fobs2)</span><br><span class="line"></span><br><span class="line"><span class="comment"># p-value: large values of Fobs are more evidence against H0</span></span><br><span class="line">pf(Fobs, df1 = (dfr-dff), df2 = dff, lower.tail = <span class="literal">FALSE</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># fully R version:</span></span><br><span class="line">anova(Mred, Mfull)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<br>
<br>
<br>

<h2 id="Goodness-of-Fit"><a href="#Goodness-of-Fit" class="headerlink" title="Goodness of Fit"></a>Goodness of Fit</h2><p>测试一个model是否合适可以通过测试以下数据:</p>
<p><code>$R^2$</code>,where<code>$R^2 = \frac&#123;SSR_&#123;eg&#125;&#125;&#123;SST_&#123;ot&#125;&#125; = 1 - \frac&#123;SSR_&#123;es&#125;&#125;&#123;SST_&#123;ot&#125;&#125;$</code>.</p>
<p>Interpretation: proportion of variability explained by the model.<br>Problem: will never decrease when adding more variables.</p>
<p>因此可以测试Adjusted<code>$R^2$</code>.</p>
<img src="/blog/2021/05/12/P194/P194_8.png" class="">

<p>此外也可以测试AIC.</p>
<img src="/blog/2021/05/12/P194/P194_9.png" class="">

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">library(mvtnorm)</span><br><span class="line">nn &lt;- 200 <span class="comment"># n obs</span></span><br><span class="line">n.cov &lt;- 20 <span class="comment"># 20 covs</span></span><br><span class="line">n.cov.plot &lt;- 20</span><br><span class="line">X &lt;- rmvnorm(nn,<span class="built_in">rep</span>(<span class="number">0</span>,n.cov),diag(<span class="built_in">rep</span>(<span class="number">1</span>,n.cov)))</span><br><span class="line"><span class="comment">## generate y as function of first 4 covs</span></span><br><span class="line">y &lt;- X[,<span class="number">1</span>]+X[,<span class="number">2</span>]+X[,<span class="number">3</span>]+X[,<span class="number">4</span>]+rnorm(nn,<span class="number">0</span>,<span class="number">1</span>)</span><br><span class="line">dat &lt;- data.frame(y,X)</span><br><span class="line"><span class="comment"># calculate R^2 and R^2_adj upon adding in garbage predictors one at a time</span></span><br><span class="line">R2 &lt;-  <span class="built_in">rep</span>(<span class="literal">NA</span>,n.cov.plot-<span class="number">1</span>)</span><br><span class="line">R2a &lt;- <span class="built_in">rep</span>(<span class="literal">NA</span>, n.cov.plot-<span class="number">1</span>)</span><br><span class="line">aic &lt;- <span class="built_in">rep</span>(<span class="literal">NA</span>, n.cov.plot-<span class="number">1</span>)</span><br><span class="line">bic &lt;- <span class="built_in">rep</span>(<span class="literal">NA</span>, n.cov.plot-<span class="number">1</span>)</span><br><span class="line">mse &lt;- <span class="built_in">rep</span>(<span class="literal">NA</span>, n.cov.plot-<span class="number">1</span>)</span><br><span class="line"><span class="keyword">for</span>(ii <span class="keyword">in</span> <span class="number">2</span>:n.cov.plot) &#123;</span><br><span class="line">  M &lt;- lm(y ~ ., data = dat[,<span class="number">1</span>:ii])</span><br><span class="line">  R2[ ii-<span class="number">1</span>] &lt;- summary(M)$r.squared</span><br><span class="line">  R2a[ii-<span class="number">1</span>] &lt;- summary(M)$adj.r.squared</span><br><span class="line">  aic[ii-<span class="number">1</span>] &lt;- AIC(M)</span><br><span class="line">  bic[ii-<span class="number">1</span>] &lt;- BIC(M)</span><br><span class="line">  mse[ii-<span class="number">1</span>] &lt;- sigma(M)  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">plot(<span class="number">2</span>:n.cov.plot, mse, xlab = <span class="string">&quot;# of Predictors&quot;</span>, ylab = <span class="string">&quot;&quot;</span>,</span><br><span class="line">     main = <span class="string">&quot;MSE&quot;</span>,</span><br><span class="line">     pch = <span class="number">16</span>, type = <span class="string">&quot;b&quot;</span>)</span><br><span class="line"></span><br><span class="line">plot(<span class="number">2</span>:n.cov.plot, R2, xlab = <span class="string">&quot;# of Predictors&quot;</span>, ylab = <span class="string">&quot;&quot;</span>,</span><br><span class="line">     main = <span class="string">&quot;Coefficient of Determination&quot;</span>,</span><br><span class="line">     pch = <span class="number">16</span>, type = <span class="string">&quot;b&quot;</span>, ylim = <span class="built_in">range</span>(R2, R2a))</span><br><span class="line">points(<span class="number">2</span>:n.cov.plot, R2a, pch = <span class="number">16</span>, type = <span class="string">&quot;b&quot;</span>, col = <span class="string">&quot;red&quot;</span>)</span><br><span class="line">legend(x = <span class="string">&quot;bottomright&quot;</span>, legend = <span class="built_in">expression</span>(R^<span class="number">2</span>, R[adj]^<span class="number">2</span>),</span><br><span class="line">       fill = <span class="built_in">c</span>(<span class="string">&quot;black&quot;</span>, <span class="string">&quot;red&quot;</span>))</span><br><span class="line"></span><br><span class="line">plot(<span class="number">2</span>:n.cov.plot, aic, xlab = <span class="string">&quot;# of Predictors&quot;</span>, ylab = <span class="string">&quot;&quot;</span>,</span><br><span class="line">     main = <span class="string">&quot;Criteria&quot;</span>,pch = <span class="number">16</span>, type = <span class="string">&quot;b&quot;</span>, ylim = <span class="built_in">range</span>(aic, bic))</span><br><span class="line">points(<span class="number">2</span>:n.cov.plot, bic, pch = <span class="number">16</span>, type = <span class="string">&quot;b&quot;</span>, col = <span class="string">&quot;blue&quot;</span>)</span><br><span class="line">legend(x = <span class="string">&quot;bottomright&quot;</span>, legend = <span class="built_in">expression</span>(AIC, BIC),</span><br><span class="line">       fill = <span class="built_in">c</span>(<span class="string">&quot;black&quot;</span>, <span class="string">&quot;blue&quot;</span>))</span><br></pre></td></tr></table></figure>

<br>
<br>
<br>

<h2 id="Automatic-Selection"><a href="#Automatic-Selection" class="headerlink" title="Automatic Selection"></a>Automatic Selection</h2><p>一个model中有多个系数,其中建立model的方式有 <strong>将所有的系数一个一个加入</strong> 和 <strong>一个一个减去</strong> 两种,分为Forward Selection和Backward Elimination.</p>
<p>Forward Selection:</p>
<img src="/blog/2021/05/12/P194/P194_2.png" class="">
<img src="/blog/2021/05/12/P194/P194_3.png" class="">
<img src="/blog/2021/05/12/P194/P194_4.png" class="">

<p>Backward Elimination:</p>
<img src="/blog/2021/05/12/P194/P194_5.png" class="">
<img src="/blog/2021/05/12/P194/P194_6.png" class="">

<br>
<br>

<p>还有一种是combine了forward和backward,Stepwise Selection.</p>
<img src="/blog/2021/05/12/P194/P194_7.png" class="">

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ------ automatic selection ------------------</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># forward, backward, and stepwise selection</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># high school and beyond dataset</span></span><br><span class="line">hsb &lt;- read.csv(<span class="string">&quot;HSB2.csv&quot;</span>)</span><br><span class="line">hsbm &lt;- hsb[,<span class="built_in">c</span>(<span class="number">13</span>, <span class="number">1</span>:<span class="number">6</span>, <span class="number">10</span>, <span class="number">7</span>:<span class="number">9</span>)] <span class="comment"># math response only</span></span><br><span class="line"></span><br><span class="line">summary(hsbm)</span><br><span class="line"></span><br><span class="line"><span class="comment"># bounds for model selection</span></span><br><span class="line">M0 &lt;- lm(math ~ <span class="number">1</span>, data = hsbm) <span class="comment"># minimal model</span></span><br><span class="line"></span><br><span class="line">Mfull &lt;- lm(math ~ ., data= hsbm) <span class="comment"># full model</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># forward</span></span><br><span class="line">system.time(&#123;</span><br><span class="line">Mfwd &lt;- step(object = M0, <span class="comment"># base model</span></span><br><span class="line">             scope = <span class="built_in">list</span>(lower = M0, upper = Mfull), <span class="comment"># smallest and largest model</span></span><br><span class="line">             trace = <span class="number">1</span>, <span class="comment"># trace prints out information</span></span><br><span class="line">             direction = <span class="string">&quot;forward&quot;</span> )</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment"># backward</span></span><br><span class="line">system.time(&#123;</span><br><span class="line">Mback &lt;- step(object = Mfull, <span class="comment"># base model</span></span><br><span class="line">              scope = <span class="built_in">list</span>(lower = M0, upper = Mfull),</span><br><span class="line">              direction = <span class="string">&quot;backward&quot;</span>, trace = <span class="number">1</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment"># stepwise (both directions)</span></span><br><span class="line">system.time(&#123;</span><br><span class="line">Mstep &lt;- step(object = M0,</span><br><span class="line">              scope = <span class="built_in">list</span>(lower = M0, upper = Mfull),</span><br><span class="line">              direction = <span class="string">&quot;both&quot;</span>, trace = <span class="number">1</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<br>
<br>
<br>

<h2 id="Cross-validation"><a href="#Cross-validation" class="headerlink" title="Cross-validation"></a>Cross-validation</h2><p>cross validation的思想是把数据分组,一部分作为training set,来fit model,一部分作为test set,用来测试fit的model的误差.</p>
<p>k-fold cross validation是其中的一种:将k-1组作为traning set.</p>
<img src="/blog/2021/05/12/P194/P194_1.png" class="">

<p>leave-one-out cross validation则除了一个数据外将全部数据作为traning set,再计算其中的误差.</p>
<p>load data and fit models from lec 14:</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># high school and beyond dataset</span></span><br><span class="line">hsb &lt;- read.csv(<span class="string">&quot;HSB2.csv&quot;</span>)</span><br><span class="line">hsbm &lt;- hsb[,<span class="built_in">c</span>(<span class="number">13</span>, <span class="number">1</span>:<span class="number">6</span>, <span class="number">10</span>, <span class="number">7</span>:<span class="number">9</span>)] <span class="comment"># math response only</span></span><br><span class="line"></span><br><span class="line">summary(hsbm)</span><br><span class="line"></span><br><span class="line"><span class="comment"># bounds for model selection</span></span><br><span class="line">M0 &lt;- lm(math ~ <span class="number">1</span>, data = hsbm) <span class="comment"># minimal model</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># full model:</span></span><br><span class="line"><span class="comment"># 1. remove all interactions with career, but leave as main effect</span></span><br><span class="line"><span class="comment"># 2. remove the interaction between lang and minor</span></span><br><span class="line"><span class="comment"># 3. add nonlinear effects for continuous variables locus, concept, mot</span></span><br><span class="line">Mfull &lt;- lm(math ~ (.-career)^<span class="number">2</span> + career - lang:minor +    </span><br><span class="line">            I(locus^<span class="number">2</span>) + I(concept^<span class="number">2</span>) + I(mot^<span class="number">2</span>),</span><br><span class="line">            data= hsbm)</span><br><span class="line"><span class="built_in">length</span>(coef(Mfull))</span><br><span class="line"><span class="built_in">anyNA</span>(coef(Mfull))</span><br><span class="line"></span><br><span class="line">df.penalty &lt;- 2 <span class="comment"># this is the k penalty</span></span><br><span class="line"><span class="comment">## 2 corresponds to AIC</span></span><br><span class="line"><span class="comment">## log(n) corresponds to BIC</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># forward</span></span><br><span class="line">system.time(&#123;</span><br><span class="line">  Mfwd &lt;- step(object = M0, <span class="comment"># base model</span></span><br><span class="line">               scope = <span class="built_in">list</span>(lower = M0, upper = Mfull), <span class="comment"># smallest and largest model</span></span><br><span class="line">               direction = <span class="string">&quot;forward&quot;</span>,</span><br><span class="line">               trace = <span class="number">0</span>, <span class="comment"># trace prints out information</span></span><br><span class="line">               k = df.penalty</span><br><span class="line">  )</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment"># backward</span></span><br><span class="line">system.time(&#123;</span><br><span class="line">  Mback &lt;- step(object = Mfull, <span class="comment"># base model</span></span><br><span class="line">                scope = <span class="built_in">list</span>(lower = M0, upper = Mfull),</span><br><span class="line">                direction = <span class="string">&quot;backward&quot;</span>, trace = <span class="number">0</span>, k = df.penalty)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment"># stepwise (both directions)</span></span><br><span class="line">Mstart &lt;- lm(math ~ ., data = hsbm) <span class="comment"># starting point model: main effects only</span></span><br><span class="line">system.time(&#123;</span><br><span class="line">  Mstep &lt;- step(object = Mstart,</span><br><span class="line">                scope = <span class="built_in">list</span>(lower = M0, upper = Mfull),</span><br><span class="line">                direction = <span class="string">&quot;both&quot;</span>, trace = <span class="number">1</span>, k = df.penalty)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># compare Mfull to Mstep</span></span><br><span class="line">M1 &lt;- Mfull</span><br><span class="line">M2 &lt;- Mstep</span><br><span class="line">Mnames &lt;- <span class="built_in">expression</span>(M[FULL], M[STEP])</span><br><span class="line"></span><br><span class="line"><span class="comment"># number of cross-validation replications</span></span><br><span class="line">nreps &lt;- 1e3</span><br><span class="line"></span><br><span class="line">ntot &lt;- nrow(hsbm) <span class="comment"># total number of observations</span></span><br><span class="line">ntrain &lt;- 500 <span class="comment"># for fitting MLE&#x27;s</span></span><br><span class="line">ntest &lt;- ntot-ntrain <span class="comment"># for out-of-sample prediction</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># storage space</span></span><br><span class="line">mspe1 &lt;- <span class="built_in">rep</span>(<span class="literal">NA</span>, nreps) <span class="comment"># mspe for M1</span></span><br><span class="line">mspe2 &lt;- <span class="built_in">rep</span>(<span class="literal">NA</span>, nreps) <span class="comment"># mspe for M2</span></span><br><span class="line"></span><br><span class="line">system.time(&#123;</span><br><span class="line">  <span class="keyword">for</span>(ii <span class="keyword">in</span> <span class="number">1</span>:nreps) &#123;</span><br><span class="line">    <span class="keyword">if</span>(ii%%100 == <span class="number">0</span>) message(<span class="string">&quot;ii = &quot;</span>, ii)</span><br><span class="line"></span><br><span class="line">    train.ind &lt;- sample(ntot, ntrain) <span class="comment"># training observations</span></span><br><span class="line">    <span class="comment"># long-form cross-validation</span></span><br><span class="line">    <span class="comment">## M1.cv &lt;- lm(math ~ read + prog + race + ses + locus + read:prog + prog:ses,</span></span><br><span class="line">    <span class="comment">##         data = hsbm, subset = train.ind)</span></span><br><span class="line">    <span class="comment">## M2.cv &lt;- lm(math ~ race + ses + sch + prog + locus + concept +</span></span><br><span class="line">    <span class="comment">#           mot + read + ses:sch + ses:concept + prog:read,</span></span><br><span class="line">    <span class="comment">#         data = hsbm, subset = train.ind)</span></span><br><span class="line">    <span class="comment"># using R functions</span></span><br><span class="line">    M1.cv &lt;- update(M1, subset = train.ind)</span><br><span class="line">    M2.cv &lt;- update(M2, subset = train.ind)</span><br><span class="line">    <span class="comment"># cross-validation residuals</span></span><br><span class="line">    M1.res &lt;- hsbm$math[-train.ind] - <span class="comment"># test observations</span></span><br><span class="line">      predict(M1.cv, newdata = hsbm[-train.ind,]) <span class="comment"># prediction with training data</span></span><br><span class="line">    M2.res &lt;- hsbm$math[-train.ind] -predict(M2.cv, newdata = hsbm[-train.ind,])</span><br><span class="line">    <span class="comment"># mspe for each model</span></span><br><span class="line">    mspe1[ii] &lt;- mean(M1.res^<span class="number">2</span>)</span><br><span class="line">    mspe2[ii] &lt;- mean(M2.res^<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment"># compare</span></span><br><span class="line">par(mfrow = <span class="built_in">c</span>(<span class="number">1</span>,<span class="number">2</span>))</span><br><span class="line">cex &lt;- 1</span><br><span class="line">boxplot(x = <span class="built_in">list</span>(mspe1, mspe2), <span class="built_in">names</span> = Mnames,</span><br><span class="line">        main = <span class="string">&quot;MSPE&quot;</span>,</span><br><span class="line">        <span class="comment">#ylab = expression(sqrt(bar(SSE)[CV])),</span></span><br><span class="line">        ylab = <span class="built_in">expression</span>(MSPE),</span><br><span class="line">        col = <span class="built_in">c</span>(<span class="string">&quot;yellow&quot;</span>, <span class="string">&quot;orange&quot;</span>),</span><br><span class="line">        cex = cex, cex.lab = cex, cex.axis = cex, cex.main = cex)</span><br><span class="line">boxplot(x = <span class="built_in">list</span>(<span class="built_in">sqrt</span>(mspe1), <span class="built_in">sqrt</span>(mspe2)), <span class="built_in">names</span> = Mnames,</span><br><span class="line">        main = <span class="string">&quot;Root MSPE&quot;</span>,</span><br><span class="line">        ylab = <span class="built_in">expression</span>(<span class="built_in">sqrt</span>(MSPE)),</span><br><span class="line">        <span class="comment">## ylab = expression(SSE[CV]),</span></span><br><span class="line">        col = <span class="built_in">c</span>(<span class="string">&quot;yellow&quot;</span>, <span class="string">&quot;orange&quot;</span>),</span><br><span class="line">        cex = cex, cex.lab = cex, cex.axis = cex, cex.main = cex)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># compare predictions by training set</span></span><br><span class="line">par(mfrow=<span class="built_in">c</span>(<span class="number">1</span>,<span class="number">1</span>))</span><br><span class="line">plot(mspe1, mspe2, pch = <span class="number">16</span>,</span><br><span class="line">     xlab = Mnames[<span class="number">1</span>], ylab = Mnames[<span class="number">2</span>],</span><br><span class="line">     main = <span class="string">&quot;&quot;</span>)</span><br><span class="line">abline(a = <span class="number">0</span>, b = <span class="number">1</span>, col= <span class="string">&quot;red&quot;</span>, lwd = <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#--- K-fold cross-validation -----------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># compare Mfwd to Mstep</span></span><br><span class="line">M1 &lt;- Mfwd</span><br><span class="line">M2 &lt;- Mstep</span><br><span class="line">Mnames &lt;- <span class="built_in">expression</span>(M[FWD], M[STEP])</span><br><span class="line"></span><br><span class="line">ntot &lt;- nrow(hsbm) <span class="comment"># total number of observations</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># number of cross-validation replications</span></span><br><span class="line">Kfolds &lt;- 10</span><br><span class="line"></span><br><span class="line">hsbm &lt;- hsbm[sample(ntot),] <span class="comment"># permute rows</span></span><br><span class="line">hsbm$index &lt;- <span class="built_in">rep</span>(<span class="number">1</span>:Kfolds,each=ntot/Kfolds)</span><br><span class="line"></span><br><span class="line"><span class="comment"># storage space</span></span><br><span class="line">mspe1 &lt;- <span class="built_in">rep</span>(<span class="literal">NA</span>, Kfolds) <span class="comment"># mspe for M1</span></span><br><span class="line">mspe2 &lt;- <span class="built_in">rep</span>(<span class="literal">NA</span>, Kfolds) <span class="comment"># mspe for M2</span></span><br><span class="line"></span><br><span class="line">system.time(&#123;</span><br><span class="line">  <span class="keyword">for</span>(ii <span class="keyword">in</span> <span class="number">1</span>:Kfolds) &#123;</span><br><span class="line"></span><br><span class="line">    train.ind &lt;- which(hsbm$index!=ii) <span class="comment"># training observations</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># using R functions</span></span><br><span class="line">    M1.cv &lt;- update(M1, subset = train.ind)</span><br><span class="line">    M2.cv &lt;- update(M2, subset = train.ind)</span><br><span class="line">    <span class="comment"># cross-validation residuals</span></span><br><span class="line">    M1.res &lt;- hsbm$math[-train.ind] - <span class="comment"># test observations</span></span><br><span class="line">      predict(M1.cv, newdata = hsbm[-train.ind,]) <span class="comment"># prediction with training data</span></span><br><span class="line">    M2.res &lt;- hsbm$math[-train.ind] -predict(M2.cv, newdata = hsbm[-train.ind,])</span><br><span class="line">    <span class="comment"># mspe for each model</span></span><br><span class="line">    mspe1[ii] &lt;- mean(M1.res^<span class="number">2</span>)</span><br><span class="line">    mspe2[ii] &lt;- mean(M2.res^<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># compare</span></span><br><span class="line">par(mfrow = <span class="built_in">c</span>(<span class="number">1</span>,<span class="number">2</span>))</span><br><span class="line">cex &lt;- 1</span><br><span class="line">boxplot(x = <span class="built_in">list</span>(mspe1, mspe2), <span class="built_in">names</span> = Mnames,</span><br><span class="line">        main = <span class="string">&quot;MSPE&quot;</span>,</span><br><span class="line">        <span class="comment">#ylab = expression(sqrt(bar(SSE)[CV])),</span></span><br><span class="line">        ylab = <span class="built_in">expression</span>(MSPE),</span><br><span class="line">        col = <span class="built_in">c</span>(<span class="string">&quot;yellow&quot;</span>, <span class="string">&quot;orange&quot;</span>),</span><br><span class="line">        cex = cex, cex.lab = cex, cex.axis = cex, cex.main = cex)</span><br><span class="line">boxplot(x = <span class="built_in">list</span>(<span class="built_in">sqrt</span>(mspe1), <span class="built_in">sqrt</span>(mspe2)), <span class="built_in">names</span> = Mnames,</span><br><span class="line">        main = <span class="string">&quot;Root MSPE&quot;</span>,</span><br><span class="line">        ylab = <span class="built_in">expression</span>(<span class="built_in">sqrt</span>(MSPE)),</span><br><span class="line">        <span class="comment">## ylab = expression(SSE[CV]),</span></span><br><span class="line">        col = <span class="built_in">c</span>(<span class="string">&quot;yellow&quot;</span>, <span class="string">&quot;orange&quot;</span>),</span><br><span class="line">        cex = cex, cex.lab = cex, cex.axis = cex, cex.main = cex)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mean(mspe1)</span><br><span class="line">mean(mspe2)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">PRESS1 &lt;- resid(M1)/(<span class="number">1</span>-hatvalues(M1))</span><br><span class="line">PRESS2 &lt;- resid(M2)/(<span class="number">1</span>-hatvalues(M2))</span><br><span class="line"></span><br><span class="line"><span class="comment"># should match if doing LOO-CV</span></span><br><span class="line">mean(PRESS1^<span class="number">2</span>)</span><br><span class="line">mean(PRESS2^<span class="number">2</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<br>
<br>

<p>k-fold cross validation stat444加强版:</p>
<p>这里也包括了LOOCV.<br>一般k-fold有更好的bais和variance trace off,但LOOCV会更快.</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># A function to generate the indices of the k-fold sets</span></span><br><span class="line">kfold &lt;- <span class="keyword">function</span>(N, k=N, indices=<span class="literal">NULL</span>)&#123;</span><br><span class="line">  <span class="comment"># get the parameters right:</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">is.null</span>(indices)) &#123;</span><br><span class="line">    <span class="comment"># Randomize if the index order is not supplied</span></span><br><span class="line">    indices &lt;- sample(<span class="number">1</span>:N, N, replace=<span class="literal">FALSE</span>)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment"># else if supplied, force N to match its length</span></span><br><span class="line">    N &lt;- <span class="built_in">length</span>(indices)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment"># Check that the k value makes sense.</span></span><br><span class="line">  <span class="keyword">if</span> (k &gt; N) stop(<span class="string">&quot;k must not exceed N&quot;</span>)</span><br><span class="line">  <span class="comment">#</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># How big is each group?</span></span><br><span class="line">  gsize &lt;- <span class="built_in">rep</span>(<span class="built_in">round</span>(N/k), k)</span><br><span class="line"></span><br><span class="line">  <span class="comment"># For how many groups do we need odjust the size?</span></span><br><span class="line">  extra &lt;- N - <span class="built_in">sum</span>(gsize)</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Do we have too few in some groups?</span></span><br><span class="line">  <span class="keyword">if</span> (extra &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">1</span>:extra) &#123;</span><br><span class="line">      gsize[i] &lt;- gsize[i] +<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment"># Or do we have too many in some groups?</span></span><br><span class="line">  <span class="keyword">if</span> (extra &lt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">1</span>:<span class="built_in">abs</span>(extra)) &#123;</span><br><span class="line">      gsize[i] &lt;- gsize[i] - <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  running_total &lt;- <span class="built_in">c</span>(<span class="number">0</span>,<span class="built_in">cumsum</span>(gsize))</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Return the list of k groups of indices</span></span><br><span class="line">  lapply(<span class="number">1</span>:k,</span><br><span class="line">         FUN=<span class="keyword">function</span>(i) &#123;</span><br><span class="line">           indices[seq(from = <span class="number">1</span> + running_total[i],</span><br><span class="line">                       to = running_total[i+<span class="number">1</span>],</span><br><span class="line">                       by = <span class="number">1</span>)</span><br><span class="line">                   ]</span><br><span class="line">         &#125;</span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># A function to form the k samples</span></span><br><span class="line">getKfoldSamples &lt;- <span class="keyword">function</span> (x, y, k, indices=<span class="literal">NULL</span>)&#123;</span><br><span class="line">  groups &lt;- kfold(<span class="built_in">length</span>(x), k, indices)</span><br><span class="line">  Ssamples &lt;- lapply(groups,</span><br><span class="line">                     FUN=<span class="keyword">function</span>(group) &#123;</span><br><span class="line">                       <span class="built_in">list</span>(x=x[-group], y=y[-group])</span><br><span class="line">                     &#125;)</span><br><span class="line">  Tsamples &lt;- lapply(groups,</span><br><span class="line">                     FUN=<span class="keyword">function</span>(group) &#123;</span><br><span class="line">                       <span class="built_in">list</span>(x=x[group], y=y[group])</span><br><span class="line">                     &#125;)</span><br><span class="line">  <span class="built_in">list</span>(Ssamples = Ssamples, Tsamples = Tsamples)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">set.seed(<span class="number">1234</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Simulating the data</span></span><br><span class="line">x = seq(<span class="number">1</span>,<span class="number">10</span>,<span class="built_in">length</span>=<span class="number">50</span>)</span><br><span class="line">y = <span class="number">5</span>+<span class="built_in">log</span>(x)*<span class="built_in">sin</span>(<span class="number">.65</span>*x)-<span class="number">2</span>*<span class="built_in">cos</span>(x-<span class="number">5</span>)/(<span class="built_in">sqrt</span>(x)) + rnorm(<span class="number">50</span>,mean=<span class="number">0</span>,sd=<span class="number">1</span>) <span class="comment">#+ c(rnorm(22,mean=0,sd=1) , rnorm(28,mean=0,sd=.4))</span></span><br><span class="line">SimulatedData = data.frame(x,y)</span><br><span class="line">plot(y~x,pch=<span class="number">19</span> , col=adjustcolor(<span class="string">&quot;brown&quot;</span>,<span class="number">0.7</span>) , cex.axis=<span class="number">1.5</span> , cex.lab=<span class="number">1.5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># For leave one out cross-validation</span></span><br><span class="line">samples_loocv &lt;-  getKfoldSamples(SimulatedData$x, SimulatedData$y, k=<span class="built_in">length</span>(SimulatedData$y))</span><br><span class="line"><span class="comment"># 10 fold cross-validation</span></span><br><span class="line">samples_10fold &lt;-  getKfoldSamples(SimulatedData$x, SimulatedData$y, k=<span class="number">10</span>)</span><br><span class="line"><span class="comment"># 5 fold cross-validation</span></span><br><span class="line">samples_5fold &lt;-  getKfoldSamples(SimulatedData$x, SimulatedData$y, k=<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># the degrees of freedom associated with each</span></span><br><span class="line">complexity &lt;- <span class="built_in">c</span>(<span class="number">1</span>:<span class="number">10</span>) <span class="comment"># Thiese are the degrees of polynomials to be fitted</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Performing the Cross-Validation</span></span><br><span class="line">Ssamples &lt;- samples_5fold$Ssamples <span class="comment"># change this accorcing to the number of folds</span></span><br><span class="line">Tsamples &lt;- samples_5fold$Tsamples <span class="comment"># change this accorcing to the number of folds</span></span><br><span class="line">CV.To.Plot = data.frame(Complexity=<span class="literal">NA</span> , MSE=<span class="literal">NA</span>)</span><br><span class="line"><span class="keyword">for</span>(i <span class="keyword">in</span> <span class="number">1</span>:<span class="built_in">length</span>(complexity))&#123;</span><br><span class="line">  MSE = <span class="built_in">c</span>()</span><br><span class="line">  <span class="keyword">for</span>(j <span class="keyword">in</span> <span class="number">1</span>:<span class="built_in">length</span>(Ssamples))&#123;</span><br><span class="line">    x.temp = Ssamples[[j]]$x</span><br><span class="line">    y.temp = Ssamples[[j]]$y</span><br><span class="line">    model = lm(y.temp~poly(x.temp , complexity[i]))</span><br><span class="line">    pred = predict(model , newdata=data.frame(x.temp=Tsamples[[j]]$x))</span><br><span class="line">    MSE[j] = mean((Tsamples[[j]]$y-pred)^<span class="number">2</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  CV.To.Plot[i,] = <span class="built_in">c</span>(complexity[i] , mean(MSE))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Title.Graph = <span class="string">&quot;5-fold CV&quot;</span> <span class="comment"># change this accorcing to the number of folds</span></span><br><span class="line">plot(CV.To.Plot , pch=<span class="number">19</span> , col=<span class="string">&quot;darkblue&quot;</span> , type=<span class="string">&quot;b&quot;</span>,</span><br><span class="line">     cex.axis = <span class="number">1.5</span> , cex.lab=<span class="number">1.5</span> , ylab=<span class="string">&quot;Overall CV Error&quot;</span>)</span><br><span class="line">indx = which.min(CV.To.Plot$MSE)</span><br><span class="line">abline(v=indx ,lty=<span class="number">2</span> , lwd=<span class="number">2</span> , col=<span class="string">&#x27;red&#x27;</span>)</span><br><span class="line">title(main=Title.Graph)</span><br><span class="line"></span><br><span class="line">plot(y~x,pch=<span class="number">19</span> , col=adjustcolor(<span class="string">&quot;brown&quot;</span>,<span class="number">0.7</span>) , cex.axis=<span class="number">1.5</span> , cex.lab=<span class="number">1.5</span>)</span><br><span class="line">curve(<span class="number">5</span>+<span class="built_in">log</span>(x)*<span class="built_in">sin</span>(<span class="number">.65</span>*x)-<span class="number">2</span>*<span class="built_in">cos</span>(x-<span class="number">5</span>)/(<span class="built_in">sqrt</span>(x)),</span><br><span class="line">      xlim = <span class="built_in">c</span>(<span class="number">1</span>, <span class="number">10</span>), col = <span class="string">&quot;black&quot;</span>, add = <span class="literal">TRUE</span>)</span><br><span class="line">lines(x, predict(lm(y~poly(x,<span class="number">4</span>))), type=<span class="string">&quot;l&quot;</span>, col=<span class="string">&quot;blue&quot;</span>, lwd=<span class="number">2</span>)</span><br><span class="line">text(<span class="number">8</span>,<span class="number">7</span>,<span class="string">&quot;Black: True&quot;</span>)</span><br><span class="line">text(<span class="number">8</span>,<span class="number">6.5</span>,<span class="string">&quot;Blue: Fitted&quot;</span> , col=<span class="string">&quot;blue&quot;</span>)</span><br><span class="line">title(main=<span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<br>
<br>
<br>

<h2 id="Linear-Regression-Assumptions"><a href="#Linear-Regression-Assumptions" class="headerlink" title="Linear Regression Assumptions:"></a>Linear Regression Assumptions:</h2><ol>
<li>Linearity</li>
<li>Independence</li>
<li>Normality</li>
<li>Equal variance (homoskedasticity)</li>
</ol>
<p>code for checking them:</p>
<img src="/blog/2021/05/12/P194/P194_21.png" class="">
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">### --------Diagnostics in Practice-----------------</span></span><br><span class="line">library(car)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># high school and beyond dataset</span></span><br><span class="line">hsb &lt;- read.csv(<span class="string">&quot;HSB2.csv&quot;</span>)</span><br><span class="line">hsbm &lt;- hsb[<span class="number">1</span>:<span class="number">150</span>,<span class="built_in">c</span>(<span class="number">13</span>, <span class="number">1</span>:<span class="number">6</span>, <span class="number">10</span>, <span class="number">7</span>:<span class="number">9</span>)] <span class="comment"># math response only</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## look at data</span></span><br><span class="line">summary(hsbm)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## fit model</span></span><br><span class="line">M1 &lt;- lm(math ~ locus + concept + mot , data = hsbm)</span><br><span class="line"></span><br><span class="line"><span class="comment">## residuals</span></span><br><span class="line">res1 &lt;- resid(M1) <span class="comment"># raw residuals</span></span><br><span class="line">stud1 &lt;- res1/(sigma(M1)*<span class="built_in">sqrt</span>(<span class="number">1</span>-hatvalues(M1))) <span class="comment"># studentized residuals</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## plot distribution of studentized residuals</span></span><br><span class="line">hist(stud1,breaks=<span class="number">12</span>,</span><br><span class="line">     probability=<span class="literal">TRUE</span>,xlim=<span class="built_in">c</span>(-<span class="number">4</span>,<span class="number">4</span>),</span><br><span class="line">     xlab=<span class="string">&quot;Studentized Residuals&quot;</span>,</span><br><span class="line">     main=<span class="string">&quot;Distribution of Residuals&quot;</span>)</span><br><span class="line">grid &lt;- seq(-<span class="number">3.5</span>,<span class="number">3.5</span>,by=<span class="number">0.05</span>)</span><br><span class="line">lines(x=grid,y=dnorm(grid),col=<span class="string">&quot;blue&quot;</span>) <span class="comment"># add N(0,1) pdf</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## qqplot of studentized residuals</span></span><br><span class="line">qqnorm(stud1)</span><br><span class="line">abline(<span class="number">0</span>,<span class="number">1</span>) <span class="comment"># add 45 degree line</span></span><br><span class="line"><span class="comment"># 如果qqplot完全normal就会跟45度线重合.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## plot of residuals vs X</span></span><br><span class="line">plot(res1~hsbm$locus,</span><br><span class="line">     xlab=<span class="string">&quot;Locus.&quot;</span>,</span><br><span class="line">     ylab=<span class="string">&quot;Residuals&quot;</span>,</span><br><span class="line">     main=<span class="string">&quot;Residuals vs X&quot;</span>)</span><br><span class="line">abline(<span class="number">0</span>,<span class="number">0</span>) <span class="comment">## add horizontal line</span></span><br><span class="line">plot(res1~hsbm$concept,</span><br><span class="line">     xlab=<span class="string">&quot;Concept.&quot;</span>,</span><br><span class="line">     ylab=<span class="string">&quot;Residuals&quot;</span>,</span><br><span class="line">     main=<span class="string">&quot;Residuals vs X&quot;</span>)</span><br><span class="line">abline(<span class="number">0</span>,<span class="number">0</span>) <span class="comment">## add horizontal line</span></span><br><span class="line">plot(res1~hsbm$mot,</span><br><span class="line">     xlab=<span class="string">&quot;Motiv.&quot;</span>,</span><br><span class="line">     ylab=<span class="string">&quot;Residuals&quot;</span>,</span><br><span class="line">     main=<span class="string">&quot;Residuals vs X&quot;</span>)</span><br><span class="line">abline(<span class="number">0</span>,<span class="number">0</span>) <span class="comment">## add horizontal line</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## partial regression (aka added variable plots)</span></span><br><span class="line">avPlots(M1)</span><br><span class="line"></span><br><span class="line"><span class="comment">## plot of studentized residuals vs fitted values</span></span><br><span class="line">plot(stud1~fitted(M1),</span><br><span class="line">     xlab=<span class="string">&quot;Fitted Vals&quot;</span>,</span><br><span class="line">     ylab=<span class="string">&quot;Studentized Residuals&quot;</span>,</span><br><span class="line">     main=<span class="string">&quot;Residuals vs Fitted&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## standard residual plots</span></span><br><span class="line">plot(M1)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<img src="/blog/2021/05/12/P194/P194_22.png" class="">
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">##--------Practice Q2 :Simulations------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## load packages</span></span><br><span class="line">library(mvtnorm)</span><br><span class="line"></span><br><span class="line"><span class="comment">## set seed for reproducibility</span></span><br><span class="line">set.seed(<span class="number">1000</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">## set parameters</span></span><br><span class="line">n &lt;- 300</span><br><span class="line">sig &lt;- 1.5</span><br><span class="line"></span><br><span class="line"><span class="comment">## generate 4 covariates</span></span><br><span class="line">X &lt;- data.frame(rmvnorm(n,sigma=matrix(<span class="number">0.5</span>,<span class="number">4</span>,<span class="number">4</span>)+diag(<span class="built_in">rep</span>(<span class="number">1</span>,<span class="number">4</span>),<span class="number">4</span>,<span class="number">4</span>)))</span><br><span class="line"></span><br><span class="line"><span class="comment">## generate outcome under different models</span></span><br><span class="line">y &lt;- rnorm(n,-<span class="number">2</span>+<span class="number">0.8</span>*X$X1,sig) <span class="comment">## linear assoc.</span></span><br><span class="line">y2 &lt;- rnorm(n,-<span class="number">2</span>+<span class="number">0.8</span>*X$X1^<span class="number">2</span>,sig) <span class="comment">## non-linear assoc.</span></span><br><span class="line">y3 &lt;- -<span class="number">2</span>+<span class="number">0.8</span>*X$X1+runif(n,-<span class="number">2</span>,<span class="number">2</span>) <span class="comment">## non-gaussian errors</span></span><br><span class="line">y4 &lt;- rnorm(n,-<span class="number">2</span>+<span class="number">0.8</span>*X$X1,<span class="built_in">abs</span>((<span class="number">4</span>+X$X1))) <span class="comment">## mean-variance relationship</span></span><br><span class="line">y5 &lt;- rnorm(n,-<span class="number">2</span>+<span class="number">0.8</span>*X$X1+<span class="number">0.8</span>*X$X1^<span class="number">2</span>+<span class="number">0.4</span>*X$X2+<span class="number">1.2</span>*X$X3,sig) <span class="comment">## MLR</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## combine data into data.frame</span></span><br><span class="line">dat &lt;- data.frame(X,y,y2,y3,y4,y5)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#------Linear Assoc. with Gaussian Errors -------------</span></span><br><span class="line"><span class="comment">## SLR</span></span><br><span class="line">M1 &lt;- lm(y~X1,data=dat)</span><br><span class="line"></span><br><span class="line"><span class="comment">## compute  residuals</span></span><br><span class="line">res1 &lt;- resid(M1) <span class="comment"># raw residuals</span></span><br><span class="line">stud1 &lt;- res1/(sigma(M1)*<span class="built_in">sqrt</span>(<span class="number">1</span>-hatvalues(M1))) <span class="comment"># studentized residuals</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## plot distribution of studentized residuals</span></span><br><span class="line">hist(stud1,breaks=<span class="number">12</span>,</span><br><span class="line">     probability=<span class="literal">TRUE</span>,xlim=<span class="built_in">c</span>(-<span class="number">4</span>,<span class="number">4</span>),</span><br><span class="line">     xlab=<span class="string">&quot;Studentized Residuals&quot;</span>,</span><br><span class="line">     main=<span class="string">&quot;Distribution of Residuals&quot;</span>)</span><br><span class="line">grid &lt;- seq(-<span class="number">3.5</span>,<span class="number">3.5</span>,by=<span class="number">0.05</span>)</span><br><span class="line">lines(x=grid,y=dnorm(grid),col=<span class="string">&quot;blue&quot;</span>) <span class="comment"># add N(0,1) pdf</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## qqplot of studentized residuals</span></span><br><span class="line">qqnorm(stud1)</span><br><span class="line">abline(<span class="number">0</span>,<span class="number">1</span>) <span class="comment"># add 45 degree line</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## plot of residuals vs X</span></span><br><span class="line">plot(res1~X$X1,</span><br><span class="line">     xlab=<span class="built_in">expression</span>(X[<span class="number">1</span>]),</span><br><span class="line">     ylab=<span class="string">&quot;Residuals&quot;</span>,</span><br><span class="line">     main=<span class="string">&quot;Residuals vs X&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">## plot of studentized residuals vs fitted values</span></span><br><span class="line">plot(stud1~fitted(M1),</span><br><span class="line">     xlab=<span class="string">&quot;Fitted Vals&quot;</span>,</span><br><span class="line">     ylab=<span class="string">&quot;Studentized Residuals&quot;</span>,</span><br><span class="line">     main=<span class="string">&quot;Residuals vs Fitted&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#--------Quad. Assoc. and Gaussian Errors-----------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## SLR (assuming linear assoc.)</span></span><br><span class="line">M2 &lt;- lm(y2~X1,data=dat)</span><br><span class="line"></span><br><span class="line"><span class="comment">## compute  residuals</span></span><br><span class="line">res2 &lt;- resid(M2) <span class="comment"># raw residuals</span></span><br><span class="line">stud2 &lt;- res2/(sigma(M2)*<span class="built_in">sqrt</span>(<span class="number">1</span>-hatvalues(M2))) <span class="comment"># studentized residuals</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## plot studentized residuals</span></span><br><span class="line">hist(stud2,breaks=<span class="number">20</span>,</span><br><span class="line">     probability=<span class="literal">TRUE</span>,xlim=<span class="built_in">c</span>(-<span class="number">4</span>,<span class="number">4</span>),</span><br><span class="line">     xlab=<span class="string">&quot;Studentized Residuals&quot;</span>,</span><br><span class="line">     main=<span class="string">&quot;Distribution of Residuals&quot;</span>)</span><br><span class="line">grid &lt;- seq(-<span class="number">3.5</span>,<span class="number">3.5</span>,by=<span class="number">0.05</span>)</span><br><span class="line">lines(x=grid,y=dnorm(grid),col=<span class="string">&quot;blue&quot;</span>) <span class="comment"># add N(0,1) pdf</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## qqplot</span></span><br><span class="line">qqnorm(stud2)</span><br><span class="line">abline(<span class="number">0</span>,<span class="number">1</span>) <span class="comment"># add 45 degree line</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## plot of residuals vs X</span></span><br><span class="line">plot(res2~X$X1,</span><br><span class="line">     xlab=<span class="built_in">expression</span>(X[<span class="number">1</span>]),</span><br><span class="line">     ylab=<span class="string">&quot;Residuals&quot;</span>,</span><br><span class="line">     main=<span class="string">&quot;Residuals vs X&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">## plot of studentized residuals vs fitted values</span></span><br><span class="line">plot(stud2~fitted(M2),</span><br><span class="line">     xlab=<span class="string">&quot;Fitted Vals&quot;</span>,</span><br><span class="line">     ylab=<span class="string">&quot;Studentized Residuals&quot;</span>,</span><br><span class="line">     main=<span class="string">&quot;Residuals vs Fitted&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#------Non-Gaussian Residuals -------------</span></span><br><span class="line"><span class="comment">## SLR, assuming gaussian errors</span></span><br><span class="line">M3 &lt;- lm(y3~X1,data=dat)</span><br><span class="line"></span><br><span class="line"><span class="comment">## compute  residuals</span></span><br><span class="line">res3 &lt;- resid(M3) <span class="comment"># raw residuals</span></span><br><span class="line">stud3 &lt;- res3/(sigma(M3)*<span class="built_in">sqrt</span>(<span class="number">1</span>-hatvalues(M3))) <span class="comment"># studentized residuals</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## plot distribution of studentized residuals</span></span><br><span class="line">hist(stud3,breaks=<span class="number">12</span>,</span><br><span class="line">     probability=<span class="literal">TRUE</span>,xlim=<span class="built_in">c</span>(-<span class="number">4</span>,<span class="number">4</span>),</span><br><span class="line">     xlab=<span class="string">&quot;Studentized Residuals&quot;</span>,</span><br><span class="line">     main=<span class="string">&quot;Distribution of Residuals&quot;</span>)</span><br><span class="line">grid &lt;- seq(-<span class="number">3.5</span>,<span class="number">3.5</span>,by=<span class="number">0.05</span>)</span><br><span class="line">lines(x=grid,y=dnorm(grid),col=<span class="string">&quot;blue&quot;</span>) <span class="comment"># add N(0,1) pdf</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## qqplot of studentized residuals</span></span><br><span class="line">qqnorm(stud3)</span><br><span class="line">abline(<span class="number">0</span>,<span class="number">1</span>) <span class="comment"># add 45 degree line</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## plot of residuals vs X</span></span><br><span class="line">plot(res3~X$X1,</span><br><span class="line">     xlab=<span class="built_in">expression</span>(X[<span class="number">1</span>]),</span><br><span class="line">     ylab=<span class="string">&quot;Residuals&quot;</span>,</span><br><span class="line">     main=<span class="string">&quot;Residuals vs X&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">## plot of studentized residuals vs fitted values</span></span><br><span class="line">plot(stud3~fitted(M3),</span><br><span class="line">     xlab=<span class="string">&quot;Fitted Vals&quot;</span>,</span><br><span class="line">     ylab=<span class="string">&quot;Studentized Residuals&quot;</span>,</span><br><span class="line">     main=<span class="string">&quot;Residuals vs Fitted&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#------Heteroskedasticity-------------</span></span><br><span class="line"><span class="comment">## SLR</span></span><br><span class="line">M4 &lt;- lm(y4~X1,data=dat)</span><br><span class="line"></span><br><span class="line"><span class="comment">## compute  residuals</span></span><br><span class="line">res4 &lt;- resid(M4) <span class="comment"># raw residuals</span></span><br><span class="line">stud4 &lt;- res4/(sigma(M4)*<span class="built_in">sqrt</span>(<span class="number">1</span>-hatvalues(M4))) <span class="comment"># studentized residuals</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## plot distribution of studentized residuals</span></span><br><span class="line">hist(stud4,breaks=<span class="number">12</span>,</span><br><span class="line">     probability=<span class="literal">TRUE</span>,xlim=<span class="built_in">c</span>(-<span class="number">4</span>,<span class="number">4</span>),</span><br><span class="line">     xlab=<span class="string">&quot;Studentized Residuals&quot;</span>,</span><br><span class="line">     main=<span class="string">&quot;Distribution of Residuals&quot;</span>)</span><br><span class="line">grid &lt;- seq(-<span class="number">3.5</span>,<span class="number">3.5</span>,by=<span class="number">0.05</span>)</span><br><span class="line">lines(x=grid,y=dnorm(grid),col=<span class="string">&quot;blue&quot;</span>) <span class="comment"># add N(0,1) pdf</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## qqplot of studentized residuals</span></span><br><span class="line">qqnorm(stud4)</span><br><span class="line">abline(<span class="number">0</span>,<span class="number">1</span>) <span class="comment"># add 45 degree line</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## plot of residuals vs X</span></span><br><span class="line">plot(res4~X$X1,</span><br><span class="line">     xlab=<span class="built_in">expression</span>(X[<span class="number">1</span>]),</span><br><span class="line">     ylab=<span class="string">&quot;Residuals&quot;</span>,</span><br><span class="line">     main=<span class="string">&quot;Residuals vs X&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">## plot of studentized residuals vs fitted values</span></span><br><span class="line">plot(stud4~fitted(M4),</span><br><span class="line">     xlab=<span class="string">&quot;Fitted Vals&quot;</span>,</span><br><span class="line">     ylab=<span class="string">&quot;Studentized Residuals&quot;</span>,</span><br><span class="line">     main=<span class="string">&quot;Residuals vs Fitted&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#------Linear Assoc. with Gaussian Errors -------------</span></span><br><span class="line"><span class="comment">## SLR</span></span><br><span class="line">M5 &lt;- lm(y5~X1+X2+X3+X4,data=dat)</span><br><span class="line"></span><br><span class="line"><span class="comment">## compute  residuals</span></span><br><span class="line">res5 &lt;- resid(M5) <span class="comment"># raw residuals</span></span><br><span class="line">stud5 &lt;- res5/(sigma(M5)*<span class="built_in">sqrt</span>(<span class="number">1</span>-hatvalues(M5))) <span class="comment"># studentized residuals</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## plot distribution of studentized residuals</span></span><br><span class="line">hist(stud5,breaks=<span class="number">12</span>,</span><br><span class="line">     probability=<span class="literal">TRUE</span>,xlim=<span class="built_in">c</span>(-<span class="number">4</span>,<span class="number">4</span>),</span><br><span class="line">     xlab=<span class="string">&quot;Studentized Residuals&quot;</span>,</span><br><span class="line">     main=<span class="string">&quot;Distribution of Residuals&quot;</span>)</span><br><span class="line">grid &lt;- seq(-<span class="number">3.5</span>,<span class="number">3.5</span>,by=<span class="number">0.05</span>)</span><br><span class="line">lines(x=grid,y=dnorm(grid),col=<span class="string">&quot;blue&quot;</span>) <span class="comment"># add N(0,1) pdf</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## qqplot of studentized residuals</span></span><br><span class="line">qqnorm(stud5)</span><br><span class="line">abline(<span class="number">0</span>,<span class="number">1</span>) <span class="comment"># add 45 degree line</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## plot of studentized residuals vs fitted values</span></span><br><span class="line">plot(stud5~fitted(M5),</span><br><span class="line">     xlab=<span class="string">&quot;Fitted Vals&quot;</span>,</span><br><span class="line">     ylab=<span class="string">&quot;Studentized Residuals&quot;</span>,</span><br><span class="line">     main=<span class="string">&quot;Residuals vs Fitted&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">## plot of residuals vs X1,X2,X3,X4</span></span><br><span class="line">plot(res5~X$X1,</span><br><span class="line">     xlab=<span class="built_in">expression</span>(X[<span class="number">1</span>]),</span><br><span class="line">     ylab=<span class="string">&quot;Residuals&quot;</span>,</span><br><span class="line">     main=<span class="string">&quot;Residuals vs X&quot;</span>)</span><br><span class="line">plot(res5~X$X2,</span><br><span class="line">     xlab=<span class="built_in">expression</span>(X[<span class="number">2</span>]),</span><br><span class="line">     ylab=<span class="string">&quot;Residuals&quot;</span>,</span><br><span class="line">     main=<span class="string">&quot;Residuals vs X&quot;</span>)</span><br><span class="line">plot(res5~X$X3,</span><br><span class="line">     xlab=<span class="built_in">expression</span>(X[<span class="number">3</span>]),</span><br><span class="line">     ylab=<span class="string">&quot;Residuals&quot;</span>,</span><br><span class="line">     main=<span class="string">&quot;Residuals vs X&quot;</span>)</span><br><span class="line">plot(res5~X$X4,</span><br><span class="line">     xlab=<span class="built_in">expression</span>(X[<span class="number">4</span>]),</span><br><span class="line">     ylab=<span class="string">&quot;Residuals&quot;</span>,</span><br><span class="line">     main=<span class="string">&quot;Residuals vs X&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## plot of residuals vs X1,X2,X3,X4</span></span><br><span class="line">My &lt;- lm(y5~X2+X3+X4,data=dat)</span><br><span class="line">Mx &lt;- lm(X1~X2+X3+X4,data=dat)</span><br><span class="line">plot(My$residuals~Mx$residuals,</span><br><span class="line">     xlab=<span class="built_in">expression</span>(e[x[<span class="number">1</span>]]),</span><br><span class="line">     ylab=<span class="built_in">expression</span>(e[y]),</span><br><span class="line">     main=<span class="string">&quot;Partial Regression Plot&quot;</span>)</span><br><span class="line"></span><br><span class="line">avPlots(M5)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>在不满足的情况下修改model:</p>
<ol>
<li>Linearity</li>
</ol>
<ul>
<li>Instead include log(xj)</li>
<li>Instead use a quadratic model (xj and xj2)</li>
</ul>
<ol start="2">
<li>Independence</li>
</ol>
<ul>
<li>Estimates are still unbiased but standard errors are broken<br>=⇒ replace SEs with robust alternatives (sandwich form, GEE)</li>
<li>Explicitly model the dependence structure • Mixed effects models</li>
</ul>
<ol start="3">
<li>Normality</li>
</ol>
<p>Violations of normality might not be a big deal</p>
<ul>
<li>E.g. if we have a large sample size<br>However, Normality is required for valid prediction intervals</li>
<li>Could consider transforming Y<br>E.g. model log(Y)<br>This again changes interpretations!<br>Might not be a problem if we’re interested in prediction</li>
<li>Could consider other regression approaches: GLMs, etc. (not covered in this course)</li>
</ul>
<ol start="4">
<li>Equal variance (homoskedasticity)</li>
</ol>
<p>If our errors are heteroskedastic, we have a few options:</p>
<ul>
<li>Transform outcome (see above)<br>Variance stabilizing transform</li>
<li>Weighted Least Squares</li>
<li>Bootstrap (time permitting…)</li>
</ul>
<p>Weighted Least Squares:</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment">## load packages</span></span><br><span class="line">library(mvtnorm)</span><br><span class="line"></span><br><span class="line"><span class="comment">## set seed for reproducibility</span></span><br><span class="line">set.seed(<span class="number">1000</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">## set parameters</span></span><br><span class="line">n &lt;- 300</span><br><span class="line">sig &lt;- 1.5</span><br><span class="line"></span><br><span class="line"><span class="comment">## generate 4 covariates</span></span><br><span class="line">X &lt;- data.frame(rmvnorm(n,sigma=matrix(<span class="number">0.5</span>,<span class="number">4</span>,<span class="number">4</span>)+diag(<span class="built_in">rep</span>(<span class="number">1</span>,<span class="number">4</span>),<span class="number">4</span>,<span class="number">4</span>)))</span><br><span class="line"></span><br><span class="line"><span class="comment">## generate outcome under different models</span></span><br><span class="line"><span class="comment"># y &lt;- rnorm(n,-2+0.8*X$X1,sig) ## linear assoc.</span></span><br><span class="line">y2 &lt;- rnorm(n,-<span class="number">2</span>+<span class="number">0.8</span>*X$X1^<span class="number">2</span>,sig) <span class="comment">## non-linear assoc.</span></span><br><span class="line">y4 &lt;- rnorm(n,-<span class="number">2</span>+<span class="number">0.8</span>*X$X1,<span class="built_in">abs</span>((<span class="number">4</span>+X$X1))) <span class="comment">## mean-variance relationship</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## combine data into data.frame</span></span><br><span class="line">dat &lt;- data.frame(X,y,y2,y4)</span><br><span class="line"></span><br><span class="line"><span class="comment">#--------------------------------</span></span><br><span class="line"><span class="comment">## Linear</span></span><br><span class="line">Mlin &lt;- lm(y2~X1,data=dat)</span><br><span class="line"></span><br><span class="line"><span class="comment">## compute  residuals</span></span><br><span class="line">reslin &lt;- resid(Mlin) <span class="comment"># raw residuals</span></span><br><span class="line">studlin &lt;- reslin/(sigma(Mlin)*<span class="built_in">sqrt</span>(<span class="number">1</span>-hatvalues(Mlin))) <span class="comment"># studentized residuals</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## plot of residuals vs X</span></span><br><span class="line">plot(reslin~X$X1,</span><br><span class="line">     xlab=<span class="built_in">expression</span>(X[<span class="number">1</span>]),</span><br><span class="line">     ylab=<span class="string">&quot;Residuals&quot;</span>,</span><br><span class="line">     main=<span class="string">&quot;Residuals vs X&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">## plot of residuals vs X^2</span></span><br><span class="line">plot(reslin~I(X$X1^<span class="number">2</span>),</span><br><span class="line">     xlab=<span class="built_in">expression</span>(X[<span class="number">1</span>]^<span class="number">2</span>),</span><br><span class="line">     ylab=<span class="string">&quot;Residuals&quot;</span>,</span><br><span class="line">     main=<span class="string">&quot;Residuals vs X^2&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#--------------------------------</span></span><br><span class="line"><span class="comment">## Quadratic</span></span><br><span class="line">Mquad &lt;- lm(y2~X1+I(X1^<span class="number">2</span>),data=dat)</span><br><span class="line"></span><br><span class="line"><span class="comment">## compute  residuals</span></span><br><span class="line">resquad &lt;- resid(Mquad) <span class="comment"># raw residuals</span></span><br><span class="line">studquad &lt;- resquad/(sigma(Mquad)*<span class="built_in">sqrt</span>(<span class="number">1</span>-hatvalues(Mquad))) <span class="comment"># studentized residuals</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## plot of residuals vs X</span></span><br><span class="line">plot(resquad~X$X1,</span><br><span class="line">     xlab=<span class="built_in">expression</span>(X[<span class="number">1</span>]),</span><br><span class="line">     ylab=<span class="string">&quot;Residuals&quot;</span>,</span><br><span class="line">     main=<span class="string">&quot;Residuals vs X&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">## plot of residuals vs X^2</span></span><br><span class="line">plot(resquad~I(X$X1^<span class="number">2</span>),</span><br><span class="line">     xlab=<span class="built_in">expression</span>(X[<span class="number">1</span>]^<span class="number">2</span>),</span><br><span class="line">     ylab=<span class="string">&quot;Residuals&quot;</span>,</span><br><span class="line">     main=<span class="string">&quot;Residuals vs X^2&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">### --------Iteratively Re-Weighted Least Squares--------</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#--------------------------------</span></span><br><span class="line"><span class="comment">## OLS</span></span><br><span class="line">Mols &lt;- lm(y4~X1,data=dat)</span><br><span class="line"></span><br><span class="line"><span class="comment">## compute  residuals</span></span><br><span class="line">resols &lt;- resid(Mols) <span class="comment"># raw residuals</span></span><br><span class="line">studols &lt;- resols/(sigma(Mols)*<span class="built_in">sqrt</span>(<span class="number">1</span>-hatvalues(Mols))) <span class="comment"># studentized residuals</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## plot of studentized residuals vs fitted values</span></span><br><span class="line">plot(studols~fitted(Mols),</span><br><span class="line">     xlab=<span class="string">&quot;Fitted Vals&quot;</span>,</span><br><span class="line">     ylab=<span class="string">&quot;Studentized Residuals&quot;</span>,</span><br><span class="line">     main=<span class="string">&quot;Residuals vs Fitted&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#--------------------------------</span></span><br><span class="line"><span class="comment">## WLS</span></span><br><span class="line"><span class="comment"># step 1</span></span><br><span class="line"><span class="comment"># initial estimates (OLS)</span></span><br><span class="line">Mcurrent &lt;- lm(y4~X1,data=dat)</span><br><span class="line">Mcurrent$coef</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 2</span></span><br><span class="line"><span class="comment"># model |e|</span></span><br><span class="line">abs_resid &lt;- <span class="built_in">abs</span>(Mcurrent$residuals)</span><br><span class="line">Mresid &lt;- lm(abs_resid~ fitted(Mcurrent))</span><br><span class="line">w &lt;- 1/fitted(Mresid)^<span class="number">2</span></span><br><span class="line"><span class="comment"># fit WLS</span></span><br><span class="line">Mwls &lt;- lm(y4~X1,weights=w,data=dat)</span><br><span class="line">Mwls$coef</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 3</span></span><br><span class="line">Mcurrent &lt;- Mwls</span><br><span class="line"><span class="comment"># model |e|</span></span><br><span class="line">abs_resid &lt;- <span class="built_in">abs</span>(Mcurrent$residuals)</span><br><span class="line">Mresid &lt;- lm(abs_resid~ fitted(Mcurrent))</span><br><span class="line">w &lt;- 1/fitted(Mresid)^<span class="number">2</span></span><br><span class="line"><span class="comment"># fit WLS</span></span><br><span class="line">Mwls &lt;- lm(y4~X1,weights=w,data=dat)</span><br><span class="line">Mwls$coef</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 4</span></span><br><span class="line">Mcurrent &lt;- Mwls</span><br><span class="line"><span class="comment"># model |e|</span></span><br><span class="line">abs_resid &lt;- <span class="built_in">abs</span>(Mcurrent$residuals)</span><br><span class="line">Mresid &lt;- lm(abs_resid~ fitted(Mcurrent))</span><br><span class="line">w &lt;- 1/fitted(Mresid)^<span class="number">2</span></span><br><span class="line"><span class="comment"># fit WLS</span></span><br><span class="line">Mwls &lt;- lm(y4~X1,weights=w,data=dat)</span><br><span class="line">Mwls$coef</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">### automatically:</span></span><br><span class="line">sumdiff &lt;- 100 <span class="comment">## initial val</span></span><br><span class="line">threshold &lt;- 10e-<span class="number">12</span> <span class="comment">## stopping condition</span></span><br><span class="line">iter &lt;- 1 <span class="comment">## count iterations</span></span><br><span class="line">Mcurrent &lt;- lm(y4~X1,data=dat) <span class="comment">## initial OLS fit</span></span><br><span class="line"><span class="keyword">while</span>(sumdiff&gt;=threshold)&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment"># model |e|</span></span><br><span class="line">  abs_resid &lt;- <span class="built_in">abs</span>(Mcurrent$residuals)</span><br><span class="line">  Mresid &lt;- lm(abs_resid~ fitted(Mcurrent))</span><br><span class="line">  w &lt;- 1/fitted(Mresid)^<span class="number">2</span></span><br><span class="line">  <span class="comment"># fit WLS</span></span><br><span class="line">  Mwls &lt;- lm(y4~X1,weights=w,data=dat)</span><br><span class="line"></span><br><span class="line">  <span class="comment">## compute differences</span></span><br><span class="line">  sumdiff &lt;- <span class="built_in">sum</span>(<span class="built_in">abs</span>(Mwls$coef-Mcurrent$coef))</span><br><span class="line">  Mcurrent &lt;- Mwls</span><br><span class="line"></span><br><span class="line">  <span class="comment">## count iterations</span></span><br><span class="line">  print(iter)</span><br><span class="line">  iter &lt;- iter+<span class="number">1</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">### --------PQ1: Weighted Least Squares-----------------</span></span><br><span class="line">library(readr)</span><br><span class="line">hosp &lt;- read_csv(<span class="string">&quot;hospitals.csv&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># calculate the weighted regression using matrices</span></span><br><span class="line">y &lt;- hosp$SurgQual <span class="comment"># response</span></span><br><span class="line">X &lt;- cbind(<span class="number">1</span>, hosp$Difficulty) <span class="comment"># covariate matrix</span></span><br><span class="line">N &lt;- hosp$N <span class="comment"># sample sizes</span></span><br><span class="line"></span><br><span class="line">y_W &lt;- y*<span class="built_in">sqrt</span>(N) <span class="comment"># multiply by W^&#123;1/2&#125;</span></span><br><span class="line">X_W &lt;- X*<span class="built_in">sqrt</span>(N)<span class="comment"># multiply by W^&#123;1/2&#125;</span></span><br><span class="line">beta.hat.WLS &lt;- <span class="built_in">c</span>(solve(t(X_W)%*%X_W)%*%t(X_W)%*%y_W) <span class="comment"># WLS estimator</span></span><br><span class="line">beta.hat.WLS</span><br><span class="line"></span><br><span class="line"><span class="comment"># OLS on pre multiplied data</span></span><br><span class="line">g_WLS2 &lt;- lm(y_W ~ X_W-<span class="number">1</span>, data = hosp)</span><br><span class="line">g_WLS2$coef</span><br><span class="line"></span><br><span class="line"><span class="comment"># using the built-in R function</span></span><br><span class="line"><span class="comment"># R expects weights = N, not weights = sqrt(N)</span></span><br><span class="line">g_WLS &lt;- lm(SurgQual ~ Difficulty, weights = N, data = hosp)</span><br><span class="line">g_WLS$coef</span><br><span class="line"></span><br><span class="line"><span class="comment">## OLS</span></span><br><span class="line">g_OLS &lt;- lm(SurgQual ~ Difficulty,  data = hosp)</span><br><span class="line">g_OLS$coef</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># plot the data with circle proportional to sample sizes</span></span><br><span class="line">plot(hosp$Difficulty, hosp$SurgQual,</span><br><span class="line">     xlab = <span class="string">&quot;Case Load Difficulty Index&quot;</span>,</span><br><span class="line">     ylab = <span class="string">&quot;Post-Surgery Quality Index&quot;</span>,</span><br><span class="line">     cex = <span class="built_in">sqrt</span>(hosp$N/<span class="built_in">max</span>(hosp$N))^<span class="number">2</span>*<span class="number">4</span>,</span><br><span class="line">     pch = <span class="number">16</span>,</span><br><span class="line">     col = <span class="string">&quot;lightgrey&quot;</span>)</span><br><span class="line">points(hosp$Difficulty, hosp$SurgQual, pch = <span class="number">3</span>, col = <span class="string">&quot;black&quot;</span>)</span><br><span class="line">abline(g_OLS, col = <span class="string">&quot;blue&quot;</span>) <span class="comment"># add simple regression line</span></span><br><span class="line">abline(g_WLS, col = <span class="string">&quot;blue&quot;</span>, lty = <span class="number">2</span>) <span class="comment"># add weighted regression line</span></span><br><span class="line"><span class="comment"># add legend to plot</span></span><br><span class="line">legend(x = <span class="string">&quot;topright&quot;</span>,</span><br><span class="line">       legend = <span class="built_in">c</span>(<span class="string">&quot;OLS&quot;</span>, <span class="string">&quot;WLS&quot;</span>),</span><br><span class="line">       col = <span class="string">&quot;blue&quot;</span>, cex = <span class="number">.8</span>,</span><br><span class="line">       lty = <span class="built_in">c</span>(<span class="number">1</span>, <span class="number">2</span>), seg.len = <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>stat444加强版选择weight:</p>
<img src="/blog/2021/05/12/P194/P194_23.png" class="">
]]></content>
      <categories>
        <category>数学笔记</category>
      </categories>
      <tags>
        <tag>Thank you Mr.goose</tag>
        <tag>编码</tag>
        <tag>以头抢地(诚)</tag>
        <tag>data</tag>
        <tag>R</tag>
        <tag>statistics</tag>
      </tags>
  </entry>
  <entry>
    <title>关于data的笔记 - Week4</title>
    <url>/blog/2021/05/04/P193/</url>
    <content><![CDATA[<script async
  src="//mathjax.rstudio.com/latest/MathJax.js?config=TeX-MML-AM_CHTML">
</script>
<p>接<a href="https://mazui3.github.io/blog/2020/11/28/P140/">第一回</a>与<a href="https://mazui3.github.io/blog/2020/11/28/P141/">第二回</a>与<a href="https://mazui3.github.io/blog/2021/03/14/P170/">第三回.</a></p>
<span id="more"></span>

<p>笔记有少许重复,这次是data visualization.</p>
<br>
<br>
<br>

<p>就算data的mean,sd相同,每组的图形可能也十分不同.所以在查看data时,除了查看他们的属性,还有看他们的分布.<br><a href="https://en.wikipedia.org/wiki/Anscombe%27s_quartet">Anscombe’s quartet.</a></p>
<p>analysis分为两种.探索与说明.</p>
<blockquote>
<p>Exploratory analysis is done when you are searching for insights. These visualizations don’t need to be perfect. You are using plots to find insights, but they don’t need to be aesthetically appealing. You are the consumer of these plots, and you need to be able to find the answer to your questions from these plots.</p>
</blockquote>
<blockquote>
<p>Explanatory analysis is done when you are providing your results for others. These visualizations need to provide you the emphasis necessary to convey your message. They should be accurate, insightful, and visually appealing.</p>
</blockquote>
<p>process分为五部.</p>
<ul>
<li>Extract - Obtain the data from a spreadsheet, SQL, the web, etc.</li>
<li>Clean - Here we could use exploratory visuals.</li>
<li>Explore - Here we use exploratory visuals.</li>
<li>Analyze - Here we might use either exploratory or explanatory visuals.</li>
<li>Share - Here is where explanatory visuals live.</li>
</ul>
<br>
<br>
<br>



<p>viualization</p>
<ul>
<li>design: <strong>colour</strong>(less colour) &amp; <strong>area</strong> &amp; <strong>shape</strong> &amp; <strong>size</strong>.</li>
<li><a href="https://en.wikipedia.org/wiki/Chartjunk">chart jurk</a>: whether to display or not on the chart.注重每个ink使用比例都要高效.</li>
<li>accurate: lie factor(misleading or not).</li>
</ul>
<p><code>$\text&#123;lie factor&#125; =\frac&#123;\Delta \text&#123;visual&#125;/\text&#123;visual&#125;_\text&#123;start&#125;&#125;&#123;\Delta \text&#123;data&#125; \text&#123;data&#125;_\text&#123;start&#125;&#125;$</code><br> ​<br> ​</p>
<blockquote>
<p>Aside: To be sensitive to those with colorblindness, you should use color palettes that <strong>do not move from red to green</strong> without using another element to distinguish this change like shape, position, or lightness. Both of these colors appear in a yellow tint to individuals with the most common types of colorblindness. Instead, use colors on a <strong>blue to orange palette</strong>.</p>
</blockquote>
<blockquote>
<p>Aside:Extra: Code<br>Some of the plots in this presentation were created using the programming language R, and a very popular library known as <strong>ggplot2</strong>. Though this is beyond the scope of this course, the code used to create these visualizations is provided below:</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">install.packages(<span class="string">&#x27;ggplot2&#x27;</span>)</span><br><span class="line">library(ggplot2)</span><br><span class="line"></span><br><span class="line">df = read.csv(file.choose()) <span class="comment">#select your dataset</span></span><br><span class="line">df2 = head(df, <span class="number">30</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">qplot(df2$Math.SAT, df2$Verbal.SAT, xlab = <span class="string">&#x27;Math SAT Score&#x27;</span>,</span><br><span class="line">      ylab = <span class="string">&#x27;Verbal SAT Score&#x27;</span>, main = <span class="string">&#x27;Average SAT Scores By College&#x27;</span>)</span><br><span class="line"></span><br><span class="line">qplot(df2$Math.SAT, df2$Verbal.SAT, xlab = <span class="string">&#x27;Math SAT Score&#x27;</span>,</span><br><span class="line">      ylab = <span class="string">&#x27;Verbal SAT Score&#x27;</span>, main = <span class="string">&#x27;Average SAT Scores By College&#x27;</span>,</span><br><span class="line">      color = as.factor(df2$Public..1...Private..2.))</span><br><span class="line"></span><br><span class="line">qplot(df2$Math.SAT, df2$Verbal.SAT, xlab = <span class="string">&#x27;Math SAT Score&#x27;</span>,</span><br><span class="line">      ylab = <span class="string">&#x27;Verbal SAT Score&#x27;</span>, main = <span class="string">&#x27;Average SAT Scores By College&#x27;</span>,</span><br><span class="line">      shape = as.factor(df2$Public..1...Private..2.), color = df2$stud..fac..ratio)</span><br><span class="line"></span><br><span class="line">ggplot(df2, aes(x=Math.SAT, y=Verbal.SAT, group=stud..fac..ratio)) +</span><br><span class="line">  geom_point(aes(shape=stud..fac..ratio, color=as.factor(df2$Public..1...Private..2.))</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<br>
<br>
<br>

<p>python图表<a href="https://www.python-graph-gallery.com/">sheet</a>.<br><br><br><br><br><br></p>
<h1 id="exploratory-analysis"><a href="#exploratory-analysis" class="headerlink" title="exploratory analysis"></a>exploratory analysis</h1><h2 id="chart"><a href="#chart" class="headerlink" title="chart"></a>chart</h2><h3 id="bar-charts"><a href="#bar-charts" class="headerlink" title="bar charts"></a>bar charts</h3><p>for qualitative variables.</p>
<p>using <a href="https://seaborn.pydata.org/generated/seaborn.countplot.html">Seaborn</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">seaborn.countplot(* , x=<span class="literal">None</span>, y=<span class="literal">None</span>, data=<span class="literal">None</span>, order=<span class="literal">None</span>, orient=<span class="literal">None</span>, color=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Necessary imports</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sb</span><br><span class="line">%matplotlib inline</span><br><span class="line"></span><br><span class="line"><span class="comment"># Read the csv file, and check its top 10 rows</span></span><br><span class="line">pokemon = pd.read_csv(<span class="string">&#x27;pokemon.csv&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># A semicolon (;) at the end of the statement will supress printing the plotting information</span></span><br><span class="line">sb.countplot(data=pokemon, x=<span class="string">&#x27;generation_id&#x27;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>更改颜色.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># The `color_palette()` returns the the current / default palette as a list of RGB tuples.</span></span><br><span class="line"><span class="comment"># Each tuple consists of three digits specifying the red, green, and blue channel values to specify a color.</span></span><br><span class="line"><span class="comment"># Choose the first tuple of RGB colors</span></span><br><span class="line">base_color = sb.color_palette()[<span class="number">0</span>] <span class="comment"># color_palette里有很多的颜色</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Use the `color` argument</span></span><br><span class="line">sb.countplot(data=pokemon, x=<span class="string">&#x27;generation_id&#x27;</span>, color=base_color);</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Return the Series having unique values</span></span><br><span class="line">x = pokemon[<span class="string">&#x27;generation_id&#x27;</span>].unique()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Return the Series having frequency count of each unique value</span></span><br><span class="line">y = pokemon[<span class="string">&#x27;generation_id&#x27;</span>].value_counts(sort=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">plt.bar(x, y)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Labeling the axes</span></span><br><span class="line">plt.xlabel(<span class="string">&#x27;generation_id&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;count&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Dsiplay the plot</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>

<p>用matplotlib.</p>
<p>Bar chart by <a href="https://matplotlib.org/3.1.1/api/_as_gen/matplotlib.pyplot.bar.html">matplotlib</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">matplotlib.pyplot.bar(x, y, width=<span class="number">0.8</span>, bottom=<span class="literal">None</span>, * , align=<span class="string">&#x27;center&#x27;</span>, data=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Return the Series having unique values</span></span><br><span class="line">x = pokemon[<span class="string">&#x27;generation_id&#x27;</span>].unique()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Return the Series having frequency count of each unique value</span></span><br><span class="line">y = pokemon[<span class="string">&#x27;generation_id&#x27;</span>].value_counts(sort=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">plt.bar(x, y)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Labeling the axes</span></span><br><span class="line">plt.xlabel(<span class="string">&#x27;generation_id&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;count&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Dsiplay the plot</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>

<p>更改顺序.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Static-ordering the bars</span></span><br><span class="line">sb.countplot(data=pokemon, x=<span class="string">&#x27;generation_id&#x27;</span>, color=base_color, order=[<span class="number">5</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">7</span>,<span class="number">6</span>]); <span class="comment"># 可以手动输入index_order</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Dynamic-ordering the bars</span></span><br><span class="line"><span class="comment"># The order of the display of the bars can be computed with the following logic.</span></span><br><span class="line"><span class="comment"># Count the frequency of each unique value in the &#x27;generation_id&#x27; column, and sort it in descending order</span></span><br><span class="line"><span class="comment"># Returns a Series</span></span><br><span class="line">freq = pokemon[<span class="string">&#x27;generation_id&#x27;</span>].value_counts() <span class="comment"># 也可以用value_counts找到顺序后带入</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Get the indexes of the Series</span></span><br><span class="line">gen_order = freq.index</span><br><span class="line"></span><br><span class="line"><span class="comment"># Plot the bar chart in the decreasing order of the frequency of the `generation_id`</span></span><br><span class="line">sb.countplot(data=pokemon, x=<span class="string">&#x27;generation_id&#x27;</span>, color=base_color, order=gen_order);</span><br></pre></td></tr></table></figure>

<p>Rotate the category labels (not axes)</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Plot the Pokemon type on a Vertical bar chart</span></span><br><span class="line">sb.countplot(data=pokemon, x=<span class="string">&#x27;type_1&#x27;</span>, color=base_color);</span><br><span class="line"></span><br><span class="line"><span class="comment"># Use xticks to rotate the category labels (not axes) counter-clockwise</span></span><br><span class="line">plt.xticks(rotation=<span class="number">90</span>)</span><br></pre></td></tr></table></figure>

<p>Rotate the axes clockwise</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Plot the Pokemon type on a Horizontal bar chart</span></span><br><span class="line">type_order = pokemon[<span class="string">&#x27;type_1&#x27;</span>].value_counts().index</span><br><span class="line">sb.countplot(data=pokemon, y=<span class="string">&#x27;type_1&#x27;</span>, color=base_color, order=type_order);</span><br></pre></td></tr></table></figure>

<p>absolute(数值多少本身) vs relative(proportion也就是按category只显示占比) frequency.<br>seaborn countplot默认absolute.</p>
<p>Data Wrangling Step<br>We will use the <a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.melt.html">pandas.DataFrame.melt()</a> method to unpivot a DataFrame from wide to long format, optionally leaving identifiers set. The syntax is:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">DataFrame.melt(id_vars, value_vars, var_name, value_name, col_level, ignore_index)</span><br></pre></td></tr></table></figure>

<ul>
<li>id_vars - It is a tuple representing the column(s) to use as identifier variables.</li>
<li>value_vars - It is tuple representing the column(s) to unpivot (remove, out of place).</li>
<li>var_name - It is a name of the new column.</li>
<li>value_name - It is a name to use for the ‘value’ of the columns that are unpivoted.</li>
</ul>
<p>Data wrangling to reshape the pokemon dataframe,加入category.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"> pkmn_types = pokemon.melt(id_vars=[<span class="string">&#x27;id&#x27;</span>, <span class="string">&#x27;species&#x27;</span>],</span><br><span class="line">                          value_vars=[<span class="string">&#x27;type_1&#x27;</span>, <span class="string">&#x27;type_2&#x27;</span>],</span><br><span class="line">                          var_name=<span class="string">&#x27;type_level&#x27;</span>,</span><br><span class="line">                          value_name=<span class="string">&#x27;type&#x27;</span>)</span><br><span class="line">pkmn_types.head(<span class="number">10</span>)</span><br><span class="line"><span class="comment">#pkmn_types.shape</span></span><br></pre></td></tr></table></figure>


<p>Find the frequency of unique values in the type column,也就是我们之后用于做relative frequency的数据.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Count the frequency of unique values in the `type` column of pkmn_types dataframe.</span></span><br><span class="line"><span class="comment"># By default, returns the decreasing order of the frequency.</span></span><br><span class="line">type_counts = pkmn_types[<span class="string">&#x27;type&#x27;</span>].value_counts()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Get the unique values of the `type` column, in the decreasing order of the frequency.</span></span><br><span class="line">type_order = type_counts.index</span><br></pre></td></tr></table></figure>

<p>Plot the horizontal bar charts</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">base_color = sb.color_palette()[<span class="number">0</span>]</span><br><span class="line">sb.countplot(data=pkmn_types, y=<span class="string">&#x27;type&#x27;</span>, color=base_color, order=type_order);</span><br></pre></td></tr></table></figure>
<img src="/blog/2021/05/04/P193/002.png" class="">

<p>Plot a bar chart having the proportions, instead of the actual count, on one of the axes.<br>Find the maximum proportion of bar</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Returns the sum of all not-null values in `type` column</span></span><br><span class="line">n_pokemon = pkmn_types[<span class="string">&#x27;type&#x27;</span>].value_counts().<span class="built_in">sum</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Return the highest frequency in the `type` column</span></span><br><span class="line">max_type_count = type_counts[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Return the maximum proportion, or in other words,</span></span><br><span class="line"><span class="comment"># compute the length of the longest bar in terms of the proportion</span></span><br><span class="line">max_prop = max_type_count / n_pokemon</span><br><span class="line"><span class="built_in">print</span>(max_prop)</span><br></pre></td></tr></table></figure>

<p>Create an array of evenly spaced proportioned values</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Use numpy.arange() function to produce a set of evenly spaced proportioned values</span></span><br><span class="line"><span class="comment"># between 0 and max_prop, with a step size 2\%</span></span><br><span class="line">tick_props = np.arange(<span class="number">0</span>, max_prop, <span class="number">0.02</span>)</span><br></pre></td></tr></table></figure>

<p>We need x-tick labels that must be evenly spaced on the x-axis. For this purpose, we must have a list of labels ready with us, before using it with plt.xticks() function.</p>
<p>Create a list of String values that can be used as tick labels.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Use a list comprehension to create tick_names that we will apply to the tick labels.</span></span><br><span class="line"><span class="comment"># Pick each element `v` from the `tick_props`, and convert it into a formatted string.</span></span><br><span class="line"><span class="comment"># `&#123;:0.2f&#125;` denotes that before formatting, we 2 digits of precision and `f` is used to represent floating point number.</span></span><br><span class="line"><span class="comment"># Refer [here](https://docs.python.org/2/library/string.html#format-string-syntax) for more details</span></span><br><span class="line">tick_names = [<span class="string">&#x27;&#123;:0.2f&#125;&#x27;</span>.<span class="built_in">format</span>(v) <span class="keyword">for</span> v <span class="keyword">in</span> tick_props]</span><br><span class="line">tick_names</span><br></pre></td></tr></table></figure>

<p>The xticks and yticks functions aren’t only about rotating the tick labels. You can also get and set their locations and labels as well. The first argument takes the tick locations: in this case, the tick proportions multiplied back to be on the scale of counts. The second argument takes the tick names: in this case, the tick proportions formatted as strings to two decimal places.</p>
<p>I’ve also added a ylabel call to make it clear that we’re no longer working with straight counts.</p>
<p>Plot the bar chart, with new x-tick labels<br>(计算每个数值按proportion所需要的长度,并plot)</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sb.countplot(data=pkmn_types, y=<span class="string">&#x27;type&#x27;</span>, color=base_color, order=type_order);</span><br><span class="line"><span class="comment"># Change the tick locations and labels</span></span><br><span class="line">plt.xticks(tick_props * n_pokemon, tick_names)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;proportion&#x27;</span>);</span><br></pre></td></tr></table></figure>
<img src="/blog/2021/05/04/P193/003.png" class="">

<hr>
<p>Print the text (proportion) on the bars of a horizontal plot.加上text标注.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Considering the same chart from the Example 1 above, print the text (proportion) on the bars</span></span><br><span class="line">base_color = sb.color_palette()[<span class="number">0</span>]</span><br><span class="line">sb.countplot(data=pkmn_types, y=<span class="string">&#x27;type&#x27;</span>, color=base_color, order=type_order);</span><br><span class="line"></span><br><span class="line"><span class="comment"># Logic to print the proportion text on the bars</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span> (type_counts.shape[<span class="number">0</span>]):</span><br><span class="line">    <span class="comment"># Remember, type_counts contains the frequency of unique values in the `type` column in decreasing order.</span></span><br><span class="line">    count = type_counts[i]</span><br><span class="line">    <span class="comment"># Convert count into a percentage, and then into string</span></span><br><span class="line">    pct_string = <span class="string">&#x27;&#123;:0.1f&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="number">100</span>*count/n_pokemon)</span><br><span class="line">    <span class="comment"># Print the string value on the bar.</span></span><br><span class="line">    <span class="comment"># Read more about the arguments of text() function [here](https://matplotlib.org/3.1.1/api/_as_gen/matplotlib.pyplot.text.html)</span></span><br><span class="line">    plt.text(count+<span class="number">1</span>, i, pct_string, va=<span class="string">&#x27;center&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<img src="/blog/2021/05/04/P193/004.png" class="">

<p>Print the text (proportion) below the bars of a Vertical plot.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># .get_text() method to obtain the category name.</span></span><br><span class="line"><span class="comment"># text function to print each percentage, with the x-position, y-position, and string as the three main parameters to the function.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Considering the same chart from the Example 1 above, print the text (proportion) BELOW the bars</span></span><br><span class="line">base_color = sb.color_palette()[<span class="number">0</span>]</span><br><span class="line">sb.countplot(data=pkmn_types, x=<span class="string">&#x27;type&#x27;</span>, color=base_color, order=type_order);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Recalculating the type_counts just to have clarity.</span></span><br><span class="line">type_counts = pkmn_types[<span class="string">&#x27;type&#x27;</span>].value_counts()</span><br><span class="line"></span><br><span class="line"><span class="comment"># get the current tick locations and labels</span></span><br><span class="line">locs, labels = plt.xticks(rotation=<span class="number">90</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># loop through each pair of locations and labels</span></span><br><span class="line"><span class="keyword">for</span> loc, label <span class="keyword">in</span> <span class="built_in">zip</span>(locs, labels):</span><br><span class="line"></span><br><span class="line">    <span class="comment"># get the text property for the label to get the correct count</span></span><br><span class="line">    count = type_counts[label.get_text()]</span><br><span class="line">    pct_string = <span class="string">&#x27;&#123;:0.1f&#125;%&#x27;</span>.<span class="built_in">format</span>(<span class="number">100</span>*count/n_pokemon)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># print the annotation just below the top of the bar</span></span><br><span class="line">    plt.text(loc, count+<span class="number">2</span>, pct_string, ha = <span class="string">&#x27;center&#x27;</span>, color = <span class="string">&#x27;black&#x27;</span>)</span><br></pre></td></tr></table></figure>
<img src="/blog/2021/05/04/P193/005.png" class="">

<p>用matplotlib的场合.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> rcParams</span><br><span class="line"><span class="comment"># Specify the figure size in inches, for both X, and Y axes</span></span><br><span class="line">rcParams[<span class="string">&#x27;figure.figsize&#x27;</span>] = <span class="number">12</span>,<span class="number">4</span></span><br></pre></td></tr></table></figure>
<img src="/blog/2021/05/04/P193/006.png" class="">

<hr>
<p>Adapted Bar Charts<br>using <a href="https://seaborn.pydata.org/generated/seaborn.barplot.html">barplot</a> function, plot a numeric variable against a categorical variable by adapting a bar chart so that its bar heights indicate the mean of the numeric variable.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">base_color = sb.color_palette()[<span class="number">0</span>]</span><br><span class="line">sb.barplot(data=fuel_econ, x=<span class="string">&#x27;VClass&#x27;</span>, y=<span class="string">&#x27;comb&#x27;</span>, color=base_color)</span><br><span class="line">plt.xticks(rotation=<span class="number">15</span>);</span><br><span class="line">plt.ylabel(<span class="string">&#x27;Avg. Combined Fuel Efficiency (mpg)&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Try these additional arguments</span></span><br><span class="line">sb.barplot(data=fuel_econ, x=<span class="string">&#x27;VClass&#x27;</span>, y=<span class="string">&#x27;comb&#x27;</span>, color=base_color, errwidth=<span class="number">0</span>)</span><br><span class="line">sb.barplot(data=fuel_econ, x=<span class="string">&#x27;VClass&#x27;</span>, y=<span class="string">&#x27;comb&#x27;</span>, color=base_color, ci=<span class="string">&#x27;sd&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>using <a href="https://seaborn.pydata.org/generated/seaborn.pointplot.html">pointplot</a>.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sb.pointplot(data=fuel_econ, x=<span class="string">&#x27;VClass&#x27;</span>, y=<span class="string">&#x27;comb&#x27;</span>, color=base_color, ci=<span class="string">&#x27;sd&#x27;</span>, linestyles=<span class="string">&quot;&quot;</span>)</span><br><span class="line">plt.xticks(rotation=<span class="number">15</span>);</span><br><span class="line">plt.ylabel(<span class="string">&#x27;Avg. Combined Fuel Efficiency (mpg)&#x27;</span>)</span><br></pre></td></tr></table></figure>
<img src="/blog/2021/05/04/P193/025.png" class="">

<p>last example.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">plt.figure(figsize = [<span class="number">20</span>, <span class="number">5</span>])</span><br><span class="line">base_color = sb.color_palette()[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># left plot: violin plot</span></span><br><span class="line">plt.subplot(<span class="number">1</span>, <span class="number">3</span>, <span class="number">1</span>)</span><br><span class="line">sb.violinplot(data=fuel_econ, x=<span class="string">&#x27;VClass&#x27;</span>, y=<span class="string">&#x27;comb&#x27;</span>, inner = <span class="literal">None</span>,</span><br><span class="line">              color = base_color)</span><br><span class="line">plt.xticks(rotation = <span class="number">45</span>); <span class="comment"># include label rotation due to small subplot size</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># center plot: box plot</span></span><br><span class="line">plt.subplot(<span class="number">1</span>, <span class="number">3</span>, <span class="number">2</span>)</span><br><span class="line">sb.boxplot(data=fuel_econ, x=<span class="string">&#x27;VClass&#x27;</span>, y=<span class="string">&#x27;comb&#x27;</span>, color = base_color)</span><br><span class="line">plt.xticks(rotation = <span class="number">45</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment"># right plot: adapted bar chart</span></span><br><span class="line">plt.subplot(<span class="number">1</span>, <span class="number">3</span>, <span class="number">3</span>)</span><br><span class="line">sb.barplot(data=fuel_econ, x=<span class="string">&#x27;VClass&#x27;</span>, y=<span class="string">&#x27;comb&#x27;</span>, color = base_color)</span><br><span class="line">plt.xticks(rotation = <span class="number">45</span>);</span><br></pre></td></tr></table></figure>
<img src="/blog/2021/05/04/P193/026.png" class="">

<br>
<br>
<br>

<p>Aside:在第三回的时候也提过的check null.<a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.isna.html">isna</a>&amp;<a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.isnull.html#pandas.DataFrame.isnull">isnull</a>.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sales_data.isnull()</span><br><span class="line">sales_data.isna().<span class="built_in">sum</span>()</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Let&#x27;s drop the column that do not have any NaN/None values</span></span><br><span class="line">na_counts = sales_data.drop([<span class="string">&#x27;Date&#x27;</span>, <span class="string">&#x27;Temperature&#x27;</span>, <span class="string">&#x27;Fuel_Price&#x27;</span>], axis=<span class="number">1</span>).isna().<span class="built_in">sum</span>()</span><br></pre></td></tr></table></figure>

<p>Plot the bar chart from the NaN tabular data, and also print values on each bar</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># The first argument to the function below contains the x-values (column names), the second argument the y-values (our counts).</span></span><br><span class="line"><span class="comment"># Refer to the syntax and more example here - https://seaborn.pydata.org/generated/seaborn.barplot.html</span></span><br><span class="line">sb.barplot(na_counts.index.values, na_counts)</span><br><span class="line"></span><br><span class="line"><span class="comment"># get the current tick locations and labels</span></span><br><span class="line">plt.xticks(rotation=<span class="number">90</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Logic to print value on each bar</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span> (na_counts.shape[<span class="number">0</span>]):</span><br><span class="line">    count = na_counts[i]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Refer here for details of the text() - https://matplotlib.org/3.1.1/api/_as_gen/matplotlib.pyplot.text.html</span></span><br><span class="line">    plt.text(i, count+<span class="number">300</span>, count, ha = <span class="string">&#x27;center&#x27;</span>, va=<span class="string">&#x27;top&#x27;</span>)</span><br></pre></td></tr></table></figure>
<img src="/blog/2021/05/04/P193/007.png" class="">

<br>
<br>
<br>

<h3 id="pie-charts"><a href="#pie-charts" class="headerlink" title="pie charts"></a>pie charts</h3><p> A pie chart is a common univariate plot type that is used to depict <strong>relative frequencies</strong> for levels of a <strong>categorical</strong> variable. A pie chart is preferably used when the <strong>number of categories is less</strong>, and you’d like to see the proportion of each category.</p>
<p><a href="https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.pie.html">matplotlib</a>.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">matplotlib.pyplot.pie(x_data, labels, colors, startangle, counterclock, wedgeprops)</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Use the same pokemon dataset</span></span><br><span class="line">sorted_counts = pokemon[<span class="string">&#x27;generation_id&#x27;</span>].value_counts()</span><br><span class="line"></span><br><span class="line">plt.pie(sorted_counts, labels = sorted_counts.index, startangle = <span class="number">90</span>, counterclock = <span class="literal">False</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment"># We have the used option `Square`.</span></span><br><span class="line"><span class="comment"># Though, you can use either one specified here - https://matplotlib.org/api/_as_gen/matplotlib.pyplot.axis.html?highlight=pyplot%20axis#matplotlib-pyplot-axis</span></span><br><span class="line">plt.axis(<span class="string">&#x27;square&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>donut charts</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sorted_counts = pokemon[<span class="string">&#x27;generation_id&#x27;</span>].value_counts()</span><br><span class="line"></span><br><span class="line">plt.pie(sorted_counts, labels = sorted_counts.index, startangle = <span class="number">90</span>,</span><br><span class="line">        counterclock = <span class="literal">False</span>, wedgeprops = &#123;<span class="string">&#x27;width&#x27;</span> : <span class="number">0.4</span>&#125;);</span><br><span class="line">plt.axis(<span class="string">&#x27;square&#x27;</span>)</span><br></pre></td></tr></table></figure>

<br>
<br>
<br>

<h3 id="histograms"><a href="#histograms" class="headerlink" title="histograms"></a>histograms</h3><p>for <strong>quantitative</strong> variables.<br>plot the distribution of a <strong>numeric</strong> variable.</p>
<p><a href="https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.hist.html">matplotlib</a>.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sb</span><br><span class="line">%matplotlib inline</span><br><span class="line"></span><br><span class="line">pokemon = pd.read_csv(<span class="string">&#x27;pokemon.csv&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># We have intentionally not put a semicolon at the end of the statement below to see the bar-width</span></span><br><span class="line">plt.hist(data = pokemon, x = <span class="string">&#x27;speed&#x27;</span>)</span><br><span class="line"></span><br><span class="line">plt.hist(data = pokemon, x = <span class="string">&#x27;speed&#x27;</span>, bins = <span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create bins with step-size 5</span></span><br><span class="line">bins = np.arange(<span class="number">0</span>, pokemon[<span class="string">&#x27;speed&#x27;</span>].<span class="built_in">max</span>()+<span class="number">5</span>, <span class="number">5</span>)</span><br><span class="line">plt.hist(data = pokemon, x = <span class="string">&#x27;speed&#x27;</span>, bins = bins)</span><br></pre></td></tr></table></figure>
<img src="/blog/2021/05/04/P193/008.png" class="">

<hr>
<p><a href="https://seaborn.pydata.org/generated/seaborn.distplot.html">seaborn</a>.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">seaborn.distplot(Series, bins, kde, hist_kws)</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sb.distplot(pokemon[<span class="string">&#x27;speed&#x27;</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># Set the argument `kde=False` to remove the estimate-line representing the Gaussian kernel density estimate.</span></span><br><span class="line">sb.distplot(pokemon[<span class="string">&#x27;speed&#x27;</span>], kde=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">bin_edges = np.arange(<span class="number">0</span>, df[<span class="string">&#x27;num_var&#x27;</span>].<span class="built_in">max</span>()+<span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">sb.distplot(df[<span class="string">&#x27;num_var&#x27;</span>], bins = bin_edges, kde = <span class="literal">False</span>,</span><br><span class="line">            hist_kws = &#123;<span class="string">&#x27;alpha&#x27;</span> : <span class="number">1</span>&#125;)</span><br></pre></td></tr></table></figure>

<hr>
<p>Plot two histograms side-by-side</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Resize the chart, and have two plots side-by-side</span></span><br><span class="line"><span class="comment"># Set a larger figure size for subplots</span></span><br><span class="line">plt.figure(figsize = [<span class="number">20</span>, <span class="number">5</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># histogram on left, example of too-large bin size</span></span><br><span class="line"><span class="comment"># 1 row, 2 cols, subplot 1</span></span><br><span class="line">plt.subplot(<span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>)</span><br><span class="line">bins = np.arange(<span class="number">0</span>, pokemon[<span class="string">&#x27;speed&#x27;</span>].<span class="built_in">max</span>()+<span class="number">4</span>, <span class="number">4</span>)</span><br><span class="line">plt.hist(data = pokemon, x = <span class="string">&#x27;speed&#x27;</span>, bins = bins);</span><br><span class="line"></span><br><span class="line"><span class="comment"># histogram on right, example of too-small bin size</span></span><br><span class="line">plt.subplot(<span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>) <span class="comment"># 1 row, 2 cols, subplot 2</span></span><br><span class="line">bins = np.arange(<span class="number">0</span>, pokemon[<span class="string">&#x27;speed&#x27;</span>].<span class="built_in">max</span>()+<span class="number">1</span>/<span class="number">4</span>, <span class="number">1</span>/<span class="number">4</span>)</span><br><span class="line">plt.hist(data = pokemon, x = <span class="string">&#x27;speed&#x27;</span>, bins = bins);</span><br></pre></td></tr></table></figure>

<br>
<br>
<br>

<h2 id="helper"><a href="#helper" class="headerlink" title="helper"></a>helper</h2><h3 id="subplots"><a href="#subplots" class="headerlink" title="subplots"></a>subplots</h3><p><a href="https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.subplot.html">subplots</a>.<br><a href="https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.figure.html">figures</a>.用于先创造一个canvas(figure),再在上添加axes与图表.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Create a new figure</span></span><br><span class="line">fig = plt.figure()</span><br><span class="line"></span><br><span class="line"><span class="comment"># The argument of add_axes represents the dimensions [left, bottom, width, height] of the new axes.</span></span><br><span class="line"><span class="comment"># All quantities are in fractions of figure width and height.</span></span><br><span class="line">ax = fig.add_axes([<span class="number">.125</span>, <span class="number">.125</span>, <span class="number">.775</span>, <span class="number">.755</span>])</span><br><span class="line">ax.hist(data=pokemon, x=<span class="string">&#x27;speed&#x27;</span>);</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">fig = plt.figure()</span><br><span class="line">ax = fig.add_axes([<span class="number">.125</span>, <span class="number">.125</span>, <span class="number">.775</span>, <span class="number">.755</span>])</span><br><span class="line">base_color = sb.color_palette()[<span class="number">0</span>]</span><br><span class="line">sb.countplot(data = pokemon, x = <span class="string">&#x27;generation_id&#x27;</span>, color = base_color, ax = ax)</span><br></pre></td></tr></table></figure>

<p>一个figure上两张图表.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Resize the chart, and have two plots side-by-side</span></span><br><span class="line"><span class="comment"># set a larger figure size for subplots</span></span><br><span class="line">plt.figure(figsize = [<span class="number">20</span>, <span class="number">5</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># histogram on left, example of too-large bin size</span></span><br><span class="line"><span class="comment"># 1 row, 2 cols, subplot 1</span></span><br><span class="line">plt.subplot(<span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>)</span><br><span class="line">bins = np.arange(<span class="number">0</span>, pokemon[<span class="string">&#x27;speed&#x27;</span>].<span class="built_in">max</span>()+<span class="number">4</span>, <span class="number">4</span>)</span><br><span class="line">plt.hist(data = pokemon, x = <span class="string">&#x27;speed&#x27;</span>, bins = bins);</span><br><span class="line"></span><br><span class="line"><span class="comment"># histogram on right, example of too-small bin size</span></span><br><span class="line">plt.subplot(<span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>) <span class="comment"># 1 row, 2 cols, subplot 2</span></span><br><span class="line">bins = np.arange(<span class="number">0</span>, pokemon[<span class="string">&#x27;speed&#x27;</span>].<span class="built_in">max</span>()+<span class="number">1</span>/<span class="number">4</span>, <span class="number">1</span>/<span class="number">4</span>)</span><br><span class="line">plt.hist(data = pokemon, x = <span class="string">&#x27;speed&#x27;</span>, bins = bins);</span><br></pre></td></tr></table></figure>

<p>Demonstrate pyplot.sca() and pyplot.text() to generate a grid of subplots</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">fig, axes = plt.subplots(<span class="number">3</span>, <span class="number">4</span>) <span class="comment"># grid of 3x4 subplots</span></span><br><span class="line">axes = axes.flatten() <span class="comment"># reshape from 3x4 array into 12-element vector</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">12</span>):</span><br><span class="line">    plt.sca(axes[i]) <span class="comment"># set the current Axes</span></span><br><span class="line">    plt.text(<span class="number">0.5</span>, <span class="number">0.5</span>, i+<span class="number">1</span>) <span class="comment"># print conventional subplot index number to middle of Axes</span></span><br></pre></td></tr></table></figure>
<img src="/blog/2021/05/04/P193/009.png" class="">

<br>
<br>
<br>

<h3 id="limit"><a href="#limit" class="headerlink" title="limit"></a>limit</h3><p>zoom in某部分图表(去除outlier的影响).用axis limit.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Get the ticks for bins between [0-15], at an interval of 0.5</span></span><br><span class="line">bins = np.arange(<span class="number">0</span>, pokemon[<span class="string">&#x27;height&#x27;</span>].<span class="built_in">max</span>()+<span class="number">0.5</span>, <span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Plot the histogram for the height column</span></span><br><span class="line">plt.hist(data=pokemon, x=<span class="string">&#x27;height&#x27;</span>, bins=bins);</span><br><span class="line"></span><br><span class="line"><span class="comment"># Get the ticks for bins between [0-15], at an interval of 0.5</span></span><br><span class="line">bins = np.arange(<span class="number">0</span>, pokemon[<span class="string">&#x27;height&#x27;</span>].<span class="built_in">max</span>()+<span class="number">0.2</span>, <span class="number">0.2</span>)</span><br><span class="line">plt.hist(data=pokemon, x=<span class="string">&#x27;height&#x27;</span>, bins=bins);</span><br><span class="line"></span><br><span class="line"><span class="comment"># Set the upper and lower bounds of the bins that are displayed in the plot</span></span><br><span class="line"><span class="comment"># Refer here for more information - https://matplotlib.org/3.1.1/api/_as_gen/matplotlib.pyplot.xlim.html</span></span><br><span class="line"><span class="comment"># The argument represent a tuple of the new x-axis limits.</span></span><br><span class="line">plt.xlim((<span class="number">0</span>,<span class="number">6</span>));</span><br></pre></td></tr></table></figure>

<br>
<br>
<br>

<h3 id="transformation"><a href="#transformation" class="headerlink" title="transformation"></a>transformation</h3><p>Scale the x-axis to log-type</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">plt.figure(figsize = [<span class="number">20</span>, <span class="number">5</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># HISTOGRAM ON LEFT: full data without scaling</span></span><br><span class="line">plt.subplot(<span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>)</span><br><span class="line">plt.hist(data=pokemon, x=<span class="string">&#x27;weight&#x27;</span>);</span><br><span class="line"><span class="comment"># Display a label on the x-axis</span></span><br><span class="line">plt.xlabel(<span class="string">&#x27;Initial plot with original data&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># HISTOGRAM ON RIGHT</span></span><br><span class="line">plt.subplot(<span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Get the ticks for bins between [0 - maximum weight]</span></span><br><span class="line">bins = np.arange(<span class="number">0</span>, pokemon[<span class="string">&#x27;weight&#x27;</span>].<span class="built_in">max</span>()+<span class="number">40</span>, <span class="number">40</span>)</span><br><span class="line">plt.hist(data=pokemon, x=<span class="string">&#x27;weight&#x27;</span>, bins=bins);</span><br><span class="line"></span><br><span class="line"><span class="comment"># The argument in the xscale() represents the axis scale type to apply.</span></span><br><span class="line"><span class="comment"># The possible values are: &#123;&quot;linear&quot;, &quot;log&quot;, &quot;symlog&quot;, &quot;logit&quot;, ...&#125;</span></span><br><span class="line"><span class="comment"># Refer - https://matplotlib.org/3.1.1/api/_as_gen/matplotlib.pyplot.xscale.html</span></span><br><span class="line">plt.xscale(<span class="string">&#x27;log&#x27;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;The x-axis limits NOT are changed. They are only scaled to log-type&#x27;</span>)</span><br></pre></td></tr></table></figure>
<img src="/blog/2021/05/04/P193/010.png" class="">
<blockquote>
<p>Even though the data is on a log scale, the bins are still linearly spaced. This means that they change size from wide on the left to thin on the right, as the values increase multiplicative. Matplotlib’s xscale function includes a few built-in transformations: we have used the ‘log’ scale here.<br>Secondly, the default label (x-axis ticks) settings are still somewhat tricky to interpret and are sparse as well.</p>
</blockquote>
<hr>
<p>Scale the x-axis to log-type, and change the axis limit.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Transform the describe() to a scale of log10</span></span><br><span class="line"><span class="comment"># Documentation: [numpy `log10`](https://docs.scipy.org/doc/numpy/reference/generated/numpy.log10.html)</span></span><br><span class="line">np.log10(pokemon[<span class="string">&#x27;weight&#x27;</span>].describe())</span><br><span class="line"></span><br><span class="line"><span class="comment"># Axis transformation</span></span><br><span class="line"><span class="comment"># Bin size</span></span><br><span class="line">bins = <span class="number">10</span> ** np.arange(-<span class="number">1</span>, <span class="number">3</span>+<span class="number">0.1</span>, <span class="number">0.1</span>)</span><br><span class="line">plt.hist(data=pokemon, x=<span class="string">&#x27;weight&#x27;</span>, bins=bins);</span><br><span class="line"></span><br><span class="line"><span class="comment"># The argument in the xscale() represents the axis scale type to apply.</span></span><br><span class="line"><span class="comment"># The possible values are: &#123;&quot;linear&quot;, &quot;log&quot;, &quot;symlog&quot;, &quot;logit&quot;, ...&#125;</span></span><br><span class="line">plt.xscale(<span class="string">&#x27;log&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Apply x-axis label</span></span><br><span class="line"><span class="comment"># Documentatin: [matplotlib `xlabel`](https://matplotlib.org/api/_as_gen/matplotlib.pyplot.xlabel.html))</span></span><br><span class="line">plt.xlabel(<span class="string">&#x27;x-axis limits are changed, and scaled to log-type&#x27;</span>)</span><br></pre></td></tr></table></figure>
<img src="/blog/2021/05/04/P193/011.png" class="">

<hr>
<p>Scale the x-axis to log-type, change the axis limits, and increase the x-ticks</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># Get the ticks for bins between [0 - maximum weight]</span></span><br><span class="line">bins = <span class="number">10</span> ** np.arange(-<span class="number">1</span>, <span class="number">3</span>+<span class="number">0.1</span>, <span class="number">0.1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Generate the x-ticks you want to apply</span></span><br><span class="line">ticks = [<span class="number">0.1</span>, <span class="number">0.3</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">10</span>, <span class="number">30</span>, <span class="number">100</span>, <span class="number">300</span>, <span class="number">1000</span>]</span><br><span class="line"><span class="comment"># Convert ticks into string values, to be displaye dlong the x-axis</span></span><br><span class="line">labels = [<span class="string">&#x27;&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(v) <span class="keyword">for</span> v <span class="keyword">in</span> ticks]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Plot the histogram</span></span><br><span class="line">plt.hist(data=pokemon, x=<span class="string">&#x27;weight&#x27;</span>, bins=bins);</span><br><span class="line"></span><br><span class="line"><span class="comment"># The argument in the xscale() represents the axis scale type to apply.</span></span><br><span class="line"><span class="comment"># The possible values are: &#123;&quot;linear&quot;, &quot;log&quot;, &quot;symlog&quot;, &quot;logit&quot;, ...&#125;</span></span><br><span class="line">plt.xscale(<span class="string">&#x27;log&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Apply x-ticks</span></span><br><span class="line">plt.xticks(ticks, labels);</span><br></pre></td></tr></table></figure>
<img src="/blog/2021/05/04/P193/012.png" class="">

<hr>
<p>Custom scaling the given data Series, instead of using the built-in log scale</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sqrt_trans</span>(<span class="params">x, inverse = <span class="literal">False</span></span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot; transformation helper function &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> inverse:</span><br><span class="line">        <span class="keyword">return</span> np.sqrt(x)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> x ** <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Bin resizing, to transform the x-axis    </span></span><br><span class="line">bin_edges = np.arange(<span class="number">0</span>, sqrt_trans(pokemon[<span class="string">&#x27;weight&#x27;</span>].<span class="built_in">max</span>())+<span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Plot the scaled data</span></span><br><span class="line">plt.hist(pokemon[<span class="string">&#x27;weight&#x27;</span>].apply(sqrt_trans), bins = bin_edges)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Identify the tick-locations</span></span><br><span class="line">tick_locs = np.arange(<span class="number">0</span>, sqrt_trans(pokemon[<span class="string">&#x27;weight&#x27;</span>].<span class="built_in">max</span>())+<span class="number">10</span>, <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Apply x-ticks</span></span><br><span class="line">plt.xticks(tick_locs, sqrt_trans(tick_locs, inverse = <span class="literal">True</span>).astype(<span class="built_in">int</span>));</span><br></pre></td></tr></table></figure>
<img src="/blog/2021/05/04/P193/013.png" class="">

<br>
<br>
<br>

<h2 id="bivariate-chart"><a href="#bivariate-chart" class="headerlink" title="bivariate chart"></a>bivariate chart</h2><h3 id="scattorplot"><a href="#scattorplot" class="headerlink" title="scattorplot"></a>scattorplot</h3><p>scattorplot: quatitative vs quatitative</p>
<p>Scatter plot showing negative correlation between two variables<br><a href="https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.scatter.html">matplotlib</a>.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># TO DO: Necessary import</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Read the CSV file</span></span><br><span class="line">fuel_econ = pd.read_csv(<span class="string">&#x27;fuel_econ.csv&#x27;</span>)</span><br><span class="line">fuel_econ.head(<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Scatter plot</span></span><br><span class="line">plt.scatter(data = fuel_econ, x = <span class="string">&#x27;displ&#x27;</span>, y = <span class="string">&#x27;comb&#x27;</span>);</span><br><span class="line">plt.xlabel(<span class="string">&#x27;Displacement (1)&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;Combined Fuel Eff. (mpg)&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p><a href="https://seaborn.pydata.org/generated/seaborn.regplot.html">seaborn</a>.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sb.regplot(data = fuel_econ, x = <span class="string">&#x27;displ&#x27;</span>, y = <span class="string">&#x27;comb&#x27;</span>);</span><br><span class="line">plt.xlabel(<span class="string">&#x27;Displacement (1)&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;Combined Fuel Eff. (mpg)&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>Plot the regression line on the transformed data</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">log_trans</span>(<span class="params">x, inverse = <span class="literal">False</span></span>):</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> inverse:</span><br><span class="line">        <span class="keyword">return</span> np.log10(x)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> np.power(<span class="number">10</span>, x)</span><br><span class="line"></span><br><span class="line">sb.regplot(fuel_econ[<span class="string">&#x27;displ&#x27;</span>], fuel_econ[<span class="string">&#x27;comb&#x27;</span>].apply(log_trans))</span><br><span class="line">tick_locs = [<span class="number">10</span>, <span class="number">20</span>, <span class="number">50</span>, <span class="number">100</span>]</span><br><span class="line">plt.yticks(log_trans(tick_locs), tick_locs);</span><br></pre></td></tr></table></figure>

<p>当数字时discrete时,用jitter错开.<br>Jitter - Randomly add/subtract a small value to each data point</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">##########################################</span></span><br><span class="line"><span class="comment"># Resize figure to accommodate two plots</span></span><br><span class="line">plt.figure(figsize = [<span class="number">20</span>, <span class="number">5</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># PLOT ON LEFT - SIMPLE SCATTER</span></span><br><span class="line">plt.subplot(<span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>)</span><br><span class="line">sb.regplot(data = fuel_econ, x = <span class="string">&#x27;year&#x27;</span>, y = <span class="string">&#x27;comb&#x27;</span>, truncate=<span class="literal">False</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">##########################################</span></span><br><span class="line"><span class="comment"># PLOT ON RIGHT - SCATTER PLOT WITH JITTER</span></span><br><span class="line">plt.subplot(<span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># In the sb.regplot() function below, the `truncate` argument accepts a boolean.</span></span><br><span class="line"><span class="comment"># If truncate=True, the regression line is bounded by the data limits.</span></span><br><span class="line"><span class="comment"># Else if truncate=False, it extends to the x axis limits.</span></span><br><span class="line"><span class="comment"># The x_jitter will make each x value will be adjusted randomly by +/-0.3</span></span><br><span class="line">sb.regplot(data = fuel_econ, x = <span class="string">&#x27;year&#x27;</span>, y = <span class="string">&#x27;comb&#x27;</span>, truncate=<span class="literal">False</span>, x_jitter=<span class="number">0.3</span>);</span><br></pre></td></tr></table></figure>
<img src="/blog/2021/05/04/P193/014.png" class="">


<p>当很多的数字叠在一起时,用Transparency看浓度了解distribution.<br>Plot with both Jitter and Transparency</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># The scatter_kws helps specifying the opaqueness of the data points.</span></span><br><span class="line"><span class="comment"># The alpha take a value between [0-1], where 0 represents transparent, and 1 is opaque.</span></span><br><span class="line">sb.regplot(data = fuel_econ, x = <span class="string">&#x27;year&#x27;</span>, y = <span class="string">&#x27;comb&#x27;</span>, truncate=<span class="literal">False</span>, x_jitter=<span class="number">0.3</span>, scatter_kws=&#123;<span class="string">&#x27;alpha&#x27;</span>:<span class="number">1</span>/<span class="number">20</span>&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment"># Alternative way to plot with the transparency.</span></span><br><span class="line"><span class="comment"># The scatter() function below does NOT have any argument to specify the Jitter</span></span><br><span class="line">plt.scatter(data = fuel_econ, x = <span class="string">&#x27;year&#x27;</span>, y = <span class="string">&#x27;comb&#x27;</span>, alpha=<span class="number">1</span>/<span class="number">20</span>);</span><br></pre></td></tr></table></figure>
<img src="/blog/2021/05/04/P193/015.png" class="">

<hr>
<p><a href="https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.hist2d.html">heatmap</a>.histogram的2D版本.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">plt.figure(figsize = [<span class="number">18</span>, <span class="number">6</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># PLOT ON LEFT</span></span><br><span class="line">plt.subplot(<span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>)</span><br><span class="line">sb.regplot(data = fuel_econ, x = <span class="string">&#x27;displ&#x27;</span>, y = <span class="string">&#x27;comb&#x27;</span>, x_jitter=<span class="number">0.04</span>, scatter_kws=&#123;<span class="string">&#x27;alpha&#x27;</span>:<span class="number">1</span>/<span class="number">10</span>&#125;, fit_reg=<span class="literal">False</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;Displacement (1)&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;Combined Fuel Eff. (mpg)&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment"># PLOT ON RIGHT</span></span><br><span class="line">plt.subplot(<span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line">plt.hist2d(data = fuel_econ, x = <span class="string">&#x27;displ&#x27;</span>, y = <span class="string">&#x27;comb&#x27;</span>)</span><br><span class="line">plt.colorbar()</span><br><span class="line">plt.xlabel(<span class="string">&#x27;Displacement (1)&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;Combined Fuel Eff. (mpg)&#x27;</span>);</span><br></pre></td></tr></table></figure>
<img src="/blog/2021/05/04/P193/016.png" class="">

<p>Set a minimum bound on counts and a reverse color map</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Use cmin to set a minimum bound of counts</span></span><br><span class="line"><span class="comment"># Use cmap to reverse the color map.</span></span><br><span class="line">plt.hist2d(data = fuel_econ, x = <span class="string">&#x27;displ&#x27;</span>, y = <span class="string">&#x27;comb&#x27;</span>, cmin=<span class="number">0.5</span>, cmap=<span class="string">&#x27;viridis_r&#x27;</span>)</span><br><span class="line">plt.colorbar()</span><br><span class="line">plt.xlabel(<span class="string">&#x27;Displacement (1)&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;Combined Fuel Eff. (mpg)&#x27;</span>);</span><br></pre></td></tr></table></figure>
<img src="/blog/2021/05/04/P193/017.png" class="">

<p>Heat plot - Specify bin edges</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Specify bin edges</span></span><br><span class="line">bins_x = np.arange(<span class="number">0.6</span>, <span class="number">7</span>+<span class="number">0.3</span>, <span class="number">0.3</span>)</span><br><span class="line">bins_y = np.arange(<span class="number">12</span>, <span class="number">58</span>+<span class="number">3</span>, <span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">plt.hist2d(data = fuel_econ, x = <span class="string">&#x27;displ&#x27;</span>, y = <span class="string">&#x27;comb&#x27;</span>, cmin=<span class="number">0.5</span>, cmap=<span class="string">&#x27;viridis_r&#x27;</span>, bins = [bins_x, bins_y])</span><br><span class="line">plt.colorbar()</span><br><span class="line">plt.xlabel(<span class="string">&#x27;Displacement (1)&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;Combined Fuel Eff. (mpg)&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment"># Notice the areas of high frequency in the middle of the negative trend in the plot.</span></span><br></pre></td></tr></table></figure>
<img src="/blog/2021/05/04/P193/018.png" class="">

<p>Add text annotation on each cell using pyplot.text() function</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Specify bin edges</span></span><br><span class="line">bins_x = np.arange(<span class="number">0.6</span>, <span class="number">7</span>+<span class="number">0.7</span>, <span class="number">0.7</span>)</span><br><span class="line">bins_y = np.arange(<span class="number">12</span>, <span class="number">58</span>+<span class="number">7</span>, <span class="number">7</span>)</span><br><span class="line"><span class="comment"># Use cmin to set a minimum bound of counts</span></span><br><span class="line"><span class="comment"># Use cmap to reverse the color map.</span></span><br><span class="line">h2d = plt.hist2d(data = fuel_econ, x = <span class="string">&#x27;displ&#x27;</span>, y = <span class="string">&#x27;comb&#x27;</span>, cmin=<span class="number">0.5</span>, cmap=<span class="string">&#x27;viridis_r&#x27;</span>, bins = [bins_x, bins_y])</span><br><span class="line"></span><br><span class="line">plt.colorbar()</span><br><span class="line">plt.xlabel(<span class="string">&#x27;Displacement (1)&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;Combined Fuel Eff. (mpg)&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment"># Select the bi-dimensional histogram, a 2D array of samples x and y.</span></span><br><span class="line"><span class="comment"># Values in x are histogrammed along the first dimension and</span></span><br><span class="line"><span class="comment"># values in y are histogrammed along the second dimension.</span></span><br><span class="line">counts = h2d[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Add text annotation on each cell</span></span><br><span class="line"><span class="comment"># Loop through the cell counts and add text annotations for each</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(counts.shape[<span class="number">0</span>]):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(counts.shape[<span class="number">1</span>]):</span><br><span class="line">        c = counts[i,j]</span><br><span class="line">        <span class="keyword">if</span> c &gt;= <span class="number">100</span>: <span class="comment"># increase visibility on darker cells</span></span><br><span class="line">            plt.text(bins_x[i]+<span class="number">0.5</span>, bins_y[j]+<span class="number">0.5</span>, <span class="built_in">int</span>(c),</span><br><span class="line">                     ha = <span class="string">&#x27;center&#x27;</span>, va = <span class="string">&#x27;center&#x27;</span>, color = <span class="string">&#x27;white&#x27;</span>)</span><br><span class="line">        <span class="keyword">elif</span> c &gt; <span class="number">0</span>:</span><br><span class="line">            plt.text(bins_x[i]+<span class="number">0.5</span>, bins_y[j]+<span class="number">0.5</span>, <span class="built_in">int</span>(c),</span><br><span class="line">                     ha = <span class="string">&#x27;center&#x27;</span>, va = <span class="string">&#x27;center&#x27;</span>, color = <span class="string">&#x27;black&#x27;</span>)</span><br></pre></td></tr></table></figure>
<img src="/blog/2021/05/04/P193/019.png" class="">

<br>
<br>
<br>

<h3 id="violinplot"><a href="#violinplot" class="headerlink" title="violinplot"></a>violinplot</h3><p>violinplot: quatitative vs qualitative<br><a href="https://seaborn.pydata.org/generated/seaborn.violinplot.html">seaborn</a>.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Types of sedan cars</span></span><br><span class="line">sedan_classes = [<span class="string">&#x27;Minicompact Cars&#x27;</span>, <span class="string">&#x27;Subcompact Cars&#x27;</span>, <span class="string">&#x27;Compact Cars&#x27;</span>, <span class="string">&#x27;Midsize Cars&#x27;</span>, <span class="string">&#x27;Large Cars&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Returns the types for sedan_classes with the categories and orderedness</span></span><br><span class="line"><span class="comment"># Refer - https://pandas.pydata.org/pandas-docs/version/0.23.4/generated/pandas.api.types.CategoricalDtype.html</span></span><br><span class="line">vclasses = pd.api.types.CategoricalDtype(ordered=<span class="literal">True</span>, categories=sedan_classes)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Use pandas.astype() to convert the &quot;VClass&quot; column from a plain object type into an ordered categorical type</span></span><br><span class="line">fuel_econ[<span class="string">&#x27;VClass&#x27;</span>] = fuel_econ[<span class="string">&#x27;VClass&#x27;</span>].astype(vclasses);</span><br><span class="line"></span><br><span class="line">sb.violinplot(data=fuel_econ, x=<span class="string">&#x27;VClass&#x27;</span>, y=<span class="string">&#x27;comb&#x27;</span>);</span><br></pre></td></tr></table></figure>
<img src="/blog/2021/05/04/P193/020.png" class="">

<p>Violin plot without datapoints in the violin interior</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">base_color = sb.color_palette()[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># The &quot;inner&quot; argument represents the datapoints in the violin interior.</span></span><br><span class="line"><span class="comment"># It can take any value from &#123;“box”, “quartile”, “point”, “stick”, None&#125;</span></span><br><span class="line"><span class="comment"># If &quot;box&quot;, it draws a miniature boxplot.</span></span><br><span class="line">sb.violinplot(data=fuel_econ, x=<span class="string">&#x27;VClass&#x27;</span>, y=<span class="string">&#x27;comb&#x27;</span>, color=base_color, innner=<span class="literal">None</span>)</span><br><span class="line">plt.xticks(rotation=<span class="number">15</span>);</span><br></pre></td></tr></table></figure>
<img src="/blog/2021/05/04/P193/021.png" class="">

<p>类似的还有<a href="https://seaborn.pydata.org/generated/seaborn.boxplot.html">boxplot</a>.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Step 1. Import packages</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Step 2. Load data</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Step 3. Convert the &quot;VClass&quot; column from a plain object type into an ordered categorical type</span></span><br><span class="line"><span class="comment"># Types of sedan cars</span></span><br><span class="line">sedan_classes = [<span class="string">&#x27;Minicompact Cars&#x27;</span>, <span class="string">&#x27;Subcompact Cars&#x27;</span>, <span class="string">&#x27;Compact Cars&#x27;</span>, <span class="string">&#x27;Midsize Cars&#x27;</span>, <span class="string">&#x27;Large Cars&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Returns the types for sedan_classes with the categories and orderedness</span></span><br><span class="line"><span class="comment"># Refer - https://pandas.pydata.org/pandas-docs/version/0.23.4/generated/pandas.api.types.CategoricalDtype.html</span></span><br><span class="line">vclasses = pd.api.types.CategoricalDtype(ordered=<span class="literal">True</span>, categories=sedan_classes)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Use pandas.astype() to convert the &quot;VClass&quot; column from a plain object type into an ordered categorical type</span></span><br><span class="line">fuel_econ[<span class="string">&#x27;VClass&#x27;</span>] = fuel_econ[<span class="string">&#x27;VClass&#x27;</span>].astype(vclasses);</span><br><span class="line"></span><br><span class="line"><span class="comment"># Step 4.  TWO PLOTS IN ONE FIGURE</span></span><br><span class="line">plt.figure(figsize = [<span class="number">16</span>, <span class="number">5</span>])</span><br><span class="line">base_color = sb.color_palette()[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># LEFT plot: violin plot</span></span><br><span class="line">plt.subplot(<span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>)</span><br><span class="line"><span class="comment">#Let&#x27;s return the axes object</span></span><br><span class="line">ax1 = sb.violinplot(data=fuel_econ, x=<span class="string">&#x27;VClass&#x27;</span>, y=<span class="string">&#x27;comb&#x27;</span>, color=base_color, innner=<span class="string">&#x27;quartile&#x27;</span>)</span><br><span class="line">plt.xticks(rotation=<span class="number">15</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment"># RIGHT plot: box plot</span></span><br><span class="line">plt.subplot(<span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line">sb.boxplot(data=fuel_econ, x=<span class="string">&#x27;VClass&#x27;</span>, y=<span class="string">&#x27;comb&#x27;</span>, color=base_color)</span><br><span class="line">plt.xticks(rotation=<span class="number">15</span>);</span><br><span class="line">plt.ylim(ax1.get_ylim()) <span class="comment"># set y-axis limits to be same as left plot</span></span><br></pre></td></tr></table></figure>
<img src="/blog/2021/05/04/P193/022.png" class="">

<br>
<br>
<br>

<h3 id="clusterbar"><a href="#clusterbar" class="headerlink" title="clusterbar"></a>clusterbar</h3><p>clusterbar: qualitative vs qualitative</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Convert the &quot;VClass&quot; column from a plain object type into an ordered categorical type</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Types of sedan cars</span></span><br><span class="line">sedan_classes = [<span class="string">&#x27;Minicompact Cars&#x27;</span>, <span class="string">&#x27;Subcompact Cars&#x27;</span>, <span class="string">&#x27;Compact Cars&#x27;</span>, <span class="string">&#x27;Midsize Cars&#x27;</span>, <span class="string">&#x27;Large Cars&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Returns the types for sedan_classes with the categories and orderedness</span></span><br><span class="line"><span class="comment"># Refer - https://pandas.pydata.org/pandas-docs/version/0.23.4/generated/pandas.api.types.CategoricalDtype.html</span></span><br><span class="line">vclasses = pd.api.types.CategoricalDtype(ordered=<span class="literal">True</span>, categories=sedan_classes)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Use pandas.astype() to convert the &quot;VClass&quot; column from a plain object type into an ordered categorical type</span></span><br><span class="line">fuel_econ[<span class="string">&#x27;VClass&#x27;</span>] = fuel_econ[<span class="string">&#x27;VClass&#x27;</span>].astype(vclasses);</span><br><span class="line"></span><br><span class="line"><span class="comment"># Add a new column for transmission type - Automatic or Manual</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The existing `trans` column has multiple sub-types of Automatic and Manual.</span></span><br><span class="line"><span class="comment"># But, we need plain two types, either Automatic or Manual. Therefore, add a new column.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The Series.apply() method invokes the `lambda` function on each value of `trans` column.</span></span><br><span class="line"><span class="comment"># In python, a `lambda` function is an anonymous function that can have only one expression.</span></span><br><span class="line">fuel_econ[<span class="string">&#x27;trans_type&#x27;</span>] = fuel_econ[<span class="string">&#x27;trans&#x27;</span>].apply(<span class="keyword">lambda</span> x:x.split()[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">sb.countplot(data = fuel_econ, x = <span class="string">&#x27;VClass&#x27;</span>, hue = <span class="string">&#x27;trans_type&#x27;</span>)</span><br></pre></td></tr></table></figure>
<img src="/blog/2021/05/04/P193/023.png" class="">

<p>或者用heatmap.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Use group_by() and size() to get the number of cars and each combination of the two variable levels as a pandas Series</span></span><br><span class="line">ct_counts = fuel_econ.groupby([<span class="string">&#x27;VClass&#x27;</span>, <span class="string">&#x27;trans_type&#x27;</span>]).size()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Use Series.reset_index() to convert a series into a dataframe object</span></span><br><span class="line">ct_counts = ct_counts.reset_index(name=<span class="string">&#x27;count&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Use DataFrame.pivot() to rearrange the data, to have vehicle class on rows</span></span><br><span class="line">ct_counts = ct_counts.pivot(index = <span class="string">&#x27;VClass&#x27;</span>, columns = <span class="string">&#x27;trans_type&#x27;</span>, values = <span class="string">&#x27;count&#x27;</span>)</span><br><span class="line"></span><br><span class="line">sb.heatmap(ct_counts)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 或者</span></span><br><span class="line">sb.heatmap(ct_counts, annot = <span class="literal">True</span>, fmt = <span class="string">&#x27;d&#x27;</span>)</span><br></pre></td></tr></table></figure>
<img src="/blog/2021/05/04/P193/024.png" class="">

<p>clusterbar类似bar chart的faceting.<br>faceting, the data is divided into disjoint subsets, most often by different levels of a categorical variable.<br>用map function.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Preparatory Step</span></span><br><span class="line">fuel_econ = pd.read_csv(<span class="string">&#x27;fuel_econ.csv&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Convert the &quot;VClass&quot; column from a plain object type into an ordered categorical type</span></span><br><span class="line">sedan_classes = [<span class="string">&#x27;Minicompact Cars&#x27;</span>, <span class="string">&#x27;Subcompact Cars&#x27;</span>, <span class="string">&#x27;Compact Cars&#x27;</span>, <span class="string">&#x27;Midsize Cars&#x27;</span>, <span class="string">&#x27;Large Cars&#x27;</span>]</span><br><span class="line">vclasses = pd.api.types.CategoricalDtype(ordered=<span class="literal">True</span>, categories=sedan_classes)</span><br><span class="line">fuel_econ[<span class="string">&#x27;VClass&#x27;</span>] = fuel_econ[<span class="string">&#x27;VClass&#x27;</span>].astype(vclasses);</span><br><span class="line"></span><br><span class="line"><span class="comment"># Plot the Seaborn&#x27;s FacetGrid</span></span><br><span class="line">g = sb.FacetGrid(data = fuel_econ, col = <span class="string">&#x27;VClass&#x27;</span>)</span><br><span class="line">g.<span class="built_in">map</span>(plt.hist, <span class="string">&quot;comb&quot;</span>)</span><br><span class="line"></span><br><span class="line">bin_edges = np.arange(<span class="number">12</span>, <span class="number">58</span>+<span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Try experimenting with dynamic bin edges</span></span><br><span class="line"><span class="comment"># bin_edges = np.arange(-3, fuel_econ[&#x27;comb&#x27;].max()+1/3, 1/3)</span></span><br><span class="line"></span><br><span class="line">g = sb.FacetGrid(data = fuel_econ, col = <span class="string">&#x27;VClass&#x27;</span>, col_wrap=<span class="number">3</span>, sharey=<span class="literal">False</span>)</span><br><span class="line">g.<span class="built_in">map</span>(plt.hist, <span class="string">&#x27;comb&#x27;</span>, bins = bin_edges);</span><br><span class="line"></span><br><span class="line"><span class="comment"># Find the order in which you want to display the Facets</span></span><br><span class="line"><span class="comment"># For each transmission type, find the combined fuel efficiency</span></span><br><span class="line">group_means = fuel_econ[[<span class="string">&#x27;trans&#x27;</span>, <span class="string">&#x27;comb&#x27;</span>]].groupby([<span class="string">&#x27;trans&#x27;</span>]).mean()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Select only the list of transmission type in the decreasing order of combined fuel efficiency</span></span><br><span class="line">group_order = group_means.sort_values([<span class="string">&#x27;comb&#x27;</span>], ascending = <span class="literal">False</span>).index</span><br><span class="line"></span><br><span class="line"><span class="comment"># Use the argument col_order to display the FacetGrid in the desirable group_order</span></span><br><span class="line">g = sb.FacetGrid(data = fuel_econ, col = <span class="string">&#x27;trans&#x27;</span>, col_wrap = <span class="number">7</span>, col_order = group_order)</span><br><span class="line">g.<span class="built_in">map</span>(plt.hist, <span class="string">&#x27;comb&#x27;</span>)</span><br></pre></td></tr></table></figure>

<br>
<br>
<br>

<h3 id="line"><a href="#line" class="headerlink" title="line"></a>line</h3><p>比对两个variable的关系(one numeric variable against values of a second variable).注重关系与x-value.</p>
<p><a href="https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.errorbar.html">errorbar</a>.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">plt.errorbar(data=fuel_econ, x=<span class="string">&#x27;displ&#x27;</span>, y=<span class="string">&#x27;comb&#x27;</span>)</span><br><span class="line">plt.xticks(rotation=<span class="number">15</span>);</span><br><span class="line">plt.ylabel(<span class="string">&#x27;Avg. Combined Fuel Efficiency (mpg)&#x27;</span>);</span><br></pre></td></tr></table></figure>
<img src="/blog/2021/05/04/P193/027.png" class="">
<p>我们需要先summarize再plot.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Set a number of bins into which the data will be grouped.</span></span><br><span class="line"><span class="comment"># Set bin edges, and compute center of each bin</span></span><br><span class="line">bin_edges = np.arange(<span class="number">0.6</span>, <span class="number">7</span>+<span class="number">0.2</span>, <span class="number">0.2</span>)</span><br><span class="line">bin_centers = xbin_edges[:-<span class="number">1</span>] + <span class="number">0.1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Cut the bin values into discrete intervals. Returns a Series object.</span></span><br><span class="line">displ_binned = pd.cut(fuel_econ[<span class="string">&#x27;displ&#x27;</span>], bin_edges, include_lowest = <span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># For the points in each bin, we compute the mean and standard error of the mean.</span></span><br><span class="line">comb_mean = fuel_econ[<span class="string">&#x27;comb&#x27;</span>].groupby(displ_binned).mean()</span><br><span class="line">comb_std = fuel_econ[<span class="string">&#x27;comb&#x27;</span>].groupby(displ_binned).std()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Plot the summarized data</span></span><br><span class="line">plt.errorbar(x=bin_centers, y=comb_mean, yerr=comb_std)</span><br><span class="line">plt.xticks(rotation=<span class="number">15</span>);</span><br><span class="line">plt.ylabel(<span class="string">&#x27;Avg. Combined Fuel Efficiency (mpg)&#x27;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<img src="/blog/2021/05/04/P193/028.png" class="">

<p>We <a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.sort_values.html">sort_values</a> to put the x-values in ascending order first. Then use <a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.rolling.html">rolling</a>.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># compute statistics in a rolling window</span></span><br><span class="line">df_window = df.sort_values(<span class="string">&#x27;num_var1&#x27;</span>).rolling(<span class="number">15</span>)</span><br><span class="line">x_winmean = df_window.mean()[<span class="string">&#x27;num_var1&#x27;</span>]</span><br><span class="line">y_median = df_window.median()[<span class="string">&#x27;num_var2&#x27;</span>]</span><br><span class="line">y_q1 = df_window.quantile(<span class="number">.25</span>)[<span class="string">&#x27;num_var2&#x27;</span>]</span><br><span class="line">y_q3 = df_window.quantile(<span class="number">.75</span>)[<span class="string">&#x27;num_var2&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># plot the summarized data</span></span><br><span class="line">base_color = sb.color_palette()[<span class="number">0</span>]</span><br><span class="line">line_color = sb.color_palette(<span class="string">&#x27;dark&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">plt.scatter(data = df, x = <span class="string">&#x27;num_var1&#x27;</span>, y = <span class="string">&#x27;num_var2&#x27;</span>)</span><br><span class="line">plt.errorbar(x = x_winmean, y = y_median, c = line_color)</span><br><span class="line">plt.errorbar(x = x_winmean, y = y_q1, c = line_color, linestyle = <span class="string">&#x27;--&#x27;</span>)</span><br><span class="line">plt.errorbar(x = x_winmean, y = y_q3, c = line_color, linestyle = <span class="string">&#x27;--&#x27;</span>)</span><br><span class="line"></span><br><span class="line">plt.xlabel(<span class="string">&#x27;num_var1&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;num_var2&#x27;</span>)</span><br></pre></td></tr></table></figure>
<img src="/blog/2021/05/04/P193/029.png" class="">

<p>hist中也有line的选项.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">bin_edges = np.arange(-<span class="number">3</span>, df[<span class="string">&#x27;num_var&#x27;</span>].<span class="built_in">max</span>()+<span class="number">1</span>/<span class="number">3</span>, <span class="number">1</span>/<span class="number">3</span>)</span><br><span class="line">g = sb.FacetGrid(data = df, hue = <span class="string">&#x27;cat_var&#x27;</span>, size = <span class="number">5</span>)</span><br><span class="line">g.<span class="built_in">map</span>(plt.hist, <span class="string">&quot;num_var&quot;</span>, bins = bin_edges, histtype = <span class="string">&#x27;step&#x27;</span>)</span><br><span class="line">g.add_legend()</span><br></pre></td></tr></table></figure>
<img src="/blog/2021/05/04/P193/030.png" class="">

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">freq_poly</span>(<span class="params">x, bins = <span class="number">10</span>, ** kwargs</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot; Custom frequency polygon / line plot code. &quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># set bin edges if none or int specified</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">type</span>(bins) == <span class="built_in">int</span>:</span><br><span class="line">        bins = np.linspace(x.<span class="built_in">min</span>(), x.<span class="built_in">max</span>(), bins+<span class="number">1</span>)</span><br><span class="line">    bin_centers = (bin_edges[<span class="number">1</span>:] + bin_edges[:-<span class="number">1</span>]) / <span class="number">2</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># compute counts</span></span><br><span class="line">    data_bins = pd.cut(x, bins, right = <span class="literal">False</span>,</span><br><span class="line">                       include_lowest = <span class="literal">True</span>)</span><br><span class="line">    counts = x.groupby(data_bins).count()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># create plot</span></span><br><span class="line">    plt.errorbar(x = bin_centers, y = counts, ** kwargs)</span><br><span class="line"></span><br><span class="line">bin_edges = np.arange(-<span class="number">3</span>, df[<span class="string">&#x27;num_var&#x27;</span>].<span class="built_in">max</span>()+<span class="number">1</span>/<span class="number">3</span>, <span class="number">1</span>/<span class="number">3</span>)</span><br><span class="line">g = sb.FacetGrid(data = df, hue = <span class="string">&#x27;cat_var&#x27;</span>, size = <span class="number">5</span>)</span><br><span class="line">g.<span class="built_in">map</span>(freq_poly, <span class="string">&quot;num_var&quot;</span>, bins = bin_edges)</span><br><span class="line">g.add_legend()</span><br></pre></td></tr></table></figure>
<img src="/blog/2021/05/04/P193/031.png" class="">

<br>
<br>
<br>

<h3 id="Q-Q-plot"><a href="#Q-Q-plot" class="headerlink" title="Q-Q plot"></a>Q-Q plot</h3><p>quantile-quantile plot.</p>
<p><a href="https://docs.scipy.org/doc/numpy-1.15.0/reference/generated/numpy.linspace.html">linspace</a>.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">expected_scores = norm.ppf(qs)</span><br><span class="line">data_scores = (df[<span class="string">&#x27;num_var&#x27;</span>].sort_values() - samp_mean) / samp_sd</span><br><span class="line"></span><br><span class="line">plt.scatter(expected_scores, data_scores)</span><br><span class="line">plt.plot([-<span class="number">2.5</span>,<span class="number">3</span>],[-<span class="number">2.5</span>,<span class="number">3</span>],<span class="string">&#x27;--&#x27;</span>, color = <span class="string">&#x27;black&#x27;</span>)</span><br><span class="line">plt.axis(<span class="string">&#x27;equal&#x27;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;Expected Standard Scores&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;Observed Standard Scores&#x27;</span>)</span><br></pre></td></tr></table></figure>
<img src="/blog/2021/05/04/P193/032.png" class="">

<br>
<br>
<br>

<h3 id="swarmplot"><a href="#swarmplot" class="headerlink" title="swarmplot"></a>swarmplot</h3><p><a href="https://seaborn.pydata.org/generated/seaborn.swarmplot.html">swarmplot</a>.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">plt.figure(figsize = [<span class="number">12</span>, <span class="number">5</span>])</span><br><span class="line">base_color = sb.color_palette()[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># left plot: violin plot</span></span><br><span class="line">plt.subplot(<span class="number">1</span>, <span class="number">3</span>, <span class="number">1</span>)</span><br><span class="line">ax1 = sb.violinplot(data = df, x = <span class="string">&#x27;cat_var&#x27;</span>, y = <span class="string">&#x27;num_var&#x27;</span>, color = base_color)</span><br><span class="line"></span><br><span class="line"><span class="comment"># center plot: box plot</span></span><br><span class="line">plt.subplot(<span class="number">1</span>, <span class="number">3</span>, <span class="number">2</span>)</span><br><span class="line">sb.boxplot(data = df, x = <span class="string">&#x27;cat_var&#x27;</span>, y = <span class="string">&#x27;num_var&#x27;</span>, color = base_color)</span><br><span class="line">plt.ylim(ax1.get_ylim()) <span class="comment"># set y-axis limits to be same as left plot</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># right plot: swarm plot</span></span><br><span class="line">plt.subplot(<span class="number">1</span>, <span class="number">3</span>, <span class="number">3</span>)</span><br><span class="line">sb.swarmplot(data = df, x = <span class="string">&#x27;cat_var&#x27;</span>, y = <span class="string">&#x27;num_var&#x27;</span>, color = base_color)</span><br><span class="line">plt.ylim(ax1.get_ylim()) <span class="comment"># set y-axis limits to be same as left plot</span></span><br></pre></td></tr></table></figure>
<img src="/blog/2021/05/04/P193/033.png" class="">

<br>
<br>
<br>

<h3 id="rug-and-strip-plots"><a href="#rug-and-strip-plots" class="headerlink" title="rug and strip plots"></a>rug and strip plots</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">g = sb.JointGrid(data = df, x = <span class="string">&#x27;num_var1&#x27;</span>, y = <span class="string">&#x27;num_var2&#x27;</span>)</span><br><span class="line">g.plot_joint(plt.scatter)</span><br><span class="line">g.plot_marginals(sb.rugplot, height = <span class="number">0.25</span>)</span><br></pre></td></tr></table></figure>
<img src="/blog/2021/05/04/P193/034.png" class="">

<br>
<br>
<br>

<h3 id="stacked-plots"><a href="#stacked-plots" class="headerlink" title="stacked plots"></a>stacked plots</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cat1_order = [<span class="string">&#x27;East&#x27;</span>, <span class="string">&#x27;South&#x27;</span>, <span class="string">&#x27;West&#x27;</span>, <span class="string">&#x27;North&#x27;</span>]</span><br><span class="line">cat2_order = [<span class="string">&#x27;Type X&#x27;</span>, <span class="string">&#x27;Type Y&#x27;</span>, <span class="string">&#x27;Type Z&#x27;</span>, <span class="string">&#x27;Type O&#x27;</span>]</span><br><span class="line"></span><br><span class="line">plt.figure(figsize = [<span class="number">12</span>, <span class="number">5</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># left plot: clustered bar chart, absolute counts</span></span><br><span class="line">plt.subplot(<span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>)</span><br><span class="line">sb.countplot(data = df, x = <span class="string">&#x27;cat_var1&#x27;</span>, hue = <span class="string">&#x27;cat_var2&#x27;</span>,</span><br><span class="line">             order = cat1_order, hue_order = cat2_order)</span><br><span class="line">plt.legend()</span><br><span class="line"></span><br><span class="line"><span class="comment"># right plot: stacked bar chart, absolute counts</span></span><br><span class="line">plt.subplot(<span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">baselines = np.zeros(<span class="built_in">len</span>(cat1_order))</span><br><span class="line"><span class="comment"># for each second-variable category:</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(cat2_order)):</span><br><span class="line">    <span class="comment"># isolate the counts of the first category,</span></span><br><span class="line">    cat2 = cat2_order[i]</span><br><span class="line">    inner_counts = df[df[<span class="string">&#x27;cat_var2&#x27;</span>] == cat2][<span class="string">&#x27;cat_var1&#x27;</span>].value_counts()</span><br><span class="line">    <span class="comment"># then plot those counts on top of the accumulated baseline</span></span><br><span class="line">    plt.bar(x = np.arange(<span class="built_in">len</span>(cat1_order)), height = inner_counts[cat1_order],</span><br><span class="line">            bottom = baselines)</span><br><span class="line">    baselines += inner_counts[cat1_order]</span><br><span class="line"></span><br><span class="line">plt.xticks(np.arange(<span class="built_in">len</span>(cat1_order)), cat1_order)</span><br><span class="line">plt.legend(cat2_order)</span><br></pre></td></tr></table></figure>
<img src="/blog/2021/05/04/P193/035.png" class="">

<br>
<br>
<br>

<h2 id="multivariate"><a href="#multivariate" class="headerlink" title="multivariate"></a>multivariate</h2><p>要表示第三个variate,我们需要借助colour与shape.</p>
<h3 id="shape"><a href="#shape" class="headerlink" title="shape"></a>shape</h3><p>先确认每种的形状.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cat_markers = [[<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;o&#x27;</span>],</span><br><span class="line">               [<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;s&#x27;</span>]]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> cat, marker <span class="keyword">in</span> cat_markers:</span><br><span class="line">    df_cat = df[df[<span class="string">&#x27;cat_var1&#x27;</span>] == cat]</span><br><span class="line">    plt.scatter(data = df_cat, x = <span class="string">&#x27;num_var1&#x27;</span>, y = <span class="string">&#x27;num_var2&#x27;</span>, marker = marker)</span><br><span class="line">plt.legend([<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;B&#x27;</span>])</span><br></pre></td></tr></table></figure>
<img src="/blog/2021/05/04/P193/036.png" class="">

<br>
<br>
<br>

<h3 id="size"><a href="#size" class="headerlink" title="size"></a>size</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">plt.scatter(data = df, x = <span class="string">&#x27;num_var1&#x27;</span>, y = <span class="string">&#x27;num_var2&#x27;</span>, s = <span class="string">&#x27;num_var3&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># dummy series for adding legend</span></span><br><span class="line">sizes = [<span class="number">20</span>, <span class="number">35</span>, <span class="number">50</span>]</span><br><span class="line">base_color = sb.color_palette()[<span class="number">0</span>]</span><br><span class="line">legend_obj = []</span><br><span class="line"><span class="keyword">for</span> s <span class="keyword">in</span> sizes:</span><br><span class="line">    legend_obj.append(plt.scatter([], [], s = s, color = base_color))</span><br><span class="line">plt.legend(legend_obj, sizes)</span><br></pre></td></tr></table></figure>
<img src="/blog/2021/05/04/P193/037.png" class="">

<br>
<br>
<br>

<h3 id="colour"><a href="#colour" class="headerlink" title="colour"></a>colour</h3><p><a href="https://seaborn.pydata.org/generated/seaborn.FacetGrid.html">FacetGrid</a>.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">g = sb.FacetGrid(data = df, hue = <span class="string">&#x27;cat_var1&#x27;</span>, size = <span class="number">5</span>)</span><br><span class="line">g.<span class="built_in">map</span>(plt.scatter, <span class="string">&#x27;num_var1&#x27;</span>, <span class="string">&#x27;num_var2&#x27;</span>)</span><br><span class="line">g.add_legend()</span><br></pre></td></tr></table></figure>
<img src="/blog/2021/05/04/P193/038.png" class="">

<p>选择合适的colour palettes.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">plt.scatter(data = df, x = <span class="string">&#x27;num_var1&#x27;</span>, y = <span class="string">&#x27;num_var2&#x27;</span>, c = <span class="string">&#x27;num_var3&#x27;</span>,</span><br><span class="line">            cmap = <span class="string">&#x27;mako_r&#x27;</span>)</span><br><span class="line">plt.colorbar()</span><br></pre></td></tr></table></figure>
<img src="/blog/2021/05/04/P193/039.png" class="">

<hr>
<p>heatmap.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">xbin_edges = np.arange(<span class="number">0.25</span>, df[<span class="string">&#x27;num_var1&#x27;</span>].<span class="built_in">max</span>()+<span class="number">0.5</span>, <span class="number">0.5</span>)</span><br><span class="line">ybin_edges = np.arange(<span class="number">7</span>,    df[<span class="string">&#x27;num_var2&#x27;</span>].<span class="built_in">max</span>()+<span class="number">0.5</span>, <span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># count number of points in each bin</span></span><br><span class="line">xbin_idxs = pd.cut(df[<span class="string">&#x27;num_var1&#x27;</span>], xbin_edges, right = <span class="literal">False</span>,</span><br><span class="line">                    include_lowest = <span class="literal">True</span>, labels = <span class="literal">False</span>).astype(<span class="built_in">int</span>)</span><br><span class="line">ybin_idxs = pd.cut(df[<span class="string">&#x27;num_var2&#x27;</span>], ybin_edges, right = <span class="literal">False</span>,</span><br><span class="line">                    include_lowest = <span class="literal">True</span>, labels = <span class="literal">False</span>).astype(<span class="built_in">int</span>)</span><br><span class="line"></span><br><span class="line">pts_per_bin = df.groupby([xbin_idxs, ybin_idxs]).size()</span><br><span class="line">pts_per_bin = pts_per_bin.reset_index()</span><br><span class="line">pts_per_bin = pts_per_bin.pivot(index = <span class="string">&#x27;num_var1&#x27;</span>, columns = <span class="string">&#x27;num_var2&#x27;</span>).values</span><br><span class="line"></span><br><span class="line">z_wts = df[<span class="string">&#x27;num_var3&#x27;</span>] / pts_per_bin[xbin_idxs, ybin_idxs]</span><br><span class="line"></span><br><span class="line"><span class="comment"># plot the data using the calculated weights</span></span><br><span class="line">plt.hist2d(data = df, x = <span class="string">&#x27;num_var1&#x27;</span>, y = <span class="string">&#x27;num_var2&#x27;</span>, weights = z_wts,</span><br><span class="line">           bins = [xbin_edges, ybin_edges], cmap = <span class="string">&#x27;viridis_r&#x27;</span>, cmin = <span class="number">0.5</span>);</span><br><span class="line">plt.xlabel(<span class="string">&#x27;num_var1&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;num_var2&#x27;</span>);</span><br><span class="line">plt.colorbar(label = <span class="string">&#x27;mean(num_var3)&#x27;</span>);</span><br></pre></td></tr></table></figure>
<img src="/blog/2021/05/04/P193/041.png" class="">

<br>
<br>
<br>

<h3 id="faceting"><a href="#faceting" class="headerlink" title="faceting"></a>faceting</h3><p>用map.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">g = sb.FacetGrid(data = df, col = <span class="string">&#x27;cat_var2&#x27;</span>, row = <span class="string">&#x27;cat_var1&#x27;</span>, size = <span class="number">2.5</span>,</span><br><span class="line">                margin_titles = <span class="literal">True</span>)</span><br><span class="line">g.<span class="built_in">map</span>(plt.scatter, <span class="string">&#x27;num_var1&#x27;</span>, <span class="string">&#x27;num_var2&#x27;</span>)</span><br></pre></td></tr></table></figure>
<img src="/blog/2021/05/04/P193/040.png" class="">

<p>bar chart.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ax = sb.barplot(data = df, x = <span class="string">&#x27;cat_var1&#x27;</span>, y = <span class="string">&#x27;num_var2&#x27;</span>, hue = <span class="string">&#x27;cat_var2&#x27;</span>)</span><br><span class="line">ax.legend(loc = <span class="number">8</span>, ncol = <span class="number">3</span>, framealpha = <span class="number">1</span>, title = <span class="string">&#x27;cat_var2&#x27;</span>)</span><br></pre></td></tr></table></figure>
<img src="/blog/2021/05/04/P193/042.png" class="">

<p>pointplot.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ax = sb.pointplot(data = df, x = <span class="string">&#x27;cat_var1&#x27;</span>, y = <span class="string">&#x27;num_var2&#x27;</span>, hue = <span class="string">&#x27;cat_var2&#x27;</span>,</span><br><span class="line">                  dodge = <span class="number">0.3</span>, linestyles = <span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure>
<img src="/blog/2021/05/04/P193/043.png" class="">

<p>line plot.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mean_poly</span>(<span class="params">x, y, bins = <span class="number">10</span>, ** kwargs</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot; Custom adapted line plot code. &quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># set bin edges if none or int specified</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">type</span>(bins) == <span class="built_in">int</span>:</span><br><span class="line">        bins = np.linspace(x.<span class="built_in">min</span>(), x.<span class="built_in">max</span>(), bins+<span class="number">1</span>)</span><br><span class="line">    bin_centers = (bin_edges[<span class="number">1</span>:] + bin_edges[:-<span class="number">1</span>]) / <span class="number">2</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># compute counts</span></span><br><span class="line">    data_bins = pd.cut(x, bins, right = <span class="literal">False</span>,</span><br><span class="line">                       include_lowest = <span class="literal">True</span>)</span><br><span class="line">    means = y.groupby(data_bins).mean()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># create plot</span></span><br><span class="line">    plt.errorbar(x = bin_centers, y = means, ** kwargs)</span><br><span class="line"></span><br><span class="line">bin_edges = np.arange(<span class="number">0.25</span>, df[<span class="string">&#x27;num_var1&#x27;</span>].<span class="built_in">max</span>()+<span class="number">0.5</span>, <span class="number">0.5</span>)</span><br><span class="line">g = sb.FacetGrid(data = df, hue = <span class="string">&#x27;cat_var2&#x27;</span>, size = <span class="number">5</span>)</span><br><span class="line">g.<span class="built_in">map</span>(mean_poly, <span class="string">&quot;num_var1&quot;</span>, <span class="string">&quot;num_var2&quot;</span>, bins = bin_edges)</span><br><span class="line">g.set_ylabels(<span class="string">&#x27;mean(num_var2)&#x27;</span>)</span><br><span class="line">g.add_legend()</span><br></pre></td></tr></table></figure>
<img src="/blog/2021/05/04/P193/044.png" class="">

<br>
<br>
<br>

<h3 id="plot-matrices"><a href="#plot-matrices" class="headerlink" title="plot matrices"></a>plot matrices</h3><p><a href="https://seaborn.pydata.org/generated/seaborn.PairGrid.html">PairGrid</a>.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">g = sb.PairGrid(data = df, <span class="built_in">vars</span> = [<span class="string">&#x27;num_var1&#x27;</span>, <span class="string">&#x27;num_var2&#x27;</span>, <span class="string">&#x27;num_var3&#x27;</span>])</span><br><span class="line">g.map_diag(plt.hist)</span><br><span class="line">g.map_offdiag(plt.scatter)</span><br></pre></td></tr></table></figure>
<img src="/blog/2021/05/04/P193/045.png" class="">

<hr>
<p><a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.corr.html">corr</a>.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sb.heatmap(df.corr(), annot = <span class="literal">True</span>, fmt = <span class="string">&#x27;.2f&#x27;</span>, cmap = <span class="string">&#x27;vlag_r&#x27;</span>, center = <span class="number">0</span>)</span><br></pre></td></tr></table></figure>
<img src="/blog/2021/05/04/P193/046.png" class="">

<br>
<br>
<br>

<h3 id="side-note"><a href="#side-note" class="headerlink" title="side note"></a>side note</h3><p>当比较多个variable的时候,有时我们可以增加feature,比较的variable,比如rate.</p>
<br>
<br>
<br>

<h1 id="explanatory-analysis"><a href="#explanatory-analysis" class="headerlink" title="explanatory analysis"></a>explanatory analysis</h1><ul>
<li>Start with a Question</li>
<li>Repetition is a Good Thing</li>
<li>Highlight the Answer</li>
<li>Call Your Audience To Action</li>
</ul>
<hr>
<p>checklist:</p>
<ul>
<li>appropriate plot</li>
<li>appropriate encodings</li>
<li>attention to design integrity</li>
<li>label axes and choose appropriate tick marks</li>
<li>provide legends for non-positional variables</li>
<li>title and include descriptive comments</li>
</ul>
<hr>
<p>function:</p>
<ul>
<li><a href="https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.figure.html">figure</a>: initialize a new figure.</li>
<li><a href="https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.xlabel.html">xlabel</a> and <a href="https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.ylabel.html">ylabel</a>: setting axis labels.</li>
<li><a href="https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.xticks.html">xticks</a> and <a href="https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.yticks.html">yticks</a>: setting tick marks.</li>
<li><a href="https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.legend.html">legend</a>: create and customize a legend. One key parameter to use is “title”, which allows you to label what feature is being depicted in the legend. You might also need to make use of the “loc” and “ncol” parameters to move and shape the legend if it gets placed in an awkward location by default.</li>
<li><a href="https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.colorbar.html">colorbar</a>: add a colorbar. Use the “label” parameter to set the label on a colorbar.</li>
<li><a href="https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.title.html">title</a>.</li>
<li><a href="https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.suptitle.html">suptitle</a>: setting figure titles. The main difference between suptitle and title is that the former sets a title for the Figure as a whole, and the latter for only a single Axes. This is an important distinction: if you’re using faceting or subplotting, you’ll want to use suptitle to set a title for the figure as a whole.</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># loading in the data, sampling to reduce points plotted</span></span><br><span class="line">fuel_econ = pd.read_csv(<span class="string">&#x27;./data/fuel_econ.csv&#x27;</span>)</span><br><span class="line"></span><br><span class="line">np.random.seed(<span class="number">2018</span>)</span><br><span class="line">sample = np.random.choice(fuel_econ.shape[<span class="number">0</span>], <span class="number">200</span>, replace = <span class="literal">False</span>)</span><br><span class="line">fuel_econ_subset = fuel_econ.loc[sample]</span><br><span class="line"></span><br><span class="line"><span class="comment"># plotting the data</span></span><br><span class="line">plt.figure(figsize = [<span class="number">7</span>,<span class="number">4</span>])</span><br><span class="line">plt.scatter(data = fuel_econ_subset, x = <span class="string">&#x27;displ&#x27;</span>, y = <span class="string">&#x27;comb&#x27;</span>, c = <span class="string">&#x27;co2&#x27;</span>,</span><br><span class="line">            cmap = <span class="string">&#x27;viridis_r&#x27;</span>)</span><br><span class="line">plt.title(<span class="string">&#x27;Fuel Efficiency and CO2 Output by Engine Size&#x27;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;Displacement (l)&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;Combined Fuel Eff. (mpg)&#x27;</span>)</span><br><span class="line">plt.colorbar(label = <span class="string">&#x27;CO2 (g/mi)&#x27;</span>);</span><br></pre></td></tr></table></figure>
<img src="/blog/2021/05/04/P193/047.png" class="">


<br>
<br>
<br>
]]></content>
      <categories>
        <category>数学笔记</category>
      </categories>
      <tags>
        <tag>编码</tag>
        <tag>以头抢地(诚)</tag>
        <tag>data</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>关于SAS的笔记</title>
    <url>/blog/2021/10/05/P160/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="3b66abcfb2dc8188b99d1e370056940e3c757f22c978cf3d21481c8adf934f57">6702ac8591e9b25480c46177f55a44894c5b73585955930a02bd03a4ff9e1ea27a964447762b054788146acb28ee4b768d32914e5b6d4c8e97753d2eac9114dc01f27687f61bf8078b0eb3e5441c6c1374e428563e22302edafd93ecad2a40d3ff214401274236ab143c38a7ce64b22093e9d7ad4d3f3f692c406533672dafa7766b8a91ec0b35901de0b7b694d9892465dee545123310dcf555f5e59217247d25dd1fbea478cc8495ab7031592034a108dc8ae8c98b0e01128fc24e4594fb2055e34465c149e14801495f161fdbb97a12f18dfa62c2ed2bf02dee0d5bd9c3ffe2da8d3ac503199d552701b50486b8595d858bc2e0d3486d3e905ae2e98866d7d197d974809fb86a5909062be7231beb40708c45a5ba02ba3231abd95b84ed0f1376f94f6a65a011480055724f16265decc47da6dc772fb96e3ff8503c9b76d53d54a8e812c0349a5cfeddde0ab5ac5d5e5edd2a2306c5a7c8baf4792b0049de7564edfecbdce3a9f4a32715a58eaa890c31a51e70c2c5891a55b3da0022f4a44618a6aae868ed8b9eed0d78d9c722c61b398cb41955741e1e7543a230a55afc8a09e31c3f54544502329dfe76c1dbf04e0fb1e90c33eb00de67ec1da6b60792eae6e69db65355266685678944aa9baaa4c89889507308545069ca53177a48440e384259116943153ce45c5a9e41e4c08fc32d86ed609c03875de4d6b2c73928bc6932ae5ff17276d976e711c196ca0601172d53c7ddb8bef5e66167997681fce4535a82c270d3f5b02a527f4c124e3edbf397883c8861d07f48afc24ad8f9ebc0572e5cfe068ced251ddbf2e0746876ae90612ac708399ab18b7dbbdb434f64e1a12a26c8477cfd69adcabc4d8d35381e3e63e64e69f83c93ec04da432d297ace0603d662600b9fef0fb7f3b1448bb68bd9f7a02457df7758cfa73c675d2d49513d5bb0344deca77250dc0566b07908dfa16885284fb5586b4833494c7e9ce592e15ed2f310054a03a9b3f06ed1e21351ea11903aad044dbf2c3891beb1fd0a481d767ff1993294378f78c637757eacd7df2c4824c21e2c9e0a305e94c67594fb81fb233af1767712f58c491d3cc3c4d0f39cb89c221dbe0d0ad0609e2b9c0691178fcc9cc9cb217a494bd374dfae9b452c0d4ae413698ba5cf68133905c8c95fe1cbfa78bc591901dc2647d05a9b8e53174ad6f74c03e20428c99a8afac95e5b20469f269dec02c1c967c31310b935a51fb8b2619336bf7b3ec7dddd1a29b4b075110cdf8571a96fbbb9f25306b0159ee93ba096d856fe28bdbe07051b799a1e6844389673ed021077f374b8702caeb2fb35023f6fd98011a9a8c80ee00280bc45f6c3e3cafd7d358d5d3d083d79e22e458ae33bc35a22897e19e535c52e3ed3aea58b87a52dbfbd5aa2150140294335fd580321ca8e5fdeb5a943b79e90d45de3403104a617076032f607c962143137a33348b85be5ebd999da1c375a8a5ed2adf88ce5e0e6911512fad39708f4a75fc1ebaf7d76a8834fb625bd841089e712b79070512f90e1abc04b0208d17590b61302cd1eb84e3e945eae016c2cf009b8ae1f70e11dc7794342e5b6aa484f1f0da93e40ac9f8b1cf3d5d1e300ef95afb086da6c844743c3f7ef57be156068eabaa0d5434dc87d5c6031f705b84efecb85063e1236586e5657109ae0e393e28a64d217c32ea6a00630c0f7182699bc7824376659f676386af1bcd4719a5b4c255e331f25b44c771a213f5ed424e3191658ceb73fdb0c13ab1fb9f27682cdd514cf573bb8f4aa6478aefdc3715818cf169a6d6904073e25e2ed7d4019227d23b7ffcef68b4475d1f399740198c85fafcdbd039620e55eaa12313563584b86f3f99b3bb008961cbbf3909d4ced93ae80dd2927a4211457f93edbd0fcbaffa4149eb75645b1c046802fb43a2c801ab849e250701c070343f3c48524b2275d1f2eb33c3b10ff81b74c9dce1fc3ffbf0d584ba65fe3b86e873c99d835db8795d349597b1e315b641771829b214793f13fcf0e044792aafadf19c3c4f9f1547807097180ae56097f02aae40441f2da30d7934d230bc16d229b77a9aaa501479aa849654ee94e53a9f77ef412939539ceb90d767089c72c03d36fb86cc67321f6dfb74004998fd58828791ab14c34ebc3a7a1e7a44f2edda41d2b430ac08aad5ed9c06f787d9c463cd6df2cc560a1bc60d928ae4329c29fa600fe851f8697017d4edafca7a8b4ffd6e5c67c7e96fe0688a6c12922f6f726483d8f9a345ef9d392bf244ec292ede80838c4c768e2f486c932560ee486e166953e402d063c2c580f933697d7b028af536c9b0850a68a78aad798d9cca87a29e311be82745e025c60ec59e278c2a2050f9bbfe05bcbaf14790c4f60f4f57c824093ebfa60b6ab89a4dc61188c8f1b9dfa39bd56b0ea2658b27376ee3862f1e5f175bcbdf2311df74d475db9ecdc31140a7ed31d7d774f653ceddb76b5c321e9a89a0af9c19a998cb14068a2a2a82c7eeaabcdb1e440465deeb143e33cad48e0ddf7d60ed7010fa55a1cb85abf0ec359b5238858da92f3265904b55b4d1c8df375e13d79cdaee61f881fa28f191b14f5f4e7a1915abdbb0b65bd57d70b740b9b4ad3fe92c254e7f98b5f3df6d886a78d7bc0f524549f8f88953515283f819c49bafc6d8c81740a95a42cf3bc32b33331806034a20e80258e494ad4d27b63e022915d29fe141962d9982d318af1c568b5e7ac67eae38d838346c09706cfd863079a9ea3671d25c6fd66893dc6547283215eacea007d1e691edd6902d4febc5b6ce1d86d6a96f28cd8e60694b8e733cb78f066160100c0076f6b917580008714eb5dc764e4d5989d79f1f4812d48cc4d57129c1ec3ee52afd0f9e21d72fc89712c758126d1c7afbf5ffb1b57f2c2f656d281e188cbbf092e44e7a1f8bd8be5dfd3588de184cda80a59736b7145d3312fff969ff63c8e6dfae1d8ecb3e99cec5c5b2ec3466ff4d432d050a81a6beb52e30d945114ae66e50084bf8982a22880b2d1978b082d854c2444d9b2e92326f456d97ffadb6b4d75fc7b0060ac59de2bab0dbb573fc490d571684793a0607a8612fc21b94c4e4b78c77153b6504c1ce4ff9032985fbc40cdde298bb20dd5bdb5ed20589fde2e0da341b0d79a8b27c3f7f57485dc9df1434876bfaa847b6e549767626303d03eb6462204b0386441d855fb0c19c2f577c76ab5a315f4e3bf18159e0f2924fa41e180366cb18ab9fd80a766784d3e89f55f2ee9ee0621b81361a030fca8c3053a2a48411101ad015f309a53f22e7472586c30aceb98d95ce77a2df0e465fc9347eb882dd35b158d6a6f9ebc70b5e305e3648383b5ebd98137f29895f66b1fd7ea625f53b81566ed478dbc145af595b01d691818a24f90acb1210d705e237a5eda3d28bb2cd54cd528e16634f4294f28dbad72196580279b588f427b9f83a32dbc8d2d13c7b2f476522dd92477d0cf9ef30fc05565ec0ab9050128c77125b2c7f677347e9d2f02197631e8fc494df52bdda02763d248a6c56d3825d8065f41090f4ba418c807d3599838fa5464aad19c41ea90cd19129dd7a3a55450a6c4de44d597c27ecd254d03f1ca88677b6695278d86eae9f3e646a6851eb93c56a63b65d42ebbc53642b7a9f923956143729d160fed7b8c6fb99d036191221fa3e68a6e7ed044a6a84458e66958f539ee4cc24ab4531d3012351d6253a879bba681b5d2b8fecc2c6cd341f4cca4cb9165e3727a1cad2f803d9b2c25dad8771b532925bd403295d50483ec8e0dc1152ad43166b30f74909fa7b62cc23466fa590269e511e2c1c391dbe4d239d77d5dc2914559474646281bf5434a794ecfb8c1e60fe25aae771701ac9d2429b3fbbf9c248b05497668afaf6f6e9008eb258d13a3ec95952dd21769734ebb51d1d45db3a5c1218f231e77c91d8f3ea19a098b8f472dde6fc2841b643393e56984788a0bed51c0bdc6652911e80af5fe8296a44582cfb9aa67b04bbfaff7773756c3c00b7ef61c4ab5358340b55c0b301007cce0f368272144077e4532dbe62ee54cba0131f3c78772a8746a5b721de13bc8d82546aad47ccf6a2e160edf186fb5401a117934f1a14ff274f439b6fb3c1cddc00274df7c0090facb5604c0ff34f25c7aba97401f4f3d514dc05991b1b5b1eab4003a0ecf139d1dc3d34faa6c46749b3ff2e977f72e7b12ae43f3cfa8cdad72ce71c01700bd3cc35fe029253787cc1386955e7121d6fe01b74846551cb55455f80d6dd72fd0f746b7b112d6bef33190cc9be9b5b3352f4507920d1839a901b9891a4df4216fb51cb30ba04e8c64b0459e8db8ceed01d9551c8299c7fe17772c3b4702634ff6933bba4820ecb398a066a48b975abc055160bf94f046e38692b44c3b759cb8c3365b3b8a02ded58efe7ca01fb999a4d44b37e4c1a0af7ae1f8b694a124465c8683bd29fca0fc2a5c9168a1962969b3e266bcb974c9dddab1139672d86333f4127ee19d5bc8ea8951efbcf136aa06b5916b35ee6f76c34463bdb8cb4c8b87b3d6be5e0eeca8b61d0f6ba487a23172f66e5a860c1dbbac1649122562d8a29d87cbf751d8e57aa436e7b05761d9c0ce3fa415a628496926ea749da8da926f81db2cc4884f03bb018219faf51db66148afb163514653004de76a626a6393530a2a25181064f4add1a1511f86e64e37550892983b987ca789e34d8cec11c4ce7b39e8e91e164cdd3011e853578eb218b020fb0f97631759aa66baf982e181a2285f92086da8b8322277fd0614fd2d38f09130ebed61a95f9bb06848bc6ff5f6dfe4fd56a85c9dae76887e7b9d7d4f68ef8a17a4a18beec2da73fdf5c18f187d2825fdb1a481980f7b741498c0f4ba0c15edfa26b46c331a9db1a53e8fcae13cc23b20adadb7f1e7546e4d507e5b9c09c0741562ceceb54db0f58b371111b075bcae0edf77e6f38a2fa9e43865fe37219a9b33554825aab3d5629491d53a4738bb0f7792ea5162eb4cd12dbcc3f651ce8de8aa949b431b5cf65105ae3232dfe59e6a2e379b72ef4ccacaea15dbe81c3a9096cbe2116431a1ffbf7673bc134fbbdffdca4e950876813fef7b0d759a82609117cb23d74012d553e139fb23207f4d61fe4d1bf1fad5c039d9d3cae6f3763e12e080ae4398386ecb044e59dfd8b5b94023c2cc190ae78a88c968c5684ccf5733f7278a2cbaba97745c4c96d3228294b3ac9b6f73925fc90005557ba37f26ba1717b18d933bc746363e873a3fab07c373637d50e1a96a820467e3f354e114d7b0e0792035dffe49bd4eab186f754deace2f55e350e8427a101f092499efccc2a3a35607642b72ba7cc2137240ee74d88f26397fb5f4d8880412b0cfdbeb981d687b236d276c84372f9acf36a5a5e5ab9e286ac04133f0a47d71b07dd75390dd1756f4c4c0ec61c3dde16c466fa04491168b961fa14b2f2f75e78855583cdc70291d2bf23184fdf8fdc267d6bcef38aa04654428b5b8f114644efa01a85760ecc2692ca2b057970b106a69a21f92f7eadecc839e3d71bee0e2ac7138ef867f016d6fb1689c501283e9b3e9931a1dfae8458b2b2670c2e59c53ecbcdd3368298955e3edc54423409d91f91db2ae38b4a45a8893f9968c19733a6765114c3209fc3a8d000987693a472d92579c3942da3eaa71fa1c9aca8e74088e211dff0aa17b02d522782e3727630b43b3bdcef1a31b8f6a165105039e84daf6ae73a807cf220b0a2a5d7f65c2f40fbfcade9c8b071f5fe521246c18aff86e2d78ee8f21a4eeccccd406e28a8ca7dab794156b0865b5eebd9ff3f499108522288a96fe2d183f4970363f9b459fa5043186b784990816022d05438e80f6e328a1ee0c5abd32e91633a9aa01e73f1e6fb2c2d60a1090d987085926490df168af07433c03184c5e7691ad8d0b281129d6efe0975b4a7ebc53b0242d632ab438f8dc566442a9d756b06f0c155b534c4ddd95100a69140d5d1e16a3bbe48cacb28b4e3db6a8a0983d2eed3c4af54661fc42d2ebcfd60c95d6831e4e520817bec9da8e44f812a40ab14dd100156af20c2165cc5d3813417c6b8005026c7a9ad352b331d0cd4b5fdde54e9e9d0ffbca1ad5125c81b28d522e05c217dc54202e203b8f12e333ea6e8c41acb8af325459cf8fb62d660513c5abde18931caa7680cdcc80e8d94ef80e5d609cff337ba86ab05139982dacdcb5c885ba3694ef699727e7d3c944c59ecd5a00c36961e14aabd4eb0d25c8e1fee8c0a7c637ef2bc821c5d3b21dfba23202384fd73df76334ec9176d5771497d5d0f0d347119ec3d99da90192f66f5d82c8c4c0c7616b20feb9ab433bde30723efef6dd3411b3712bd692b74ad13b863bdc22be5012deb0361de66f0cafae4a6a9b9002949af0827b5cd3b1f8bcbc6fbe65fa30fc773275825cb464469749c05285c4cbd9ebb6a4e6d7347996c702fd0285ba41ed148fca15100e257ef6e814e5b6b0d3c83cae8287413bd6e3ed68f97ecd98a11f171b9c30ec6368de0eb2d434a413f9291fe59f7687cfb89fb8e21f35a4080dc5e3a7d250532957124ebd4a88bd12410cd9e8ad937cd346c13dca5f459fe0b4ab5fe3739f2b5a608c34015481a6cccf1dddbd7e4c76dbff303bc8792bcaceb18952f52e8ab097ecb3357cef92cfaeadeee440c01f155436c0751d12ce4f43e9407f35ce142b4884d049cc99cb28d76ce3e30260b4404b2c7694af65c8c5a4c7d8130c2adec721df3dcc43c2fb199e9f9a6828ffff91f8591e77a1b92fd421f9f3b92bc53dd08df2023ba02653ea7dcf6776e8b183e6de5511105b2bf1db59d6f2a497f8bc361ef65e8bded9c8b26e7127939458de8668eb4d70471fe33411faa5d0b80d2c450e96b7468c82667a356ad134ca51524ffe47ba9db26ae15d50aaab4f33cd3aa656c843a0df1f889e469af9c884eeac1b17762b37b133c802c32bb024ca112a1847909a50aec35bcba480ad75ad8f03a627fc64f31ccfe6ad91b6f32b4f33978653de5ac020559aa21187cd6693b91ee610d58d10bbf687fa9265d889600bedb8a9afd38e1b4e3d735066a36d20a70ec036034ba55734b44da040fe8a282e103b0971eac4f7554998bda1fde63355cedf6adb445a5e657282151341fceb474799b0087772a66154cdfb2d1b3e10bf8d2bb3eed80c60f0ec02d8a64fb0029a3c2809860b8621f1d9100fcf17e915b8f961bba7d95e8e494d551879a92abe19d7293981513b8e475845bdfdc7e42a336982a32714307c4ba730f3454a65331667da69ac7e1199e3ce758b1bcde9b336c8986a1964cdbb9d9cbb1dac83cb79118394e400eb95cb67fc0adc86fc3edb9976926512d042ce51d9140ead7bc9262d9348b6d81e1cdbb7184c224165e03b33bc0e264fb4261678fe9acc9d0bca3d8b2c42e480d0a6418c2e358e78cf55e0b4c814a541460b3c1c3b17dbc5904147323cdf4d6448fb4365a654e9f27b5d709829e72982c89312f82e6f559da1ab6eb519833ecebba1561ba324c950c3441955fb2e7cb768e31ae7ae8595d9fc7c2828bada259de4e4a7b7d83ec019f80d48569dbfe12d0fa3fa2e64d129c791f5f3180ea0380dd36e637daf5e7e38cd16ea59f414750870c5b32d1a8a462248af3140f24965d266e60eafa52766d2dc48be46f4e74370447f47819e7d32567a63aa860625bc90cf1e9df5309f3fe93ffb5c135c7cd2a403fc8235473cb648be20fb6b669f0e94ff2bb37c6a00874cacf1281c6f82c917df44c1ba1e7b4d22be6a738a71713c5a916d2d186e863722f63247f48998bb5f5992a1fc1b31042a449f6e6d2177cfa4eaf9e438f78e844868a344f07d14018e814a1e2a5b966cfce8b026745e939ae0f99f46c29547255b1d74fa891f14a783a822b093d05f6c7eda071dd0b34f167ace782229e969425aa39cd7b228681fa22382905490e31e277058004b565228f728c5f87a8516e21a10495ec3a95a8b0aeb7f1eff39b94851a20ccd5cb3472da8edb082ae0f67e88fe4d3765beca068605a4892dd091e08a9147dca28fce74dde3d3e7f32741fc3a1ed839014886cc64ca8db8ce125fffff6434ad2a187ffc53997e72646a603a898b829a8d5851b0599b6ed4708ba7cd9cb4b43fcb24ad82d034a97c52b0cc1c70ee47df2b21742afcbb5ee18c5afce3dfa11e7e290f513de4ff3aa9265123391a6c672cb872f73bdb5babef13b1f85dd1810bf4b3ef01fd3a13a2672fca75c439e6e4be1b92f2c9b32e8ee444ed35baf65eae7f83b632be7ca167d4eed318e3460f4c84c05e780cc1072febf1d573bc5ebb11d297b53d216d4985a9a9e756c6f9529b9963cbab8963a8097d206f5d10dc82837aa7e7f7908841d51184970bd2f1cda7a2ed9a3a2c24cd144fe6a472357cba9b84577e98d94b4b5e93fdef78b54cba7d80f9bbfb160337dd5f176dfaf9c009b0cbaa3901b7d691dd54ffdc85a8fb8459603872f7820aa4c6414bb865a34e7a3a443bc1aebc1af26e7203ca722cc08f98beb24cb757d47bcaa7a727b394d0d4c66dec5eb6d81748da907cd10a5ffe6dcaf0c88c3de16496cc0654b6d9b3972466bdb95f85e60a159cfa8242399ac05e37a7b7caf55b7bdf7cc56d5f31de317925904b1b8b1518ec15a2a28146bd0f4a6a7f620e49110de874578eb8d36defbf00bd8296b0707728f071ad3261e2a63372afa654bc197d87a8dd22d179998e2cfd23d94e42fa2e5434b3a10ab1accd027e0cdeadbdb302b01555bc74baf8975fac0fc5ee0a8d1679429ccb83b129b9372bf3a6d587055bc6eb35e39921a238b0e27b2a829fe6f5a2b892052da7dd6330610f1937880ecb11f5c28181e5fe45063bed8035170af1d37f7de62cef1bb8273e9bd762627b16ff03d119f3792ff6accce8c4781f4a8db76e0163480af615631f4e6d03d305ae574db15bb6e295bb8ac3e30dc97f3d1023c9c3f03d0a2b1f59d910a166b79c33c32bbb42ffbf8536a3f00b8b229b9b8078094e584927451ebece93930f493b0f8681b25b7f6b0d4b9f55fe1ca45838a782c582f17f922fbdfbbadae4d914eb6bf8f08e9b4f5be352ffb7259852ae3601124dbfd5e17374eea99cfa4fd5af32b0d2ce60eba0aa2e0a66b9ebb4c485664d0c48f28498a0be15405d953898ce837119bb02c56f1030fbf4453a4f66ae69b67f81cd6121965f3ef3984cf2bab838ac706d4a16b1d4256bad63f541f5e238c651ed5c667faeacbe898cea6f9ba41024d3c61cc7a0b689fa36c711d39d1441882bd3a2e9769425abc2f088fa2b555dada4824c2064c496016441e99c5ca6daee6c90e207d8906243c876fadb11fa953a673d819d0cc82470817c075f4f8e16f3419785672f2aa93cf72f9a88691ade706e6ffe104c2dd3baaaa70c84e5a987dc1e9cfbd85dc3b8e33f4c9b98d3d57e6bcd661f56445336ea7205a9bed45bf7a679c3ae45378a0d47a1c72364ea2d19391ad6cd63da29eb8188ca26571b35869e8cfef50a74008863cf0d5d03a73d02fa44de35ff529df58408ebbee6663a2f896827424b3d94af0b90dd09e627ed7ee75a777310cbcd2405682181f5ceb39f5dbd76cb0dfcccb610f6a8e176c08eeb8abffbe458e2701ea4b12ef99c4334b4a6160020c3d7715d52f9ae398298bd11e455da33cffc21b0861032cd61e26eda3ac7e3b3c3e692029df1ca8ad1aa0389199bc308baedd4de236af7992423d7ff9e12353bba37363d35b5e1f1415cc745ba72143eaba82a726f5227dea9b2fc95006cc5b54ccfa733700000b18d25b919b9198edcf8910b3577a6d22c1b6db103c4e4a838a0b573fdae3a122da595716d05c7cba762ae84e61f0227e319a9c4c1efed6765f0385a1dadbcc4961417cc402b3f68ec0f97d63363738145a7a71338b571da3e9b59021d723c0a787de077b69d0bd38ccae0ac81ac7d34e8f5097fda8a11b065eda230bba261247a02ef19e3cd9ecf96a0fb011eeedbe5fd35bbd950380a645618d58e9b97a890bcee546ed59b8a3e992c3da393ad262f52c0ad9104cb789c700364b119f42c137a042b3f57535c2d09e4f49bff5f2dacd49b5e156f57c82f2891e4d6deb7b12b479e1125556c720f09932235acf49de9f8d71b2c968a5bec39c1fbf2735abe34ca3cb2691e119a3ba8c36e3cdbc6f2f3e4e1006f24c744bc5315e3e51ea72033ae5f9634e0f39c79fc9e38863a90d77f31db4379c204f7aead3846f73cd4e90e6afe3319867ad21bf13dd7f714354261b03bac91c51bc232fe9bd63d325907fb74138b2208555b66bacc06b60aa6c4297ef41577660b658e943d43f4b5513f9e4e4572203cbd90f8ef3eed34335a2c66275f6af4272ff8c11b6d8f0023e888f8488a645d955049cb1f8a95b60eddc9f2d089cfd089c8d28b1a657c85ca334532caee69559291e2742c5447071fac46f6877ed3e5649f0770154d5bdd2bd922e2dbe0fa38fb1fde5fe2db39449162660d357fb0d5556899b32c4711da9a12dd98f51e344e31db1a1c776d8666da06d9e6556253af866350a11be396009bc1a1c3cff2d14a82e9b7ae91089555a5ebb0e1501e395b95fb2a666ed6f9fbad8e2d2a0153d4c8c83e9274d6bcceace5abfe55323b80553c73500ee8f80e7f51eb1554881b6cd279e4d557fd560968b878ee0f9a9f48f784484a2a0162d42deae93b95cd3c107276c4d8e087ad268dc0ef234c09a1911b2c039066ecbcb94000a6a062a79052bc90513833266e1f0f579ca8ba97f6e01e4d191e0494c4216b050f6755fc5c1d6a4a8c254ca1884addf9988ccfc107873505e0b59eb103b701380b5fa490e7c993497e11ef950a156133cb40ea2b9787250dfa776bf2ab35c2e79b825a24f29e3f0a7aad89afc5d23d7562b05b1875d847a89b4ecbef8adf484fdb49137c4336613b1c794604b5ecdcd212b0b6d5e89849af834f26097dc4c08326d1fdaffa6a50f4722ca4bddd3977dd65c258595564968c08dbb66af90d4d2533b9965dbb7a6bfc02a56556111a05fc46678466cf96cc96ba56e08f03dde83b0f5402edf3b5aaa3ab5b66c9ef67298a895ab7ca1bea91b34c5557cefa8d3bec545683f8a0474979ac7b5229342c6d240bf52a706fcb4ae161896d05a5da1edf5a2def1bb1a571e25c47067bec4636ae59537a16974c579ede45e4abc48d40342d1c801e662dd527d69d5b47a0e34a5132c40d387243d5f956a8703bdde7434466a023d976615f9c7bd9e08abb66af22b34f802ddad9676aa049b6ce69d7ed96cd175594c74a0801e0c2d6476c4793f6af9f6f4f785cd8c259ed8ff779965587e7f4b45dccd09b0bd5b41e7e0809d0391a17eabed99e95962fe0293a4ec854207b5ddff4ab5446454c4c67401e801a514c3d0df38936490166e31d8dd030d00d5892ce4e3cc3d80eb611c53133daf192c47d2366dcc3e3332e4a173714859ba195e69c3c8176dd30f18e358c705a5fe776a5297db28a41e57a3f2967ea51d8fe40b412191dda3e2f01a69321ea7e8e6ab8f678bfe265eaf84ae2f9ad2994476f1c58bbff7ff21309e4fb5621ee6363b6fb28b23c64e3727ffa4d564e8249df3f067a5423c447827656d7430c41cc312c8e3ff44cbf6b0ae70df2bee4c184fb7747ed8e1b2ea8f34d3a2ef61eda152e0f139cb18b9fdc95154efe636538d5c648f493b8e9dc72145a21dda9cba3338e39664e60adfe946e358e71569f6ad541b6c6b3ece9b22d64b7afcbb4a6493beeb920c0f781ce0cd2022af5a0d2daf00ea76a9c275ebd03dc31180e3fcaf5707801dc58c1d641259d170936b3bcefbc0af77a1fd57ca148dcf0bca3f539ea6205d98d02510e170f6e9c12d696c8d17ffd676a22f27e307a7f32b81bce440652b6b825f49eac764780c90f1d4bca94443107e82ecc71f2cbde2cc26eb730a28551bba34e833003d8acd80008df80b2c566ffc7eafda44690a7741145771c01930e39bf6fa0330172885e2f7553d842937ab37261ed2d15519a20cde0d49944ce2a9b4c097f2de698ce96a7e108f45cf643adceb2261b677f82980f7f0f318353bb84038ff4ba63aea027079c5ac0b1be1add4bc5b40a38c76813296334da847c8634b123491d65cad638d71c45d071da6868286bc865b1ec270b39fd08de52958ca0290a3c67adb92d4772617ac402656646f8b8a28afa3a77387b63dcb1ac3269712a989f488189909fbbab588981f1f3245917b74223e2cc0bdb650704b340f2f0ab830cce0b7f8d0a6b90dca6ba487c5a7715932a4e753cdf0fff9cfc65869de0e0b7e82afd9df12b0808da6a2dfaf6c19acd9ad5ca9a2d481ed196e338c4f487361b76a485712c1fbaacecbaccc75f81146a187cc3bab9abf04dfe198f32f41fe85326f9e38594550eee3f2599409995819799e0f9f83316578fb752171cbb623eb6bc72778a5a036d49ad738a964a1bf182a07c80bb5d72c2383d6a37c15cbf619b7c8aefb2a55125a8b0d848969ccd20f4d03cb932ab0e3bcb61a6044494a9686cf07ee1f9a7f47c018324267d31baf81feb23e1e2c46f702a83db9490ac4ae9fba9c29ddc66519520d775c1f0f028041339ca4a7f038e825e6fe3c19b0a2f22fa0573dca4bc1a4f4c7cdc19f709b139f8ada667689fefb7d5439ee76391d73587ffee21d1074fd41d4033033a8a0b5a7f3ac94b917384687f939eabc469306e79b2bcc130f4fbeb0b9949a952edc97e4c5ea05848d79679233e72111a5591451cd159028f30f07e9489251c954e7003a7ce0493d85827eeb7ee51a3ad7b0c95c5b12049194257ee23729376c3ae172eaf6082350cbb43010a3085096528059eacb2e4a1b4ec86669e2e6244ef0bad1eca8af46fe7ae5f0e93c5cd9bfcedb90051dda08a6aa798fffe65a19011fdce8d1c15c03a8c2ac7df9404eea2f3676e6f04f2757b99964721d4a79e048da28563e21d9e4599c81a56ff8879738bed687dbd4de809e9916bc46b7f12b198c49afa0333c51d80f3b6f69e9d96fee49786dbc6b1db1165f2c28b0033bbca3f02655ad51023c5d664bfbe2dbf6758ba4061090eabe0b6353553ebbcf885ae329131c6534f8d77ae40bcef52840a9c44163db2e9d8c834be1045cde808c48584d332203b4bce82738f64ecbb2e672ebf17cdd578d8896070e32bb1fbc2ec1696d5fd11e36d6950e006fd58d2ca39e32b5f44566c4aee96137a96b39c7d13087bfb3c7d700fc9ea62fca25ed1b7865d2240a7450067b493214aec52286d48960d0092ff5b5b25016c1d1bd7e0b2547d9ed8710211661d351e31fe235c69df39828aa3480b70b8d478a5fd4fa905ab007a1df4337fa63ed18d1a22b23d650f58fb8f6b6f1cc0e7e1cd0ca09317524bac09533d24cf822da5bc01408c995646118d1f04c3488b1b6fb7a81f72bd516aa3f9c3167b71743aebd042fa3677239ed8aca281ef19aab51f0543b2187eb3ed5917055b36c0739ad5196c287e61d977d50f7722b31fe613ab2d41c09eb68556d9685c778298aa46af84d46fca3a21e8f4adb9f141dce62be5077a67213d67d9bf61e78c43dfb5cf707905d2b99c22890bb2ef30ab42705fa7b6e6ad70f66fed0f7dbf4155b68c8747454539ad6e69c7f65ea8d0115ecf1b9b292985d530e6ef09edb4f1d875afb064dafff93823fd26537b1927d4031edb4d5c39e35fb6842f265eeebb4cc20ba168a7062ac0f824a5b1065e6220d17e0a4764a54a11c3c34ec6226edcb3023dba2a1a90995bd596001d136418619ea5fdcd3b722ffaf56f3348c206dadf44125a1bd5f98ad769ef7753860d9f835eeb2926cfbc4e04783ba195b59e46e47ad257f8cc2b686d1ff88b2b7e79547f69f76118920214950d10ca32a3cc34c002d9cf87c775a8483cbbe7e4877c22c3ea7c3a6d0afa18583c120467d39cf5104fbf93ceea9d3b1af3282a3d765f173eb5322cf6328aaa1310bfd3c2dbdaffe8aaf2aaf1ec469496a9a7a19e376ed75f79ff3d34663628bc7f460d4b123e4419226cd7c7d86be008e047c3026aea451c15a1ba0f78b7c54d08f92d3ee9e59c998198abe40b91bf8556b62cdb9b77dba0373213d43c96e9bf730d26efef31b04b4c30e67c189c12ed9d1156d3737ec3ca9f6468f4e47f020efa6323c307a73d0f003b3b248717874aee60a551608acad3193f1427274087047f71c9a3f84901aee152f9885d8db9bf3a3a5fef6149fef329b6adddce74dad28830192961148f742ba91afdf7766f71008962a7524a6ea535e4e244e807782fae6f00b293f17e6ebccf95cce347432b73dc2a6c6d15585083a1965c164b1ff0f3fd6f2d07ef653c5be59d3f9a93e105a47a6ea5c8edb70478d1160dc22b8ad0304f05f28319fbfb0e4bc626f12b2b36aed7788bcdebb5e55cbab2b8e1038c3ee2fb8927150cc6803f90ef3a8e89be8b5c28c6ef5f6adb2bdca251bd81bc1e4baba87309c7188445ced734f82a21ccb14295d4a6375c89149b592ddc8da94f59fa939d39c03f57130849b4cf86b28eb74ebb87a95b52cccda02af1b0d2cb77e76f9b471fd0baec4a7812a486d7e5f77395dea0f4ca034da7f465e60fde777ee6aa394306cc709df14dac2d9b82d3d0a572b0353501ff29e4a06d530863030cc399c08853b9862b6b79603420e9e4560d36acd7a39168c1e99f1a5a088e7de4ae11f62f4bbf443dc1aaa654a0c7e285c4752b3cde58d20425fe129d712de6c800cccb1c292fdb8fab7627038036e8ae05cc26bbdf81e6d3b29d7ff15977fdfaa57c3aba4aa22807a3bc7d94a3dbaae53b9fa55c0d1a041058d6dca637168c5641b3ceb196c515c1238156938ec0303e57079fe26205fdab14f108da175c7961fc4942204b150248f1626795ef0a08b1c959660e91065f726d7c867fe37e359fa42e72d34f90b88d83343ad54e0bbbcd44f840a259e5d4a9308241cb54431ff0789818fae8bb59d788bc7ee8a3b89121c1b5683fa3d5a857ca4a1011b134965176a9b116574c14fd2a0ee1ac67e76d0c4012289e4c8d7e2e1ccb103052f4aa68738650abca0aa661c1b70df7d9d16db3d67266beaf5429e5fb2dd10ab5bf6fa84cba2d904e9ed06c497542753486d016092a1354d2ac611043380c1adceb3aa54490215fc64f05416411a8a3901969069de3108ee11e2ba9e83f88dbf0df0ad85bc6f0e5c04c19e7bf5f9686082ccef40298915b7d14c8a08da5083d17d683fe6ce7480a58c97042744fe0be3986d181a167180c3782c5e4e87b0ae4f7f30cc058aefca08fc1487bade7f69da053bdfd883457eed2bab5fddf8f535fba0ada0d4360c14ec29412546173b907f932977e87c4f466bb70ada686723c3ad8abffe469f862c58c9a9424e5f1f688fa4470e46778431db8b78849b13fc6444ccc3ddcb9b9027ccea1a5ac795817ca980943bd6065d125d6ff0172570d72fc2952a7c63b74b8101dc19309d5cb54c272807d6c257fd45985ddaa6c1df409669bc3f22088847b77b1d8ac0b2cdddddf228612294064e86bfc3e50103b80f7609956fa65da6e6b0c63b44c343f29cffc6fa1a40929becec6a5b1d21d680f4248abaaac3828be95d7b4605c9e0703f4b20c413af936ef88462975ef990036210a395a6b21462e429527c7b2666d51bccafb29ff89c4ce60f2f04702d5bc11d024961d1c7782a731e6bec7460e87b02a51ad19e0bae738468d5449a288228d89301504bdc682ca3f81df0cf78a3a00781baf9f57208f1e3e4bf8242a7c7f696a84244d3a7182976d80b297ae6562eb2afb078680ffec9d2f12d87bca6ca1949d1f9af080578fce14b2f848bf16fabcfaa23f9a9a304f6d0c4395fad7b880ea491e2849b6acfff068a4af8abf22e7ecf0cd752984ba9f00ce7bd8941dd8f749d37b29e318b5fd8b119503ca868eae488e9248b94ede695d0391d0c5c52210c18b6d4a14842e0b89e7c292387dbe2f852719792ecdfa8bf5ac6b0b33cec5a10107c8c3d58c64e6ccd8f8f580c166bc5770d2d90948b2153e82fdea4fff96b735d9eb718c12a45bd2d5bb45ce48d7423c56a1602da77450b5f659d2ab43cc122a49cc11e041c453f1c57129ae4d6a2b75846674eefeced85115a5b00ba22165cc2bb1330a91a20ac036f7c01586fa605c92482745158a0fba063c369f337fb0431554c25eb2f40b5b9daa707322dca093bbacda0b09c4f6ab1deff1f4a7ac947e182cdbecbcf2effa68c248fb1ce5407b689351535143ac98bef2d3a03c3737f7e3d14bf41006b07c3ad7bc1bb7e9dc9f02046dbd103e9d848a42dcefda6cc9e45cc9ee6b673ac8f1287f43773582143249a8c879b8c77e0010540903fa83b037e76df6e1d95ac2cb076659139ad80355b56407a8c9ecd8b6e2b14bdce9d5f1460c7d2725c5de79e728f2a1d6410b8caa111c043ac9fcac4e0205de18ff7c205c3ff4235b5a829492e05f2228c23e2f46b19ef67e2427624b985fd35ff9cb35a77a135c12639874dab433216064f5293066f75f4359c8460e6e11fce544748b79b74d07c19e4e650e8fdb1a18f2ad381982bf700706e5471c655ab964f5f3adcb1b99e7775f47904ebc6cade96eb09de96895be1135b523c2565184cfd0735fc01a72758a463c59ff897104fd28aa1f55c3a0c4b3966a34a0c30d57011a01894f706d27250a0c5e503ff33d75e302d67ab6085b8081056cba4a0477a16b9c5cae272c0f5f1501fc04a94e070af3163f3005687b3a1c51877300b704faa1e3c7bfe622c641b4ccd3fe811aab7122220709ea060eae2e57796e5d4014c5aaaeb1277919b4656c1b674c592e6f92bb9a25ba061f60ce7cf55f12b91586668abe9acd6fd85436af59ed033262b570cf69b40003b351ee09fed123a3d892b1578d990063ebeb2b5a9b4295ad00ebcbb48f66b512473e928be7ec69d9604b577b06b1ced3f3321e7df04bbca3df79c11b73e1e51363e9f2034b7c32f9404d9232cd9afc7f68faf5bc1adae2bb7a672fef070835dafb7981c95d195bfc23426f3796cb1246bb820009ac49a2ca8ffade0135a348c8f63065a87bc0281e754090be3eb2496a799e680f7dfc5837ca6aafd7a85a7b3aa4c28cccd4bf2c0d1eb4d72731a553031df9849ea9da6c2a5be7a918e72a59dff543cc36357e39ffaafacd3b1c9f61532616e861c843dd03b7d2fa43c26d0c4ba2fece69f5c4ee1e1ac51680524d732cfab1e0dd587c18bf790b3a5d5802529d05c3337a40c5ff9aab375671a9d5ba4ae5a4c508a196e5b9ec34b35d3290e300708cfd81e2d1bb2f23cc30fe877f0d417a46136f81f8c3d805ffb52b5274377baaf1929a32a970c0a1c6e23a604182a3d8621f39e9dadaa0cee1cde126ef661ca1c906ae8d2fde55496d26c52ad24ad7b737fa6a7f47daf9c80346f7987210598e9d2c5128485514a59d2306b2702692132d21c44df6bbe0222467625559ef6b8ddef34c9195913df461a2870efa3b3d22ec52d5a16e5ead75a86104cb0bdbc8230552bae44f61a2e98e1b795b1f8ffaa20ace5e3a55669cf2e97333392f1850a049356ab7ff9090fa2fa09eaaef6d3d70a3a972f39c7c9a43ade86cb39b0d516fe8b5fd35980ecb1c2299f9665b54149ddae760bd96e2a30fe16d5a3e450bacf0a8e1342e34480d77df05150a4dd36c3c786a6280e73c20feb1bbf5faca5a94fb4c31fc29c5ecdec1969a04057d86f53ee54490b10cb0d922e1d981324a6bfdbaa384633f28317f8f5150a9d2b974d6437c949d364c1bda0a3124899bf294a6e84929c951109c3dcac2d9fe8fcf6c932f83c5366e1ae8a8e5139ee119e6215b952398b708e0550191b04b8d79275133434fb5f50deea5147e2e4a15112c8f7240df729c7f40b316ae15e8fb8c87cca6e810ccfcbc5b7c4276db884cc4c1b1a9f644a353b6051cb32122b057e0fc916752e6630baf37a6238b38616ae80b3faf03a7e09958c810b23d2aac894adb6235c0da47cc07ab32526b74998e42c9e5173ce240a422c9aed042f293a422b4f9ac6d00acca32f977a1dd07485fb19934b8dd943d2031fcb8150595a19acf6aed6a3e02bbbe97b9e5880e508e2f198af196e6ec074314e78cd65f8264f319e8ceedfa5a32fd231742f974d186106abcf654231cf58a2ab9f3c97fa3593057b5b947a7cf384cc62687ed06804723e7d6ba28ff6c51d3dd70abc75b8563c36835af434b8ac5d538b1a57cf949425719c0376ffe88a17c05da2236c5bc5cee620311a5313edd8f87ca807084049543dc6007e5f434d104df5cddef63e2ce95cf4e26aa6462109436df1c686ea1ad536f532606932791398a3e67c9ec30b8473d11a0c5ea2c46b7592d1acff6b33c022e23c94e7a2e7ceeb57830e079d71c9366c26d9dbee1b76fab5d3fc3086fec9916ddef9ad74a875f5043a3d620262c0a92a6bb503ac3e2a99e15feb266479b399b8bb7460217bb33b9957b284b768f8d39c58f2854d749aa3117c51313ab036a6fe1ea8526e6bee25218e27b4c88c374e52aa8c0f7b87d6ed1d7e3a86a58b75182a57126470a26f7bc1649638f7e1c715fe8199534372d494f0263b000b343e4c6af7d19936542d43a00f6a025bdf6326d931e1b03645c8f0dc3c14ef25c47aad1c10ac0f676c08a86dec45750e0c59532c8268837f02b4701ce5adcf835e89db4c2dd10e073f5c79f46bb8766e287d3d54f91b68aead990ca953a65cdc4a1278f3b9c98322c516e090d4c0edd3a8aa0117531b6d29edbb5c9e46fd05b07495d8abfa32706c30b286f7102d618d9e143933db807a3e10ee9dfeb4c5bbe9f962538ce57fe1f574b74c0f8294a2923e8760b95310a69fd964822bfd7b0da5a72743d429d0c31cddc4f41238a4413e911646fa3735d9cedd3018c3d14ba56b509a51f1d07cdceb798dd17948e35cfb27c814e756df3318ed801b65192a05e2f5687b5f6f48a726aec4156a8311a6f4f6f7de4ea5f277b08f310e8070fd92ff5a0f6bf4fb40431d29232196e751e3fdc96dafb9a9b4d227420a2a4a15d05030683f7f2c21e8d781e9b63ee138e364e37ca0258579504e4b335b308e4b7497e17d72a50d84b73466f468c8c97c6b55a5befbe25049b15d1d219bb9b2f68ee5dff125296a21d4cf1da990069bf5c2ea6cbd4e37d630b82bc666747f262bec029d3933e8967185ecfc28f231c88dcc35b5f08863ca2556847739d11a9fd3fe90ceda2e7d4b0f3ec3aebc46c3cd14cca1f0541fe2db468313cac4c3d79de1492700241bc26ae96f57e9b1367db8cd486b8bf0ff19a4f9741a70c8e605bdd6ed1b86d4b21c783d25f50932ab2fed7e034feec23a1c37a1b8d1306af08d056e7d1afdd83ff0956c0baaf49817c4b436a3fb0c64d1378a2ebda2eaf60ff029f0a4961b53cc051acebaa6affab5a2b2a9a4dd543cd281194b0f451ad1795da9f9054e1c57c8a9eeb5213f88b88a8829d32851a371e980420e58d644bcfa0d82269e5144acab4419c90b35f201284a0ed1db7476098bbb9ea6b00040b349ad9b1e03afa129d847b5b8fddfbd9f81b564b35f113ab058798264d51ec4893ab24a9d76393ac0821f96b359227d4593b10f7b9879a0383ec9409162dd0cd89a1063f4f5142a64a50b4fd81f2ce88ef76e4bf36c8f29f9c40ec1af9bea943ad1e91962613e861f29986b019f4a86c351481b29c91652aaa0ccb2c5caca3878585c0e616c265b9ae70bae2077d6405ab6403130249202ee066882660a0a32f6db9b1ba6d325f967a13f0eeea250475a459b0cd696fba201c51aa69ee9cc2563ab5be3816df4df766c8e84b6104d58ec11fa2d0f21be9d71b6cbd1bafb9a11ad893bb78a94aa812a8f5228a3cbc9054c5c521610eb87171f660bb89694d21a5ec63f927ef65dcf13ba5d9e0334ae24c9b08e3d067f696fb3c0a7a379135f0121ca7c216112463e66554876e6c6812523ecca8d263c65934d63ab988a3873befc612ff0fa51d9c6a7742f0e2e0e0936af8885bf085658fcf0bee32d4414b418088f8764d23a924b96b35f78bf6d7bb95fcc1c8b878ffa0c3508c460c355c5d546f8deed461286b5be679b67ad662c8a6cbfc3082bb5bae82b0de319f7e45e56a172e72573e50a1d49c0dacea74a07510cd3c85bb8aa9c3165e5eb1c77801bfc4d4cf23d123804cf07199e1b13c7f7c269fb7a545eb01a4b1052343a2eddb197b123064cf0ffdf9f457329e43638e415d47a8157f6eba620048cd06538aff18010098bdabb3d03d15eb3a4b336fb5296a606cb23a05ee78df634a3baa5444c3b04e542762c9de6fd567a1cb97bb860e43e9012ed7f4ad2917ffc1c9aeac3fd769e04ab6384be0987b616493901a415922d8e7cdacb88f938657dd9b0a3dbd892f2f7476a3e57276b1704f8f4a049ea1f17ea4d468eb2000961dea78600f234a8bdb87867658b65ecc17bdb502a9e34dd6ee6291b4b4ef458c472c9f5d48b8f127b97cfba6538a55b407586c71fea3688b399ba074654ce940207b3739575ebe142164d5d72a45315bdf49724fce4e5e3836da23787a60f2c6d0e9251bf958367da1cb5f5c8367604141ed74c5f32f9781a919e1b196dff29605668cebf7ea802dcaa817c3e6e3cfe2052a91aca22b7410aed8ae1b30e6bd91127d9664d816dc074238740fcc004e013868818eab8d2e70257413bff1a61380628fd80929092544a17d7e455d24b77c54909efe75e4fc2dbafc5da71f170bca92d7be6d48371874f48804705575efa81616d94ccb661879ddc5f0a8af225f7d8a30e93775942e2b4720f9ed8728dbc81601fb47c47a2be30d8784553e633bca32a4faadfa2a774856899025921a3eba0cf04357a1f44f306771e1cc261934551db0e328e0922704db4be1e84bcfc23a9462df7f85fb5a9b9d6b5cba8da8f1b8836ff1adc24213b8cf35a35148ee790144ea82efea94cbc231bf0e3effad2e454b0cc23393cef57fc3212b2cffeda3ae53d4dc80a28d3f0480ba9ed5cc3979d426ffd3e84ef0b958b5713797f4f4fb100b994fe12746bf023eef0611f4f934e518a90dcd04eef83be29555bee2305d2b1b1a35d1444348249540b865d05f49986e5b70399897f669db3045c00eee1f74893612d0a8bfb59bb40766c43c161ce1a53c48e11b6e5c89695cca3205dffac080dd6c74d1b9f348a523bd8f37192ad41f3a6467a235e5cbf72c782efaf5090caf41679af00ca6824fb3f44cee1f780e9b29232354e2976f132d8426b9fa000db85872a7a289be3788c0aa06e3f46c418299052bb5fec9506da76859d7502589d5612f2e5c03dfb2096d088c7601428f767f2de0b0a28156d1f76e3410fade2fe73d510f9eb6f5b72467af3f49185db64930a7de3eb4475c98e63c5929dae3d6be8d9bd0ffa505859865ff5d7da5a44866ba575188b0f9e33eed85631e4a919db1230e1c580a1cdc88dd6cfd2aafb596902857f35b6d802247a884f33c8551fba29cbb497ebbd40935853e30853631543af59699645155ecd08d94983f25a66a1b582712230b8a34e130698e9db531dd635dfd0803e6b47820fadef229ae76971c3ec2f613e10f100efe32a9d70be1ae5b863b5d85eef7237efd3596033abb255e1f728511d7fe7823f15659bdafed447a1249394a7aa522900b20d614b81fb079a080abf24d953b4b5ef17947d48bd8218b0cea0a789f61471e1e79d5be547e2160e8764b10f37a51d30050a0a2224fe7c8eafb26a78e6dd9e343ff698d01b93b3581463682263637326e7fc1acadccb9fcf095cfbc04238e0e72147a9936d3650e721f564123faf8414432d20f8e4be1c2c850226345c556f6c7a274f10e4b5d09f33aa69b6468d5edfb653821ede4eec20bef98c0c5f98fd7fee6f567ae24b730f0708dcefa4073f470eba1d4d1d06e6d24fb80a4ff668b631114cb1fadafd579b8e264ff9278344d7d372f30939a41809c7de5b92010ab65089c26620c8ea8adac8fc50e2e5b57c5199e521a23db1100b658fa2e379c1ba42e42d5f804fb62a30c76e55c9ef3359167d7530f94afd4394a36fa8bfbe3ee38f7695fa91de8a6066e55367d1181fb454c88d6915936cdae7bf926e44485dcbf1e4e7df4ec679de326b5ebc552090bef583a4c4407f19b8f9ddf77e25d903bb4f86837906260c1629d8184571b48962d6c75a74eca4b1925734fdafaa98a4fd60ca1c272ae7f63a9242ce7b01dcc2d78d13fa9180c8bda918a61a41b2b4b8cf0c8c37b8a10883301f8c5fa9cd0dfedb9a9e109b3f6959a7726e5688133f081348f2e499acbc97cf2a275138914bc1b8e49564e65510ed2d716f0518bdd8346ad7e7d69f6e99d198a4fbeae5ee9d893eb2109f86e3aab25a4a5802f145423d0513ec3d6198211cdca9c074284a691b6f2ae020abf159e0ffb7b806291b6a86c8354fabab78ed82d192ad78ef279bd0d6772c683789dcc026620a2e905ac5a7393e1c790183af48e5d1293588556dca890d49fc3beea2a4919c28717f250b00727ae2ecdf99593cc0eed45c77a54ae18bcd1627a8adc5c166544ef92bb685ebecad23d3639e1d024dfcb1a1d959427d9b47e7659994e724dc069210831f3cc0d1f483cec26c2899e048410802b2d2818b90674a73819d71e35673353d3358c563228a78b6ef5dad854f142067623ced48905e273dde386824928bceb8222b6597d0c67f2a786167436ee8eec2197fd33ecb4d47388fcdee727898647b15e6ecab0f1d23cbae5065a4c84f4a5800850320c32dd2a4ccea0ef5a21954655c56377497c5fe9d9f562f742b0484bdbff87dfc452018cb4e24a13095c47275812e56d763a6f116b1a812d1f6f21a892b2efa3c1ab31e24711f9605d09c97ce1f2ddc6f18b37e3e702f573e5822f459d143e89b38482a90eb84c770f11511063afd94e92025341ab466ebcaccce379dec6466c5afcfebb9fa796fdaf4dcdd4b0be1c2948411f1e1fff9c69e922226683cc4d4767c778a25856ff6bc372fe2619856d32f014ffe0ced25540eaab2672bb5c11658ceed2622370cc6f8a2b95430ff6fe992ed690814cb548149352c12a23c4b0402ea0f0e18c22aa69f42b2ec9a9e0c8030702e2860ded91f8daa80a48081436ecc8074c3e57e0f252dc10c599ffacc52e5113457e7c03215ff520389ef9924eaeb3caead76baa35d777ede679b5cd215ed44517d58c1e9ce6b29d4d25ccbfeafa5148630e169bea311b1b8fb3fe185bc8875f72146f0edd6410b0a8efa179ea2cf26d41dae597fc262802434601f9b6b007a8d8621ba3ac7ef0f99c5f89edef716c628472321f1dc1baba3bcea67f2022b3414c4dec67d0ee00ecd88c079cdf1c382d82cc5502ae6641df63706143c5e8630b130c849f45cda5b48da33926085c2777e8e9767048b60045511b143be12e01160859442350263c47eb65ad86fa34179601e1e5e921629b4ba626ce8fbdf48b24c52407fd0bde22a1da0a0ca18b7de87583d5b3bfcb29d5f31c97da2259ad24def4458ee7d1839236453d8fc3aa63d5d80816131151998b1e2cd6fd555361a88588f0a663fca05572507a59649d10ecfd337ae1ea243e476280daad5c771944fa3cdf8ddd22274b0050dc2b56f3a7c60bd2728c8a7fedded818af11163d2cb7ef0ae239f4d8dfc33f090d3483b546aeac4c2aef7c6def531ca750eb6b307535e59dc1d818ff7e8416cd61ab999dd68510e315c8af7755ef2e9d8c72a3a894743c052bc2c16c0d86f0448fa62309d7804a0a7b233fa6b650571b0ec8e4a438a020f3461ecbcbb4ffc05fae6eafc22e317b70898fc4ba0658f0631d6e5d3c27151ee6b3fbed102ad13326c66f5afa38f6738cee60d91c85e749be23667c1daf0e5db8ba26651e1c247e89588fda6fbfc58f88ede168c664dca16587ca52cabef305f508f9aec7179e2a1f55dec38a5ca49085793f360aba8a15f5f71be1bba089ac95805291095b13b99ced5d031234a9a5d90046c3c54ca0f387a35e6f2d2756329921d265c9e800ae96df85b470d30471b69efb179d05fc3890fc014819a804c6badc0379963400ccb17aa49c2f464575a90539d5fa4e901b21336da3168a62be02313ea85aa25d674a01aea3c369eda6a148b87802d4ecd190e6a2dc5d2e87dab916ec1705fe9072ad4004e926df43de6e9afd792831169dad0739c38dfbd71858edb8d148d30552b5062b5aeff70bf4009c17cdf4c22b357adcabcf0210d7252b4f43c82eb6fe086632f87f8ef31e70f139b830c0dde7fc1c9cae5e94f0eeb5080b7a3438360d53015c06685a030c69a7a627372ba1600b195f6804c262495574fcd6eea85787c79f4e4dc253408079453378913b75227883a9f0264332b078d5f7569e43237728de829c4bafb9b68a6c4537b0e1def507d254e0f5e6198870822a22ae8113964bb909c4415ce1169eda8ae286dd9ad17800803f4f22937e5452679ace9cb21ef1c2d0f533fa110b2114cd8269a6dea762a2a708dd12c6a154d6d4cbe0c3bf44d9d4a7c535905cbd2196f9d44adb82ddc7cc9418b5fec8aea55edcd24f852abf8ee51b515b09b558fef3f36405679c6ff7836dd49bea3a98b27389e7896c5eb6b77bc464993ea4255c9e0f2a76b9ebb762b9b1f942428def35407e7ed6844507a5bb025a865e71a43aea816ce4587d757c96e2430ae6da141d3d6b54fce39ae2caac0670bb250b82e5dab8e6a2c535f19c127e47e9540db3fc6eb84e7157a0623165281ac2bad1178096707bd498b3f45a7dd4814eef63f26ec5b1659600991537f3a2a5aa7662523f220beb28ac7cd6a7247f3f66d7211c397bcc88c24ab8d0fbf075e14ca98b23c2a1f88908207e2ed709bef68fe7da14704936ca4aa514f5ed1ddf0c3bcefb63f36d991583eae94eda48bbc426f4cf3a64b7cd0665e6a77b4caefcb21fae06e48628f29d0b976871986cef37ac8cbe073012d66ac4a7969bc30212026ecee9319e6428d4515e5413475090aca4834ebf26cdae096db8bea1a4d0a2dbba0b5ee458ac35695fd85054e70bc1ced1f9a115bd5e933c17ade8b725a4d709422f5aa3618e0b03c4a02e264c7c93a16070c8f479e755424f3966a5fb1297a792041d7e89d9190a6463ff7ff4a4c8173a1cb9c46ee3e895140fb579201176bc360c2747871994452fa10feb587ef1ac15af9a69f1fde822c8eb19c98ebdb5046bb5e182799053c1ce4c5093120e727dcda8bd5f37ea29a9b0b9e91600fd0467a2a41c23918a600460c934d6d5eb4fdbf3a76a554ef74b1a1a855ce68c001a9ab8110ad94447c637f860ea627fc1cd72ec8d38075048ff7a78433b63a1bce72cc3f04e92e3aa11d50802607526515268bfb3f08ca365dd98e29de1ed669d6a438dc095647c44aaf7e6b97dcfc3630fbdb25490cc34fc5ab238e34c4a0c6704629de601b1bff98187ef7104070d601e018eb0d41617ac88d6983cfd03567be230e922150432d2fc513ba9f47f3d8162f54f809ecd95d60dfdf05b7484895a565656e5b89d50bf5c6781217152f66576e213ed44aaa776f2a50fcf4b75f6ebab7f1df7e61b4fe0d732e82b243ac67868bbcfe4bd96b32a74f9bc05d5f24a95859112ee4d8d020e33f23d8eda73d7950d14d5d8c4d05334c6528d433a59a22f390cfefe5abfb0d42030c648222422c8f16a5d3afe3d398d3dffedae137d3e899e04b039fe25955b5bf8d4ab6a6b3e50d8ec92a06394f31a47b5ba9927bf6c7c1bedbb45e5419d38b8b5e1fb68118d9c8d0717599ccee19f953bee87a8655e122488d30c4d76d01a4439d7f6a370fbd150167c6f3e9b48d45c2d458778d40d456d3cf2612040c4751f00eb7de663716cc9e3b847ea9f78f1c9ec34ee72d0397ef86b0b7144772eee6799e41a035fa7458f786be34a40bad5a71e3de138b8592423faa548ade8ac076290b0b4602e054eb46b652d2a05ae8c64eb09a0a69788193cbbeb8430c429816e77598086e070d42e03a7828ec8ade66e5526413f36f9c9e9d060cf17730f01419f75b4cf2045bf4373a7447e720a287d0eb2307844c2440aafbd68a597cc7651937e57c3b5368e342d2b12fc1157a6c606e5cdb38040a1b881b3573181aa2fcd8fcf7bbf62164575aed3e8020ec5d885feef671aa94dbe6ac065d87a897eb09b2e46c515f4e992d079a41177792c385fe9aed5fd8949863113a3af8ec7d45bfa86520b0e5ecaba38488dc8471d41ebc3d26752de1d7a61389b33d51c2199c8b408576f14cc18564bb25115e20a0209e3bce2547bf8e502db84f9869d89dd2f384ab1e3d4963d5c16aa7ba18569e31b77f41ddf819edee85ce0709d0f4c9c53d8edb60820937325a342eaefeaca443c85eb9080bda1ff66728763eceab2b7727f8797fad452d43f415de3c25d2f79f279d62a15c5a733bfdb0354a70ab17e51779d96b2e4552eca5a915e8b9143033707590f9492e38e64c9b9f3d965e84e5617a8e4becf18f5ee8b1d643dd70bba2a5de741db2a09b58a05f326e50ecf1bca051a27994b16393f175fb0b31bd849c449750f9c132e3f2fcfc350efc6063c4ad77fbceb41e97ec59653a89e25c244b685317d8b264186dedfe29b93769a8e6f97cd9128c18b0c7070afa4b377b97bdb21967a34202a64e3dd4e568cbae36024ec02ef1c96a60fc46c07186cd2567ad2c50b59976d90b48b8c90152cc4e5474018b2567193d4acccecf8fe13cf4bfcebf1ac5f6da3d99848e13d26e5f1bbd89f918d49677f7a33462e2c48d865a1c51fe21299370f494865780f4c0aaccd33ec0683489dc7296bd634dccdaa9ef867c1e7d920489b16187d0f32d16306a0e05c6a4402ad89eff64007e8dc65f444aefc00916526c873412d5e9e25aec751b74c8aafe83edb9eda5e321d05243f918adb892007e18eec17754e79e436acab3e695befe462f267c991be239bafdaa8635fcf5c92974b2ad26984634037481a4fd2a1c29207b47497f5c3d45d5ee14365a0dee25ef06c28a07852e6ba98618c36353825472bf08bc008daf750bdf1ccbccd6a37a1ea7cf3309a241242830a47b1c1d84509e31a034d85dcd6eebb8039df55c87d4ba40ce99d95244bd2e8cd5863478ce32c0ee8038ea67dc03c3095aa2e0bcf3e0d8dc13ca376bab7d022d54fe6d08d5eb8f09b78d014b6abc0bc2a9adcd72dd6b019e69e8aa491494bbadfc4a3a73249ad9d8acab52c9d10bf895237a14c50256a9c561c632525fadf034ec000717a73bcfbc76b40d401464eb0d33b7aa48bd23936d7b8de13ccf2ae4e7bbe760fd44c83788593c56b7244db103a8fc6a9b87d409fa6d0c2dd56da85c9734bb1a8c2cd41b6b11c4062221dda8ebf89ef4bd55c45d3ce2c562f45b2ba2666e1abfc41041a06f1a6ac044cd6e2ba57209c4deadb5bd6615d58a0d66d8372954a315c269723cfe4313ecdfaaafd923c9f98fa64ca1c2ac2bd2dc325b36b25edf3295a294b392d73e9cf6c6242535b35fb309e04e12aae8137cd2ee48d346d5022da9d62440b51133d12cd800b53ad78859b19ec8a16e9ffe4e33e74e2f74fca5929c319b11ccd2c99aa6f5d56cee83b19a0039950802d0e924478e5b28b3bc5fbd1a98dbaa673eb932850caa0ad6ec9f8c819a0d909c93d8d147143cb4b4039c014636469de99c93da251425bb121f75c38b84682eccbd4300690f9564de83f8f4d03c0cd50350cffaccced875546aa33882c5e966bfedcdab4fedc25ff99966aed50d5e874c669d68b613d8b06bd14c6248ebfeb9a57a2962f24b8f93f440def6561b9ee1432ed3763979b820066fd8a8bb902ce5d39f9e0503fd0492356693cff89270485bff3672f521f762d667cfae8d451ee9b096cd2e10cbad623d2695c0fe30a0fbdffed93ad6e78b1f3eb66262be09b734dc3a0176229534b9e331936edbb474c9df0b815f7795b3edd284b33e9415bbd597b5ae0630ee654f3a96c38d18b962a1ae8551087e54d323b6a0c486f2ddb8585e77d72356df4857e312b6c5857aead2231fbb84551a924b9ca395e581262b1dc9bfab6feed8d38c919104712085792a620a0fc5e941bbdcd617ecb853071b7e6710c838ad87d747e370c815aca0c0eba08e2bbbe6d086a316a11af3a4da2cafaf716b9e049aacb39fc11515b4a2b3e8b1c10378928d5c59fb20568966d9b59343ed1afa98c6fcad65e78188d881699c8855a77c67f356326ec66adce751a6fe8587f144b6a44b38202af85d8f0fce40e468451a50ddcbccf1e1ebaab03fb5a1ae3a1fb8c2c084e23bfb20331262cb7cc2c70aa0b899b665b599e111355e531ff121d2967c95edcfa792f7217925f0728c2d3690af92ebd3c5b05c3c54ba0d8cc11950995b1bc1f7a040dce99255a8719dc0f3e563c03f6280f456814bba4ea694c58ae616dc2c34790f843e139b7392581f063bce14493eba81a033a37a6eabcb14e72844744fed98523928a1d46fd587439fee29f3da4a410fa487963ee20a1c762b8f12e88cf0bf0fb4be101520579c54c5b3b42aed5f7bf02e3f70554a879598bd607c0dfbf1c458efcc3f1f04498b13f806d0d8b2ee8a263321f62382e55e56f673295a68e444813966f54e70fd0aba0c764db73fc4b088a0fbcf19aa7439551df7ce6bb3e6e1869e8efe07981fbb89c3b12643cfe38af721d5f208ea8c074d1c3ca35de3d43b9e18ac81b9fe09a7b7c7f529e541ea11148d3ae4e10f9507c41d628047551e10857c9f91346ccdf96a7f5813148a76f2351b64982e83adeb452f68996660c95f1284961cd711dd4f7b33bbe85a2b51f525b5ef7e5b6c9254c642d8bd64cccffcd69fa227aaabdbda0347c6e10a9fe47ecdfc3cdfa6a0feaffd99ede576b0464870d77ef7734cdc0920fe0f822f44dc804d5c29f490e0537b5ef015230f8d0b1867d7e318f223c2f81e36ecdf566430a89f0d84cfc5b60685cb5c224f4282524a5cff0561c42eac9071af3c8380827d74344a983302cb83312d94e99faa50c67cc77aad91cd3fc5e45b4f9801e69cd393548a4e4a0dade8fdeca963d84ba9db964cfc3850685808b3cf388951b3e0b45860fe2f83e3cf6ee087415ae20c5448062979b249f17aac6f550ab30a977658d05f2a581f732d93772dfe7d618e87ba6c3d8231241df5cad2563434461587e9ce9ac1bc049e987dc71632c22d59534ad0a7aad338f9915d77bb71f147f3808e66ed419cbea04237a4d1b821b7b54cb719cccfed24b0e981589f7da5c4eeed7d83dd603477bfab75fd724e0d8b60a6d561528cc63bab29ad4b9ed591bbd37ae392e495b22403a0dfa44e229bcb774ca2efc30de875bb3064c032ae4bc725c47688f138a939cbfbc24969f03f8c32e711a2eecc50fce2f7428d1d6bd296b3c8c61f309e2681cc613ccfe0d2ab52e7bc2a0c065fa21e565e6e5d02e738acd6341ae626ebbb953d04b8a6f4c657e07f2cfcbc5346ce0386f0f6fce49afb2cd903bc108c9de3955b897d84c8a1c324743311a34173f64023c19520a3c3a41fd83ff1bbe03ca18673fefcf31117d394f9c453154252d6f7f4a4f90a8f78810026709fe27e85d071b8f1bbb6a6eb3f784d5c0d9b6967951e1a1cf6db9c8e01cdad11d67b9e369576364044869adad308415fe54a752b10fcebf0396e7fcd6b4a58c6b253645ff11a2d865ba3c47292f16d7b62580f8581894a205b7173166961adbcf216f36a6247c7280daad41a5e6dc5a2d3ede420036624a143218beaad9f2afe41442ab19d846a87d27a48d99f1b45acd8724939808d475051490d2154fdcbdf86ed5a93bf414e9f0e7d2e8c7d4ce60a07b6438fe9dbedceb0189d9bbfd645332be19ef6901d9af4471f3e5216ce1104d881bd5bf0e3bed4ddf0c054ab3ed3db1a3ce076244f1e5ab3fde964ce490ff79f8eb438073d0f279ddf75c5f6c47a99c13412ff83994153caef202869c52488677f34fe80719e82b66ab24955a01e1e35ef8153384400de9e2fe580ab2d95a20362ce5ffdbb8baf40bc0bb7da5fb13327932382e4b0c55035ee827456a07eb97406c5bb154438fbfffdda691fa78a9cc903ab09e2075f25861b172aa6b32851a36b2d03cc76786933087449ddcb3085c2f09ae8bfeb1e8d9b955b927be93b34d385cf6aee39ec75783c489cb20466fd4f0a6f8588a3497b3885b6a92bd4aea2f2dd46b8ab9a1d68a7fa5150ec65a2fc663cc07a5c7f125d3c1153a6ea634b52dd7da55e2c4853002eb2f3155b75a7967fcb286be75613a3976f90e68edc8894b5b1285133681de7ed0da9e1268216cd62f6ebe7593e3f9f1625ef2717a5ff461702164864d48b812745fb0d9986c89ae2a8bac06e31302e18e3424eb37f2fa4eb83d33d4bcc9321d3636c39cb6e9d00aa3611916aac36ece599b10ce0a0d769fe94671fea76ed01ec24e090a6bd2658d2bafcbc0669ddc06360e0f598a763b7ccdbefb3619b4304745936da6c02c9461a41d4171dc34543e0d779a07a38bdec15efd26e19fce7e2e59ae904af28995e9633fa96b7df34b22840856b99b23c06f1ac13148768859e155230c291e5d8048528f60e6f71c44601a826fbe27bbffc7602e0753669212141b1cbda82b7a8a7f8860decd013e531614ed0b14d6598979b86ff52f275d4ddad032d505ec8a30b59a0beb018f7ee34011ce158ce6b52f01dc869147ca2c03f027262690b815c04e03e0eb8b85dcbcf71aab00da0a544c34614afe1d80bb777a8c757f42f73cda81a6594485f780fa99e00d2e5dcf3834e0d998eb1692bdf581df9a65e47933b0b7e3b129e89e674f4111e0727803c5df19ef67d7c679c2ebc6d6b846b2ce708a56cb21bf31d2a9bdd12261d76a048891c1794c9edb3d73a19ab00a723f3a5ae82f3ac52e266d4212d89151054f6606a9fda0b8f11d6afef96f30b6e45b92ad657de173f21cb43bb1b071940a05c4ca20db2c96759f4168952f2b38501d486f5e541f921953ff1b014322c75251a6f52bde86dd67b85867c465dda17899bd62e34849124245c6b94573f0113c66e4ecddf551bb6cd0b2db4cfb6ec9dcd4b4f7ce99e73275ed8f5bdee05674313e90c8f8985458b784acef14b0649d46abead5919a8613987c7bb0ba885fce86bb03976782bc539fa0fdea2aa8ee896808955aee62881c2df2aabc52cd2e6083890a88f62a29486fb1c34e9cf5bbb48f1138e7203a4988e811da6911b0c46cd22baabaf42f631d701acc4441a05334e3d7b054dcb7480f4aff10a9ab776b4a45079c949081f8b76f79be1b2f653e63a2a42a4af81f832094f763b74a19c6bcdfb37d3725c7c4221629b1edccff95b6f473950e86b2b4285e547ecacbbc41966412f3af0c1a172c1369108f9c8a879bb452b5a99e3b67e86a5c48358560d1fe03022c3c8130892c624d324b2725042151148c45d0ee23b79d616d5365c6b15a652e3557a733cdf469e85f168321226ac28c3aeeff805b480376ca5caaaa6f347faa6c551d18818980a5eb867861c73d1486535e2232e9d3782a4410fbbe182d149d1c53ee71dac98dbf13ff76ffa2dc766b90497d7e4bfab66972f6e268724c437de36055b098668ddcc494310a73eb840723d98bc22e2e2cc2bbe88f34b15cc78d2574659d2cc32d747e5534c3c42f672a7f0dc8dd5e9250f9aa9356338a756ab9d4fd4ceedcf4bcf318125d8ee451ed5eddcf0336e35adca96726a8f23b33d61cb3f0563bd5a008d4267166acbcde718a55944626af8989138d332fe70c95e8fe447ff7f08334664012009c4387ccd4bd2a6eef387779e7fc14c0bc8192e8e8a275584e6e92cbf81d2461cd7cad2d6050b545934e9fe9b2f4548a9ec8b7273ff83c80dbb94305597432e754b934e3ac2352f2809847ca2e9a24583faf1aa37977429a34c0fff6a351d4ec73d3398db957673320f543b6c4ebb347cc86f304b5acfaae52a732499db880ad75d4ecaf37e6419d3b771cad52d5b0f877adb33f860f854a17bd8daa0c0b386b28cc66722f72a315b81df2be468dfc09fcd28adb7648d9dcc430ff325ad24ea4bd970b1cdda6f7332c23fb5a4b45874438458892a452f38b882a9fcf8529b4b4bf7fa16a9a8733378d683d4ef91fe789227ecb55ac8f1ead3df7353a3fd380e0bf520484f50ce6a57d4abeded2ab07dd7255cfd899d3279be6be62a586a3f90829ccd433df0c16bb763d362de053f8602660c3741642fc7c294a4968aa6cd16e7819dd3f26995cfddff9a227d239f29436e0276738abd856a1475862ae1f4f2a2880d9ea5ea32797cbffc60cd2b76797a35c09077d13184884570239faaeb7666eb3338b38b8276b81f6f1ac358cd4f592a6f2e633cedfe18e897304d5047e9e64fc0b88eb6c75c09099c6e1af84ac14e6c6ac797cb0b15e938adb0e9c6acff27e8e719b358885e0fe0171daeb254f33d10265523b0f043db41ccccfc85daf786a63684f7cdc3fdb45fb8a3c62ec9762d86dd27f3a7101edfeeea8a86ef7db4e1bfc2e14b1ec5f41846bd084b21ab095eadca5cc6c0fa25800c9570b381383e649e7456db1d56e58a0ee3f75370700904309d7fa8bc183b476bf97072ce4f090f1004c64182ef1b4624478a76984ce1f9a17be5cd7dc10d445356d3302eb334fdda71b613e8f54a0789ba3b34edcc47d7717f1011756eb2ec885de7886d6d736f6bac4db430eb9dc88973bb606d82040bc7e7813b1debd69342a6fe304349fcdc2ca02c6197f2f0d1d29fefd616a9f4f7cfe2dbc00ab4bbc995533d9465792ec6e24cc9fcdf7904fe4af28c406e52d7fd6582cec45bad6739cd415ebc416b1be688f6a47240db9c4dc3d8497e0385a2e5666ce738093d9006914faee4bf6723ec9ab08609a142e4729dbe030740395bdfd3cc7621e45104c8b734be1fc038d4b984a93478da0f51f127d6e5176db7d5447cced28ab6ea2b56cd42495de32e44d39cf8210890e2a1e8f2fcd8a09ce737e15755ed475d991bb99ae77fad892c517cb0e4d68e5ea205c07cb24c3b0d6b3066309a491cb69650cdcadd056c73bc63e3bc8718fd6736f80acf964fa9dda9ab18f70299879cf369b857d599f25391233d03ad9ab4ed53ba5d05903f16248e69775d7c355b73517ebcee39dd395e0a9900fbbafe5b516950243323d300c5af73de7ef736df3c9b6ff28df00710202b37aba8ee0289f8fcb29090b6bf059f15e7e471e1498a779723f1b679391a76a9cfe7b74271c1af2d46d99443a0c6c3e1213e143afee603b58e31432618e23d4c771767050a024215f204ff0670829010c0e2d011f39b78310b7f5bdcf8ecc85dc986fba98aab9c9711c9321dfe3ca84796207104377308d7da3bff2e5a61de41f5df43a8470fe6420a6555a9a4a5fad578e39fbc72ae4fe4a0c54545593e0ff9ccbf438d51ab30fac0af592febdc5dc65bfe910f691457910067586a2b40a4ed0ca02217dd4710c4eaec00fbeac6e707ba2bea0ad0ff4a18dd87520042e6015d5a8f7537bbd82898a9040cc6d818a5474789930fbb6c1d28c3726f94b894bc502baef29dd7226cf22782893cc66a2cc2b42caeba2074665fe90c449d9ed90281e0dd89b514ab06582a240d95f8ae662c35efdaefc263cc1162de1b976f58b7d8df27c53bc7951bd448db870420480eebcd3399b9682ad46df40bcb4a7ce959ee52b4038d6534e47fbab7eaa4a5f377cd8e3531f6644ffbd4f195459f7d1ed2976d9460265dc106c3050b32942b4a6c9c5af705d206fdbcf733ce4b69818097939407b737e096ae1ca04a879112ceaa660106d2cff34a2d24deb99b97d4376bcee20b88f1aaa42258317842d4c417c32565a8e1d2e2e2a22c481bbfe21359233213f4f6efdbeb47c25b3e7d73993e947a7557c624524ccf0ac8377b00bffe4961be6be039f47b8a2eab7a3121b5d0ec366a2b0f925181b81b48c22acea4d239b176ec929cfe7d91154bea90b6604747a90354e66307bedf29c35fb89aed2b586f5219a8be774fdd5c0454de5bfd9e551edf4279154179b007d5f086c99d284d7e36b9ab255825b06457ffcd64157c9978b714c10095eaaf13a280cdd8a3f364f161b7446949b560786c51e348a87082b88956d50efcb5caee17fc4f3deebcb2ff6c0d8b509b46641c1b5eac0c1f14dc4a7e42eded85de8b241e9cf9a3e78aae2c252ac55e75a73ceb08a6ddf87f01fb2a0e068fc1dc62a9329abc140d944d1384c6ff81b64bb53947befd4e7d6e87257cdab4f4b3fa86b10ba2493b3e9adccc80375e6170c06049258a412b9ff27f75ca76ca9e9fd4803a3896ecb042f3032689891e970a6925bc6a799b8ab853faa2705798daf513be8f84c7c216f20318e4a7f8876223223e4b191d7d2d8da7192f4031c3186f4521e9afae77ac8bc00711e8d05becb2f7298d1aaef1fd85098a9924f983fbcc31e85062f78a0cd78dc8e5ae3e9417dcd968eced6358c242d77b1babc6f1652cf99aba0c328a223fce06849a4b183f80b48a142c75402a4257eaf05ab673ca1194475ea24ab1027732f57408620829c46710268859419d8268d53cf10e8b4581f19f65a6d340413517239f1ea545f061f9d9a35d5a87de3a6304280b5fc73414910e8acfb552ea366f491bc62004bfec6ae4b03fe532706f97c590b9df8720765e4ce572310c9b011765936ec98012c5d274a7662b551b5f101235adf6e14025c133ab3b00163dd7b7ebc50c205a9f043fd1932aa1456cc162125b9e918ccba44bdc76c537e01cad932d8fd38a4435b1a94c5bb50b150f7d47ec62b89822f1f174f9364c564fd2c954b1ffe1bb5a4fd38e8654ec443e05ca29643d63e21927e07c98ce692f0da1ee48fcb59c6313ff2eccc6e65307fd5c5442d21f884e46a656703a94a28c69d8acae23ed03b0f2766a6ba8fc186c0017f73ed2054cf262c02d13347bbd3e0ce144216d5b66c4f15c4f75b31280297f9577f4667cec528032364737355555e702ac143c635472f96aff5aaac570079048efea4a36f9bac98c61d98a7290b0ae6670ebe179bfa08dcba48cdc11631dea4456755ceae6f29acb580e97902691c4bc37b14267d557f4d10d9acfdb649a699ca597b72f699edd6e94f257421aa7053341d3ece757c2b9e051488e56ba30b3b7d499b9632bd16a9459b09042e57bb3e344f9a7c8032f3c3221f3003eb57a9979d9764ab3b3176b5d1040afe22999f134ffa974d5e60e538194fbec1dbb5245663178dd68a76e57eab214ae3ab23d24fa0a37dfafcf9f0231630a6da54287d9a3ef84d5d98faa759a6bdc0f7f6a4aadb2b28d537a2c6bce97ebf16fdfb337f306e618a1d8380af08ab998c1b1ca0e15c42ed1b6c8eadba2bc2ddbc354d9c4c6df3d90be9b6393573650942627c81537bc8301ad50f616ca518718da7f55d06d5b5defcffa572953b5df5ab8b7d1d920379230d25b9041ca03dd89b3f5a632f84da97447aa4b400517ee2ef41512b2bbf3aac9c04350db2d62c6b1fc8a6d08959c7eaed15f3898a2acef01d0e5858a22ea133ce13c2578d81d21fd5103c1475774c93d3788b4c4a82608c14f4c130b550a088fd9d6175328d7058a30d53c9a35450507a4a282fddedc01d7d6849b1975d42de5ef9bd296371531b5c7618c2809a8d1d70525ad361482afac36f1e6fd92184d4fe28f7a176142c9b3a6b3891c08c58d8002eb90190e999979445093674dc1366784838d36f153b102cef7645e73067b6f64c410029dfd28147e6777d159016e46a85d50cf53f23d2f41459a64e29108461098e188bd7adbaddac133a6ca989ac653fdef3445f83f5d8290c17f7e3fb4face25a531781cdb8a962fef5422b89d81a2e9bebf0e535d4fb96a6873385de7a726e93fb0e40bd7be97411ffa630a875bd70a918968f005f7a2c809b864b045c71b194f83a87d8b4496d820816286615b8fad18dfb9570c327d42d8d3cc0caa8117fc0db2206e0a1d37d0cfd0ee59219eabfc913adb1c550c873d74c0f8a30f3b501a0bf061ee2d2add59ef7854118b22e935017e74add040575538cb02530344e3cd1efcbb42646095d57db18267e0963ac70047817729c2827fbcb1af87c970b8adb4fa3a2ede5fefe98f64294fbd398b3051f2b24357e43491380037e5555ecc032e092d5c60111dcdcef97239f897a0d252f7eb6a153dc14f3c83d06a0381feaf7549cc278d2678c9ea0ce0147d632f7309f596ad4072d79938a01657c63e661e47bf185888666cef7e094077f7d81e82fa45560cfe962be9db952ec412e24ecfa0eb00182bbec296355b5d18599eb3a2f8da64f428f673c404bfe72a8a355424a6d218aab03d2348250fbc2e05288873f77a9be531cc23b6df70681f467a61c3137f510bb70e9f68ab63fd070e3ac240c57dcb76bcb4bdbae4deafd4dd548df30897536998e45f097cf4d5eef16e511674d4b3a14f94420a999cc017b472a5b1700c2dd59a48ff5cfa6ab2fcce7e360f932cf632a6173f39670abbb025b3b35196dd770e4dc98eb38715b48ebd809d03aea32551bdddb86094bed038752fd3d54f5e8fe751f83884234e34eb870e684fc1d88b1fcc35e152629a6f324d263d0dd6efb19df8b72d4f54759f86dd5401d4b103527643333f00e71062e314c00aac981011c7427d7a5ec1cfd564ce8f0bc9cf808de9d653ddf9972d40b7057824656bcc996c05a233e8b51bc79babdafe456e62e7cbeeb702d60b863cc4986d8287267cea694e007297493e81ac48b50fd339f10cb51eb09da0034e9ec6b6d8fc02a26459fc9a72829008d017e18d7c5a4575634057ec5c650e3f4abde6ca84f3910a353f9cafbb487d686e7bf017639f4a4ae4f784f46320b1409dbf4236bb0a11ff59815877d958c2d5c94b6f1d05135ebabe450727591954ee88c97f98405d589182f34d9f16e321e78c95975eab712a055611c8c6bab05e515e5ca48422ddbc0ae799f1449d9248d032ee87b78cc66118a8a9256e37f9c21f11000c3fbaf75bed430d362d270074e81c575da2e36a2ec7979b34745682fbd948d925dc994a92e8cea5aa9b54819f8ba10d1db9362744feb00a96d11256dd7ba4d953ca61d75953012edb2602155d5cb384b61fe3a343925b059dc3c4473b54a49d2e4748c607dfc618620c9bf22cd46ebc93d5a14cf1756bf5f06b5d7694192533dd8f1eb40345ba9d9adf4acd82fbb579e89e5d38c93483991addc7b3c080cab8bbf61742e470d989eaf8f1151d0c40029b84d06683a31a7e824ff36b38b4bdcca930d36a5d20c496ccf937cf9a20bba76ebc815ae57a4b3fba7298ed5ba55bf1e49ea0ed7720283294147d10ff50896c7880d98d8cc0e72925e4f7635b6dbdb6d4ba7221ec360a93c925fdb8cbf729126795484cde0f995e442ceb2d80a99a720b127441c022c898b156a52b8c6d92607efe42fc72f56119f6d156323f283e217a47eff493d4f129f38531eebf45c6fb6f5d3975c23cc97552be6e73a4a21a86dc051c97424fab1f390b5339b4b2fec62bd73934a3c0064226f5715ee92f49156e3001fc58ea22b07fd32f85db79145e16644b37b4ad79262091b82cc3e45fc87c466a53522e895608c2eb96e064bd3cf2c6bd91cb7be057c266341c3d23dc3d0cbc6de014185b770b6c7da212ef16e7bdffdae495a5b8de9ae6316c4b8afd495631c089f1bfff5e2efd5854027797bd67efe600ad75c518c106c452bbb635b6812787a1983ac1031152a135be6431b5228aa886f2370be213cac0894cdb80dc160bf03c4d9eb7b04a76b57bfae14577887447002a45ee76e60f8a3d4db627cc78576b5ee1b498ab1c72e9f4b4f8357836ce871e0532db9591dae09760e6522e0db73c96f39adf4dac1c2189ce09f6c79ab867c3aa7a7cdb3fa4fdce00a00d7b321d112a8d4a15b4cc1afba0eb5a9ba36fa2b38f1eee427737198a5afaaf45ed8ba8e24f9535fbc21395928d25d69cdb77b8c7f7b9993d55d8545ca0c229de09906e77445ab16e44be4507d2c27d84a1af1482651b8dd229ee37b6ccc8faeaa72bc1d8c6168c629c93d160e1607c739675f17ba9e07213784c0c80ac81a183d00e1f4ca854092fc1574df5b585f40a80cb0cfef4944b6fa7f4c0c3112015fcc8edaf9be9daba8963917b20a451e716adcf6c9bad5dab7bb7d2c5764bfcc569d7eaff27f2c73424f5165bb24b1a5913bd01b45ee0a28bf220ff9983bbe341a6ed5837186ef2de9d5cd7f7668b88f69345ae9230d181ebe508acd8de2d8b389b78a39f0c350710819b6ebf5fb29e1ade2147c2ed3767e5712197e0962356a5136c48a193085b15524079fcef9ea19df214eec8085e765a06a08f141d76afa52eda8e621b8025058b62a77b6fff245cda866762ec438aa260eabeb30c08cb226c46614351b1c34591085ea5fceb611e674eeb5fdd8109cf1fb52bd661f09f9c43376462877dbbe21a47253715ff3d0777c91a7a4f21b901b6a8e889e6278e08474c0d5733179f7832b7821565c17e9fce025d1e24c700c4e5e1ebce0a1de591debf890017bce20ca76ae9687258b17b7f01fb08ad743deaf746c28aa3c95a9f1c435d35635443948118787faad675c2e957fb7bf4e09bbb2f72a522632376d3dc6624a283b766d13a1e6830f32dfa7faef6ff9a9683e3a707bdf1659e8cf6772f022df4bfd47df2fbadae357267d9faa3919c72b3d142cf779b18fa180eeba18772a51cb33ab197be3be3d0274b35f41dde20a585df0efa8645ce7fb84b5544e39c029b68f59db672dea91c19901449659dddc9174be481c5f8d1dd33614bbb8d0cf7a103196ec14d2678c23f3f6dd1b58635616040607ad3ae63a6137cd8e975bd6a8f7c171b4280d2b278a7912de6a8dde44c188ae00f5674a915018651258b39a6823b06a81fe649527f99b899bd331698b2a211ac5eceb4263ace1b468d622f8c77e9fbdfc55be49613eec21797aed8a59b9ccb8c63a040ad648ce7b1af6dbfd51335f9cc91c364e83589b1fc75cd371d3d6c2f586cbac3d4d54f89d7e48d87926acf02c0f0bbe748b9fcf93c969320638d096fa9e36d109d8bc6d17776e301221f396e28c581dba2fb1eaeaa4dadacdaf13d22a54c24956a4895e0f5d0e2436a3f6c658e6da8241da7b964ea345f948320c53ba6ed49365f2987cb72587260e80734a2a72cf70335ca445e38fce15baa993a74dd20f48fb0fe52bc686d9d9b743d66b1178bde9f1c984e0b2e083846ac73274750a724064c22a04c05c4ca8af65141e7bdd5eb5334ceece4a13f55b6a52ccdd8d15848f6aa631ac7ff27ec149d10448a7cca19ac8430fc3f58e0b8463b0fd7d40f57785cad4c3b46c4af7bc4e051918d8270c65bd4bb002e70bfa1d8f347977f694dc665799eb7edde8aa08401d3492fd072225438dd462255b8dd6894f37251cae37e68b389192fa017e7f8e243bde5435fd95c7b47c36d7b6a25b3ddb61ca8a24ed1925bebe89faf832c87c618a88c8c501d6a13256422115ddee846e2bb6fd21c5243b1f1a5e09da22ec7c324c4af8849db64c3f45aabd5f0939598853b66227c1358ecab3851ae398d4a6c2e7c300497d10fe73f86c5752c170a03be27861f176baf823674e22c44b9211067ad3c3b9f82b0741ba606b48dbe96cda01777ccd97145e6bb557664c7ec3e8e9cdd9da886c8296f9bec52a68920c01d3445ce8139c82d6a5ac58a9236b2ce187f462700a43b7c6e33323585fcc54906d2d87a94650a96a6b29cd2f9d72dae999f138e08d387675f18f8bd591d5dd3460b17a7c768a60268a558c8e20ff9d5dd5d532353941bdeaa9dc102a3f6cff36feddb1eee8f72755d4ec0f07dd0fbea264e35024df402b4b06043365936eaea7bf45294f649d0a0fcbda22cd75948d388a4140bdb6c49a0442f5822d834177c85f4055707d52f3b3a34c64501223ba23a8fb1e27dcfc4fda3ca27dc0128d6082f2927725e13dcb5585b60387c6102f858dbda5773860e8d9b74a47574c8972ff5eb9dfc2f495570415adf0cf67c300129476104b9287af0b548e3d5b6ecee2c6eea89da0850806103292610af0905d2a8e296e325519cd79306eabbb2d81cc31d4bdc3c528a6c34359428ea6dc6ab58ab44a321fe5f75532632821bc02fdc998ba083641b4471f2c10ae03384e2152c5e4dee3f416f7534ea680f5b1d2db2a77a260b6efbeef6b1258a980992a9d4d86b6be60667472a339f4456dd964b4275a96339e6ca0f2cd2a7c06133c74c4f64782805e74f5a1d17718a5a1d5236b65cdac5f91d064d80728f57571e41e220c8ef9467560b2dfda87366cd0c4028ebada16427569ff0b7a55ab4b086cbeff11b3a2e1018cd29f9e6b868083d763b08d0fb0b370d09f964b9ac2357eed0db118f88f6a5883977e2d990ebc567fe21e8c30a96fc4e186cbfe7d83d09680405443e7c6005f1489b81fd51f40b360e28e5f5711c60d67614f38bbd719212fc6aa4446428060ee1161e88740d6f0a1a6637cc27aa9198accb9dd91583ff0d904aaabd2862606bdaeb70de79260aed55c9bb88cda8cc5bd984c3af2cfcaf0588903629f09f312a8de57095e7f0dab03f52ec8fbc4705db0e89b5aeb26341985af91588e61676c801853c3c2c620d7c096e40239efb1da13a73e6bf8a87b3fffbb49f9ea230ef36f4e1347e7029784302355784423061beb23f4c2061762999c53efb473d25267d22c89528c18acb86f79d9c9c1b592b69a5ad1ad39b406efe60e4333d5d8ecaf3e347945a894cf3166f7e72e0a5ce5878cbc17af720fda2d1990445ebf410d49ff0c3f980aa99abd806c1489b84071ae8c8dd4e02f925e0e159fe967ab3f3885612f8e4e88e608fc043afb7d10c8e90d31668034423ced945bd46b77b7145da07498740cc712dfb5698ff0c3c67319c1f9aed1d297557e5a3c27b1f0f66c14797bcfea28d08928c17ae05ab5e4d1c5f6625d147ca9414acd53b078fb58b478988ff22d83f938b5b13962db2d341b4d240a20397762ea7471c7d3664adffe484b31d639afbbb39c9a119e42afa82d6902c3cc6b161052700b5432f17ab21799fe0cf295870a3946c22e9a1415865cdfb32776215e98d9433f72bd8a5c65094b88306d3ba18023cd805dc16bae6c228b180510356f0a00e9e0c019c91055063c44b772fb7ff3c3f5f7834d50b6f5a71259ace7805d369c09385acc6b0d79cca37cd569a18b8d124ebfc4438a58f8cf50806ce82a0854a59e32c46262cc855b5b5f8df69c3c42a00e8c5a2f94c62618380ec340de3276779e4aca348b066a1737a8bc11b22b6c341c854fe7501c0e0cb89a6a692facdd4ee688652b33f25ca9c991368c17cad7a89321d8c21ebb8888657f61d3136a281702badb349481b4296e373c111dbab62f78ee668059394735e7446c07882170e31f7e6a5bdc7d377f511509533032f20a2e8f0fd4ff5431fdf8b50ad20b69365501b15eeb7aaccad61699b2b523c3522adb92ce1c906bbc1f1dc2ba6bff3e6acfecddb45bc965bb4b188e143e73d05c8e4073f57c789a6a45c1d78baab6e8e7ab49f90902c42185b7428bde54494acc0013727573520c01f1abb7c9e478d14eec5f1ffb5c738b5417a859d1c55c41a1bd710841231d503663cf35838499aabac3544e2eb3ae7102c26f273b936c71b9ecc7ff1edc7e9dca65534e84917e6cc8a3fb7e9407ef6bbb7828e068f1e9f156acaa508a646953ec927ce3a7a973aac33029990f361832a4d921157bafebe1453c51764ed443705564192ac0ba6611511ad7d4243adaae0d877937ad9dc006971e137073239fa05ed88eb06696012fb45e5cc0e0d69ba386f70bc4f1fcdeec433d7acfd954a389f9ad373abbd3a960d8c02c17139e81896ef6298c80dd1a81db236d0991e69c9d91a525bf1f5d034244ae52e86a47e586c0e79db6dfd4ff69539792eef8ca26df85a8660ea686a1cd33ce82198d813121e71663e784a7de0c2bf8ce918fd1c4b0a8dfcf48153addae2184a37444319735494d2787fa70956615cb9bd3fa369671c6b7e546dd7aef40b6830a6186aa13ab5d1f5addcf409b6f81573bc9dbd6cd0c837bd8ca2c610c97440590af61acae119ed70b3ad1ee59d0b50f8931f96bf4a4ae2698f83960559ed8d0971c0c1005541b686dc7b27fa4b3f96690b5df1c8e2ed317f1b6b1ca8296433e09d8fdd600c1f8ba4704ac7264bac3fb5bb809ac7d87845e2b8fa090cd7d99ac3fde046977aa72f2217e16472de5fb26bd4ca788ec92b8802ec042f3b166b612fd690b0ef36fe2fc3db1b65a1dbe256c5b8466400d628ffac02ac6206d91b17e41c24e0fb4643c5e88183b4eb7665d2e9ce64a7934d8ade7ddefff5479b0933d2b59f0696a6e455ca0550659acc9007d6eacdc4b5d274b54c17874293e68b7daeb57f0f303e0928d9d15c4159fdbc0ea60930003dd401dd77a05f21a60e8476f1501fe3a3ba9800bce3244cc8b4689844c1987577ade9471490779c4508c4a5ce1b7ff2b81c81d2657ac407d941cc7d45a08046d62319b7fc8a150faba98800892759e454b390fb640aa1dbc0ac1f7027edc02a2c443dc45e67a8e2650374efc0d4f6eb4c7b1be6d1d121f31fef92e0ed6cee0f214a108bb1b9ce60504fef51618ea3a183a94984becc37719b95831bcc8a8c904c10e2497e5dc0d7f1d10be547f185f95475d31470ebdd96bc9f322941f9e39e7a2e57e590358730e21e703334ec3969cadf205d4782e99263c215364c4c58e99b609d9a488d1c756e04c3be652452b3935a1db6e6600498f2106c313ecaf5cab9af4a9c43c183916386584e133bcef84b530b6e17cbcb5f1234739b5b9fb27686373ce073a19ff257b515d6a2e6d170ace7ba9a1d1bb751a621654a9e52dc3d697a576468d32c01f40ba6059627e59096641d7c4610cf2cb4bc97374ff6d54fc0bb122b7976a08fb2c67c1eae47ddefa144d8bd28e35baa41f1172ccc16511c9328e50b83580f1eacb36251095a0d2c3a6c9fb2d331f78334b772555b5359030cc5d1a018a9883325c67d90cc2a4611f01a50883b0943f734f6fe6cdec5e18da679246a44d62705948d7ae4cc93b7e4da9aa61df0c9b112d8e3c7eb657c90b1435be5cdf7d47d2f36c6ae54e4e6ac5f6e49b76e2f03cc608c89e05f7e75780e66492f424039c2d6bb98ddb180f4543d7fb9e61246ba556a7c20d76c5b9fde600155fc9fe6b570d2a33003b95794ffe21da5c9b1b7ac6ff97357d4cc13062082d53d74121b4951c0c13e87109ac2b3f71e631042f325cd907320abd446182b0f7c0507cc05aded6f61a756b80464611a73e7f14d255806dcb6f8187e9433b34080eb7ff5746d695518977fa5d4b8ccf2b1897e25dfd8d53e5d57da8e00d1c234e75f7149cdb9b2417872547bcc0fc3646b1e6e249cbfa5c92eb1d43a32239e8934fb04d272f92926e4db88c8661b0548c159ec994bd06acbb9f0164727d65b6b21e2d565db047ad4d882a1f9b86a0fbd0634a75e6367ad82eb06edb78c03a3c2e725f5ca9972a901171930981948176e5e32052b27736c86cdd00e8cc0951225de2b45b7b6d0360867eb58efd3fe0ab0bbe8c794f9900759eda4067922e572ce97d16a76f43e5773d6d2cb68609bfdb47b474b365bde899f95b1824ba3b269fd48be8edd000d582ebf11b85346e117aa460c3ae666b53bae3b299509fd985be51fcbecf897131c1ace7e6c726660ee1674ab170654cfa077777471fd3945a4b97d7d91cac03773e0623a5ec71a6c82e99af87f7fd05b01d6355b4b7c77e874f69158085892d31b420fa4c058de3daa389ed809897964023a52e897156fecfa8be621782f060cf7f9d667c5a29b726f6b00fc977f3d3b1b648419e03746b2d873cb49f6c5d1c02d1af4b89646890197aeae3dc5315c3cf92bac96e84342ac7ee2238a61b37a5d71d067fe5f1c96e81e961a15f8ce8d8959c10d5e0a31fdf6924e2075c287835eb792032ba51b99873a46e39931ac2fea16a6ef532b4ceb116ee516c616e149726bee2036628c21f49cc04079441f7bd2062921a6b9b93b5e862983606616e4fcad822ea5ad57ffb57641b1a598169a37d8c93d0ed67013afa5e4c8679abf0afbd514d475ecd2cfa54cc7a0cb0fbad783c1b03548d3d829f8a2a30f582214baaa240517ec4c6be2a7530f5e885e7d19b1e92ad5091b0c141cfe31090d87eb15a3cf53b52c8c9c9bb6926228fd6a36f3f6c26451bafa30d0f36912c616aa15a565a9ca090749b7ec451a5f3722065e8ebdb8630af944c9b73a84e7bac9fbce39785d798e5c46360e25cd8b1db1aac982d1b233d2d2b018bf09e1a502239f08e77242bdea7f9572191b089081091ba6853a175ca82b8daebff9bfa2399cff37f58d3569272c7ff20b2d9bfc7d04ffef6c96fe60308777c290c3e173f69431d8d455dcc685a58328905e796a189b4fa461a254997fb16cabb0f73c3bc60431d3d63d693c34f9ed1734fdab37b0af7733fd3db5a68c3cdeaf104ff7ba8041c8e427bc88bdb37196a6f0effec004b971e1d6683ade73eec53070df0cf3ebec76ab5bad668d661269f6b8027ef0532e8223c108ffea203c9873cab091af80e3960ba3e616d10a7a0c8f2c4de67afff0591437d950ed72ea53509bea8b346b88d9b3cc3ddf80702dd552872f09e2b4bbc6b27998e5d449ec35ef4773fb805d10b9768b09deea09c3a51d6695fc79e6d7eccfe5ba2f08a290039a1efb7e872f1d7c79528b7d20887152299807b66b86cb371beae473aec1e71c78ff1656fb773a8262b879ed1808cec9c452735ef6c44c24d8e93757b578ace9f9a775b2af92286895601ea6bfecd2056242d778fdcfce68b086d97e67f1508b38d6ae34df0b8859e866447f91c8d03fb8332fd6e77666e3ab31f822158adcc322242444a7e558e15ea645f5e9e6a4a3a212a9c5b154571ac12b1d7c4ccff68772b647c274e53559b9f7b3be85c4322dc292d59436b40d1048b852364a64478e5ccb07fc3fef4af3cc6c0dca3074ef4884ce5cb0095b52ff620be8fd040c42e92e4d6ef8e49e90520776bebaabb085d81203c18cc11b1cc3bb8bcfd8070ebca92d4a76c592b1fb98010881b35da9c2b24ea239b3860f2a10292151c2a9808c90b7b93dc8059f1afc28760d9a5abca0ae99efc3b9590b16996a7664ad843b8189b1f6f1567b27a2536dac9143a8c7b84899402a778ddb58d93260bae31a7ecc167c1f46d646af28c3c04e277ec827d1abea72a4b02a2c40e9246afb1ad2d1bb5affbdcb52a24231af2a17c6f13bd676cedb6a2453fa59e6c7811b67eeef3268d8c87229e626db63cc490182c488ac1e0567d4f995893c8649b692c2a652a79d72afdcdb49ba0a76c10318552b5a8e06eb7568aae802898ae903098a692ee3194b193e6ac9cfeae52682a1599cbaf9f08235bdb3b438c8573e1751fbfb1a478b4c0a71c21f46c9d5941da81188135a0b55d9177fcbcc1bb75e2d47756b3ce4cc35b75be47e225e6fb658c7294be83a443a6a5cb35835908494c831dad0b75b04e585f27c87801888f85483c9333abf949de35342ba7ad9b5bd9adeab4e699c0c2fed325ad6e290619759ce45754929b6a8b57a3bf2c516ec416cf82e9c3360fcf7d64188d30aef53a40cd7fac489572b6400c92aa1f91170f0adb56218a3c6ff17619407bac25fbae853ee0ee80dde53b3341bcebf1da2375db402d8d0a4775101021c6491e7b3410cf8d3d203b1e621fc99a33f3994427d71ea69101cbd65b5810b25f14df29729f8b6f88aacfdc1e267c9f0c49bd2836b210f503f37700cba050c024c99ebb2f7b0b864bb2618440f9f6812fa8b719c8433095f9773da864baf645f155631d7aabe3795fa11c95c494b3a0f302c7ca7caff6294d44d6671030998c05b6fcd9a89d337db57adb6f0eec2f32e3de4253d906cabf172ceff44a4ab6fcd1c55903e0b2293702fee0b75a1c846793c13405bda7ab0e5d9c3a17358d38d6c9d7083a557076ca00c9a53ff1ee347e2036020f9c91e125a3fcbb74baff6298785e0380a3135a476770f325213c8be26df0ca2bed7869727390c7f3ccc0b39fe1d2f01451a6be7e8748aa36860979ef557e7b53f2eeb9fdaa4d1b3514f2b9c6d566b796dec4147a993fad6ea5f108b2d5870fbc92a8ad4c08b78fb14e370e2d583e131c9e581123df47e7b6fc98e139290d790a8bb054b3658bf06e4320c8d46aad29111ec66c60f8b89f13c28ca94cc87ea7ed71eda31c5366907123d5ab503b2cad0fbf87296a0f62a79cce52f64f70620649257e93d5a42e9f68eec8dfd4dda4f718d39471d6801abd0ad368d038dca52255ae9ac066e6559d0738a6ed40f70b35f5ea6dcb83c3093531a0dad310b8837517f69a382a91da68d8cf6e3872ffcd12292c1ea8d40228fa9d5d41670ce01930a481a85e987cc6347f9c57fcdda59cefbfe13bb5bd000d62400af8c9dac476c1643a1cb2548ff2e9e26f60f4ac57b8c41ba39c7029bf98d689516fdc225396a65398a1eb1bd1e8226ecd69df728efb03cbe4c6da125deac041a7ac81186a9d111ea1cfa2c44cc9b39e15bb3d4bdbb0959de050a9c99d6ea1deb1b91acb73b1e05d2c93e29e5c857d25d43e26cc8ab1162dce3e6ea041785e89c620ff2874ba0246e7b5bc1bddd4df82788654eb427d51808ac6db6d77c4ea4f664934f408b349eeeaf4f5781ae344853b329e0bbb86949c7132906f0bb6938c54dd4bb426c9b2fc16f635a165fab7818e0864941d52941175afc6cc62c7d21b690655cdf9abef9b8bc173613bdd160c7bf131c5b2acd4483bd375449177bd2503d6d66fe8ce1f7deaff3e0f1d8455126ab5b1da30be65466adc03551078586308508f54f74e4e24b147ba71b678320ba0e721c301d4fbfc45b3a2359fd3a17e07b7eb729e870eb408df006da9de34899df8cd114a203433a93575cae72d11ae5a0e06cafd27b57ead78d74aebba3718a0cb64bf7bab90ac3b5aea623ea41f63552da9ecb93c760089df0d0f640ecfda34f2be6a9d7f9217a6c716bb7ad206863b8a29e900e227544a00a2cbee55a3553511bfc432c8ef0fa82d216d91df1639cdce8d3c5cb38a86bf925cafad727b75b375cfb8ab80e90d4e83be56d4bdf8650d19b5a206d88d8c038d2225442251fe8592beec48d4d2da3ad4531cb36530a575987d8ed9835ade773c9df57647992046bd2c22c4dcbe6144abea20a2b56d78eaf2fbf1b685db934763ea3b387af77481c5433479135713e1c4dafd8ee5fe66f60c97a7444cf73b15878aaefb686d0077b8df21680c8ce568f70dfd22851d69cd208dbe19ff1e43e0ffbc4982a8770725cce880e4bf8229137a54e7b17988145dce71e8930fbbd9deb6607efa0b74976884a233c5cb41d9b37f3a9cad7374887d05fdd9040a2a9f2000af7ddaa085dfd4bfe47fe0cc872c101fb6c4144554d5b9ff86319733db76effd73c3caaf075a632f7586800c5b329f06f8286be5d3706a8bf8a665c5ec1a28e9d95febb0370a6dfabc89ad18375d2ed7d85633cdd07cbce36861fb98c4cfa44b83087aa3e04a618e6e72e40119b7f38e4caf38262d86d7e951520bd486e2cb1f01bdb2731f65beb86bf6451eec32b8c135c9d4bab26a726bf516a1256fd6fdc5a259e205080c3d9478b17771ddebfbbba8a9bff65f33a290cd1cf4e81b71f90c20dc3d0e7cf353976b8471da8da0299a12f9d52b411e85339ae95a4f43858383e63cf963945723415b17e49df89c211ab51cdac41399da5654a6055ea0cbc4c479a44bfa9c0f5509b056ee214bfbc8015c9bdc58b83eb701f42ec2830d43d814e9d07dcdb93d0e17855416656c86bc9fcfe9054a1ff09cbc7509e4454b25593e44cd5ac0babc5676a1be0705290444125d38c4ad51064699ea0019cf808a733aaeb8b5acfe277b2f08569b5bd22dd3dd9b8b4c3a8214b49d82ffa0c1a0aff57da1acde73bd6ff65a2c5893f4107155b3338902a58039be2156450ac9cf7d95b06bb24daad100fb1fc54fc994e6a0ae9065f1b5887c58a06e6fac86afcd913e4948f350bc81eda0a636e3d9dd36f7a46cfb84121da2fa43c77f5e4e6c03079989afdd2805ea13b8adc00dfba996e8febdff85624597ea10762d3608dd3bc986da84d55cfef19c1efc2f66fefca0e36ad0f7d027a495ecc3eb7b2a28537c5508662a4eb93be72f6fae180af5c66398bc006c35bc6c0ccfebd4dcdc41b42e47cbc8fb534fa8a24cff7f1c7867234ee910b4b6601877423316b585f2c2f740361ff0c953f8372280173969c1548cfaa5169cd3942785ea759019d138cd389125b2678ffcbf17b488e4f70ddd731d1340bf87bb5ca81881732889e4e81a2c61dbf22a359f14823a84b619203a543341143f2ef600ad5a558a84a01ee0b57aa4b72a0f3b1c5858385afa029f78f9657d577816f23ecd8d986bfeccd2507411c5ca4cac299a5ace24936beb0a98ba69b469ceccb359cbd673e8231c8a5af3922293eb15534a119010a310405a3544f17bce7301121f2e59262c9dd882788c3e54a5ec05e4c78c7860d20b305c337af3506b5b2e0d5988ad6972130230ffdcc6fa3ae8704fe32e633b5d91e7a93b8a9fe6b43c777d87e8b26d43398da811c2e986db470cfbff5adee4b1adb3fef3c5045e276b9bf88b2bba4b94eb15aee5dd8d75e4f738d8a7fe5f30d341623a2ca2ed0d4091d4d2e96c23f6e89abe2a402f3d317b4f6b20d8a83d8a583c2a1e6443d4012cae87119a6f91cf94cb8dce1bccf232ba5f23c0ed68bc3a7f9c18a2bf527997aced9541124863933e5369ee0844d3a43d0e7605d6b72bfa46303c317db2abe04bd732f9ab146dab3233f80ffaaf6846062d86f707046828610f5b05549467f4df05c5e8bb2f84d4dc78f0be0b351efab81eb78bd85ee5ec0db6b6e8cd210757ef5aadca9691c706c4613c17d5bec8f4706c084693f636abd193237bf9aa5e51a5aab2c4f85af5cc5abc8d21f938021e7717b1345ff8b07f897b3abe3c3e8745b4284e2a3b7201aa06516facac6baf54d7aa6d980c0aef6a68bbe8cf78a70ee8b4a83695a68b67243aace37427649859d386a885c9ce82521fd5c124c304f6c2030f88459f6eaf4c449e3528cd867cff2438512302e0c986cf6c8b0ce461462b2f72e57daadd01538265dcec2857fd6dffb7818377a2b13b5f4c8dce3d64356a3a9e68a26a38fb2c64e3cea6882d9664fee711f312b6bc8f2a9ff5be6103ca0b271d09f289f74760dd6e602ee568cbe17a5bf1bd0a3bcfa216072f50a6be39f4927a32d4406c624ba6bfef6503da363e1eb4301f9d1d412ca6e78733c9397e9c008cf08aefe02b6bbf6427c632246c536a949a0ccdb8ae69147218416c4db4a7c8262820d8f2c1d74e3eefd9322f87ac9f438f810335c52f78437046b69ee1f41b04adb479c96a125b5041faa1be1632238f513067d5b58474620d45488fd82975bdb8529a720a136136b2bfbeb1b302420c9b0fd517b0b37e6c9fb20809bff1165e8971f4fec6ef65e0f9cfb8976f553c32508a2bef1eab0e4ebf2ff50698419562b88b8158dfc4dfcf219e86595b0ba04a5a3e1108254c9f68be8141f684679fd4985570b668fe7033d367dee251f3d61a398875e71985fbb088fcf3aace1953086939419ce1f24e190c3014188edbd765da91297eadf3a03fd6c827f72a28d607d004a830a5c913193ee1cedd90beb7517a1a4e22b2b097258c62b22b9c17243b7dea0e85a32f4fbd79363c98eb612217fbe5b85468a0384df5c2d2ae00b47dec48191efc2da9585c66ef48ef3c5beb361918843fd8e7d29e810488c9713f7541b5fcebd42e962eb164c26c1633e44b45097147c05a3558a0b26a5381e6822e80b055d9c106649cfc0fc7075b9f6429e4168cba87eff4bd8c6e0e116fa91f20bd5facf38cc3954bd8bc1bbe53d0730ee1e4861691f5cdb12765d2da659d219ba2edd16ab01d5b9785310124c9f5d006d16fa1ba5d27691fbe247ebfdb76420985ef3083587c089ad8d56db971c0e2edbc4d72bfce8b37a10424f5be1c46a2f147100c641b656f3766b5ea173a09ca9f1f4b5e6c6495df018cf8b99e9e71422873eda37778cc99f5060acb10e1e46c671f9f0c2b9c4d0dc1a84c6f9aa823fe4896ebdccffdda5498aa279beaaded18ae1c9ef027936c26e1bfdbc7fe85230032d49e416bfc9dee864d717709bf832072ebe430c02ab15fd41753c1ca70e660504e964d297ffaf089882f125f81da598505d7e7284206269ec268eab2b59164f7ef7e9c6ddece419a9141ebd49a1a31074b6faa5d4c6f7662d5d838fdb95b872e732e2e184f0feb0a476705c92d39331096de0aba63ed66eb87f8f15e01b8498b488bf66235624b493a1ed601a8a12b0e9576d1be8f47e871696a3892f50b8b0e15d16bcef07581e5c4e0c7adeb2a05f8ccc3ad6b4eb6d180bd297717c054895d239efca577d48bd6fbcedb8cf519c06e826b1c3f67b243ef0661e1fb852db4cea0b4bfe961d372a2d69e8c37e5d40a7a91228481743b5be7a1556288ab9349052dd8d4ea88ec4fc2c977fd771d0400406249a5a789665b5b0d59e7c49886a9fe7900339dcbcab0ac6fa7e6caf29b42e96d7caadcfbe569c4f9afc9285956cedff2d4f4f51b20e7dfc7039c123c99edcd117da216312fe7f8fe671d2ae3d5cdb0236330e778ba7d627db3eebc15257522aa6796af000dc3b6c2c88e49411125678f14565aaf74691dd02f830fea9feb6a404db5efc1b38a20cd214df9b38b1d143dee3f2deb30a8b1db463f67099299e7cdd0fedd25ac34b4e95229349ed13294fc4c0301fc0da81cb82b52244b0de0f25d91ecc4341678a267b73cf69284be060d325818b5ae456b83eb96c7f2412dd7290f2f18766d7a8b30f449ff75b4ca837b721cb62a971ec99d3ff4c269a9099d538bd4583765a9261b61565affd6aea002453913d564e7106970f8ce630a07d2f0fe1103ee8ca2c9eaa6f5f1803e164013e7b1c14239664c9133c32a87e6da89e19acee91dfad99c5360f0abc4caade22746839011490e2b90c56f29e22871bebd0658f49589c25ec3110f6302692d49127cfcdf80baebc5ee791f4c01262a6fc6da16c4616c4ed44e1ae417e34f122626641fbabb155af0f3e45d3f9749f050a2a097171c498de66986a06a65b5d3693b4a3f087b0e942a66f15a630681036097386ab741b2e584331cf35d0cd497fee8f359472ea8da0ffe13bed1679692d41adff753986f1d251a9508e225d2577b1d35c37b5fac28a4f925c4d974c58e6002cd17e032957a5a79bd2809a0f2a8b18c63b6be53c4b7ec5888e18aea6ae0c22d63d8bd9f7b81929cd9c72fe3bf74c1ebf4425c7efe4dd3e4e4caa3f3ce53903369ae72efa760a9a88c4d2ef9b3edbe82e717e3105ad901b566d11a25851a3168156fc5fced0eb1813d45cc02a20cb2c527b32d467144b201c83c0b3ef70144ebdc08f80b8e4a888d6a606064c17ed27392617fc86d97b677158e1ef80cb610763067b6e0f89ea1d00cda4adfd5b25e038ac1d285a0d51ba1177fa46228017ff65b02f1f3fdf45d1adf61794f8d14f8d2ca1bcb7cbe19e0506634b31d2c6e56b666adf358175bef1445a3a6a57b714c2705ce66e18aa15ea2d9b872199e7fbce475dfaf1cdadbf0c4e8a7264d328729175c9d71f11e98564a1aa3d1833269e37d51847f5ef738f158a1f58b10f0e6f97ef855af4e82e7d6143298979195f75c5778cf31e0054e3e2a34cd576fa2f8b4fdd8f304518456980970276d70eca86c1e6a7c646e6fae59b5b8819300c2e2e7792b881d5fd39b16f546067f2263adf1ba8a0516428106d36552e2e6e53fb00a6b00e816a9e352f920dfc3aa4c933f7af5c2cd158e4ce78e6b868e8d69b9d2dc0684cc1f156ed6f506dede54df93ddb494aef8cdf19d9392e2590a6f7060f8cf93495f477aaae4e8851d09d9f69116ab765f245de9608a479de421aefaa95c2b64eaa9c7a69485801f7ff6d544289e8f119348e7c19d2f3c4d7b52ad7b760bb1d4555c5f5db8f387a0ae3a5380122b7ba30d1a17e1e3e6e67fbe55451704f376742f67bff50ed2deea854a782055c9a4c543d64ffd8ff6144621c61aa0b828f683823d3b594cf87846a82d00923a47a6764f7f99d7effd35273e67f863bfe8cd35a8bec050544b09d5e75ef7c7a4b26c170ef91267c8a5b2cf522ef8cdc60ef92098caace189b6343b72162c745e4e9f74f5f8b294626aec2ce2a3f3ac0e3e1274dcebf12be4ab08d605c21666bb5fa8b16f2683f89732efceafab707053dd1d381e1f7b26ff121ee31108b6764342762fce1cccb98fc252c6eaf71631f8e7c844c4cbb7c83ba2a773f6a55e637c8c9ddc37df4f30de476ca457b5841d78ef8f5e27a40ae16cc904965d31d475beb8f19a49be446785b014462ff729ea707090182fa4fb11391aa9314c54cc9f0e3be7bbd43637c7d466c1cfb0d610865e7135150703b4b3daf50e52a2e0bdbab24757d21b93ab86df043c1e012ce9c8a22884ad2eeeabfe7f4024c47f7adaddf97f4dec52547f3437176572bc93512c0b83eade7345039c1a1e6e7728491b0eb3ebc3ebc41d62459b722cf86f04e52b63d9d6533580a66a671244b469e9a44565f3fd67144f0a7712ef823dfbc8bc0a51bba6b8141f96e86de911e96786eda24a3886a43d645aa60e8caf1bb90ea0c6a47425db5df3eb003c16bf058dd2b92cb7ac7b51a0c72d198d66dceb9f1e142f9697db5bce6ff6f4e22e8f3a2186c1b822f22430b527ad42a1c2533379c08581bf071bba4d075af707c672658db720c17970fb424edb14a9c2a5fe10589d02a15c0eaf3778441b67463b1b6afa0afb38b47f607af355a9f390130e9e8a0f50b65679eb927a1ff29d97780e8c7e053c5b78aaaa591cd1da75c33e8242356df589d9d3ca743a85536d75b6fbd1d40918be8be3de720f58a293d729cf5c1f34199b5fbc40e9f2fcffe435d236d71a9fe8c3cb7091e46917c781c1f26b862a786108da74dd6f2d5e1b3405d76e0c14f18045f61a0fa9bdbd1ce30dafaa3de0b4cf8496ec8bcdbee49f686fada9e238d8ec374cfec92acc1442288bb9c7e20bb4f4a0af863e8319b4f3d51dceb688fa391687d8a866acbd45fd9ceb55b88675a3a316c39679e3e688c05c9bd85dd3126234b6142a1108aabe325986d54b38a474f4b2dc989c207406fd4820802c33fb1acc6a6f7f6fd49e7c915f502d9b17b77dedf5e39458d43a108c973b76f360afc5d91acfb2571002c2f4a7bf27034426142b20e6e031712468ad643f11f5e9eb365de38ae7bdfef2409af9e4de5dc47774d89b4f7675b22dd1ed4781888dab53b81f324ed837be4a25dcf0aa03aae8589994793913ce4ef4b13acfae95e110efc83201952941e516b0000de86a1198c13270c228b551228289d04dc52c654cbd59b9cd997e7a7c47d30084b5090dac5fa88212b9b49058ffca1c931bdbd01cc051e3e1da67ce3d6cb50dc62e6d6b1c53324901e9bbd165d58d03fb42b6c3974e7644d75dddb597d3cf83fc2bc20019efa55a71e4e854bbee157ed2b0dbb9ef345b0ee7b4ea2cfb20ab6204cb0eec98fd4ec203bc6cd510f9e433ba035277c9e30d035136e2df53ba02bafdd99ec683cf8a3f37367ca43a651edc754fed9b59a21e61af3b520038d633ad5b73b5e7dff220c07b2e54ee13d69204393affe6ea5c43183ee4c5f4cf20e3d4283d205fe9d87dcc90a47177fee4926db2e2b8af13402ce9e014c689b4e2896a4778592ac600f54f3ccf645d33df7825d3910efe71d4c5bf551121ddfac58d7e8dc5604dfa450c8945753b710ec39e2768c80ba2d7d8121d326c530a43a4ca8bc3c49e8c239a8eec1576224d3ff0ee2f4d86a7167dec01fcd2b7f00b4688093ebf10f0a0c34bc6914ff8d6736de48b2d45685766a3915089faeaf9e6dc6f1ae69d6f051edf3aa74ad0bb503963bd44be72689231728a7cd3685c07aa71ed37737ba996e1420d64233ef180c09dbd4a1a2f11ecc9286ea27acd2bea7bae7b44ce85dd8695069930bf2c4f4a65e164d12be64abcc1cda479be8dbcc387bee471ca7a99fdacae60a2551b42fd7ab08ad99bf75525681710fa83082f4ac72ceb70b63ea5490f2811c83030bc1d94bbf2470c76fb47ef05a555bac36a00af2f40a7fdc2a89a43970181d3cc5017bc1c839e5ce16ca47ecf89214521d643ff0fabf27532cd9906fa60001a608925fc9358b1c8a9f71ef9742a226eaa5bb6cba23325cc45e6e74e2e80a822d3d78f667b93b32f9483497c82367027d1b8712599a1dcb2bc824f1afef13dd56d9012df6d43a71660760895efbd77c20530650f31b4251afae0464872ab179d8543a7503485443c1db275d233d94369a8f90a386c7d0defbc039260095d84edc0cad3184ddecda8c6afa3d4ae7c7116a7ada8e4449a55a0accf3a35a02dc78b3f32aa27c3141c6b9adb52822a8d5f09717fcb5219b92c4d7337a47d163c6f441492bb7b4c07aea98a85df0d4d75aa939171f40c8da18fa3cc55d2247609f4368c0572337ed7ffa3538b1e613a35b61d05c86a69a15f33d6a84aa1cae52db078c46ada2a3ca844cad35a41eea4db6d8121b074a089452f777f72033448ee3ed2028dfbd8de9fd9c33934c072669221e1304ffe307ff77c8200ec3de183b9cbe0900649442c7bab2cb1e48245bd2a57edf4ad5d96327d931407d6cf8ebc2fcf17830d62f1c8df618aaf8e8e8825695e437f219cef9ed4e76d535325b4f1a658e9e6731e8f102667bb5db1b812c0bfadce5b48c42dac766ad734bcaab4afe43fa80c69e7242386900051350bacd63b3dd07dcd3a4ad16add537ddf5015517d8c75cab4e91812f4cd05170a93f3a8e9a0349cc3ef802986f9d0f04a81f6bea064bf2e385b7964f5ac76959c51f87850e66bfd712ba4fefac9248464802b8d344ac0d0d76d640d935e00f741657d5f44b4dbfb245310d66f96876bab645a4b7273ae0da1a51ff30723d656544304f159238c33a8abfe425c156474463339b92f01ec244df9ca20162b98c4dc8b62db95b4fb0899e3cafd769b1dd0d038261ddf17927eedb92247e9418eadfa5a0664691ee0ac5e312eeb352b2f261d205650b9ffc1b5b3b50db0f6cde6abafdab9646015d4b0a33301c019868d8576f9a16a9532244510c5d3909de58688cafdd8cba67f5a1f19d9008ef4e99e421df8237548be1f1641012bc8befc2c44d46c9a8fd9a19aafa12e89e4397bcd11eb1195c552abd50894d2cb55079cf315474834e1f546fe7dd8663f9e9ad75b067e681cb85fb0047453ee3cd21f2e4526e8fc023b13c2a27ebf5a67a28193e861124332c0a951526998755dbd6edc49be50ed9378614763496d8c5dba5033707628d0ec234b1996a22c81c8bd679565c0745db385a469e610eb2dc284d5e15820cf0247c454e757b5679256bca38b3776c488554f83d55185d8e1526be35281896258755328c5d7d11e012e2fa7bfa932ed4789c3e5fa25fe979418e979afb180522fec8f67bc3a681888379f63651577c970224371be13a35139f2e3afdf121f631dcb688560c061d90b70b0568e60c683b26be1e94459a9da9b1be711587a5b602146489d099f0dbffbcf74d24f50b86f343183c04b778a427817482ad5f65491d47cd148ed93ecfac0782b709933c14ec43f900fbf1e87eeb02b99b5f0ced932fc8c609deaf68a727cc7dd0c1114e12f05c6d5b879345a86ab110cfa172faf4813c796376b2ecc571aaf3a515ffd47cda35153302b08ea6ac15e0afbbda6bc5e4b8cdc1b1f3c62ccc5e43a0f5974a09f5a191f15750c813cec0216646610f1e6ef0e4fb71eca3f0e3f386cd2c4569ae00879ab1cabc7e6c68c505bc71f9a96fb05d0a9eab2dcbabc5729dbe8c14c9e11fdb28aee77619ab3a2ca886696419b38845372f2e5b77904e3eda4ab547ad1ceef324278fbaab5acf9edf221ea85798c2266d590ebf539f7860099ec750ff823ee986b5090a0cfee0259c833258efc549d15daf3ae0a1503555cb9756534551f3d3fc485607252f40ae3770e65055a7bb9d6167c910f971360d21a8e33f842efd03e13e07cd8da1c3bf41121ff55c75e29d9ac32c14a29339d98720765e0c2c869f93a44eea2922e975123b2d7b7906c9df34b554c91d5fc9ffaa146b5cd10ea9cb99fc54dba7bf466abc68e5c7c63f520214e85b9cc3f12827ba45d51f11b51278cfb0b888af32a8cd0575462edc02a83f034ea88294e36dc99b4954981b7afaf8eb0b293c890bc76e17396d14d0dc802af9cc1ee180fe19b66e0a1cb9c1ceba503b188d1e1bd13d9a5e69c056561bf6b147fed7f902d5e3958bd3433c518436aa8c151657418ad6c35f3333e502e777609203d4d05ef2cda129652e73165bd6d99bff607341a8d760d31f9b87a2dc111b54a2a90ae6e3ea9f773077afe58a28489fe9b9b00dafc20e8951ece68af18e284d92058348d9075540f5a23f60426151c19bc14d55ab9adfaa96b692a5cc69df241ac7556f751046e13ed17fb3ff63564c1955d6a9202f45cfbd2b98f7a356a130e3067ad9238af1d544aae53f5bb5e89c2c4f3a65d6fba07a4646c7bf3d5c7b98c0d79bf767f9fa60924e016612da69c37bf784f78a1d79a4b73ec04f6b81482dbf94eee34258079ca892618590ffd31739ca40dc8cda1ba3345a5048933bc9017fed7f763a46412aecb445ae3b11665e48bae7655d0b9b75ef442bac7b7bf95dd045be1bd7f8f8989b7eaad9a1c69244989cf6a94ff6a62091e431cd3123b8d6f5d6565c0fb1a947c4b5ab0e8a956d2ccc92e79ea305176bd69fb681e82044e523ecf7c43107af6698afd5837b714998fe58945f0a35f9c03f50f87458e97eacaa9c643e0e6a6d5bc39b7a94a8a4a37d33a05815ec98c372f1c92aa9db727ebc397f3384874ad5dc5356b612e5f003f428bc266ae1e7385649ba014e823b7662d9bf6d876097e8ea91a2207ba51689bbbdb53b7a7700e3d1b85a2c12d9697a933bf06e08a0d70ffc6fd3fa46cf26c25b9d8dc170a367810df933ae55723b70b5ac829e9ca13541e3d864695214e6f8737539b7c299070d301a2291e04b58b57efca8636f9a67eed531731053f9fdc8a50dfd465a805824b3a7b93b63831132d0d61f67a17d63423c5e0085f5c11b69a38477cd0dfd991c9e13e59edd5ad595c291bfa789bdeb1da704c6630a9a11fa56285864b04cb96622135fde26a1dfb122aa894f5b590e1d2f5af831fabf25cacda0f4dd0b3d839e87f257fa5ad32c637eb55c9e7c986a30459a1b7e492f307b7e07767aede7969aa435cb82eef0fd00fdf639d439d7196dc38dc02509bc00adf5cfddeae8a9f17522c18b04947542185eebe822bffdbd7d379de384766dc1b23e1e544dc980f0eba9abcfc71eaaf873cec4d07b3b8173a014efe8eadb054b86282181375daf0a1ce8ca0c0ada9cab31f3dd007356dc012680726c77c6942aabb8b235a99ce7b955bcc5f9cc8af4692c99a6c62dac7de7a0eb0033b1bfeb61ca46ee8ab9214b18666893723da2a3ade00ed5406f30d5a0d33b642a9d86129f9d70ddc26d8d2db452aaea88aefcbe616e098c284f0ac04f065fd7b3ee454882f3e727041294d6196edb9b7f7fc93086abdac514e381a31b10a2f033f6d1a2f4f223e6b17f12daf760d26fdd616cd522edb228a3c46121316b92a62f9abf609914b4a12fdfca3d019d08a9747ca01c49f133347c3d5f72fda352e0ed00c2d48ec7178699250eecfbfb48577f1608faf35646d8c15fd02c999356f90d70da487e5c6fd056c97d43ce42a651875618d326eb22479c87250e1f638a3d14d90774b6d70183021851f62e0b498d9a378f9c7830e09219bf22d51d410c09629701137b560efc71a5bb2d569b019359fed2604fee6a74a0e4b9b151fd61cb764b1f7ede05dd6b1d83670b0c3f9ae10802d7cba5bda0b8ba4413ec0aad493af5c1a521bad09b935bebf98f60a415f314bdc830f988a90b85e0ffa77f52965ff95b45c3771745fc396134c24578af790d7cab816365af5b5a5ac8407704e4d281c0121e747fc0020250d1824c03d32f811aa19dc13f4d7c2a005a3777152dc2e43fcbbb75ee55e79d55804252422faa529f286107644f1ac830d25a123bc2e20c6e7dea58f6c726c6a5957255cdf9b6297dde7ea522ffb4b8cdc2a350a2fbe1d085cbaf6394b408f6a11cf21b81527fcecb0f6809863f77a8cd8925f5e81fd69f205700f6cdffec841b4aaea183a71ba101ea8ba4be14c87f9f590db10e3bb1d428b88bf68d13fbab7f13328a739dcda40a0ccaabad35fac421c16224442214e2493c577771d3764bcdace7108a7e705c6e8560ddac363d5546574d0516cf0452130bcd4cc6b3c674b42aae1280efac3f72a1a5a67d7f68fbb9b337a63806b25f38dcd7a49ccc494986b28461e4ae49435267a3c297f2f19a64feca2b5fd9c9b69d8fbec8bdd44fd0a576a065d14758836252bb3d41b17f20f8644cfd79a0b2816d44449e534922df6791040028d8d19679b8aaea23e9af886ceff25c1a7d7e6e836b6e7506fdbf7da856ef893860e5b13e84fa730fd89ec528c70dd99b26872d41a9ade128bf10e78c394f4a8d4624009c5b7c6368d79a98e5d046193a7405a89a329b464741c0c5fdfbb683731d41c9e7775cac1970c2b8166ecbad5c71dbd34f96d7b818399a27074c781fbb128386c8f18430382553c3c087ea7a76015fd1e9b0adb24e5b3d0b0239fe67ae54e6e597c42ced258adb4f3b7de48da642c80665f46a4f43e9c56193a7d19af00a5b33f002e043d461bb4244d42f7612fbdca531aa1d85cfcc150295144d2551a727e1ba686973226ed5f1c4f8249a109a8e6671b9422c0c8bcdd8bd0dd8cca4ccf25cc7d143eee6559ffad332cf91c62f5ede5cc314485c5bdcf1e77df82484f3569c5c41c6208abad937dd02996eea2a0704b5d8a7197a1a3530beb631a8058290350431209e4540efed21a969679f406063c7716f04c4077528876bf3dbf0f27cf6a8643ff113fa0b60fa1c61c5b530c80d75a9f6d4d2037f8d5ca3dea7744804312bd922afcb320d168477f930c3964ac1979a655b1fb51933f3bddbc0e97372decec119c97faac4ac5f3087d443c0222dec7c20976a49dfb3ac8829bc28d3eebc2a3a6d04238d5dd48a6172b6b447f3d2ad6e1d4286c30379dc28063e43f6fddcf3406400a0e522c1939a18f08434769f6523c261c867cfdb88398da9bbe9a056dc5beab570a0c06a5c5fee285de04fc0b167c7c9e5005c59b49db830806832bd422e90b31b215a0e608c72f037bc50c82c11cc809642229294bee030bb01e132239f087b78f02a2816677f5bd8e36bb4623d56dc2669a9520c087a72dd90a544c9e10fc98baa62b4eba8403b0f7e9b7af1eb4d220619edf7ca4577a42b5d3c86fe4f1d931e205a7b69be81394f4a140049b265ad27adac4a3f6fecff532fd1a74e01bddc708868c70c9275637ad0a01e63e8ab0ca7f1b9bf56ad14077e2080b6bf7c6952fee4ed2e14c8683005195485b460bfe7799fb7c869bee35b8afe80b26b6ade326da5955e5ece11eeaaa2dc44fb7b8e48a38664723fc3aa418820febd30cfa4972f6ffb7f4efc6afcff18ded826c6400ed3a9bfb6f6ba3cce059d3b07cf30d9f36383089e3a2cbd877d98207a50e31db5af786345c92dac5107e00f5746dadab0985892215cea16a4e7fa4c470be574c1ac5940862c3013b1994d6b55ef3076f870dea4eff974c1c18c4a8d603a69791ba65889c4c5854332ab507adde80e81427f48980394a2490b4bdf85035a85b7391b9e032e55b24d7bce79b4d1db33a8da5504c7dffba4380a6a304b76e0c7ef7ab56ab126366db4489895b4a5f32e426278608002ccdfe69670419022c6ea3a3f2fda6852d2da2f89b3e8c8d77f61172721f929b8fe8bf8f22551f664921ca8003e7dddd18ad895f61d5f3632c90c6e49d931302f94eddc2e40dcf3650fc79cffa9835f61e0cb5284ed5ac53b513a6ef5bd2783d9e0a4ea08c716705a0c9ed9a39cff54864a0a06d15855056c1d61d2c386a9c4497a0942f74d13091688a516896220ddd0b3b040e082fbab58d74fe4c03e28950aa3c6553085e0cef3344174f73b76da0f72010e8ef1ef6e0c9310f1cfc65c42041496f4a260055741d06dd7430e9c856240a4b5dcfe45f00f40f575c27d14fe91a8aad157fbf930d7cdcf004d4585b39ddd27c078fd2dae56dc9af0805dad6b524d4573e67a63f1d2b49fa55ee4ca10cea9fabe586e679836ea1db0f78b375d28c6fe343439303755411894abe58736a14185079bca8af91a2c7437cfa855206cdac901d8947039579c8e9e266718540b997e62507f6fdf1a6b277a668a64c911b34ac9bf47302dfcc8c31b020deac1f380217c1f5beca2c0ea7d1aa1afe60bdd6905a28d6aa194044ce427579573b18bd4e847d093e746972cd0ab3970ac0cd3baca72fccf1fbb0bfce3da420ce12ab772e2d9c6d44e8c7f27d355de74b956235b071249ff2c4f928fa8028b2ddfe779292a961c78e8f259fe66912381573dd18658a0c602af7b4645402d040b19f8450161915c7aee0343ae5025058abe4bce4f0fa36887fbc0b922cf55d14ea865be5ed04ce0aea3b93c3051bd7602c2083efb5324cfe1f0a03031002d076affa2c7cee0327d48e34e8736c5a2170c20bb22b5e1a0ac83dfd9e8f178eb242ea276f008c016e823fd78551059fd46f422d39b2d580b2fe828ada38b4ae81a0db535f39ad08d86afcf8fca99bfc43d72814a0c73296271574c5514cd31fe37ac637d1e12840a70c38eebb921cbbf67e72a26442e28a333c776d8d9cc22c9ed8ec2a7848c02e73966a40e44f70a729b73db1d1b273666a83d0b0c8491a89387589cdb5ad5a148084dbfbf5db2aff6c2c453266ecf2e3eb40462563a45955d13baef69028b9b40fa33889047ab813ce64728e0836dd0d4f4692cb4f728ed00b7cafaad9347f5a7ecd48e724ae511b286ec7b345442922cdc8185ccf34b9fff08de517e83b4d4d7840b325a74d5bb2db369040c1f38eb53d1223ea339dae3d1ed828a88463ea0f6d81b51433be87480d2c38b66c135466baf7f0e7872dc09acdfbd9fbe11391e36e7e85d7e6e3c10dbf3c5f2677091b8f4ce91770f54146b88558a6bacf9c383a291b3f61ad37b587481b6e27a7ae2950b1cbf16984340c5ca981a0de924142cce531e624dc5aa95b853bd24d3381f652f72b74f008551a4c294ef4a998489bcbf3df3c20543aceefb8abde34d9920dbe3db9774207f743c38ae871712f3d555a339a2fd3d9475c65877d96814c2364642b558db18edbd26ae1d3675dc0cc30f4bbd9ebc3bfbdc4e054ab1bd84fa4544ca0595eadb00672372a682124f2fea82f6de9ad5ac808a175f5d4a66e8fe72a14ea4aaa2c162d0e0cfc994011cde44e4c3eec18aa90fc7096b6f18ee8fe7d2ca3101f511dbdd805e8167a7ac586acd5b5dfd284a5b4198ddda140d82abc0c9d720b2895f14553a533b6301736f97d33b0ba86e2d6243d13f6e8a7e8d64f53e2fbb62bb3ba568e5414f4f7d02368c407e0d4f9ff404b2d33534edada1bf93dd3db6741f60afb56201228f48c1e58dbdd0e8d76f6802c438cc5f36bedb249be8a9ff6a066043db6a51bf67c37c6d9d9a196dd0eec888471c43bc3e4da854e9469209df9cd2cda80ee02dd97493501d7d5bc2a801f49d44a3531c879267110f55f97aa5a1c07ebc6eea697aa396e14c9bf396e47218748b5523cbebe88f7fefec348526a4df75dff586f650e43b5643a1c8dfa64ef5ee213ce60bc2139785bb8316783e7df65df99363837b919f7344d6aa6029e32afde2da7cf104a4e122a9d8f1041f748e84937872e6b877e69848d1e96bbb43df2b83aac8afbdeb8d6ed6e7568a9c2368d7ac387d377c9d9ab71c8048a994fea8b712d70c976635d76535c36edd7629273ff1fb68ccc15757ec90f3e328888a24bd8e9cbfe4d66423f6bed3c3db517c2c3ea61d0b40d52c19e4c4295ca00eb80e737a3dba4a5e16693e88ea70e2a7594239d716599ca50b1fbd949e9cb959cdd7c959ceb1f8e22db58cfddf7b94b023a375fcbf297fc4ae938f0154036cd8610a677dfa9545fbf3ac9cee65186d35262c00bcb57740897ca5bd46efcfd93b6a98f58ecb1f5f1d249841959b57f9eb0b62fa41e98d17680099e5e13bd3171ce9f8fb38ae0a557c4edf8f44a4b9d9eafae48ffbc48e9487809376f1cfcd31f5ff564fa8e1967341ee05cfa1f651063f6e3e5cc22ef7c8182b10403c530b5c2921d5794ce67e6a402852d11c4f83670291ba383cb1c9a346c4ef30c9e38a591b1796c9ba1ef403982e52c38c9a8d53da28e9de5a2b7714e0b0b6a4c0e12369e506fbe3c6251b031c7143c9e27c8cb7870ad01f71ba5a8c82c89aa41fd0bde5bdcee0289654be9e3b065bef602ace396b44ee76429a8f318b549892db0f8ccd8bec30e446fe757b8cd3e4e800558a938d7407ddebddd547cda278ea34418a36fde2987d66c819ed32809ffbe89fbfec860eaf4d53218a619039a235188c0b8a74c1afd9deed3179e4f0be4b4184d2b1ee0d60ac516a2624e9c3df3f9987a5f56493b69a499b344955b7b0161a34bb1426b72a22bfc09e34440bcffe2111566e72a429ad529ad61a0e23c06fbf6de7c4356fb29c1d2e8fde526feb75326015905b2b63e4514d3359f9514a6de7ee0fd10c23b819665cd86b21563829ff6813b511e6d5b8b0f3e7060a28e28416d8ef43e5e09b27f28045a1837df4325cc02d1ec31be66f5c1a6fb6a583adebb7d9cc0508d242ced228df118c5e677a459d343c6ddc2749d772b327e8b1b824f4c8febaff7a2790910d4cdbd2dd4fc0c10351b5e5674f16c4d8abd90710bbd88199f5d02440581d655efc4e3ea601b2861543c92c63e92ffa7555e672f20779936b23aaaaf13167b275f53025f0ecd42ff35d5103112066b400d9fe5512fabce5040b63188868fdea3d4e8d7c489ab06374a4c39e8149ab47767d1dfc0e383a1307d8d8fc0e10e7a9768510d6366087ef596a7cc7d932f540230b5e602f7a46308e008e205c462e3e59f30409e5b667814cec2c529b78db3976fe675e834b62002ce88e1b43530d60cf1a739aaec78c63f2e422ba68ea401fa90c039033494479dead2bd41829dca21edb6aff6459b5ff777e725f7a4e702ae48da3ad5fe5a90bfb7d4b9d31d168092492d404243ed064a155abbad8e117734923a3759dcd446690bc427aea45c447eac4b445260a8156af65cca2e4323ca2e521dcc93b57f3f4267cff259a8860ecab8988c694cb6c6d6edd7eae685234dfdb8dc88cb3c5ea6a67d538ae3734aa1607ce2ca98c36e3663aff9b1fb22c33586e4c44f6a659a289c9d9d309e78614237b978147dc9adde5741d6ebba8805f301a4147568834f663e38bfaab896ce14c9a2ab9802bec6f2e4b5f3343e86dcacd2060547b81a13d194b100cdf324a0766146d859602ba236b641e3168e7a5042b360bb3aaa0f4ba3986cbdbb9acca1065a7c427041c700d594d0fe5ef79d7d51bdbba52e7be523e849ca46dc4581111569cb3e139412d1884bb95a91452b5cf0ccb6168360461df2c282d2c573d6b50ffb4dcbb306d1a11da0b8b51612579b99a45ec1e2eb527cc69b49dd204a96e6a8f09a3358ef138feb89d4083978686340282972c1c046a6d70528dc96530baafcecd99fd02251cb7b5e057e2717b1e32891463191b72f25810b819edae50e0d1bd5561b437fccfdab7709708f219eef3ae99eb97841a327c6b43c61c7443b19984ee67c4b23bdcef0229d7de0a60e0bcd82992ec9075b9c98240876ac34251b0bec70621f50264f91a770da35b3431ab40a568d19ada70f7cfb14189675f13cf1225e25080c0d922cfed0039fcc810825a2da2d125e0f6ba9988b3c61821dd8cffe41108d8e73e485b44cf2fbde205cf0ee5f3f1fc8c02ba7c5a2a621261a4a5c31a1e807d968be7592ecd430970dd37ed004322ac6a08e26e0de3bde0cae9ed84197cbf9fc6dfa112bbc12daa5d567c1784785b5287763d90fe809be2687696318e690c2a2e790369dec8f64c641e510f98e4d8e1543eac2c5c64bb9df1f2d15ca51a5d07dfbf119659e0e3c486fa7e20c88a622758771bc069fa765d896364a74419c8aeb8683c54d534a36d24ae4c45e0fcafb97a132eaafc18957f887219a2fffd937a02ff830d63091ab767c904d221401ce7b94e06f011420d823648ef73ed8db615b1dd58eb864f16c7f69ed690df218bf5bc5e71b0a38d790f42198abd7133dc9b41741c2f364b702f1500c9a3c4bf1be41e20abd202a4f8475bdae1d0a6a8c4e29e78ee11d433f7af28ea17eb0eef180ae33f22303ebacd836eb42f785c22e155dc24365d3d5337b51020aaae65e65d8b666305710a5555690bf46faa61d6d60a98375c06edcd152df32156eb5f785a83df2ccd274504e1eff27b574fd9978b498a51afcb813a84a29d51dc021c9b3e621cb56d1e3ec55aa02c0cdaf553aa5024ab770a8c6ed16e102d8bff92e404f7512a2b2439cd4b77c69818ebfc03a9c6fab89971df0b1e9654b735114348d8a1b64fb7336d62ca598da18657d9a9dd32b0d1c0c9bd8a04977d5b66405c34d46aff09740fe82d4764f6f1f708c0a64f0ead8a1e7e18d6c99dcc64f28e7a2ca0126993f2bd71dfd2385e1f74d4d0db0ec2c09c875ce6b51ed203175ec83c7f3e83a7bcad00e40f1642d8673d293e067fda50f45aab3c21aae9c7b5d572e710d7aff7d769dff4e148762fe1d0907fe7a540eac205040d1a995795c144919f3c365a784eaa15146f18c02c6e960d83a031d538e8c268ed7df319b49d7b0414f65165700aa6bac74b84f658e460764b4b6d5c02536928cd8ff1a3a9e834949fe2996218000cc1cf057e35f15b00509612bb2c09e8e8b11d3b2d00c2b34db9ceef503d7a61d4be198aabe30c6f726546ceab2b43826ed80ac04a9cfe3791da7eacbfde07ef4d68863d14974b54a7f2f637d141533897e987c44c3ad9dee844fde60fcc7501ec22ba95a0b1172b0db8c0ea0e30b6b9f3c698f3b297a26064df515db7fd8de241ec8ea9d2b72cc4f7c86636deec19227d1cc2865d102104b14ed995ae0ac40fff612964edefa10e668c19fa81d169dcccb4c9017a735405c54ed81cf9ffb984eb2111f9f308b06d9cea5134534458cded96fae93b1f6ed663a121d06936312b6522bf1f4dc125f3853e14e831c4bbcaacf0b6d62b1858ac4e485338dffb568294bbddbf9f773d55ef16b51f35c75f4d237e68ac31481ed52e439830654f1202d4bde774dc4371c1090ff2b613f26d97cb4754008be63e50109a7a2e0a8d371bb851864aac1b0ca80e95eb4bbb04e0daaf08489607fd04a2eb003134c109cdd7e0f934aff6835c9b3fe3d4e5c9318b5612ccbcd43fe5ab9c014d6cf7ed4ef3f87c6753e08bf8404a01f19bf6ca3891f7b0fafc097f3fb96cda914b63081d64ef404cb727ec4cc4a2203b12673199e0157020be23b92a0dbd63070088d6020d92b42df3774b4397c9abf42887a520819147eba0cfb203871860ab7b5116417064f983ff699328efa80fe55bdc2cdd6f18bca486adb11b1d77fbdf62d77f083114c9057dd971b9ac4a53849433b9663b3e425310b4048beabb528d4adb18f6166f26947168044f96c6cd39040c4278f267fdb2b7af0d2b446df442c1080195b1739bbcd6754e1541230ac01237afd6124470609b18312d6235905e4dbb7086f87347403b46ef716dd3939090f57af3d8be3002caba9cec3144673d42af512310d5f3884ea469f3f62b8e00fe5b77b42b772d5e4941b4fc496d112bb641d1dfb0dd20b96f70adb920c17bbe0526172889e94b6229259bed217d42d6eb2bdb66ffcf4d7fd078ae4d18f45ba0acc08ce302d114a86b1e29f4120d382f50c6af87f5c936248eeefcf64b6d20833a030b602b6f89ce0ab3173b7d711d378151b471f5f4f27ff27775f772cf9926474d080460320721cd90d8521ba8b56d093a119aae11c1cbde6b3e693e21bd6bfdb0b9f343bd4be8120c581f95f22234c2e587c7c5fc03d1b7e9235340c92960334c768b6e5dcdd8b6e2078d751fa326b6874d975610f35c966266db6431c76aeb564ef47fd3c52114515f1685bafa62b5358daf4cf332b0db729f307ee739169f2a33c26ccab3071d0d54a7e67d5aa8dc7cd5f93af034d5c8ae9a605dbca826f1352e9bdda02810f5ef14f258d364eeb876bce572b0328bfd07c669f0919f53ea7abcd2a0fdde6a0e6c6fccd3003fbf207f29961ab07e0731fec7f3be4431b9659d3ceb3bdae3dd874466c5a6bf35c16df51738905fe4e78199a7de5e9a283e97117c4742daf330be7ddc5eadd8c51ee88a595b587a9e29acd95de21d74866ba8057de75232a020fd981cc8a8b8d3d39f169888705c0a81b371c368b84c42b2bd5842fd3a308da5f0533c8d77d7dc9dbe2af889f8842b6e28f60fd3d12352b61b66d38c0c0c1e0202d53b2e851cf9389f5f3cae7ffe6f8be12a3f9423d974bd276db776bd7b50e4c5243a8eaa5f78e6627e2547d964bc64079cf598bb65aa42ed680aa69b66f092350f72a542a61a95a0c059a4dbcdf32c747ce3043bccfe720c1965641d2f3c3df882c582ee0eaf1f6d0e81012381e2799a62b8318dc62a6b8af49671df3101130b9321bf98b2d887a10a32a53bab4106ca21d162fbf98943a155efb8cae8ba89cd093a5c5998a71b8a0dbf541ac4ea7e0f2dc4f18c8c5e835973e6b1c217a5065fa0464674f702eeeed29f98ac7d7e0b7e640cb4e235635e36b852baf90bf7e38eb9d8587792dd3fe2779c56d71e84ddb5744446904aa14cbcc085ce9b95a344c9fbb80441d126bd5ef3580bb1637b72c977ffd488d345fffae3266f15984b36f0a25a3399a575c39a81083e006cb8d85e9ec2907a21b306902c44a81ce51b65a3830eda81aa70d95d99abea7fcc32ba2dfe0b2296d9a21c95552d7b7b9dd09ac013a044016ad120e7a5903ff28eb2bc014ff530115020885f2789d7153971d347c3fc093b265196edb29629c107bfa04c2bbb67917847e8f00ffb2ca2db672a56d7d8e79470e7e38485f882b773437a612d4d624f514c47c2da857714fe4501c50e5e1db52a1857cf00c18f9b21277823e0db690fd3ed31d06bd340fbdb760629e7cbc86da96159cebed220027837f52304971f136ff62a6992ecdeaff31403cdfdf82fd56df637002f28b3aa0e4d927ddec3afedd86c25ed1928ac31a097169da5a213b3bc0cbbbf0669d389b30cdf886395a04d6653b345a44a581709692479dffa05bcbcd0b77f29e0c794c00576d31dc279b87b1f62d20405cfbab7fe251c386315e5c98389073444420cae767f0d2256450ade4085d98fcc2bef3b9418eafa5671815c3ffe9fdd472062e07d775289edb9c4559dced2e95ce8837f943302f5f7ac5346612ee02fba449db63e11b8d32db4917134e0e2a27144a5369ca22b14571f3edc19d791261c203dca0cb013517444fa34f3b2c4cc4c8e402ea2933e630b92e5f83b23130ed2fcbabb2143a92ecf0b4ef5f3019802dca7a3e5c6f55e2009392a95367cd2a3b244d247ef82bcae7784c54c2090a9613e971813ff416c136e423946d051b20527fbf3d848f7c0ffac2fa2bbce91dd23ce70f64c6eff44982f76adf3c9afd2d1ca2967681e04ae04dbc3bd68b2f61af865048bb3df3cbad8860f499dfe3bebe2af53f04a8aae21a4cedba28f9277703aac3328d86706068c86928e63eb1c152f0b7b92b2abb127c33cd9e6deedfd1c42b208cf2e01339e23699a1950b6bd140b6a11f829edca3bda16ce572d22debbd925e69e627eab63bdf8ff912ada524cde26f3167aedef567bc7fb4e1d6e09a2abf9a7de8b21f4dfc679978f19f155e229d31c4473ce527302671de0ca5afdcc9f070570427e41ecd84462263171419987c8bcb106c78014678526364ac66b4ba52014093bf733f54884b50b3c205a565c40a9d1297d9b0e1024094a75bddab463b4c4bb016afa0125e5f6df2b2d946137fbc5ae3d03cf715fd843df7733d9c56432a89c56b7ab9e0c7188fccd630ec7c0e150c73ba109d1d9b3e6e41487866bdf81d542c4b5e22cdfe18afed1bf2604d3505e188c63da7a0ea3dee76205f5ed7253c4c87110605a6f904e72aa87d0b90c6cd21b73cf5e9258e15b46d1a3cc1c1460849421b9a62b7e2cd17f17318cca66880a15247f4ec10b3b8b8f1506a919b814ddeee9e83c3107c67efdfe4194ee1fd1c69e4d9c745797620728e6e4d1d33866e48ca55d2035132518d4329ae76fd8c2fb0696dcae74ceca4236924ca2bf8c3c326e21fab1a5ddec3900f6532e571127c04a41d1ba403b0c39f3bd71abe5f6c19b19536e19f1292b89b1d5165a36310abf7af8ccde8bed9eb5d45e480caccf47a42e5e0d30c01beeffae16f8ad7e2c9a52727063df765cf600e92ece9cc27e217f1e8128ee7ea79c59e959a382b31dd33b8f14f8b06a6ff087f97a10f2b4dffa4631d180d0a1090551ad5fa9bd0318bc9e9e686d58488e6d06f0686a112da30f26135b35e4f901d413c533deadc8ff19f95ec4af43fb28c34d88e8d02b4815dd90ea1e80a080b155f473ab58b09b37ce28b904deb36fb7667e2d99fc4aea9be773e6d801979e6ec41178bc3a2e881614a7cde5f0de3c8b13885404e62d6d42c8b1144e5c84b802f6d3b827d3819d4c81a99b7d7e49c64e09d905f9738bc4c68afbab2272d9f5fd94131f63e9708545ab4ddfbd01907c79a99e9dcb44cda2669bacc37d8a5bc4a421923451339454fa78f8431a481f2540ad849ab8bb65e4838f622350b0f2933f4c186420ee30f267d3a208ec782d94ee91c4846c156451506a2472c79e46b0fb789d2306bd3d8a432770370ea08a012b7cb2795f06801e946baa61d312fac0b893454dc052fca9d433f9cb632bc0cfcdc4f1228d3609f0688c4d34403a0ddb2a84e0259fb8301d94a9b45cc6f3057ebe0c0e91093d8004cb7370bf214919b99c6be10af87c54bec0d5367aa26aa0ec09df911f1e4d2e858bf70c247c67cf715c2c178969ee327efc6627cd43ca47d6969f51ac98ad74b4384c0f84bf298e64a83186bd3d41395755399b89d690946e488a3650fdefdf2d87216e37654491f89a17a4d6ccc055b886470e87ae42ccb1f2d2f3f08ec935ab36d7d11d44f4d867c74d52201a1dc5a72a6b32cefb7e45a018a96b1a7d0f6955f7f848cf52072a9c9efe7c5a0050236268366a4946b72c8bc02dc60b6888e199f1920fbce372005082a0b5bb6ec135d2c7f535f76909c6437ac97eba9c330f6946ef3a36f6a7566fa219e93f0225a077b123e425eeb236043a27a6ca338693d0d8a76d4b9ac8bb3adff98489021df6513190a35eeecda281452da5d69e8b2b16f9fe0cebb2db99fd2cfa9e526e0a301b7f08b1a75ab998a9f7ebe31d98b4888b2cfc254ea9ed1e1e25b3cd58ba98b7377769a0e8ed8cb250ea06c79c2be7b8aba37c7a00c89ff6edb703c87ed0286bf155bda5e946e77421c13e913c760053c5901dcd6a2955977748d9211a68084af778ab916723265dd1c6cacdf60a3ff0ad68f73c38496ff6feb96d2646e77b28715cb549e164ea0f2ef3e2313957f0ba91bd0ed5106ecbb05d24d0e41334238a305aea51223ba2e417957e27fad01aeac0c7d00904df6f61ed8461e0181272166a81d894ee0e4816788c51fb458b7a7518af4fcd4b29ee3951fcac7ba99716d8956c1858b4fb565b5d51ff2a93a5fc14750323a128d82206cb44073e48bab58ccc37e156f5574bcf167b450fd401a72a4ad59cb1308f64ae48e3dcb157f1514c3a33fbdf98c467e01455c8318acdd27ed523b9a7c03647c26a20b15a79a151fc2af72a04db7fa0ff43db17bc04e2e11c9cc51607c3696ef529e24a7dacc7fa86b0dd9bb2308d8f317e5e55826b14f3b18ca3634979473c3ad6e332e520ca590100ee2ade27c1a97902df06a92237f91adc64fc3ec694a3539eee60488d29aaecf935443877628d1e2258248f1c70460b1759d3146f52df28b20e7acd550da0639aa602016dcf4202fc222143c4ba91673debe8dfde12c4b4f41499a1f2a8a334e2849832b779e1e7620ce63dcb780fd3e03c8cf1f7011b30d7b2a1d8d3bc5ac55218378f0aaedf950bfcf0e3cd1609c3a71a4c7087a2fd541a42fb5906eb60830f29cc2709a582109ff39ba45f737348dd5aa847d4a4244db5fcc79f137a5302db9f88bc4e6018c21fb581f7242074a6d51c16c4bd8d114b1d3a9107c77acab3ace6e8ae0486024f2e2bd8c5d257e6265cac50a5567f64d7f6be777dd21420d12b262e3d9bfa2a1e85679989382d989e72009bacead37b3793f8db7c3a931a8f070f9ea5a0afb65770335d55b9a3fb0da27e0f5dae422595147a9e1b74580a5e119451bf81488b30f5c19144debd144b51f1acaa08cb79846eeaf8babe2052a24051fe6619e68400d1c3597e0cc2639a81c781a351376e7e437f755165c83ab203114931e9130e8550164ab020dc563ed0db7ee0622575edd6700dabd148c1fc6e9eeddc330d730308a67131820650c7c6521aafbdb11cbb38ff4fd3f60d330f58d1422a6d6e799d7b79d699ce07ff43aa79d6861639352f50666caed2ec3b6498834852c099cbbba1c53265c4ead130caed8c33cbf2334db5d8115dbcf55879f970a067610180bfcae2330ef21580704619a2d393cd98d8f01cecf9bde8fffd39cb4eaa867a8957a9c272d6fa17f8af90352146a9fa086944c3cf0f31d6a60e09e68f7ad49a4e347eaa04ce5b501e291b9f935da91d622d53ebe1346040545f999ec31227ab233d4887ab7df367be842152339fe976e2aad9784211c8bb4921c0a2374e8d2dd5b90304962a0420907f05fe8acc1c20f24b9774b3fb382389c523f8e88e2fba9c63cb9f0b2e910ce63dc1a4ddbf2bf2472dfd9ccc2df6324636c4b861bc967ed762230fbb599ed3c2ba28e6a15dae77cf4d471a97cf1bdefa3a52df63c290bdba2e74df5077b6ee0f2e41da0ed36d55cd56caf75f4e59d3a2815be1e5ea39aa8150aa271d03aece6c19d1367dbbcbd212ac4d92940e719435362cf80a9051d679c2aab1c1f69e93474b8eb753913e8c301fab179baf2cb987402208c299fab7b613a5a552c692509be0d25863957295fac12666ba7bda537330b7f5425a9d9261eb180a66c870be132dc1cd863bb2dda2808fd6a6bf860ea5e0e422c84ffd7fcdc95d9aaf0e99aebf6d09508c5d9de4254b461c5b0a8c20b65f2a6fae65284442eb2fde0704d3d9458b02fcebe633940ebd3da4f9dc26e7c968a1369c0ca9c7d1b10c65291f507f9dc646124c31c1733318619faecd2fad83b931c287b3ba29f84f62765c08537223f3bb398ad92899df22068f990f6a6d087dee7cd2e2fba8e7cffc27a9c526330e19f79ac98944e2f177f10ffa871391929ea466ae41803d718084bd2d071785641da0a59dcae91e5ebe63ff8c45c8b4b90305fc94b7028f73a497ee5a8ced9341e16827a1f52f309a54d75ecdbc712e15d178aa54386be85bc2e474a195cb82791dc30ed1d8fd2a4f684e1891c747ccfbca25fcce48227d41e6cb91f58657a08049de63f134d5332fc07d7e2453efa146fb3b3cc2cb931ece6fd2ba38ba4b6a50e62fe9377cb6d61cfaa59e3c92799d1360702064dfe367e12c6557d9867e6f3b62f1c6cfb001b9711f90a800ad7682005bbd544503e2fdc97d06e1b68b9010af6c5ac14a2972fcba3770d2bc69c34dcbe588541ec34db4c265bca55bc50365128f28beff60ed3e9b9dc9748bb5b10faf449bccf3162fedb0a469a029fd016f3bf0363490a716625ac4e735bcf80a76d9963194aed6ad7db96f68441d11d6517fb88e78f86c070eeae8999a09a1e79eef01c04025ad6f208d04061ec3f5e6a5dbec35106d32fe82f45def547df7c0eebb82f735f8fa1b1737b0fdde854ff662c4a317689f5ce7681653f64b95fb95c1d373fc0df76ed69e15976c45dc960cfdd97c9eb1fd17d2f5e84ae8955c6346355c6d07b95a483721914503e4ed2494a6dcfa49e8fa2b9fdbdeca3d456ec754628414831fafa5bd28294351c184f1aba7646f264bc1cc3c2034e3ca9b6e588334b265cec5e23b514d65b1d89468da0729b493c32914d543e9f518c10f96e29527eef15be56ebaccea420bdac490f2e2d84cd583ef89fa5b80c097176aa2af5fece686f128c00943e7756189696ca58245ac8306e4df2becb3b97c644fe7d6788ee266198c79b10f0df0b4f15bcde1b1bef71d5b7046f2dcba222d6bde578e41c097ddb39e9a785e01e53bd71fabb696ca7558504129e32fb0dfedaa72be32f9833c7db3c8256593cfe22795101dde23c5d2a2af22f1afb6fa06669d87887cef45378f0f63e2ac50038d96046cc0ca49191851b7d46cc46f9576777ad794094e381ef60699e694b9afc148c8b08b939a0664f2a9f3b1efbfc64615b2137c2dc3e12eb907a8b8eb47c5206e004f89067553b45fffd35eb8d82d73f36b7ccb2c180ac346706eb9996e3aa65636b232a91d7fb9f11aaf3b0592ed25a5ad7ba4587ea90f494f5c9e63f852df00730b2811ea6965ff5ece01a1da5a427b6f54642d00faff84852f4ddf3b8e31302413635dfc95c0199361937ccb101afef9a8709bff0f3af5edbf66ceb867c1d57ca3fa8d16c884221ed168df98c3285c7a2e1f15fb614b629c57874f7637bd4a942e46afaba1867fb4df01644dae458ae00567dfd0f024127c7bed4b32f23a6effde55af16f1141a8c123b6ac57edcefcee82e5cd79f0a3d2903abdcab1d184997b1166c37938776bc4fadc360afef252f32cf7ec81e8cda05847755cca4683a0992d69d710840dcd92c3d286c149140f25ddbbf5b8634cc21958102aa1c52b10a0336db81fb37667a40fe8488043585bcc9074f0cf36e560f4c4532c7321da1480821216dd0e7e4247bd97257dda4c688ca79e33b03655b17aecb897a04a9ddfad0ee965fd5c1017fe8ea83300823f21ad9da5ebceb4de1844db8ebf46df23dc9f3ae3c7757ac4bfc4d86c7eef51c76a205a0db1f3b4e05e3db08473000b42ad5d14d9bb64b90fa16027245d815dec02f57723f6f80c4a85864791a8f8476bdd1ad34288695c4731f69fb99dcae21d1a263fabcfde5611228a58541fabc62bb2d5264cad91481aee8392977e214c98241946c5c165688752c7135d8234697731190ec54e9a74b29ea168a411281f563ac8e18fb8c23fbeb9ddaf62b535e02f15f4364bf3e8667a46f098c78702ab5506ec679ff03a664cb29b9586bf78cc22c9d5b37da5611e54d5b2d1a69597e0e04f2ec7a9d5a3f7da990949f2a14474bc677ea75b124a7d46900ffb31c8a6bd44d0f13b58f10e2fd3dc372d606688fd89f679d6ae1551a36427ffda37dfcf7171bbaa39e4bb6e956efcc91f7a9cf8c27c2fbb3a82e4cf78986bd16d23e0b02129c5fd7eddfa9727006da4be78f66267cf853f8dbd845866c4c3de50087929971947e31b656dc19f644c4bb77d797c263ef6817fa962a6e245edfefde0faf97dd64f8fb131a464e2a780ca7b6267586eea62f0ecc386b386a8d166bcd684e9576c9c7bda864a66b808da363b3790fc185d439c91c9cbef7a158286bc98e35d0b88868f5196e257d7ae141002b6e22a18d2876d2b52abcb72555cab062e7b60c430cb82eb1b7a031879ff91af43cac35a8bb84b88ce21bdf4cc704962a554f071109bf43319853d362d90184eda4ca9d296b5b3c353283081cc364a324a746d9de4c479b2860230879d3ac4bb7b6bcaa5b36c966d656497a7d47daa021c5bbab8323ab7dd4377d814ea8b624020ee8a3138a957763b9720474ea68ef89a239e1e9d2609620140cbc540d97b157b233bacaf1d5687aca2e6a24e012a82f2ae1594cd0debd05821d04a0035380688e214044a4642df652eb64966e48f13f166366bd2b44d9570dfc7d75b13a65f3dc902f539f1c27746901cab865cbfd77907ac3d1e562349999139da78a21f04a8788e12643d4783481ddc82348cae6c168d475f25bbc9df724baa32f25c77215f44699409966bf4f5ef1be61f777ed62df0c402e96fed4cfd6b13a38a844e8344ae4959f355f29783dc70c8e3b4326ec5092c3f484118d6dbf8eb51b6079aa74e6396b7e91cafc196790601ae01a61f3744c3b951c31320ae5287e7a3a8636394502fc9b6b8162de36ccd7e81865df0801c3b0fdc513d5df3c0fa30a66cdbb007f526ee5b364f740492f6e175d8cbba7aab44759a8f504bde546ee3a4ed58bd79da3f67f716264bb1331e44ab7ad6b57557b834c45c087cba38cf575e55d368191551365257f5ff2550836372844d689d715ae829464611911ea2b1eed082ee8ecc2c4c1ee0ae520012b697f84f3807e139797d21b1ceb1014661b8180d806959af23a13e72e5afa0cad20514f374a701a94378a25700e67b46412c224a6150d8371afbf0e350c162bedec18b6cd48ec3249e660529c5e8f781fc30bd2ebf8dd149c983291d6b8e049ab83e213b78d63c1c5d436688c9c35538b846e5c450bbda13699d1c69469163469dd1c8d2dc8723d51ba38018a7c359c414c7d5c692f6f656b52ad45737ca82ca24f1f8f1bb7d34748a4a487329df5310d41f1b492a61239dbfa4f78b75e2edbd2fed203dca7c08f955232756b93fb2586dac524c9708b413c3b715536c43b8deef18903515f6e01d780f1f455d81e809dfb7ea4e59ef95d2794eecee53787a75a8e96621d2c02de45b46c9dfd15f57922e3c6d36c2ebc437d191393d99e24f049ac988786c504908b5a8572ac0f51b039d60e48d7c3a3939f3769adec0de9134958800be38ca62c0f488345b978098fe2f52526c2c46f3cedaa60a1151972bf9f34a2b5682e0668e55774ae9b43bf6fe03f53075a5824e391e56184b7670a766e2a3afb1f112891fceeb69c31fd25165b5ace9c2f4611e5df0b41e3930c1119c876fccae506a5739ca5ea8b4589cf17932f2df2d49a048232bb1fd5bc4c920c61474ee8e8bf1cf989f768b74d80de231a115f7edb09adc5a72871868ee334524ecd839af62b37da1a744664c201146414a17f896d5a765d671c19c962b5a7087483d22dfbaba5cf5eaad5ef22db4beb21466c3b474b0c4d15357f3d48ff3eac64795263294ed2fe2197230fcebd9e20712982943fcbc2082fa1418e9a947edab323866c9f2ef535410a7a145ee617bf90da966e7db27e6fcd3ad4576e73616a62a8cbf27dba907f5f6485cc47e2eb3a7321312093c876ab648a8f6e8b80e2058e55eacc9bb09a01ff6c3907f098a53387f01dee398ad1fe811285c93f779bc3abe84675f403c0b67c7238854ee855e212dade3614270e6a11932159b40bbc5e85acdceb815071059e06ccaab2113127e16ce4f0b4aea07fa615404cba13c0762a92772cee5521dbb8948af518c0c1b2a69707696e661fe5730d11dc199e3139d352e9a794b321060f61babcbde85b9716c7117bf778d08f7df52c1126b85f0b6379cdb4e21a6ebc9ac12cd9ad375ebad914bb06142704003061a6446845b05c74d5ebb03b49699a4d1b201915288c487bd7d1e82a227f36bc1fbecdd7eaa7cbd8dae07cf181f4c25436cdd12db9db4476ab44f9ed243dd18f6f5e8713a8e7263f602f595be018c02fb545a3523bd29b3dfe40cc892d184ca4ce6f2ff94508dd69c2134f046912f570815a37920b5591d3e2b325c4e2029e7271743bc953bafbfb9c75788162bd283aed4958fdcad54db67b5b58b23c502f29a3d517bc1d07c139c539e34f84eb6066b560e76c91d96f5bb786cc25b0ac65a753373185da818dd897c1c569d7b43b38ef6ecafe2cde503947046122c12f3adbd913b19a4ece3bb905c781f57e5e5535668ee1fb1ab000d7edd9d5f8206a4314ea43522b0db6b520ccc4da924f627c79de485bd1e67950c8fa1d133f9643b3890c00edbfa168101d47d673c835aacd7b2aeb6f5dac8d99ff555025d76366cc5f25a94ba07238101249aae36515a38b3e9671647a8e782be598a4b68d123b5ec79eeef4def137d23516d4db07deec0e184744e251efc7234c1c3044f288754742993e45b55fc1753520701b414a2ff60de80946cab140debee0313af22e2cac0e2099b6d08a8ad6c5b3284b10ca74949386c3de5aede0447853c6235be0b8a147f2f85ed0970673f7d56e1ad72219d35e7e116f5117eb9131582da824fdcf71189db4005685b1c4fb58ba764f22944e151ed9499dfd341fe7a800640bc85dd9a5165a3013f37fb42f499881c1ec2709b1aae95093c84ffa6f22e484da49995da0c95882900a9fded2e3f26fc96597991bc3de6e90349a38ee6e0f74b9491f03f38500e3abfb2ef543d8eb0bd99c8bbabba1db3ef08be59e5fffc98ac01900093f81a9830ffd3ad8787f77f29b6d2db78ee7700a1a0c939f70138bd2aaf2e6b807a8ad5ec514c5e791eb1b64c118d91af94b6b6d4d40ae5f09d4aaeaf946db32bffb8d6bd655de1e5cf24fc0c9403560fad14f15fe85da503d65c4215697d452fb802bd79a3e80bd089b986938c26b7cf6eacac95ab187a9673cbb5e8443e5348be25bca921e793447430cb8eed292485c82d137d6f942a98c07dc7a348761b6e38e3eb701e7051f0add96b8330d3e409311795af966244c37bf35ffcfeb84b472e1763271e83f9bdfb6193c3d14d81b680cbb3f4fe36e68f449012ed60c17e42c6f3db48e157e034e1f6df5be2164c467cf47c28eb9d34af3d939ea67fede0b0c002935ef8da72612c69f35116adc7af1a63014b2dd0b79a45c89d161c9fbed51258c2150d95e78ce0165a430151e54ef2f2313b197def042cdc434323d31173d7af309fc3238f8c66c817ce1ef2af2f70a4bfc0dd240b7f654ffe77bdd15b846ff8c16a3849e4ce19765ca91960582619ff43dd7f62d933774d135af716446652526c02d53ccbd6a6fe1d3182024cbde9428cf8e608a7dfc0b308d7875c48fcd3614705a830a595061904dec6633a736a973e2f0cf4036c15f0f3491fa44cd1a84f7f470d1b5d9dacf929a34bfeb30fe5681a9dcfb0c29de1bc3b9d693846c0b6d4ad7f0c7e1486359f8ecb4b7b008a350bdfe30faa93d37f8457afd3125d69bcbe4408746c1ceb41aea53948fd0c59ecaed5c65b1d48a5e5beec10183640c96e1bf4b4bd4ca86d4f533f76a8f46d0d36bb249e9e1c9dbf0006f9270c823d06282dbe434b441c5eaa7ffeae354c0dcc73dd475afff7105cb78bcc0db361189fcfb16f5be09daf5182094d964dcbe56cf3964bc98487dc48a8f7375a263c40af0586800bc3ba13093d476621e8110e0fcae553b06d07e0c581f8dfb2be3e35781a00c6774d7bbcea65b174d195fb7685986128b05520b35cbc0595c606c55debac1d42518b9d23cf2b7c3f3e16312b4cbfd8a3bafa7919f1031431582b0337bdec45c0d53429eb2b95f246e825493c34c256c13731cb28fc333329da616fa3dc566e5693a312a71d94c3cd504ffac7fcef9a2c429cf584ba3cba0e88a52e8d3e879411fcd1637668e683ffa31d87e155044fcc391d60fca1de75f160fe64439e882116ed7ec09f010ada2b58f39c07f33191bd18e7403ed7c4d3c3828b3cea578f50e2f926714e65cf43afc2fcb31218616a23639f20d8f76f4b11e8b73dcc6d86adf3c64456be4f14300ddf286222a2f955468920b7f177459e1fd5d252f2e54df115fae354adad1f66fc5c7646ba595eef9e6ff54987233c7520e66308584ec26dda282d62bfaba70d8bcbfff8727e3a0e362e2a66ad35cc61548cd4ad879f62dba3d733f1d17239b22b8fd8f0ec380a2382d5575e9de2702a6c83b6a46baad82741344745def19b497b018e7aa94aa1318b3ce926b5706d092a90d0b88c57f4db5156357180e2e0f020a0bd47135e1276914286a4fd1f2095d180292958b470ebc4e9f7b240a9696b589435d7a57afe83731c2b7baeea8ebe4603091a02a3d0fe0c79063e9b4ee335ae7579b8e44b3a5068c524eab9efe0c5e8a022c2eeaf36701264b7ded430515dc93d95a58d177601e1e46f6e46718565fe6d2c6ff0d6dfdb49a553035e360e55da3f0c1eb0818e5029c87f4d91162a0a5ad782c91aef5f9e5db2945611bda533e11c1cae2793bcbec44daf2e7806d24fa48037e1f6f108d51136a7c91801e640be63b0925dfd95d481fbf33a25b1a08a7903d1c02d2c00ad8ce1612c47c844499aa4f9b3e1ac79034df80bc3e2a6e8f1ab953a7e890332e20bb652a4fb56f1cd92c301ced6c259a1c1aa18cc50e9900dfd36b23fdba13cf4139d80b4e8160561fb96fdee946a049bcc6f92586a1775d6131f35c3bf865d03c8dd79480e923417aa740de5fcd7cc25cdb3382c6347c1f4031dd8a8a46a9d3ac59947133dba7a626d4720e0f37dc9f42ce3c590a8589d93a309721c5d84fd89631235372bcabc94919b3d995ac90ef4f38af1530a5017024e887a43b2fef9aecc310a76116f201b38ff77858995c62fe07fc48b40c254d6c3a0cfefc8500991f40f10f5a5ea0e2d0ecb2c8964c9a1777c4e865777291233624e9ebfc434ae769877a54897e47ae4a6111b0bf07043214af37071e7a748cd7268ef06628b32766a4de9a20aca9764057d0458c52b7f00d801a56f82523609e647debdac7b3a198fd98c7b2ff5ef4d3e3e6ef257e3caece5a2e688457629fb78d9e8c92df63b4354e6a89eaeddff020138f1796f387c4d445fd692f2c5636b8988b455b41808b158a6063fb5d9f3d1b74ca921de302afb30e7eecbb70a6e6ec14ddfe90d9cafff4f18fbcbb595f5d403e7a452c660504db12cdc63a03f8576d4ca55cdb690da6ee5d2eea47417b20c1c4471d2416411364a51fc899baef49c989f389266d4683be03c4de9f0e32df853dfedfd2ec611d90f82f442eca2c078895efe554b6ad7a056b912830ed44b32b79c1084209f193448cace93b6b75da7f54b6d93c1402926b124546518eb495fb1150396da9afeaab2b71124452c00dc5eba84e162b120ab678245b1cc9868da87109cd45cf28aa9c7e35ed4ff4d7ae01440132b817880261d06fe7b0ec38a28c33f407f767b26b2f9df0c4f7e6e88f8c36b06a4439e0303ee65dd58e635b14a31d94bc1040720164cb1a02dc16ddfb9a11ec6036c0e0f2aa8368ac31073b46dc7c677b21a6cc845ae95cde35c379f83e62496290e49674d6072bcac04a3f8ec7f3916b1fdf246e3af70cb50aa7fb771174fb1f2b793cdcc0ae618e58fef3b04e11d7b103691c733159de9e0f0b8ee6854a8fbe4e7b9c5499c3e1eedd635ae898bb04e993d58cf474c64e9106e7666f46dfa93715d5751495006c87d50eec46c06eccf110d97415fbc6ac840ba6bbc93a88225359d9c42e2445a084da3233fc255714c5cbbb1f889e7566be1695deeb9b11a14950f04b4ce63a39d3a890b3fb5f33a18c576c099712e139e311512886df8d10ce03feb0fc3f35a1bbe96679239668af0ab31cdb5d8f62c9570e61dae05d5227454a21718c3532f30886d8f0702562376f2d0a4c170aa0b8622426cb91303a19cc9b0752515f30896c16e8cc8a6f75b34921af1f2daaf2c3ebbb9c6dc397a288e87d09cd14c975c3e355ad13f44b0e2d7f4a361f53f9a13c24a79ecedd5f459ef1396c1566af93bfcb3709b735b9cc4f78f7caf99b29817153098f8fbdf8273d8c10766b4421d30eadf5983b133d000a1301713c0e3e2f551b780879cdb92d73dfaa621d0655d4a3f283880cdb86e45f470404c89a2bb9a29b142f11abd8c13a3996de5da3fc74c9646ef591b93f3991fc24d6557e4e1f439b9fffa1df724365d772061db6df8a20fdcc0110f66a25745059c289cf50088e8aaee24f21a081d2ed354c400c294e59e7f28f48e24c37da0ddf8004b0e076e0d9c3b1b411859c2b69c1df624202b3a42efa7548487ee82e449ac740509695bb5fb3cd0b3d859b77ee0d1ab686c62c1df596040d331cb2ff97010f2b344a97156d8605fca6dabcab75a939ed0c5b31a4f0d165583b0a2345e1acc107253a0ca86a1346ff3f248ca72a1e2aa0df816d42a858b2f555e5fc9621734b199da4fe685f5678ced0c77ca8ef58e288ef031b75cc7ac5d3506bcca687b3d9c9ede8434d2803a398a189c72a87402b484c03caefcca5847a06a1d47dcacdd540df6db478a611f3dfd92386a62a71b8e7da394ec3636bbedb530d8c71577a302d8aafc731468cdbd83328a9b6a7f9360cc0af7700ba715cbd609154d8b38e18cda21b1e23de67c711713c024ed0f691758befae6f0ae4fcdd77e630259bd3d5b33dea994752aab8d6ed7415bf2d01c7d884f925c2d1e130103b5d390b04f51542aeac7398f92b4031a63818e1875b89181d116efa803618eb84a1b7dbefaef6b4dabd9133466932f241e58859e497486584634316e919e66b6933717a96818807a68c867f4046ae01ae1c4e41e4d9ffb85ae95d98a7195401411c136554cc30148f9ba9c3997a41e450fb0e7e1cfaa78ff5ecf82861bff2f2e2b9fd60999d9f4edfe4828e6995bd7ada840d794e24f61a0c84551b76696c69c5f47cf80368371112b09771235bc1effefb62ee804bf4c390941c713d6f82c113134a86ea59279a5da743a985cd8ac60db2ca17fc969c9332a155eabaf42897cbc1142d2063462c1c4acbb423a9af6ce8564b4b460d9cbfc9e6ab152b774687a38163798f5f19facfd0f185013727a5e46a5caf44bb6cd5b89c87aeed3e390821ddfb626ef240bbbc414fcff17e63c79105c6e320e15463e5d3000d5ca721b71db05689bfc16a92dc8ff21669af415e5e56f0b2f29df3b08f87e47b3a0e2bef86db3c58123107c8bc52f9b83e98d4dec304f9c180888acacd4601fc38962c86def4d1e51bcf9978b52a1837832095a5f79a615dd6157ec06b33bc5a289808ac6a4e725f22eb46dd0b43f5d867b8c9aabc56bb82aaf7977e4e4124b9e666a5fb7ad09d84e226a834270394488c5da5a8ec970277afa1dd6be403b3a5e304d011632f29024277b995678d065962cf9b1b3f64c6b49f15c972db5235fa07501deb204b49291b15eebec9468eef3f919094e1efb0690a2322aa13db45b9f96e72b2627c8ab7bf8e9f52396b6a5df685185096491d107c26375aa9324e29472520c6edd2c186ecaa9c65c35c1c0dee0b1bfd500033e0694ccad4eb484e690274d8b533f9493c38bbc6142744d15656791f6c4a9f19776c13b6e653c6f2fec3be3b3686585bb7b830e0307aac49cbb7e02423ecdcb34e7fa5687090ae84e661ace261bb54f2a8b5c62c24ae0e58efa71042d52cbaf04da5f58e784d9d3d5e277c0b1aa9e2e6c483779a0e160f539eaea2eba4ce1ba46fc11ad0cba5013d6f55f59795a4d7264d3705ef24f07e48d27f19c106d32cea2b130f8ad39de044b7436f32e9293c90974628e12d22e3a8bf4ebba0d206a928dcf432295718a30fa026fe68f6960eb3d37169b9ab1b2775d462afec3c66ea5354c49ab4e51feaa7569432077c6e6a6f50e21b7b04cdd0d0ba0ff70e8a1904811ade37d5629052f69f84e1505b4c63409c2ba6e2e093fd5424837494f0f7209295fa2f1a04c447bebbbafefef79f00ffda21f979cf34f4edef00b1ba001a7efb1b027fb5f0393c290291b1de4e7fe447277e77638b3f4c59171abdc438c95e4c9ae8afe843b0626325ad846eb3bf31d3ffaf196e1edd427b677fd6c9827712f49ed669448ee8f2316791a814226f56257fea9116bd3a039186371bb1b1b37cc5df2342cd3ea40cdad5e59e770b2d3e69c587b437579a71f74b124952ef48f9169af2244a795d57c6c45b5d79a695a326646769063d51cf0f1ac5ec2e3ba9c0b9f8422d740c6527d79b243a52d7a580d5047b99a157c099240d6243361a7e3e8f83e6791179adbfcbc72441a6ddedef1ca8f883c3f3c3f07b412147c5cb6145c94db13bff97b8f6a7303aff42dee56d022a3bd99a8a0fe0194994331746d0c7b684d120d57fd9dec9aad47985e3f12766b11aa21a0db3b58e369fb3c425f7d82151e4cb6d01f1b5fae673fc168c0426941d24c52a6795e7dac3eabf3217b306932cffc03b4ec5f8e553710e9cdd5cbb1c5e7fb8c633213b8d374ab5b41ace0c72c10ff34add9b656d294596f3d9128042422c3d9dfbbd57f97fb90ddb74e1f5f6efb5f04a8957d9667e944cb178163779741744854a9f4d5d29dc7cb84b4f05348f9636baa7cca3488bc7fb4ee2d2f861eed6e8894afca911f28f48d03cfcdb64d362666b8298e5342bd359d0d1ee1f79a3747ded71280ef51dbf6063f2f0759f679737ed8211e0d1022782dfb75934c9996301b608767094de6436b9ed979a151158e3e6cda6a8ea8639392288b51f5954ae6a886115298f76a90f56a888812f136440ff0c40007856a3f6af8d8337f0ccbb7a1e52b42e0a75205e54408807668d0e95c8bfe11c5d94cdb516978dfaba7fb60ead65e6a814af12e1b848b765214846274bbd6f7f70479a605c2c2558e8de1529c610eca3fecbb436f84b2a03831bbfeabcf0979fc42a6ee68f2351f70fbb8ef976eadeb8b534816b4e15d4076c4150126406a8b2b9ff9bc57e7201188e397400cda524dc4981280506ca6df581da06f096173b768ff26f8f038987306d4e2266d893d933a1807ad8e19d48f60a3861c3b6efe6dacfe2d1dc2ea2d042897e3c945582373de00e1dd757273bece8f14b6538b6e3a10e4f2d940e25c3a76927b065c299b897c2a6e7bab172288eb6e6c1663dcedd0350c43ea850ef133c8aa637bec51707b7fefaf5d46fe86fc81191464c503ccceb9097c2858a05c3a6f3e75ba8af74029a4f65b13d9cd6ea4e8c3c5aa7160ff306624f38be1bce326220e2681a74c529c999fc1926049c0a2a8b98c972b5ad0f72ed1773024ce453db1458b9a9c98b9008d0d6808f628fa9d2f98c9a2ab0be5477bcce330915d890365e733b5759967abf3659cfcef508e9ba1d9f9e092800f6f8c9d893e61030c8fdf1422b2c766f571eaf5e7de970784c5e28ddadcc42f52cb226943b21465a1e19abcce4c6e21b5292846307f28d1090f1b07f0c28c2df22fadd3c3fda909b703d70c42151ff6e317c5840cd930e70766cba0fb1de4c70661a91d8d170c9f5296e68a66a1c5ea2fd2a93a1a32ba930255897a2b650aeaf960b158c75355e507fdb98709775b18cfebaf1fe243fbabba8a44b73436522dab13c5da331fc21f412cccb617225a4e666fd9ff8e2291fb848e89ed8015a98555a0fe95b2a390c6793671c04bde630be4033937e2941ae7110eb5989d09795848af31b80adcba4477169e8a793f45364042d0ff79a4dac880d7602ed1d5e083cfa5d8579c1fa108f009938fef7106d10f334bcc7920dd7c909e2be2b11f60f4ca7f4fbc5767940975f8acb7ac8ade0834408bb0fb353dedc8593cb51882ba77b00d0e48cf736e3796c5310dc6337c672a27795cf1940e9418afc903568a2005f2de08fd762af038ed7ce29438f82de44164b52201d264158e3bee007967edf9a2cb8b15ded2ef4e88e3e738231393ff7274c8fd9aa8db0435bdead7d65b31df47d59ed39501306d995bc41a21c4cc10878525ce8678757d97ca80d1e1b72cef71c5b7a312f1ade0325bb1a83ccdb235156b4d300f1de2425338553cf24d6325a2999368acba618fdae5969b9612f76c6c22d45b472742f776d8ee21f4e25bcc76c07ea387c132651f8590c4d0c285642a7b4871254b15330dc87533f6cc387bef950c353cded9e013fcea945ae7869a78954ec8c5db94f4aa75f3e2b4a1b21d06610ce135d2082262ea7e00ee57b491754343737708cc67f5451e75f25736533fff2f84c9c1e86adcce1e0b98d82f0f803da59e29a9cc4fe7c2bdebebae1926d1cf2c65c00a2bede80eeab9d7cfa5bf7c56d39f09366ae138b597b32ab174ef87fb9c50dfbfc6b90cc9646079f35a0f5ca5da77dc08b6563ca862c3d5e3cca49c3228606c523ff694f806bd102bc1cf998ec7693bf66dac2678323894452ce3c096e61ab736406933400dceee21dafc3e98204a98537ce39d079303725863f7b2352754947e33ec70ea3fded2c17cff1515164abfd29f53fd1ec8775e976488e7c0db3f789065606c000fb0c76c52fc92537cd6424698f4e7e66196d5f3f02f904162332fb39e447c45c835f7f73e590df909a7170664ef21cfb1a7718145d9180f219430155b5bbfe4b7d4318d5ee484f2e8ae9e5c30ed8bca4b638ae986a4a1a1f76dfa5e529ce5c132ac889d671d74acf9dc645b82c9ad135bffaa16bd69d223afbfe7ccc5431c2ebfdf368a352673303a0cee7e403ceaba74a0cfcd18fec3e1590952a8dfe89cb97e70f994b15602a56a3b29d5e552440616cdc3b0db138ec690bd1e1f72f09362e4e25258eb97f4222a861dc848d7e0bdc8fbd8ee27876945085a2a3cf41813ace43c2c78d533e5224958ff9e57ae5201156ca08b214372233f5ff195268e2edd04b3599d0750ccb2f8c9e94594e807607b8f4639d06683321e5d2a30161bc126ca603799219bd22f31c0cd36223f728ffa51c960d95b49f14eaeedc1b3eb367c9d88eb7ed521c4db6408b5c516142dad2631c9d30ce1cc414248e00cf383650271268d1a0280e17dbc86fe11e74a099562b190af1cc247510643c3983eeadc913522ebd5b9dfb4ad0f94a7d4a67bb8fc92497670cbd45021e79ffd73767d7b8be25c0c5c645418d3f6a1e9002488040b38d62049dedf2e2e3c4cde3aed42c1e7d83f266599ab4498c9b3032b2de45326a1bcd89efeb0d7c898cafc2583e6634d4561eb34362941e21cbbdee5657ee219fc2b7b4db146e1bb62b8e64df6ec9fd3f138c5a09ced6b4f03a42573e971d65484a782de414121a92c7d7e9bf1bac67285e5a036a987f1a1b6335872d0a827353da1e08656f408a511cdd96bef0858d368d1e7ba6bfa7dde48995e265ec37b9fc8dcbf8f336e423aab7db43e0cb595e78650cab2cf2a25e505aa250d72ad3b29c23c2644aa401783272a5289430858ae6f023ba6a665b81459f16661c6cbb7c540befa049eecf2fc10b98db39f908518bc3db5c0922c9880d1f340b0e6806e51bf14e69bd45a64fb063b7952c10ec3e628590bb23dfff0d4061ee74561b0a0b1fd7ccd14e562f027d6ec44013f19a6e4a864ef8f26f42d16f89760e788764ca31b5080fa97b9fff7322489c0e4e03abdd161e354d1ec2e21fcd1bc939e106e251812e3d6c92cb64e02a32e0181c0c34995130401967529a5140e4dbd9b99d72912c0ab61980ac74e02ff1c4f5773f8d38a0684d4f05c988a24647a08c56ccc8689357f1e0011ea3ffdaacd4e2a64717bd7567bba540a49ff99f2bf6d46dc4cabeea7597df3fa0720eba8312919545ff5d05c64a0f56394c59c6b918ab9d4b3d0ce193273c95a6b867f8544b87aa4d8c904147f26770a465290ae378f58b9442314cc161115c1caaf4f16b6f3b30cf8ee215dc06ff99d6625c658d711bb8eea93b6e49e483d7d92703a2d6e9c563692a187d06c54abc71864b13237214500140f55dee65904176582aa9d36df6c78f7b4748df246fd69634709756c9118b0efa00a67a3e94d715ee781aa7774aea201e6afa1fb5b8992dec290a0f8157b536abe3a7ebde411ae8eb94e404f2fad5e628d8ef0b8a6cebcef7e9678f566e46cfcb394f82c89d708a792d514de70892b079b2006fb300bca819af96f1b2dbacb4114d4e098d1bc1805b8153dabde40b8b82b5ecc46f605cdc7d4b4edbd2389916a7003b8627da035c27f0001ecf0f390dc26428e599439b130fe7f63756ec9e6a690974445ccf5f35fe31f6f51849c70bdeb931ad9dc8d50cab0891d9edbf59c866a84214e087acc49137a2eb5b0099386bb240310f683e96665c6c956d8acc9182b4d5f7f8387e288ea3cdd1a1aa7f7018235042d1fe4b91a35e34aab477d58ffaaf5239893aba7de552a365d377e0a8aa1b2b895e236aa5495b285c8252225d1bedbd4b981760641bd6fa296d2bc17c4e0dad9556b8fa78a0a7a724d1e10a8c54677ef39d5a224499afd636f266f7396949728f69abfcefd6418713da34e184596b11e71f9312f1e3228a69b488bce4f99f4cd23d25a6ed3b71ad066a0e7c789ff0098ec12603245f1af28e2e923edc42e519062af044871d0352b5a40357ace3a439be8308760e3fb4fb0c6cc0c452537f4d1ccfb773b1da7cadd1c21d9e54016ac6465bb53da3e18a922734e545875a63150b0aefa19c551ee963bba8510aa846b614f9916cfd8263fbb580ae33207a14d4b79fb1b6a23e74fecac414540a66df48194142e3e8cabba9bf13e396a94eb8f5425546010030cdb09979cf9c978d56aa523afb7e2d85b263842eea72cd5e62e9a540e2a551ccbf8d4164c097668200ec99424cae97f1f8ca8d69483442c564e7792c1d1dc6721762c39afadca0750ae9a76d2776e11122e95a8f6a7d3668d1e8205d8097cb31b9b11042cfec1d02199eec5f12bb110a2ee8c665cd580b6dcd50e12d9ccf9eb232990ac0fc7309ed8aaa76a81a6735ffa6fe72e1094b41afe4c1aac8cb40b875b26478b7a1242880c485ad36603636255722b5d758fc950939b666603df8076651e068790cc715d744bcf6f89845aa1a2ee5d1680ac30a580231b7cc729ce8c24e813f93fc2a9e98075a17aa8e7b0553906b7be607a19f17b1f6a74b7f679f7a19e2915a80a40fc25cedf62d7f64ad588855cd3bdda93e8fe9f9ade801bd4a136fbb52bd3ca44180c1e0b6d02f50d27b522c2b0aa0620c533a716190cf1c159294a5a86a89259a230cc6f2f13d7cc33ad6f9b849fe0ff10f578e58a18f9a0f108cfc0d4d639426e5446c5c3ad7b45d9ba682ca2962004add8c5e33fd720dc23965164999754a587e9cc0d69265b922de7ff64f0cb2ce635f8907bb7a9319d603f93b7b64fd81d899f06c9b00ad5f95cf27739bf476fb5447a84f3be860b2f3102e80dbfb0578852f5ace943330b3c4c5b25949a44f1f2a8a8f19c757b3ed9f6be40c1fe23253fac933dde614758c1bc8069a42e3df0544aaa56fabfb7f0822be90d92d29aca24455243f24da4c5b64d0c1b4f9de1c57c52f0a42861fd0e43055c8388991d4bfd9bbf4189e101b56f2d79b86b0487bdb7dc4d55fb463f8c4e83f868a7864497c486cd8cf69e479c5aff7eeb85f1b725296918c000b1db09aed915bedc3a8461f46e96e8cd2d208f1a7feaad9e10250cc1f46aeb4d7f49e6d1e9b75df70875e84cec57a7af2041eff6f7090a9632374d8ba2393e88ddc44d4615afd1fa8fd2cf14c2be60ba0532da1cc5a27d78aa1875bfe22b61a4aa09c8f58cdc652898a7a3a679f65157e3d7e2bdc986882405f89705f7dbea3d41e781c57a1f07b4f22a7383062fc0368d227433a95a41a9a69f399ac6473d7d2ae5f665de40291281de61e84a6342a23f02605ec87ae3becda4450b228d911c13c7e53d5ee531d7ee527de99805836b54b523097c965e1833af7abbbfb70cbdda8b89969148f225cc45d2de9aa7505cca1709f006e48e2cdc8c12cf8be900dda725b103ab75bd2f63d5a5354d72ef118a74fd073fb2af04e21e23344dba8adc7bfb8bdd573450b071a385c82ad23088fc83ac7264dd68c796e5d82c351a36d39fee9065f07c108be6a033007e96bbfe549536c6d8817dfaa7ed81233883ee70858fffe717da55cd1893666b2a214c381bb048a5eca6d03dd70f71c0de7ebb34b1e3c5188854dee2f438876ba31354270777c3162f2e18fc6a3646ea4de908fd0bfe42d376aa132815cc602559bdcdb68fd1559833bfbe7c4696683e961e73daa6ee82552bdcd3604bf7585da88f8a0521080ab21380ebc4b7a3976270f741320da2a54f49d26e956330b8bbad402b017c102322b46df94f186390158c40e0c991ea9208ac4ba069dd4d9ae7ad7670d0a7b0c93469cc6639935168bf4351bee86ad41feb555bfb2e6d4b15a5d8c624995e05601345afa191815fcfd3e705a11daec1613da9e6505b0b48ba469613b96eaf94b4de1e96de83947a2cb65e7ceb3ee9d3aa1699daa61cc41c55a6aa87be4040c7bdad7f026c7c608f2c7761ade7396a8a17620fb7959efe6fa0ba260668f473b6d26a5a0d30ebf1b0e3e6beee8ed90f33490ac4f1b6fb2b7b8cf723218b8ec65fe963e5d2bbe78dfcea00a6f309f0fec32846ed5d1d33e6cc6d7a8b95ad83d16e9715eb8dcb5ad15e5e0062a0534f68d1cb4c0871e8a35c30184f49f817768c0c114018aa486913be5a19f238eebf1255e44dfffd941e8ff76c71ec9ca6a68fefb622ad28d5652b5c9b5a9bcad3f7da81accf0b5c87a6be18f5fa82b2451c56ff1060a66560ee4b7af8cb9aa63adc844425e3328b0c472c5c478a6c68cb0231ee57a471a3b3422e37b22acc18b063487e8476ad0b88d83720d8f60be99bacdfdbf55a4fcec990df82d29b09b3f102471cfcf361c2b437217ac6be9d5197e6b557b24c3c57ac08abdafcfc5ef8d75854d10ed711dd67be7bfc1834d23728a2fce45d9242bddeab76102c024998f98f7472c9655529c29e37693af8dc036f9c3188130e49e6135a8bacf9e663eb767b2ebf700f802c31667f0273fc092e4043d54a91d430211ae2c16bd258a1fc048e6fcda3f98f0590e35ffaf3d127c0dc8a6f8b2e58db5936a2ba93cfcc74964baefd892220c08ab7378e7069988d41de7fdd5a5cc36217890eb093be3628b338b18419f51535de0cfd637814f05b5f520e998891f3c97957cc5b37c878e6e0b30db3334ed4d1a409ba4845aa8e531dc652f9684cfd3a71c917b3663f33620e5de73ece544d627e5cfd6c4a2a93dc1860ceaa9cb3382746872aa45378d5839fb8646e08abcd1d3462e22ca73538b595eeb1ba2f76b762e52b64c5bd474fdf8fd58b3efb44441ec98b004343c7de03b79d1df8ed4ad66b33de1ac3d68de480bd55a977a24490be8bb1e861a3c8c1c36e9aee278f388f7838558eee185ede9a0e3404d59ba6a6e884d547492777eb9605d6696ba31f3e5b5a27b3236a20d78412558e533a83562440af171a9798f7d898c67831e166762b69a92341dce66c4ca7d3ffc017ece93ee283ab2eb52af980f5d7add4efb9bb9aad7c65dbcc34ad3869ec80db6a5224c85db49642f59bbd3cef7783ab46ca5e2a31890138e54edd8a9e863f6dbebdc5b16312f755f9200d0fd24f2ff41e435d9ec26b06a76772e8c8eadefa4bf1937dd4e580bfe098db91fdaafca05c7461c1cf82faa7918c47dd0b9dd117a671510a2c3597dc16f1f645fb01cb67062bbf2c4df93b3fd27da2d91e9c6208b0aad3dc3fc363a8f2c624211caf593e7055f94b5c79925a7a6e1400c8bd3bfdfe76b347ecaf62ed1f50a8818b3fbdcb051ca057ad8369acfe3e9c706f70317addac206b16d98b94430fd7eb80657d97e80479f43d345ff5911f8f33c9743e69dd73f331c988efc2fdf262b67e490a56d90df123c0bd44e74a638d12a6d54b1d626a4b4ece0cb86ad233b7abfee0690fc352c889582b25aed3b44e71251268d6025b117dff0e01edf6e50085ff2b3cc0483c8d13a118e5d249273235473f821c2766f30a71932c9828e1317fb34efcea32ca31341933600b76f9b3973a4b5e9980674e282d2906c5ccd2e195d768772a95c4168405ba1926465ea083cf25b83965434b608d5628d788309c555c0e4fc3fea3c6fce7e7989015a4ef8bd954d38d5608221cd783638d3c2313c0480d3356251d2d8672598320b96ce630fd4283aa0da168c871460126893c142af98b52ac2b901564e81b62ace3010f3c129d5a5af0ee7462fc1a3643a4c81c25ee9e81c8d158c52c452b7ec9dbeb5a5c1734f7eee62d9510684eaa5defb88c9f50484a034ce74f5834d7273150596430375f69154f0b0fcaa2d73ab3b6f312652d85416a9adf19c10d7c5f80cd76928050750eb6326ef3127e26914b9fbbf0f8a3024d7cde88d3b316b94c0c5d55236217369fe78104cf5c89097c5cbeab94cf17b428e0219df3073eb021ef859462b6b7e1a02525dfcd107e048eb00202138ea4d01a675e16bb88bf5569cd2744d2a64537faea346982f251909b45da162e4c22c8e95a9347cab6e1a79ab452e1ded4eb9fff4736fa4ab33d9d4bf78617836e019fa5be5c2447fb61cc1642a710474bc794cbe2ed6369cc0c14fbe2be4fa3d2e1476b1392488e360068cbb8cac6026505b84d4285e70fce49a6de8cc9ef1e35c26484bb4985117a703c32ef0be02842cad63eff34b56f92aed98f5c96414412d77cbf655d8f8620f973599b98f5a29f4a63142d0da5d85b72185db69582cf629f1257651bea7363f716bd50f0f6718cde5eecbde0023facf1bc4e85e7fc570eb3d596370c084eca6211e74e3c2c6fa4566cde90591b9af03e66951996bb2b4789b224391e7e6f027a821ca12caa867c7d46df4acb6685d91d8bf44c589bc8adb440bbe79ed6555105f9767716c58a702cf2dd2af0fe28a976fcd7495bc754055127a8cf2c3f14cef5e1ca3a5b9b3850bc9aabd9166703b9b133a50c77327a328a8b60e2257e307fadae4e510a432243090e4a6135cba6861baf4e0656ba828ef972772b55a8fa121c81228f66a91743c40d0ce6e9d5b4461a873063f24a4067eae3c5c455d11946f9ee76c7463efcece029c456ee3b96b3bcb8172dd017d02a88706de0b62d0756968dc7c0210088465c0baaadb3fe86813499b226fb8edea175eec9679d2178ea9ec96760c5b997232d517ba0daf0471049254bbdee8ae6d452d71d7c968838f67320e3a867756484de81778b34bc9e2f053cb455ba66a55963c8e7a0359ec4e85423df20c7d9bcd1de861a0851713deee81bcd28a109f18e9fa3f31832cf34bc0f4a6bb36e66f0c11d6ead259ea442681b68acb63f4042fc91172759e0c92f3db98d1f23b7b35a79d1aa17b821674ea263c7d45e73853623e6da82274af8a9be5eac1b2ba78fa92b2cb2b18bc2a9d4c3060adf117ff351048cee34947c5da155edc58010523bf79153b23fa09616b0a6e6d1148ca0c8d2fe275ec913d753d1dfed4da8a641ef6baa20ca95d3ca6d2319ee3558aacde2574b4f5f0752f6ca37a783f88e2949821ac06aec207bd60eace2aa40e5faccaac0b1413a11ab8e3a4249e2cdfc9b1c7850a01012124e53b5c325ccb85f3da37da393cdfadff98e3124ddaa1fd7ea6de1d4a50a16648b825a06f95b1d3de2afbe68030fe0db82554c2dd4c5021a985a32e4ac8c9eebd35cf7fab586f2bffdff2d16d331971b14543285652a781e0d4505241afd7842588d0fb2301b073061adf867a8a2b5130a3af8d6b8c1faa5c64e014e2805221ae8ec08af04ce5ff405aa676995500c1568c42f9567b4b36ff732deb8147925ac1da028230c6b91ad86cca88e961c5f62948f6bf6a8eb841daec2f8a4364d33d631e2ae128438a6a92e7c04fa98630f93dcc58c2ab7a1836af8ec2de8b99343d26797acb9205bd72d44aeaa3435d43269e558c790a689e8d798e9facc0ccbc28ff359167641ec84b1f185d4361a6f4cbc35b2863464c333a1e0f73326c88d9d306502f9858e2d903fff1cd02f2ae2969dd0f8f422fbc905fca318ab31e03c23aebc3fbdccb1e26e9172ff36dde80e83152607cced2857a56cc607cea92993cb274ef6fd52e4a3e5633c4e9e119ceb5601c079d7d1c27889dc6a1f88beae285cd42c38a2091d7321077d2a1fc5d3dd0a472cde0a835cead5a4c69254359f8ee8bbf83cb4858e6e8da832706675e287ca405ee115105b48b13bf543757b1eb42849b9faf4cef4da124436ed83c6e3b5c069fa2b20df18372f5335b5ebd6210e5138d708921344cb53aa6d7060d8de2675ad4c9597776bf2c635e63c029909492567cf5706e8e2d786b6253f197f7176744c2d905551818fa42fccfffb8883b862ba1d740993e120b81a23563a92ca14ed7d15a67a006428269d2b57d6e38d9fe3f01832ac91e302c240b19c4c1683df195c13d89a8401b2667578ae4d1540383a1ca891fdc95d3cea0ee1de8945c6f9bdc64f55b211bcb8588d7f2b187e22c1f14ef65212f41f505d49fb31b21eeb67971434c4a448ac88902a3b6c640d65f3f058d1428fa958e9a4fb100fba0960e1d2d649d1de49192c2c4e16458edd31571582a3b05dfc380f2af9bb6be950adca810bb5ff644e0cc62ed23a97605c2eb04fd7cfb4ca0e112af82c93bd1be552f85b0b5d27607fe40f36cd884fe19ae704f6ce3f36a2cf4ce799230cc537b1ca15020f8c297993a8ac89785501909dbce68928d2ab16adf4ade6b668b3d270d8222e0e0c69ffeb372bf255130e340c1b0d0642d90f44c105388b758b9b7b7dd514d0a6893190b55c6429deabf0fbe5f910b53577f1756e9eaa83783b7c46bcb0b49f2c472c6745acf919cddfeb3ecbbd0091a4915131f70afd907a48b5f25dde658cda2d8b7b737e412c414e9ffef228a6957705f4c50e6bd5290fa8649d93b1a906d8da76930e31170b7b3424c3fae23fca8a3e48488f7dab6fb4f2a70f7ab74e06d1fa672876d386cc3f843c0b0aa14cd7cc3194d6b8acbfc7d3810670ed666876c7fd666da97c5613638201f893b3e1eba91fbbfb4c2c2a8ac677fdb1ab311dba1edbc4012f262100b77cc860fbf5c5fb7f66e34053f273391dea06a0061d6f8cc485a2a56ad0dcfe363f546161e6c0590fe12d23d875177cc66d2a11ad43cedf52e60f5d5777a96a868e9ead18363a35b71acf5e2515ca82ed1fc4f852a3958c389b82797746b35f1886aaed2c848aecb7b206033c7cbabccdc01f6a46b02bbc1be7347127dff5dfcad008ba09a33994712cea35fc35d435a4ad3049abe4953059a6367651eb26c06b435c42516b040df687321352b29879c5c1ef40e70a8ca3a14193326855a721e82d477a42736718281d50f549130e8ecf7ba4c808b78795cbd56c2e20c47cb4588dd53a6b5794c0c6b4cd7394565d9afd939a9eac446d992901017a59293064ada604bc2776d93ae59edf4fdb8c0c51d86b811b8d2e1ca4410c3595f37a7d4a421c42060844ce8ef51d67760c24c3218eacbf69abb98aa012a4e6ff76e9d1487274908c58b4454a0f25c7ffac34a882e486311d42b75c7d87b870934d2ed964c3472406069ee6e1907d40c8c73bfba90c90bad4be031202ea77d7c8a6defadb29c13619cd9602626f5404b4383e9f77244fc88dc158dd0c862ca790fd0f0bdb543613b02e5a1d8e969bcb577378ce9022f41d423bffca12f56371b1985d6dd0bebd8e005d3e04182eda525759e6584678d16972bef42f819f0a8489708099b93c4f3c26b80ea69ce5b260a5f64f3adb85d9710e5cdcdcd9b9f714bed6a6d3295c81a5b884e28b4506d54df6b138137aa7fd843443ceca2812566ce90cf71b5f2130d486a081d6841c8c5398356ae7b16207be428be34e3951ea796c683fe36a52657d0ddd98427309f127bf823bc633208989ab9986428abdac1cc2884fe684510bf27755cb1987fc4c0007d1fd679a791251a5cb599987fed3d73479d183dc609cd34d08687ba2a4b3df5200c614cf03268452ed1eb01b98f954eb9c6c2f63392bf8982d7c4f5f4cb9174bbc69df7bb102ee8e1ecf23347cce08b9d798b48944b34fe44e62e42d29ce0d47d58e0b75b9b65a80347a30318555b709ccf83e29559a6b62ca85c56df174c3bf4836cca2fc00e6dc9070ac232bcae256092e05ddc379dc8dcfd1c4a8d7d9ee66720a00bc272be32eed41c351fca27ca4f8377b8b01ffb630fd3262b1c418495de923df4817ca93e1e50cd20132315f3acb10adab492ff9a281edda20da89375c2f5e327d86fb3a4d49ce4e09c383f361a6fa927c9b9a21fcd700dc6b992ed1392533a0149a4e7ff3d4c831c799c50f28077f7ed0e50c95c582d6920b88e379ab4ed2fccdd3fbe2cc684151b1b3026b6817810b3dfcd86a643b26d802a2879e94a73bd3487034aa67cba20a8461d3bd680108d7b7b38041e895b8248887de7a48c2b84df00552c349ce4cd351e5b12d315584207ed4d2d149b8eaed1c232a0bd326c0d5cdb9efff27b3a7d18d6b5472322ebc0dd430eedf379f29fb8dc65883971f4013ea949dc4ccb478183290efff74a8f77d3e592dbcd3f04f69ffc55182aa5b93036d7a10915a3f3fc7b53d8b6d737e22a5787311c06f52f42eccfbfd53dbf28ebb3337be76dfc35ff1572906299ca4890bfd31bcd669c1c026aef86e08bc5fca09c4540cbdf3c564c9d4cad71d30b760cabd195e860fb5ec40e3ba2da1c1ac4fbb9e44e9d6d692abd5de8edee6bac389d10cc82b3f556b645c522bd2611f056c86fd46cc16ae526c23bdd55c230b4ab15b13a3674e9009679665c9346a4af47a24e7b3474061b672dbe0105718c38a7cd1046994e676c5cccbea914dedb9ee68cf28dcc039c4d4303c8daa487dfe3c8980da61e4b0175d95827483d3eb98e2ded190f8dd7c1512e18e5a7ea556e2b8002ab1cfaacc3f65b398abd441764d59d3da18e3abd926ba3f61f5aa691e51ed5fd73065b244155d86647cb9edc17d719e427c53d42eb859729b76be0d2c4010233613896e82d70d38f660a3d5336fd63a50caadb646c2bb427cc6782e14fc128ea8f84725ac3b6de7ba02ba7b25f8412c0afb5bc7622f6d28e75644a69c9074753584168b9bcfca6761ab4927da0707b235cbd3bf04dd9fc77b263b922e787e059bd88f14207c8a39528f12f5d95d668d75f658bb29765da94a9f5a07f4b254629f972b1befef32ca98d12fcff306b336c0d482ae74e147afc4379611c0850607d992cceb1be5d1373e9064fa6546f9594529f2bf30cf1e9c0c60ce6f4e32d9ef78ecbbaa55269e06df778509159a4cd4b6d26e482936e70ce678c630a3142e68c111109c466728c07c956ec1d4e53e5be5a842beaef2a818fb948d1d0344313d21ffcc30ace32382a39a81f15f2f921fbc5af91e4d07590453dea5b2f9865227c804adc5d7ced83064112db9f6cd4e389b47e15fc4694e42e313727c15364eca57cbfddd53f303a623727b5ed80875e22c7f923a7bd77602652ab657740d67dd25c3f48f7260ac396f44014b7c9f9a7c5b2c2f835e6b843cf30eb923cb07153dd8444654de8876b8424ff285f535489997b1705120ae491429805d6caeded7dcf823fd52cfe188ce350e26dfdcba7d117dca5e927fedf84c10ddfcc879744c80fd7184e1aae7e0e1ac06c18f84ffef89b7984e90a807abfcc5dbfc7743f7f1103210153b6d34610daa841b89b704c6d1afa9c22a47be5236da052ab007dcc446cc323a715b6df0f49174e213dff184f8a4f0d11062398ba0e3884bf01a9bbcabb9a00b3fc15c8de99c44e241c52a515d280c859db8e69ee1b15d69db4b30aa466b6e87159a3fdf034f505a70881583be13916d50451ee8c3b3a74624f76ad0303ffabc01aa518796d873234c89a5983e0ad0e1bd60436b4ac446103203f985a5b41c7004a32f6ec301244b0bd2bd08e21f43bbeca07b57e3f5aac9d47c280addcbc6410aa3c7d87cd34c79b42e53ebf46b9481ba0e173e479e5f694847ca1ef419af8d0871870354e925de077907cdb7eeedc14fe2318b3a5e5ea3ce81dd082206eef686a6ce257e5c054db835a46854ca327ff0202505e820a2b370475df1b9654596485dcb8a7f7d6f577783595fd7f9180874d7eec353162179f0519c11f933aac8fedf6b450e90af6c4f8e9d8cd0961b25ef799dd5403142caf40641c97031980793616fd27d5316bfbd58ad1cd20a5dbd9f0c793146d050b5a2410270a092dc98731c8ae46ff607d1b2dd613f20a249d994a0715760eca841a65fc989406a7abbbfb8e4c457fe730ee6bd5f522694ed18a5b68a9c1b401c46eb83fbd1e9096b4ecf74b2b2f932e9fc9f72a58aa71cb7d6e2d509947d9c979267c385d18c285f6cbf10d25e43874dfc994598025e725e936d84d5f7c3ccb29173fe06ea21c0ad6edbf441dda6ff26c147703ce35f9de3d59ae79e19c9f82106b6ce35d349abc08b05defa89a1b885edea41b136afebbe42f6e603260b2085714541c7b419b3f0924e8326159b722255a28cf39577963ed1b598d695086776f24a2d4bb4d6b39ffa0f8477d2291d3e01266c75935c29c2261d4bdf70c5ebd4bed2848b3fec87babd88963af1a28371be067afdd4ae1eca80b56028fa0fa7eb849150d13eb39b7f369f9a64df60eb99a808392b39f2cf0e36d29f62a7f054fd708aae74a8c6a0c30ac1978d193a194ed0059130f6b9f4d0c8097d098198277bbccf731db4086e3d54be09390340f266c4d5efb3392e609caf0c8f54c0355708fb9b4fba35ccf92651e04e4c59c5e328ae27d612a2bc7999aca2260ec5f3a4cf7d19de3fa80b928c91ce5a03440f4e88d7255e5909829ee940bf5a673352b10e5c2bddd563ce742a6f4190ee8ff73cf390880d8d8414d4ace9981eccc0bc24551d3bd35b882cdf15428c84095d6a27c493ed6f28da6fc09b7ba36fcb23b58a3b015783063b634738328e9b74a4ba50f81f4aeeee783b51be5e65e1cf84b16767323bdd884fb637aeed3f597f53c9777ef4a84e28815d5431b11bc9e9901ab329fe5bf754c667f4be0f1f260be5c4624457a36d961edfa57daa1bbddce128059bc0177aef1af34f93f58cffb208fc9b842c0c82c5040b7205ce13530357e3243ff6b03e09c175c7114e8b31d8c4111cf88b3523578bcaf14e365bd9d5771642f1ce108b9f93cf7dc6c41428d42f0e0bfad30d2466fd5e81503bf7a43e0d3cb2c16300bef64ecc1f90cd7925c1c31a136ecbf29f604a6c3350a467686652096d253620ab7e6beed64443e015fd0d64ade6e9e8247622074956eaf0206d32841ea398bad69dc475d48eab671e9d1363a47822cd443abec8315b74871d2aa11195d965ffc574d520627d4315268da6cc00815cd2247342a15eb86042aac0e9b82133494941d6f25de76f19e203940cb8eb19ac6845802441f4a27a2ab7d5a8526de913025b90855085345c733a022868bedb7f817b911b658e17521f819c376693475cf82409c00c3a77b19bdb355692eeb24c83acea22bfa7bc74f38be319188af368a0fc3457b19093d6788403678bfe5ca661efc6d82f1dd22a229b576bdc9c1abf2cfd857aac9f15c8aa0181853db4cb30ade21f8a4846fb3ed1bb34fcd25e5e6d5063b13d7be6ba2a4fd825be2ceca13f5b897a9d7ca508f30ef6755cbd9822a34ff379e71817253c2d98ec44f4e2c274338b62563a8e3e2fb488c04e448580020cba860f5d43859bfbdabacd0695a76e99c4e7cb7b21f7c23b50872bcbcfcb849e6903e3957afd0f41ec8675c5dd09ec15fe1ddd28c63278f88e20037875f505a64857e80a5487a905e346bb7616e34f16519433bb4432bd8bf6053768f61b0e89e5448c72a87237b24c095dceeae0e2795e4451d96ae2848f5a5f5b315ecf458008d667bf097850efa5eac7fa01a29eb546b2c282f3a63d8ca9c2d2fe6f9151865dd4cb294c231f4f1aeab98b7ecf84f78045cdb91e8d311d999d031f4395ca90d616ed2a7c039673cd62223db88bee1faa91177f43a9959bcac96a2ee60443166dd45030042be8c5ae5a7631c371dc609bcc27b765ab0df817d4efdc88704b99733db52d8000110796acebc5d60b9a2a63ed40969476a12b77583ef78018eea9b4638f4432ef11c1303f7df05508506a397455816dca284266bcd5a18a2bf74c950884e7bd8fffcc3a6ade1e950fabacf95dd7a8e1127ddcfbe30cc8eb20108d57eb7129e8f80686d0b667c5d42e4e9fa4ebfbbdc93b949909f60f75babf82a80e4da08589ede76af138dc78b8852f270db100de1a2b4bdaa2e1f7ac9a4bdca8f76d11bb87baa95a8fce502144e5180bb19dfa5be2a32fbfe1a9be5d237b7dbe385dd8a577660359d3c4bd0512f0d79c04b2aadf48b1afe2ca261ad6369cfbea0af4be6f6c5633a478f66d7df6e8d4c3f83f2767429147a85572ea33e49683b27e2df8203a5dcc743c09b79a8177dc25d796cb1fa968d29bd0c638ca219bb147cbd6d44a24b786383eafbd0435b5c2ab43bc18e8d10c6637211488cde58804e8ef5edaf611dd5c9a35c580979f4b4297bd447bbd92472e8cc06fb8707a539e0ac31a028b2c5322a6211f143d80155e8c920e884c3bf8fc89ae2e67d9404ba60b112d36cd5d642b753937e23c9fefe064f78c04da9ace6a433e56c1dad4bf07211130b0774acf92c33612efe03203e6f08a4d4b65fd8dd0b799ca0ab08437fe8c8e72a3bcdc390175623ed9b7103586fbb9d9afe2f88509ed4caaf218ea24aed3b691fabb683980f68f53b0e5fe639f8ff2711bf20a5e52147bb1dee323bd8bc7ce51e9f7e01aaace19e0a6b17defa62cdc92e267c243e4b500eca66c094ca37d6c003220012f726e3c73e76c5b90e18d561b0e538857ae5cd35b08a36da68721f790ebd11b7969eef3dde946ffb7031a4e6a175664f4dad78500e612c5fb30bd642eb78f5b9f1d0a7a6aa213ba00935c14dbc840af6b150d6f06adc66697c7425f4c0b65ce2c37ff02ebf8d743944eb0ef0fc708c03b3e3c76044e8dbaf13ec5d4d44566279e2563f81d1d3f8ef8126ace55ca4c424451093fe20ddc4fc5e68e46106552fe47dea7847e27fee2c06bff2b3a1bf11f8e193e35d2238c932408e9ceed3db609df4ae15a215c52d692a28ad6eedfceff5105eaf4335975c3b0b8a36c70ba34ffb69dd388c81750dfe57125ea974cbec385834a60844efaf60fa16e6cd333505074b29c0c869738ed580fd7b3dcc680880d05e8f755b33758d65c0e2a3c9dd651f786411c358b3e6dd0cbdb37589f299903caaca7321dbf8804806b7ddfdc22599100f41789699268f2978ff0f57b41bb335c5df66e4006fd231c0bfd33d5c2e4bbaecfd591aba48cc62dae6f368e1e21920125f7d031349cf9d3c6615f86fd75f883215373ebc5ad21c587dd48c5df454863b7a0ae8bd9005d4d9409be225d84a58a996452c293e85b1bd6a4f110eb0362759e5ad14192b1153a85914009476c58c988778e5df83388c0a79b834c2b76087bd74311614721f9c48cafe2efcf3507a2db7e18f8abfdc6b00e8fbeb5b2a006c722205d3a27a6e2c5dcb687d49afa001fff9043f4b5b7232a68da12b382394215be3ac385331027575d6e11411979b8c33f2ab04af0fde432a51aad8d19edf33dfcfe31cf8cd564fe1a5f091d9b1c4aaa6e3d3da6a56282828703ed65ad84fedc063892c32f4d1b62d88199935be4558f27fea5e1fb3f7f7be935e7cd6679a2f03bec71aa247af552a2932465e0320c8ebfb6de94d6bd4770db0a0c00b8187c7e00c704b6e641aa56715443b33458fe4f3ca9a04c0aa710361515066d8c3c8cf1cd73222d00d12d3248f9459a0edc2f86d5aa3d08b84b6e848a64164121c135abee91090ddc3bd1a8a23517e4b1ed9143f51c966ec2d66e6789151e4a2980155c663d33d801e74ede893ad3e39800c25f892940c83b3147fd5d750ca14999bf034fa6b573d2ec6e438ddc9ed576837ad4b62fdebf6c72236691fb4c14e6e657ee4d6796d748d9386a516142cc40b2b7815d1523f43245a8016c2574215884b92cf83b2f3660400c990aa179ce3091a397f0f6c24467d62871ecce45e5a9feb078b11beaee07238b11dbf69439c007ee1a6277d3b14f9bb6ed18df21cdb196c3dac2a61f710024430a132cbe818661952e0c8efc10cfa36cd7d8db740e7d392fb7161953e29c21a6bfec371d8c8c6cebfd462ed0452b6bb66117158277878fa8954a6b46af8b26872e0e4371e15e05779d994415598e39984af80ff5d56dea4ae6b987800890b560e4cdd6aa45c1b671951e53510e78fbf25cd30ee80e99c382fe535eb541acfa5335047794aa2d6b301eac7fc8bde95cf195f6be497573a26c5a48b1d1c1430dcab9f219fcb80a53921633e3b50d5e3cd90aeb01ec2bdf7c7fdcc68e2929925d722015213d748b64e52f6a6c76aa90810675d3c8ab5c2addded9e9d5467eb0a9947bd84166569a1e0d9872938c16c8588ff02c9893022cd506001847a70324ce0d1cb7e41bcc44ee8c936c9af9f3f64f12ac0ed2647e871c0eab528d5ae850ac6450aac3b669b6161206aadd9864edab9aa81f49ad30613237a2c0b8d1906901695228e90fd4faab99b94cb9bf00358c948897eb7a4691e109e44e611f9c4a9cd011477ceda6e18836a03c7fdcf4dfa011580216b1f263da0d31c7d41a938c70eaecd1010eb59186455032b370df7577b89d95d9bad35fef3f79d5ef6166cf7f4f82e0810a72d6e1b6a4f13e6cbf9ae07a3474fba38941ed342611a93a8578dfd9021b27be5452e7238d45f9494ab76f41918bc034fd679d5e0b0e47f7c5ac081eb10d8b1d85403b7568fa3fb01876ef8d22aee38b6e980a159cdb68fe1a5178bd7aba9fd976e248143cf8bf5297bb3a0b1c778ffe971b97db43934ae0c280c16579af0a61a6378de92393021c56a615a0b19cc9c50e29c487ce479590e14cff405060fe6ed1b4af340f983f85f69522ea927c2290382bd7bea8c61cb9f58739edc8f96bcde758edca7a2c09b9528e5e8535833b027954b5a4e1f7c59ef2af24094a73e6c241581315eb5afcb5dddd1578890625ee4676c1fbe08187889c805fc64474bee417e89502c631b32c38ed275de78227ee5d96d9ec738ac3b09eb7061d3063ddc4e92eef3c6a79e5fb030b62e8f00314ccd198e044ca00d7bb1b1799a3725fcd1a5c51faaf2780c021df2406eb11234a57d97307f75fb0bb85b458f19313a2ccc37b88c52694f25a71e03d70486352d2e201015d8fd48e239748d2f85e8add124e301f51002e6b09948554d85fc6da6119eea63308a7b2872b6eaf1d66fe1bc8cca0e39c6c5d496d27cd439465881df9f2b0c162df90cafbf3cfb1f3af6f283d80b3e2249844edbe158241fd114d077f71b7bd8af815f538e32e33cd08e75d6ad69a1f4803256bb79fe31d5e0c553210c93a77b1ec5f3656a7351d87267332a1d931d09aa83701c42985bcbb4f363c6b47760ae916f4397dff46fedfe360daec46f9236579aa1e169c38376a422c88fdb3796e72a86a97ea7b5598d5de0826bcde85e9b10ef6d851a4670a010cd2a29d4740ddd8fbfa000ae7ebfc6da0854619d07d3264caf41b5b01f0d69abdbfa0585e434a269cbec603e48ffec78dc5014758ca21b3b4e373e0b9e0b9f219734fcce00ede9359144a64bbca6d0411597bec6515cb5dbb28df240abe54225ed6714b60e9a1372e0dbb8d7d3204dd8ca12b2bc6cb980fd01e0d1a72244540ad555c2582f34b059ae005c6e41691937bc75567e8802039202e69e7a3343b53175dfbeea5f481ebcabe9bf6bb0d13fdbcc80b061e0ed93b264df9d119eceb2e23ee4f70819754742e051f01966aafddbdd81e04637f72f6b28dfd4341635a630d5d2f292e73020da5add5122f3890f2e3558bb8504e437597bc308a4c37a48ad90ca32c3961ed44f5528e71d9a96e5a89d3849bed2c7bf9ea60b709c1fc456e9d310922f0de1a5d596ec44e5fa83ffd2b1256280b51969998d706e3014848e6d900ec11c7998d089308e8abb6485d273c63d59f5e5d13beba3ad2fc25da3c660ddc229d5a9364e87ee2bc2657cfbd21bc9fca91a37d7a90a39dcb1b965892cc2d26fca1dc13671b251bd96c37bc6ae423fdfb8d1eb32f59ab77b3b7b83d98cc89fa162bf618aa51b99d09cf7c93ea0517d0fc54011dd7c5ca5dad107e03547bf2be5a3c6018afd715c241fc44c4514dfaef4e7418c23544087b6cabea6202ffdf1f84094e1d69544529820831a09b70dfb23c27e206d709fe7ede474f2d1a6dae50b08bdb5977dcd6e9c145d4da63c93652b119f75868c54527532ef47e1145153e64f725c25549ba26d11d799da83a505a4edb99f38667ff51fd388fc430615d0140fbf7ce77777549bbd7e2ae8d23550450dc5ceb5e58c2bc252ba1a5fd95d1e335bab6cf2c4d4357703451c0c2d2680d6b50a220e0d6f8ddf429e5143143c6870b3952ea8e79912883b015bd40e5f2625a6a2d86854a734ebdcc799e9718e88fa135775b2765f05edbb737da6b056c75d79343817aa1c61f1cbac4f3bce2327e1b6bcf1a5c744d45b4ef22f56cd3a569e35d87aef3917c507fa42d32116deb2c6fd64e1c0a1c202845f341f859532fb14e71d1b4a16a9f78b4ae2ffdfbe87022629c799f6cc76863d8fab2a22bb4ef347198c864c75d7d98fe286f1f8e07867df76a4f9bee394f42297b59f656f1e831adc6a7eb34add0d2c3148166639f364a73e407053f4e9d11405fe371e83300cc7217f321287ac8387f72b51fd83457281dbf4f351821e72a5c7ac3a19d83078564a05cc0a4fdc399c817b56f4efe1407213c9de2b527658a1f1c4b01321efafe59dfa63d5fd5618b4e67d561e643db4df90a678ae54cbdcf7af25f31bac65303699b6f0a02f4c295f66f6eb7a24f4f5bee03edaaad4c61081500949dab8443af6c32fceb3105dc4a9a933f002688b40ac56bbbde21f86370bf3ac45282e37c0f84201c3c91aaa5231d0bbdd4a2fffb1b8ebea5d93cc15ee6469847fa85683f6194d1378dbe240c9f8651c6e4c34f09d2e462bd89fe3398253d495e377f8d9c17eeb7ddee035eda357e24285bfcd768a88fe90982274079e7e05dd24370f2d9a406d03f5f9faebdc51dfddbadbba0e79ea1e81fa403399390611462f0cac5ae549762d9bf63e9846e0c0d3dd4722da4154fb093c243d32df2b0f48b16a1e4c4a3a860d7ce2e839e95f16811a7060477280dbff849a5f7488e2504f38d8ee34e6ce6867f32122b554636ce35125da9a3205f31ff79f8ad91ea0d64d5b6f3a7937c5263a514343ab571fb4600a2d622dd2a4d86d48c5a2cdbaa958213c51bc404f3ef00a610add6cc1f2dfaa7ab60cc7d33e9d07e54f8ae6c59aa6117f50c991ba8b7424e55953af42415a959bd7b20962f09095b7ff513c19b98e40a25aa7a7a1a461a6b42a15ae1aa177b60a823f5cecb581246cc586272666db5c97002b28d88f5c6af6c4d71bee110cc4fbfc53e6d23a501597b7c7ce3250fa9b2782fb4de75527a494114f35e402be01aa88622cdbcdaaec8d47a6512b8cad709d9a86282a95f3aa5e1700b8aa09705cbf2cbf668ebe879be5c3f9bc4b0fa4b04ffbddde7e18b8dd8bfa1e5f1cc0dfd547f2d7ed04e9797da2d0d5ec7eac993910c8acb54dd51ea6879ec2fb24dc40ce25a52c5405434071260268445b5e9c91bd5ca1243d916ecd6e51df0d1ad12050f7abae0f36790b5eb2166062ba1c68d782d3e88e51a3b71aebf406dfa4ebead10ae3e710da404f3ea8cfbf20b81eacda1e451a052eeabf17a9c90337ea5cb5c6659e2e46f0512d3c946ecdb4d8130da0399ce0f31b2cfe822f2eafd6ba1a48fdac8bdcb3822da104171873686394529d5da82d8551669d3bd5d7801d1371728e4bcbe9f8e7cd83c10c68b9b2bf2c9a5dc34ca16f7a379acf058eae012076c57faec84dcffe74624d269777557cad5af2eb9f5a53d5ca333c6bce7fb8a6b6dfa4fd2d2a149229bd759dc6a0217c8fabbb0a1f7bb27ffebf222b4d421fac41ebacf6b1a9cfd79f9dc55544585b37bca31191230d497de90b143ee416d509862e9dc62be383cb6304b729310e1e498ab8e0683d588e5790eb8955b394baaa3f785ca0a4d6cab600ecae719079fae27e92fcde7169c2099590f6cfa9f0a3502491e720659fc58521b279e9c3bf664f18c996bb46cb166c6cc48b4c18d7a04dde69717bd74795ef24998de1ca5208e7ab37c546600ca7615a58b1c9ee5618f8713e00993689b77079cc0085d12a6ffbb852a8ad8ba72174c965bd6ec8728692215d9be66f55ba1b053a9d113f04de672bdadae63494b314e4dc64ff199b127d30a57aca893306011606a55e4778bd9b1ebd0f0d84ef4d5df0bd184f3df7d77318c14b1ff8263b73bf5225438a521f3cfd003f32cc6775070e8fbf01e49a00154a94a3b914a36320e62205462eea83299fd5c1b49c40df2e9c691690bb4bf70798573b3bc9db35479228c4689ead6dc0659cdbbe4f8d515acb6777a6d2f37494ed98cd5721fa9675aed90811064a3832c0e9e9ce772a81f66890474906116d9bcc2463be016f9c09aa7f65ac0da9862a75d9dd195a51c1f120d012a4d040c50838ba8f91e9e6e41ca3389157fa831b4ec42812ffef7716b3ba95a716c583f2906e03e4bd954f5561a28618371f0b2346af69deb723bd140df42dbdf518ade8d1f45c9a79e0a0d68350fb33dbe43f79bbd8adcd7252cc69aa0d19cdf0a3a244e9443f92f82be29d1b6fec1b65d487f767ccd7f11feba38b00eb09da34381400fdc675833008abde9b5a68557f5db34421d7de9430c6cdf4cb1a1526b0468724325502f2a2f9353afe9e86cb60fde813d4814adb826b8196c55c193c3d196d6aaae40ea1dd661dc903bbfee5ccd335aedbdc732c66b0df762ef335a5b95dad1b530aa41aa962761fd9e59ad69d8c83df841227bfa57d07c87067366f1f9b49d61107048e9d67a63759f472cba41a67f48a225ae1faa1ab2c6611a116ff4be32ecb7cc3a2b0dfba6ca4dcf25b17093203883540f22458e1d49761fc0867032891ebc1eeefa9d4a4c811f3c115590a5211823453815df5781d73939da45674288ec8ef6faee98d4e73b6f80c99e54ae4643948f890e1e61105bd7ddd6298933f8364e827ab8ecd79426144c074d6e124eb8cc6398c5a564c82bf20b4f0abb2826d0ee9c0bb92496a27d045ad5545c08ac32d72b86ef5fc4267b89718fd36826aba315218ef093aac222ae65dbfa7ff6782ecbb26a51cff0624b213c5c50afa698edbf02ffb4eb913351adf59a01efb536e2ad773aaf83e52799422ac6d718e1e892b0fcc1794eb5dcc698dbe69e6319175310b473c7e9f9050e6f55a216d92c49185bc53471092bcf99e14171f0b2ff6cee83cf83975d9c5ce8a308783339cdbd9b394a77332503957f37acab155860e133fdca3d1dafb8f07ea292b2a2c14e904a1f1dbb7c56f37eda30208bb10b03e90a81ec5eaa3b2383ec72d7cd60867a6ea386c7a76c333ab7d30ce4bd47b2c2646b3f095a575abc94308a3e65f0a300bc8174fdac5abd048c5d11d243285a6f4e601189f81c78d7adb16118ed59da7b4850a9ae88bc4dd5fd9681a5ce6d0df76fa3a28308e17aea56b6c77297d28a71d2199127d6a5869bafa494272b3640c7ad4323d7d2d7e008304d49b658c8bce7df1534c6e64df5db51ae3a2a797a37902b7489d21fc3db860a2268d1a5201dd58b7ace6bfc38fefb12bf55cb54277234b0ca36d554857cd536f76c327383a67336993d7f1bf5145be63bd21d976e6a6aa1596d689c83b4995e9cfbd1994efe677f773c24945ea6962854da0bdf6e817cda8db85a41071cfc15b9d327363c3ff27aa04bfde3568c9c58597a8b104482c21882507680f000e9a8c19189fde7fd861888b78e5cad2805a5e4e10f5477845ae7b624e9bbd862e0a1d61ea4269f1141a2ae0ee1448bb9b5daf3ac798bd7d52328cd66371e79786baceb0ef70bbff18263663273bfea8825e89e72c5e28be0e07130d9bd9bc3018302a708a6ccc4bb38aae38894e25797f33a94f5bcded111357b42b8e1918952dcfb722db787f36088bc81d7d597a791ebd70e8423f04b93818ffb40cf59ea86b960ffcbb728f8c2236517270bfefd46a082aa02c272c0091aaab3f6e32e8bd227a6f6947a88955a93ec92e6c5394ad3e1fd1cdc9c2677549e6cae56d4ba2939559a94af92980a63f74231b9054d150f8d1475ad7bdac347e54ab7be6b631c199ef5503d7339870227a02ed864996a59ad982f13ab5b85f8ff77865399a7a335ba9afd621c12e6f53815804347ea30ab802d8c82b91a79bad0b406fc327809d0957e1caa2271e473d6e05ff9be023b4f05758fc20386dc6c6e8c01cf99658db1a289d8f0d387c3fb9a77922a0b0c6da7bb88b06912348bd8bf0d813668ae5cbbe475f45c56c7e4f31c1c7bfefb9aabaf3e427568830dedee4c1dbf03d78141d7b99740ad22986bb2307d044aa8011e0b46bb5aadfc261b7a38cb56883001111b46a44f168f5c84c49eba179b4c3f1474a5e4cefe7f2ca5e56a5183106e87409facc56f432bd10953f0a433aa2ef437a16db27825f89ad435ca2d34e725392eb55598d26b00a1dad0a528cb0fb6fe14210098c2b2f0c06d47aec569037b6129ca7cdb7e63b4117431eaf140acfd4989ddaf027333e375c9cf8c75dca82161b080a0f46ab66f0bdf3be6a6b15752bde183a5006d47f980d3792ae5264d75db331707a8c2524c00344de17ba223387873987ac78fc4c2802f56d42c1e915f4cdba92f08917d4879864b4864673dec9268742280f447f90252f5d89956c78ffa104b22d6fe3d6d16121de55ab5c318a04717c00001a5874117637748fbfc4cfc8e1a3e8db22aef8943dc105359c6687f5d2cefec344b42aee5ed1284ebfe72f46f55c218d0c379bd8f60478e3d2fe75e1747623a4433111218575e3a873e4f0e19c197fc4440464993cb942552636c4d495efc5622acf36d4a294d06ee287c80fe6a798b3bb79872ff08eb10c2cfee58912ecd0b0522f40df39bcece7d88bb61aa1e00616bc7202b7b5d2d1c9275e7345c050015cf2e0277f28759148790712e011639cc96864f3293c99a80b4af2a3b4b11fc2826a59abba3ad8a1ab3c7f47ed9892d664f1f8109d56071d0830727f7fbd171193d14e94ff43a8e199016bb2b84587af9558954bbee510459c5a7b6d5d227ecbdb56c25c627f1399f9e6a413a38d624dd68fbf09c392cb53997096e945aa93175e28d0f7405a614bee9686930e73f470f3b98ecc8408a5430e2eda36f9f1ddcd3806985b5038bd13bcaf5e5aff26058364ac13a3e97b09fb2de41bc0e74573cc4e97cc21784fda5da2fd435fe92a21cbbc8a4629dfd3127cf47daf8f4d66cfcbce4454a9286ff956fcf1fc97969706a811e2f7dddefa9928cd40b1cb44f497581db97d1263bdd577fd421cf3b284d14cfd10c53599d513edee405ee6c4691e10b36f31c2f5059592849a08846067273bcde58b9ee190e5b9e55a79ec7a563d98a067d0340d829a53186a9f06ed9bf5ad769b0e4b33857e5e497580ab843771a341e6c09cb521b6bca0263e726cdb797914cab4ba014eb08d523ac695ef768abf7250c1fbe5ceb16f551b7fcacf6875084075779de80ff0c2d9936d82e31b39f7e4567858b93d844d27eeb071abf035c47a58b2bf3a460140fda235dbf166e84bc612fc3eeb75d6438a283dc5cf633373f57cdb9ba6aa1640fc510fe7264f5c17d42955b1b8a5094adbe710f2538cac47035bfea51123bf5853490578084c95cddf782304119b9ab141388cd46cca17a1d5921cbc8e106637194afd4fc970cd4c0ad2f35455ec37de411b4c3227f98727843f1dc9f17ee2fb0bdc7cd943295e48dd8645d3013a6f49dc7a792705bb2058520dc34d4a3d65df570daaa02b7377a11283a9ec4d60e18be098a63fc55466cd6a594e563b776d996bc9654ab9d6ecbde6c2cc1dceb0f4aaadb175adcac583d3e79d19c105b375a63635e4cc3859a2e2a7ef9d81249de2b7e72074f43a7b3553d768d88cac99f8e3675468245b7fcd11baec5b152ff5aaaf15bea34a3124cbc27d3ed396dea543a437124b8e9b4441ba4cb7c601b00339fc08219b3660f4853d45eab9eb6a6a3d63f72152681ce184a064a641ae94b2d34a828d34f1c0ab610840958718701ef7ef6c6cb957213df47d16d5cb51d9f9459880cd4663de74bf12674b754e60ecbc1ded2043c90acfb14d91b2b323a196049e58f62187ddd7076a91b98a2dee56f717749f01a6829d6100ad65bbddb6f9264c15eb3cb03069c73da6ad6568545d10a804f8bc3c970a40906e9cd5a040737b30761e5649e37cb1b3423298d0ec1550f9f9d6efd6924553b42c49e8e9c659df26efc86285a8c3c1f3234fb288e468d34d4ad0685ab9b10f133c9ad74e0b0556032035d8448a5e056d8b64694a9d762ff5f223654fe2fb0917e91000b5dc08f8bcd6301b213bafb27d068f8a1375463fc84346b6ecdb3db44fe3352e4c16bfbb760b28a6ccb9699d4b42a81930037938bbe7acb988d31d9c752c6c0cfd244bf69ad5e9c876efb8bacda85a2c8c59fa0fec75058c6db049bd78ebee4a6270a8fc4fea08e7bea00e9982c5203d9fc1786af963e5e70088f1f9c044653495acc167806e50eb4e8381f075b0cc691e6a715819a2c590e10704a95dabd69b49f636470298784308c9407cc0727e11e739683778821b674a6bf71cdb08237ca4a2c639c028262a27534675d6a98c68979586e09647bde47a958b0a5444e601b8232ce75c8cd444fdb7e2d98805272f16eceb227010baa22e9694848430427c801d241d69854f3965886f93ce555603549e55b69d71407a4d8934708440118cc68d2b4ea2030b97cfe62e2f3e49736091fc82c78c536229970353586eeb3bed6886e46beb235516312a243067ad68b89ceab81b7c0ffcc548f47f2aebfd68146810a273b56abe1f5d9d78b138566647cce9077be53c22052bef8b17eda72346dc366dcc24efc0ee33cf205cd5786b309c0f61f12df740e2b8e90f2c24fadf96c84414f4a816190794b5ffcfdfcd5ce28f9586feabebdd635425389f674312987e292d7c3fa825f7a7ee389e4869f3519129979c58add2632d18b2e938d5506fd3ea7dd15c8a271b3e019cf20c7bdaa6da84ed69f0a5a916e6683acceb914a5027c33c3992e2328e13c246ebb2c143c94f53ee391a1660355f16bc38a82b97bc1971c2b632d5be70ac338c642d3c406935b426aa20cc7c81a410c598b890daab37c154ff144b5bb1d62def165733eb61a2e2b7ff241eec20ccbb3c13537d888df88ba498a6481e4bc0d1cc3d0f9bbf52e6c928311b85f4fff3670a2a7a71e53fbd580640bd3672ba4fc90f991ec8cbc8b518ae291d31a002fe7e8e6c250941531db1a776524be4abdc284ce9e1e78fd0493160ccc302407f50444892b20cbfc8ad2ddd601e925ca6808b1c90a96033bb8c1cf27ce4e9be99679b516cd8dedf8a9b6cc8986ebe6e03ec27df67970f309ba0896a65ac73c925d7b376e1473e978062a9e84c024cbd07edf6a5ebc1e2fc653f61fdc4902aca4802070e6bdbb1876a643528bb538c5cb8970a9bef9bbf7ad77c249f8dc7563e4d5286a878d79d6e11e259c3bbd7a2b2f77052349ea8365fc43dc429c122503975e2747ad0ef611cb7de8f11fab67d397022db878d99460c8b7f0f721b1f37f7952a41fa6da68ba4567b8582d2fe59f74034d06177b1167009eef18717c5fd58d79d0831a72f0f84bb727da92dd2ee0ac6acb1938c0cf11abbbf9e51b74b1486f3a2f7882128b09029e5450e05565100fd06374a7aa2357598ed4d320fc88577f3068ecaa585e00ac4c1e15164eecca61cc4e35ef51008d5515b9bfccbc135800ab9423d80cb889a1ee96be344d07ea6c4643970b84f03bf34cca6f742e729a554ce0b77eb45eec5a118e591e80164e0c854c3e2b1aadb6767d13b995cd79637f02eb338656e0555562227df2d7382150d6e63ad83037c6f661cda8fb36b5489613ffd2bef8b8553f73fa3607620d88410e8f16dbb54894f093286a1c8f450a1c260354249db10037909b1ea15a181ad2be9e82ec7898c0b2930aecb1f162d26bebb72fcec70485f7a4d06a0c8730d73866561af585c65caa79bb33af691a4f634515a9559d539a063cc55c257e48e574e85fc4617b460dd618b3b537c33309694073612ec980d2e8bf4ec1f165ec175f2d39636434aad6fbc1130329cca52bc9acc80c0964cef4193186d63d2670eadcd702dacdb03f06e25174cfc8bc144da59e23ad291bebffb454b34eeb97ac89694c7469d72d2c4afdd09c0e0415bcef637dda521e2c39dcf9d67ab0cba7828c8b20974903888828d022bbe34c3672dfeaab119111aa35fb5972381a813844ed80574b15baf505a06dcba0ea826345100edb87e47fc7d95199cd098fe034bcbf0ba613355255a3c14c67ae5ddf4608c1b54db90522a1f81592c0d5bfc002432c0183d7a2b356865512362273bfdc5a408be072a312734c574f29e6c71cbcdd653118f1d60663beedc36797c144a0baf453246c26e1e743964eb4e39a081e56292d2dae6c1297883dde9c268187d0a430b4ddc4bb72bf408a599477e957558ea830cfaf91169e182c4038328ed838b6320348dc1a1efba2345c0e87fd66ddaa510eedaccb45fdc6aeff1b328060770c4d6c3d23f6f42bc369cb06a0abc50cf51558ce0740b1eb649780cdc6ce2eb6cac728a0b2aea99251eddd8611c87ceb4cc5eb11839d32d8bd32f2936dac57f13c341d334a17811396547f2fd79fe0fa2d32856e5d353c3428b940cbcac294162a44e5cb3e6530505db2d4ddd674d962599fbc70a245ae2b9e1fd720460ac2ed62bf413e048fd3bfadf091521989cf58884bb7150751bf2d0a5dd9415ff6673963f6d9be94c38067d45513d14669c886825e1e11d846ca44796126c66b33eae35d0a244414e8ca4e829957c853f38f4b8f300ab950d2ab0b046493572614336377dbbc199254333a8e4177a0ed35d93f1ec7b0ef116d131cdd31569df9ad4f28f72b42ea5029015e814c51dc3277d00578c06b83eba3459c89de88522ab8693d08bbdf39cbb57ce64a02f6a8a4445be74c16a9954154db02ff2ec36b61b91bb2cfc42799e8a1fff3cef6596888beeddec7bb3c70283e553e4f7f1de75efb617f1760dd1aa00ae5ad74b7ed3eb9723073a28ed8cca5a0266f29a3f14bc94ba641987483781b34098a5ac2ac7c86724dae96ac89d2e9a5e1486bcc48f3dcaad45b8a7cd65f750aa2da869d2ea46213a6bfeb65411da0d7ba696402a67e5646a90bfd5796cb286c5d8db15632fb66b5428fdf69505c8fc0e018f853328c397e3f0cffa54c9ea6e432ce8513e2483c8c551c2214ec5c142973480b4aa480fcb0a12cf9500f6d6a626362b104b644f7b0ade3399ff209b4885d21eb05aacb474a2b3972094fdc6c8355472aba5c151b654dc4a81fb0d623e88aeb8edf3115ed1e942e9a128f9fb0c1cb9f6cc5890286a450aa113e258591111e6c39b565773793170efb8d7f22db9c69dfc47e4e0c44dafd6607274204ff4b3e2cc4ad4ee15faab91e2fd14a48b23499af2889ac113390421ec67ba434e384d15f6836dcf2a1b433186a7011e9f0736d5db14a0c8c80d1289cd5c1bb1c0233fc5a53d31c9495c11af7ddbd436aceeff8c13a5eebe3465295d3757057869b25498e3505685a74b19dcc3e9377895bb7a070eeccd03f53b0136b4d89ad8da407357521a11aa3098210acb6c78bca1bd6fb312b7172f3d693f58ac8686227b10d25a022ddce35f9f4abbecbd2bf52c0556406836d2ce0701fcb5b554e9f0bcddd198b275b35b89ea57e732389e2b9beb22323aa99dfa644d9430344f704a6031caffa95625a57c2fb05022f4a7b5e68fd7cc4e2edffcd44ef34c102c68ed40a4344698e455bd04edb083ca5391df514bb9a822a416c3afb51a1612a464ff431a066a10dc1c8a9a67d7e507350db6d2ecfec8f8a043b26538391a6d9f26736445ba91d8ca59e03b44a3f3aee8fad1d1004b7e93fec589002ff9f2bcfdedb3638885ed3e99321214e428e1e543f52b638c3ea53461f6ee4a173676696175101b1db64e4f30ff129c79df893cbe825a1725da1c33c66cfa773f5ed87c2fccbf2fcb1ba150584388b8a7367eb7598030c1c6a2dcb05f4fcf6f3d3a0df96eac95a847870c22253593fe07d1f91ba7c0a02c1f6040606cef07d911d3d96452c874072b0259055d312fc3034cd6e73a7910f9fe81cdf5c8c7a467bb1293b9b3307c63977dd9ec77684ce94240876ed64bab21167195678df060ee2fc757f000068698238d2d6a379cb0f1595ed00fe7095e021992ea506b19ad6522f94067dbf4275dd9871c0d2c2b70043c0a96b910b109187b3292f10e3e1c1abc107beaa150f4e096ffa5f44d7e6772964055c835cc8ac40ef6b1b8bf8f42cc62562e8de26ec6e7da2edfa79cb2faaf7f9124c58eeee10cefb18b528a85eba3e538d05b462fbaa2e18acebf9598a379bc27461b6c5f7cea1e979fd3b562e10741b3e7d518e10f25c1747e826d3c68fab29eb8b1e33a8ac85dcf89a643190558b6ae16d400dfcb7321af9ca97af2cdb5a354713af455cc3306e91ee2efc3d90dd4855e407ea288dfcaf79e45d27d71c247fa9d4c82acadf31f8beb2c81ab876e9d4bd88023d929882d06a05f5a3f29ddde9a3d043a8faf431a6af57639eb8219f735062d7cb739a91fbedee4ce8e61766f5b9b9668834826bbb1427bb929c46bf3bbe373d927ee81d800e47138cba52937cf4f522106144b25df4eb8ba91c2b1518ddecffd2ece53841c9dff376111a4742638cbdf5cd9d899d0f71b46dade8a2d45b97b7b9a7cc3e330535e49add279cfcc401faa2804bc946d6c9d290bd9176fbf74a336776476be3794eb6de5f3572e791cc41795da3c990756979d084ce9802053e66824e2b1ba2fc2240a70b4d4b756fc2ad075eddc1b61988589821171ed8a31840b76e87a78582b27f86c21e8ccacba5aa6582e6c6a7746259e1ce322b7bbbb2866f9e1e9f6a61c6274c23fe40975ece8bb87b178b87ac069257f3df5ad82a9ad7e7c27b293f2cde6bde966030c48c85f6edab7b8a59fff7f9f7363d52f5d748eaa5dea644ef52d844827f437d26d205171b185411ddf50c4223dfa36f0db9b9c438f82b6645806bab974cbaeb7622e9446da6b8fb71e2d430c2b3d7428c6a953c717d1621b6b58fffb9d523e2c462cb1866f8ca0a221d5f7271e65f95fc4528b9ae7ed684619f16d3d1c0ae35a21ce09e1f07168a0c7390fc3abf3188dbb22899ba1054f9fe2d42456736753d6e3132c93d604d7cb5c9c21d9089fdc775ae3fc1d5741635ee9d454444422b06a6fd49f30997e95eb0c41f6f04b3edb8a2237378f033a43be347f83c8915e2d0ac670fd688cd8e455d832090e81f9ebacf82c464c5373fd445028ae9e8d7465f6cbeebb3b8fba8c66ba6f1ecb5b8d8236c1e517407f5dad4343e63390e2f8d68bb8910cf25a4dd6b0455e050fff0b835d11188b977877a02fcbadace55cbac2acee74c89235c95579253b84fb97acce2855a511dcd1187de8e35d4aa5db4b8c34cc55da1eff00f72a939c6b38ed4b772b82aa85daf8bfa20e9fbcaa84d9ecb997d2f9e9828c64ee16aea3b66359fbdedddc90d0e3407feb95af3508bb54139145da36575be273ff35b983ff06f96e0678083ec5a16e6ea271fa50fa5690a00cb32f7060c8afa20ae74b1a65f33275726eaf064ddcdc9cd37bc6a68003b46f9e24df2cfcff97b791b5e8ecb43202bcd88c88077494548e74ceb450030d7eaa8b05670314ee5c0f202c1f27aa654f646d4046026525f45d455f5e9fb236b8a19bee5fd32340eb58a12a0000418569733153f69b5917037a828e333c49765f5e47cd929bd2ec640be7e6b5c253d50f9a1dc21b67723b73160c5c25af07293f935be49d854b3a681e45e05818ea5a1962f4bc2a1713a6b4b9c75b62541d2f87cce31cd0a01c7cbf594262ed3eb9d049fb6d56b62f9901a0f44f84fcc76f00b600a529542c767a9b5d4eabbe9705b569f52dc0a5ed23068696ce757a4a5b10c8d0a7a24f3ddc4e6bd62d4c4a2314f7450e9e64df2699f8674663010737355828ceb852af01c70cbf3c9597e7c3f9775ac0c2c8e224aec0bcf74622c76dd68ea9cecbf35ebb8a9706c9a8a510cdba88b81f9cec51782db734a261495295ce4d801b85e4df5ca2cc768ce58aa8ab44f7ac610866d0f541550fcbe4ebbeec9b226caccc40535c36ed875aee1b91fa9fb2e55d180e8fad259851fdb2e24451b0ee96ca3551b232a6926399df920786662613400586a8d7e9c67f34eb5f45d9a33aa437d0f88b3f8e3b73e14ab1be0f4c327323746db841a8f9880b3c6e080dd1cdafc939683ea1c82f1c93bea1e30821f74305bdfa70647b73fd71419a8259eee3210f209699871c09e7a061a54aeed52d171ab0a5f87a475fcaf71affa5baf3e9aaa81a30baf46e4f406ac9fca68b6136bbf6eae31e2c8b79bf14f0de39bead64f75fe6187b051acaa158333441fdbdc374d5656fc18667b60271ec4686b61ff6d0882ccb4a3908531bcf5921071fd9aa90b3f212e289a24a306b352baef437b861e535d370bab86bea9c6f1a9a97f49bfd312b97a285b788b777dc55ef0707fbf8da26c345e291894dcfdb3cd9bfb1675708ad05a576a68d5b31c6f1c10b4660c34c0c9e479e2859c70b363634bbb66efd5d92af7b18c9ad662dad90b909841dc6e53881959152766c3e424466a123d86c553c4ffdd46435bdf0910ea857fe79cacd4b9e65af6a7576fc3174df98ae2d486c1e53e44fe06fb0875d285e0a3544759f0dabb8dd9c6db97cb1d44c9e5290ef25809f008b5f86c639512b2727a2b67cb93fba262b5b75c3f6d4a67d2a358b88d38d2bd4d6bb1289b50f5fcd0df66b81593223278622d726a0aee5d21b10444023a998913a9130db566f13bd24b14f857a2690e225eb672c187801190901b00d0d12673e2fc89b53870ece1ac5d69b36d5d18927d8a36599bbf9692ca807882831fb31b91202a122290dcf70a608189ef9f22f9edc30c60b220216e56327cb22d9bc5863bd1a36f888ba3ae3c81b4b0a08b228f23a4e31eb197b102d2a8dabb5a5e1d3846ad65b533a7e7ea7c2d97377af1c810a3372768be1a07375180713d78fc3ed346fff4771b9d181c61a5f3244b0043de9d6cc67b81e3b38252bec9c6d82c05fc53fd172f6cbd20de4f2b15e7910c8b0cd0f9ea2da2d66a77d26d17bdaa1656f677b51cf6db0185abc35aec5b269e7ec567e7ce68ad5877af32ba9f4646248c849859f295db7c17a1a5a38dcb9e52ae7e96d2095b30f05a1cc63c7f0d83acfdcd4558e6902f34d215fea9703022f8c1a8bcfb143edbc5e3748c172b2be296638256d3476d100921486e63e53be5a5552d47e6d9e3744885ce3e4bc9d0d8a5a358bf3f7a20e400f6fe63c8cc9f17715db3486bf6c907b22a891779a75137c011bc375273cc7dd8b80bd4fa4e63b27032a97e82d5d678665f164ee8a0bc076099db28f1455e258ad1829d38ae474776e35b31f680580bf191acfebcedd22f08ecbd3c06951ef94bf84359b9fdfc5993899f7102a5d1417c07eb10ab848137250b3ec39b6e02aee46020e7d39a19da796df6e662391fed503ab8288a9e29e02e66397d416335b2f4d4059d4542310eaa84989d30d796230fea27eda3aaaaff0f4952313894850c775b1a55f52fbaec64303d4fc77938f4bb62558483788991c7bc216d017d18fa711c75442e30b88b649dffe29bf291589597f548452f2087908972882d8daac382beec996b3604e2cf62d00ab74a4967ebd1d0b253077c02ad5666af98f2aaa29bed697b4f636ccf5b7b69b72a98d726bc50a8d7e3b5312b0de0eaaa0c0c0f8eca3527af8c1f7fb1748cc9300d7c549c0cef60fdcbe201e71923b3734e477ae71fb439e16a04c5b7ffc7dd1ac1c5585b49a646ca277aabfdce7d0484a1d622c894e0d76b25bf083e14ab7f9f02a018d329a2f3022618b4896315d4cdba2713ca23f8678e018211c65bdd4a371dc84466ff7e62af127604e505a025dcc9d1ac9c81ed755d451c9655d1fe2e44f44aeebc55d563287a2bf6edf6630b4112da82dba207813731497c7c210db86aa338db948b65339d2f567a76f51276f87e3b2dd0244eb193fb4bc7409d1290f6819bf320f3b8bc455ba2077e8bd34c4521b158a866b3592baffcdfd9bf56028cc0da6da2c2b077725428fb484de75db4ed65be4e2cf19ee858e504cecd334a135b5b294b5e7893376abe02e137fbf031f69e8994178eaccd192764488fa4fe575a86a71512cc0217ab703b2c75e21d0879f51d0afb04690690e86a125582ed1bf1b15a1d9ad6486ac0dce40e4112f9954b8ff69a17332c7d01e19b56241fe99c17b5670f36a956b4fed07b5f06f61efcc1528570779d0fd6bc27e4658a2519e44b046f518fa7ab502c2ef71fe9c1a71cd88d9854a889a2edac83f2337929aa077f979704849d3e06536ae31c77200087c791e864c85cc51f9bfc1d38b87795ed4a9adb31c58e9b15a4b093da808844325c3f837f5ffc1d6ca9616cd7c9f93e21fdbcd9c0883d4adc5f37630e34e1bb1cf7f503dbc4ae6f0c31198da99f675f2ff639502b20a61fb8258edfa0fb31620921df83bdf9bde531d25379346b67347595e7b9415f88f4911e6159097fded6a329e9ca5e765f1ebdb2fe2bf900954462bf12f126442d84259fc194dcfa970621d5adaf73cd04a2aaa0e019c5415546413d77759a05ac60c8f16795adceba74a75ef119b626ce3d488592b498a04691caf9de25d179cbfb6f70a781b7311459baeac651478239fdc7986bdc9df3c366790d6ea325475aeebc5bda3106c0f1e14a0baf14aff350b199b612acbe1b2d85f1a7f157f8c524b40c65f0c801e791e30d05bec8166909a0a203319267304852291179b64cdb9726c673c8f633caee1826ef4ecf6aa55856deb28b3c1dde7c302cc19d074ea7c057a0f876629a6e75082b8d7f0022707d5a8a245402caa26c44eae2fa80417470fdc7f2851d687645dc46567d93dc3417f4775602e8b126739b71540c81ee3816573af169e13fc183917a1178fc747d6e9481513993cc478d94ee3fe0bffa2c5bcdad936ce6826e0e3225bea0f26afed752195617dbc699791d75a4d077dccc3b3a080fda1bb636736768ce3cf92dd09e4834878d146f72bbc7a5228bca6049edfcde120474b4f5e1df081e47a2b9553f6909fee1d48d37baf643834af6fced2cf784bf6b367299bcd76cdf5346e379a21ca017fba54855538780b0b20381499b7cbe89c4d05b5c973ea5170978248e32ee22d5be4bd6a78a9bb36cc02f7ab15eceb96e743d5777a6e31d893fda07dc04a969bf803cb01f7118a34419ebb624bfd5b282340cc4c98992c409b3c7a81de24dde0c4f6f1a7481b9da78f270c2e3d30ccf4aab07df7f47b996a41260cee9274d2bad810f2349e08749362a8decf80659c3752d2253a0830eb02315f0ee27f9cdefd9dd428da5bd246be603283084b9381cdb01906bb3e4a760148d2412c05f6d95d53a100125fa3f8e25fca28afc1ba354d988dc169b8f5bd6f10df885645e66b46549e9efb24b579d5c39ae2ff96a4c457df6697754b0985dd70f9f71eb34a9e075b80aaf4dfa08d859562ca56a1c644efc2aed60b02fa8199e01491ab85fd7beb3809a10de70aac2bad99061d0a265127c930bb55dc29ecba4d1e6e31306f327acaaae9bd350bf45acd37ecf722feffe1fbafa8fa0b495cb6c957d1021e7c46bb88d200a9b21fa95280db9d237cff1d2983d3b67f15d6743343ea33d1122ae88848d7e4b8d08e6bc2341378f02f68ef07d8f4def7ef18408390a5702e72ae8c394d58ae1a875bdccf4b4878fbb99a17e96654786cc156b60dc235af31c5f2f01845b6bb5636dc926f8719cfc7d08d1b5bfa8d0a8135743bb8a06216bdcdbb6ce5764b00bfbca435dcaa05f8733e79616f6dc20037fca5a7c7cc57f698766e4f81d8d6a95ebf59bce77ec546552e88e67feca074bff214081850aa77a785787c2529061c1123b2b415b07be41a48ef8c3d4b3a1f1e7ee42d3f8c89c31e8dd875ffba886685a41c5473e53bb5a3904bbe76a82111fb3fa3eaa9503f352b0820dafca806ae12345f2cac968bc113d27643b5f1c59a30f3e2bb9934108206c7a3dc76cc81a2a5d876b6a131825b277a0878883aba483c8dcdeac244d18482c1dc95df9ae095e5e8de226039aadf6800c5034c616e277b5ae2b5a6a535cd9c082a78037787803399901b6ae28521735b247836e293d44b9f706b850575a5687d27d5e923262eb05cf0a264b029530ff74e9bc5de011e25a0571bf43baab5d1a7dde6aa82801849878013de5be8cf5d604e284679c1a4bcf6b7800137478e3963c85a6fa6bb3df243a5579600d4fa91a29d7729915a089c8989995ab297e3596a8b698b3eddfde88073cba028e682aa99544bf313b1a9f6fbdbc8fbd6ad341ca25741f5df3f47ae998809a1eb9d37cc70f4328b314a1b8e8217c55ccf4616c7a5dee8720c4f394569e063607ee2678f6aa06754575f885b6aaee7d66cb252651d33b6f7d41ddd1c8fc3a32ab0e95fd376c48b88fd9644291ec3f030a7633e5bdcf71d1495c90b2dbb183ef24bf03a770cdf9147c0bee805becca854b6a3ba9359b0638607444212f1240676bfde8426374b2e1ef080acf413cbda04ff0dd7105cb3186fff03639938454fa6fa7ed339bb3b2ac06a790356b7c6c1bfedc4fca06cbe2cd56cc985133ea6362b0909b003fab88a3ac67f785605e7a802e875ec12b01ff6e4b915872a21f1968cfa42b87d3d3f2ff9e363c644b78dd66a78a3f860722b6013b9c672118f8e5d2fa6aec2ff37eaea8ce01537b8dd00a008f6b14c82f2167132c397793f719f5d53bdff39ac77aa9214dacc3e832baa81950ed6c77a0b1afdd77067606aed6ddd47a1abd46b400d88eeecb06802af0e7d862b2efd589568b82a1068cbcf286df0fed08c4e58fe0ee4de17d2f6b6710da3fc97f577de4aaf82ee8ce85306321e82561b8fac0e308cb56b38b05ea17e521a146dc880b307a4856b650e8b98eaf8894a1818034e886c9bc8876a1b34842f9c63eea27f4a0d8268219636bec622e1d28fba716e66c9ae98a4633ed5d129e5f647eadd16d8c90c9b320f522b5ddb850a629b685045f9cfece976c4439320aa788ab7460c9575d1020d8572f62cc7452cbbbe1de245fc108c392deec29988d3f0c6c8cbb6731db7bd7c1e5a39b3881ad071f7ebe3210620954c7cfbf5d6148fc3622f7f83015f8e2d9eb521a3bc1f98cef0b03b692a209ad0954d42d19964cb32903792789551569a78afa655b05c172928f31633d15686385a516a9cdca3f71b880fc78b6de5822f86f4cbf5af9224ec3cb9742f7c4f9566cf0c64596137a7824a3aaaacfb60d0237e906d1619eb602ec4c178b5a055313780d05baea5923dd9d167fee3c70552bd01dabfd09d47a8f4b626a81a69c6852c4dae6480af4a777492f8e56c6254621c540abf4f95d5300e69d60a11be97654b4625b66547aded3c5d5dfe2b98050293574340c61fd404da5af5f63c7d83d774256ad7ec13a1cbc6d57c4e503a1c811e07bc0b5d53ff371c7a30b00ec5e8a96cf27b3e82f59f48398c9f0ed0f1f18a913edb71a21a767ca32577ad5f445ecc4f724530d644ca4e000c10a484cd5c159d97205d4593cb498d3f04078608db034bc8b6f6dfa9cd56eab2b7c3c89193e01e0f10685351307d2b8901ef958db975bfdf18e7b0ca484454b4cef7478fad84b278c150e4f889d28b5f3d099fcb3c1595dda14adf0a8fb79a4e5c699abb3d4b1486e02b245e1ba7f372c2c54fd94c0c50dcc5b6f4f28fd600c1a916f873eab18d0bd2fac96a2b0e6464700af43152c400d6dbdc9bc502f2473699f655fde89914af2d2e23d4504f00a653c28bf3e4aad8d80346c42686255939ea3cf02ba7bd35e8d3ff12cc1ce45dd56f154d7ec73c4750c6b1ecea13d027bb959f421564ba4edf9a25c725820d497194b21228fea1da0b0f16e5ccf581e892c550efde41bb80b156e7aec9bac948dd89871980433b76492b7c4c98df073dc81897ec7a981f7fdd20a019e7232c24f2b9cb92e423059b58012a147d363148648aec954eb788585cfd476b103f5207c69610df32ce488ddbb38175a3c57a3ba9d75d052d95288cace85ed30fb20ca90fc5b68d0a0a759b76f7983cd6cc56fb432fa68800c7c27bbf3a4c79676300606920fc953b3be6e0464774cd78e3dabe679e818f7c16b4d49f43e54cf42c4a2b508e4b5ec76920223b6fefc7a5776ef4782fe6371c081493ca516883da795c758bbe3d141a7789e9d3380fda1c74d98092757dda8dcf48dd27f391a5545d0926647aa6d346f2b7db66f6e3b97727bd00071a63fbdd13caa6debcfa39055a11b75bd57aa5a16e48702b23d1e6f039229652bd04a50e2090b86d974df16497130edfcb10684be1ea0d6f4c9c24077421d887a7f425a4546c824af74421d565b5681bd4e715a20fc4967df2c07febe297974a895575847a6787f57f03b68393365dafba9a720530ed562ddf153b2f0286a72fcb4289c1b8087cd14c37269e7a36ed03de59426d2eb7a83a222c16421c2d8bc3dd2bdf6323734ab90557f85981a966f64ac2dfa05e12b1db163af47ea88899852848cc3d1fe7932d6d4398e706863715b1757fe4eb80066357104180ba91b0d3cfbe51ade0739f1cc0b4cb7e32de8c7d72215b4d9a1c12dc90a0018e77d2bcbd9b6ebba514f1933c0647025bb5b883d591c79a4cbde0a2aae24db0fca06ea6e72aabf98696a535d57033d568729092befd85b48b44fa300e1bb058e8434158691207ada4c8752b4e23b31f6bcd1152cca85e9874c0e23af3fffd5f7c87d8ced7a4c98401634d1882fc923c4d40f17cf8d7e582a959964a97415c03e290e682f8e3a9479b12dd7f6d9a343e5c8c7925257bc62698c6b2fbb95d3108aac417390785722fd6580b84a01011dce3f46135fbc4ada7451c81016450e433d1c908170010afb3d65b6851aebb8b7396488bbaadd20d567b8216670b65427ae237704adfe1f1d2858590a2a02c85d371182fa952d66e281fdd42b7bb5f8ca0e356f1e524bc519bb3b320e0192b533f86df81e66429dca429ca3edc4b898bc51c2e443108177bfe2edf2307b2e7932cccf6e9901c73b6b3e1da698fadc790e1dd9f8791e39a880334844d285e2e49b5931bbfb9f06645ad4d81e57981c9f15a50bd547fd6d04b614ed8ec80987e8c80bef3efe16323e0ff61d5d0bf96180f8a858a078b2d867d3d9c4cbe73fc2771a19d76c955ed67df5143071e1e6f7e3d8228214833c714e1bbde5437b325cd885bb3e6c204e7521a3143a76cf206745e23ce8d916e02f68d4f14c66d2e54421f5fc028208970967b806c1c1ebe2b48442801310faf27bda1dcb8ed66af352c22aa8f40badc8c065759e6490b07e149a174be5043974921c53046c2d6fa021f741bf580a25cfc074c18cfdc8845168478604fa84a06cf78a5a799285ec144661fdfe9a46111fa00ed59c03789fcb27b1a63d45d9addea4e2205609cc4ee5aee84c14deb39ff79fd9136d54f14f9ba7adc2c42d55119f39bf9fe7a4036a5520fc4af75469e12836af8f85603257650f9400b75e0a4fa715c60a5db4c01e5b1137ff1071aa254f66e6d1bd816877dc0a06cd865c125b1facd6f6a990eb6343f9ad2178570e21a9efe7de135e919e2cc1768d9d97c2ce27ff9ba761b2dcf5291c5dd7a7fd481119352f453ec6ca069797b6d54688657dbb645e0a61d8a113f8c145104633b9d30cb63c6422f76fc492a83f994f08c0583d34109f4847a77ceac9b606ff1ca8bb0ff43985f4e25a8ecef4e0d7ec9ded6e96c5471701a1e04b3ef0d0e54652ddf3c48e823ff7e765d09a442390209fcc2b0ee30cded69128d4f3ee2bfe6b5f8b725941b69f5cbd2dff0c911dbcb27a46ce3a29af577286df23715290a21922a6f6e0165855fc85e6a10f057138e22e7a385480cf5a1abe9a8b8582f902045e59ecfca3fe62d68774a893adb3a9e62e4f19931357aea928622fa8b449ddfb904da8fce19c90426d3016c1f677aeea24c3e1e89f125d7913e190b8ff6e1e4e1e0654513c54313732028e207dc783036ab17c4017a860e457fa38b6e51e20778428617664e28cf66306b245ffa31c47dcc9485b7ecda5fdb8a81fb03b3dc9bd373a38d27b91477c5e131eb57092e5cc61cbf1030c9a15f64b51c8f1f2258d00f58cd1302b5fbef45f041c5b7f14320ef0a90397ac6bba74c88935ec076423bcafa9961c90f0b78478156690d1256437a6af4d016635a425d6da0a5b9bc98f1a347c4bfb2cd41bf388c8bfb09c45b8f6a307055468b68b09fc938dfebd779ef88f56b30f96608d642126ad11b68ce3eb2a08599a9999a319b23dcadfc51aaf4316a7603ee318d634f8b60f57e2f056584f7218d12fffbc73063d79697d6e9578ccf92627b8dee443a9e33fd0b85c4f071657e1f829c3ae7b509e7af4d308df53f8ae1e954c998ea317edf91ac487af7ad3c4515f4960d9b735e767aa93eb4f81b80046d8d4713db3774d8467cf53c426c614723c3d0636fbc38ef5c33958b19964608583295b68fd0266ef94c96c33c5f8f38de18fca56e48623705f381a56578426fdd66e1e7af90177838a368c41b5cfb02a8222cebc4a546b154f9ec2771b727c3a48b751a4860b0e8baf65136ebbbfbb30710e9227d3c5f8b2546fc558241689a1ef6fd6ac842026cb5c0079a6e2e4fb20ac747cdc5439ac2498495e6a9533a227db419bf57cbd96f938260dd91124aa6ac58c7673113bdb38e6480cb5c1cd5f6e2608b0dd8931d4145b94e700bcfe99ee37350407952ee37f85a70ec7723cc0900c4d618c4b4436ab7294026b51264ab24ec9aa1fb89b64ccebbe0839eab150c3bf9ba9a046550d9a8d495397f85a74861ac654efb8645b16afd31d6a8bcae66b76d641d5769de5e416fe38a3f521fea28c90fb953c1ab4011b4da39bb69cc315e492d00fca0ed8c490420657171adfe02b177efe921383588bb3f5a5eb5c58c90aef3dd23993b996be7736c51711a113cfa27704653469529383d8c65375713df1283a933b76bff9117aa6c1c9a22efa9b3b917fe439de251f9cf421db9ea6994688e2189070c4a9c5cacb80c980e00ed9f7057f66726c65ef3a76fd9e9ac7af70aeefe22d84e11bfab4b1c68d14172ad1fbb96c8ed6163bd8eae2718b47b46b8b8260ac5b1518ead848d4aaeaba52ede3d5b1fc141c6610790832b1cbcc5cd9514b63ff0b1ed10ba86dcdcdbf7f7fcd9c41ec2a52cf1fe61ac53133c559260aff5529a5f1b40b8b47e416d98cf0b158f39468427d3d029b388fd883ed06d27bd2e62c8cb8f1a568cf3f1f345b18b1e80c6b90a5ac6ee79c22ba059867392ef37b74e3cb5e1387e2277b65e872851d7e25aa41c090fddbc0768dad3407599bdb95bff89e225611e0469b3ebb39d2655fc27ec5ec51140e21459d84832e335c57b9fa552d491bc3605f526cd9ee6e3fad075d2a889ba60ea263796e5f2c4bd584de6c1402904a630969bd165248537952f5063e49a11b835e01946352a59a9da48a7a569a74dc4a738474adce4cae1000d9a6a6b345fea03ac1ebe1b835e4217577910028d04fefba600c2eb5ec85291f6baab0e0d0f9be930fa4367481aa247104a0ec1f94cafe726bb3895fce527d07b3519f7e290c2926298fe4e43b231549105b8e8161391500f4ff6d24f429ac692a9e966597ed9d3af05b414910bede89938fd075d1acce33a20be3af4654a8f44f86f6f4829e5f4279ee34e12ea8af1abb981c1212a6a78c6a9509c98e03ef25e86a727b435f7b1636381b445e43102f3042574e801086e5801728056caa50861b4611d9ab8da9c1a629000fb737180cee6f6423e2ee928881e49c5f86b851348fce5c35f7bc41fca14cd0466bf4ef9aea21d6510a89a6178c4473556114394d02679e1d94078427dbee9a4277a64622d48c293e174a50a3e754faff978bba585c440403da913087847b87e83945643a2c2ceb7620ba4ab7dd6b593810447c75a9f1b2e2b01ee173b126027c9448c0de072675456202dde1a0caddcac6af07fdbfbd4c3888affc6a4addde8759cb1ea49ceff7815dc4d81e2727ee66f04a81e5509565e9bb42f1f5d41c44737dfca8ddcd324df4f92a9e8596ee71113edb440bc3d2064e54980caa93cb6b6551c5df00a7a0c0ff3a17233b7bcc5eb60e2facc4a1a6401c98ff1fad66e9228673f272c276a0e220ad12ec7ec74bd89a36765b3f6ed442ca234476b419c556ca08ec729ac9a905209d61caf0521b7480cfff59e572e072b132d85bbbd59a7668a900129eed034edf3710c99bc02b7e4e3646c26ed23ee09ea52566ef17b8aa857a1c46938fba15a7468f81135b3879f357bbbdcf801f4ee85fbfa485a5f12f6ca05275921a63fcfc95d9f8ed8454dba76aed2f0ebf7a31be82f27320bc31894efe0f09657b34b287f7ddec8b577265d1dbb8ba16cfd622fe56415e379b43d3182809d459ad26a4f93efd126d98567aa6471c07af12cc61adb14a08d98078fa58ce8c5dcec8da38fda239f18099b07ebea987a744004b4bb0b71c03abcdfb679f58af2dac203a455eacc840a96ed1fd79586be3b0069babc5e7d461615de244584d3d7a7a739c3d35989d888ac93c9d739b0a55ef2c93de370a4b6e3aa82f442c62192a88f1d31c58dfb1abf2ff73d64df45a01ed030babd2e8a989f22fe46b9a56f310e70f2ed2d8852836eb36937ad3d57543f9616c4be5391dd4b42dcd860a5d74dcb952ad23ae722802fd6441e72dc6a6e647e79a8537eb4b122794171a422b97f1ec0c4436dd4e11a9efcd4a91c46157521cddb14a1c4b4d3c56834515308d5f6bd1a15644d654c1886d3c09fd64515b62b010475d7b8006fa9e18b33bf9df248b59566ddb7b42e568f67d05592f1cd30ad2880acb6f74d2f636b152b603b32ebf81833bcfc947bce21cad6741145a50219d659164577f5c201d599af7a7f13473dce0434e98935bda9374986bdefd1ddc30f6f2f9b43a485c4aaf5db084668fb94fc83759ac5d22b447f0d9c62404856de2081bdd4a1a99c4be18079e1ba43f293593dffb7a1a3c478737c198bcc2a036288eba8534c1df92a6beb8265eb3b8cd30138500ed284dea8076185b0f15dfa38f1ca14787ece1128f5269d2eac720c477ca9fda3e9201279b2a6899cce368d77a1248331e1c507065cfee535c33ee545cc42c9aaa57c1c82ab387842dffe66bfd05f5c78a671fd6cb258ca142555cb415735eae37a47861398e2c265cb7cbd85c8851d66788709bb51c9ef6dc2c4b3da8255ac6b0c6a358c76abf1cbf19a0461db0145368d0fae4dc475e80dafa66f25dc4a8e0810553035a97059aec5db7cd265eaa04c3ae2e85de7f4d7883a1a89b92883289e993e3492d497ecbc874dffd2d7c6a11f3f7a37de7c27db548e35acee764edfe2cf247cfa5e7e362b87cb8ab9fa7f4338e570f34019639c74d0da5c0223a1eb0bfeb4bde3ba10ec3daf980c10b0f03ea0ec1c7b8ef45d1310af7be1b90c9f5c793602590502feda1ea47f45092caf3a4ed3bcd433469193cfe4a68186d39ee1cabc183da97af5c72176beba00005dd6410167bad5597ed488763e5543504bd5b0b9a626648d08149050989bd162f940d873806d87881bf17b1afc68c955b6a92705f32cb9ebcb8abe6cf828ac7248c6a8a0ba8b690bb8929bdd2a1fe806ad220ca72b09caf9aecf1a6e11214d13c8404070cffe83986e4f1154753fbf18463b9dc1fc912586e30105714ae21836f45587b9cb1214527c04c6dfc98045c979af4160eff5524daaf4f4956d5724c1a7192ddf50eca80cd800490621f05243875da58e8f64918b6ab1a83166b08c13d5dd748686ef4acfa9c16249fdb9809a8cdebbafd4a7ffe73367d49806c3884701d01acf3935f38fbad70a39922755c5470eb0aa9713baa980f1926e909112c164e328a669a4d35ace2d353e95e93e8b2aa0f4449ff06555c56963b547184f0584b042314ca13671b47027ff6a51b291ab2df60779dd17974b0914120a49ca4cb9538d3538d8aac36eed34d31d6b248aaeeba6b45f2b3c2985b7d5445725a7d72397a9f876db94cc060ff5f426e7f10950534d7043ba04b76d6d05bcfd3aa2b3472663c046f81f0f744c84b93e30a1c4f53db5337434714c1546b75e85715ca55a69034dbd4101b59a4c23a4490fa1abadeb13434e53c1ca7ac7f7ad770436dcbc25cb8f7eee3907707fefb9517686495202f1722cade33c2a7fd4803bcb78cb651407841ec6b36411568255945aa9abd8fce09f3befbdf7c1fc42f551d499cdb27ba2dfd7b3447e87c36258c18f51dcbb53ccbd8a7e13763d3c49380b7b5d3cacd38064b75146be781c66f8d94e377d5de7eb56287265bd1fba50f89ca8d8f0011a369fe2139e1d76d042ba692db213e3e2591f4e9202f0cbd47026587c2ac9ad967e97c6076cbcc97d2f4beb27be58ebb752c0ff456e50705014337926c77b7aa51af7a0a49bba945b8a1eacf2cf3991837805b4fd9db850aa3280d47127e6e755a27afab95499c25b873642d27d38c429ebde431677c2fdeb3c9f9a2ec9857eab4c77d01fb7dadcf08a6edb1e9fb54fd346b66becac8f253e1c520e24ca36f7badd50f9364ba6c1a240c7909138f92f91e3583061cc340f82e18f5e5deca58e51fcc8e1afc334c042c45d072b6b28e65e2aa54562c61c7a445e53e763990c832db02b319d4d2ce7881b9690e5c17e428c094dbd385ee9e06c294386d18c0bea44cd286d94a96c3c990d60c9cf4350d1f3a3c8cabe652d9ef4828de2ee2d45924d996167bb9f083a15e8924bb12b42c993e31a746f527c5031a1b94105a2f4e556aae6aa920f272ef815f6907f5174632ba0edefa295c8d71035654d7e07c3554cac05dce310cfe474fe15cfe3868bf8785efef8232d6e66e34898ee9d055e4efdc53c565711a4b5d7df724060496ce736737bce6d108bf99f4406a97c047947655bcaa01d8081d4a1a23a1086a8a3e564b4c1d3142fd51641b43249f4cc952ab05fc4527df4b9bbeac995a6123d230bd02ed02f75150521dbd65730e4b7e541ed060866d69ab60ab15a20805bd9d86b6fb2e78c9ea5728337e0561a32484ceea742a25950f8cf44fe967159b05b9713d53c3d3c22cc902a263a00387055956f47079127b1a85f38a2aab53b444a8294afa94b434ff90f54bb6697fae0d6133253f0dc9a092d57651d27070788ea743a5efc4c3111aff03af4df1e0752fcac1b9d31948d7955a88db11526eaa24de0fc64a9c7141f24c3b5763637b9136de0b193930d6c9aaf77282abc5c9979e42271eb9c869824c197a1c94d5c8919d74d2c30b88ed59beee9b14a7f7e07168c88f522c95207512c35c574ee8d12a9b5d05c81948ebfc1725ab807c0c52c1952481b8e5dc857ea86f9f0dab35ae4a237e59337dbf0af65c5f6514a6fa7d1f6cb232b72f6a3bfc0c08a8edc782d7f5b716bda3fae1ca4821718a50bfaca422b6bc969fa80c2150a4a2d45186305fd95e1723295f84be63cc96a2139d5d7e4a5b5a1fea1c50ea36074e1f4539994abc42384f425eb3436362e6a42b8e0c68cbb8cbf7e3669250d21e11c4091f20fae2f5832a472eee300689e7fdde9bf54d89a56e3389ce34fead4e1967de8bcdd08bd2d74cdeff195ebc47417345949ff632b9fdf2107eaa9aa0e17782f780b2c4aa5aec79dad0ae3034dc112a73ce4d8348914ae7fbcfca5f5db0fe27896481f122f6f948dac143497db9072ee725e60402e65fe20387d1cc79a3f3b5994b249cb06dd7fe3940d76e27da182a6e6783cd5d6cfa40c7716d9290e835d8544bf7060be098181bcb734d07a04ab2e3ae8a15b35c23bf4816d55c7f6a1bd0d4198ef3a0cce90ae1ffd49ae16a6793c88d8736a35721d0731abd44abf098f505b0f1d086618b11f06bbb47a871f2428c9985fa26a7d30eaa7dfb4d2968b045cbb2c1c53df01a574bd2e358c0139637146c60b3ac75e29394c201c162ef0ddbea2eeaed0d8eaf54e5fb991f9a3715df57debef56facf21bee595170b287eb36763792ff9f8cfa963d4a3cf33e1bd27b7c1abe7ec02e5a4d4757f6ad9aa0d55a124e64fc65e6893297365949f2b2c757d474ab1fc5cb27726d3efe9a608a53c08b66bac0141ff7afe6ef2eca9380d1dc25f6319a2dd141d9fa9352b1c9f9ac251fdddded94d371ab9736141b4f8538afeefd0f492d9e6217e24134e2fc0449f63b9471a93b9c85e72ea908c80a9135d5d953f0232abfe8ccbe6c3cfc598af806f2d691e188a4d138872bff6a3dba1d50f9433a8662755f7810f6ff15870cd9c5d628cc8b06e0d3663e8f732eb517d57d8a66bb219f75ad60cd0bb8cf9bf1d6e008e9c5cffe13af50771fcd7df5e10d4462cb6142d01fcb717171b0f1bc672b510875b34cd42c9c203fa02e3b0d927e83f791e8cd4eca809f83c8bbaf22e5865c5a833b7a1448145a040d4beac547818d8f9c475ca1ee62e6fcf9ac212d8e4844f2b9751ded10e40a2f19392a3e9a7a089f3175d88878b656b51912cd66298be4c9626b7cfef09e629719dc9954b0f42ec6fffd2d14001cc1e48f01e97c83a8670802e1ee6bdd5b981000b400f4212d346f71c56fd0e71cee98afcfa2ea975a4c4352b26b23b767ac1c8ff75681ddc9a59f9622a41f9b13b34d3398808148b95a956e41310690665a58abbfd94fce8b941831857a53d76080a7451d26ac07b1c7ef3dcf1bf21f85dd57086639c42543bb2dfb4b3bfd88fc22879271456a6ce0e8423d95548a36af04be949b1806630b429b2776b7a82892676fe20d34551df0b161b6ccc953e39798689a8cc1c88f9f8afbb18e58dbd8309a388595b0070bc5f2bf0df33a5277794dbf594fcac86cb1a7cf142113d6d0ca433bf0c031843845c91b42ebbf6a834413ce54892e76a4021a224f7dc6236e237f0e562f832463b6ad4d6767ac7b6660b38e876d9d2e72f40aa8d473be78388351a781a8754a83033e5d97e7452cf2f56e53471f61718091806bdf3d25b55e3757f56e67342a6f5aeed987a802388f7d3a9dde89ef95fea7333d162d1d9609c2b891f09d55126a8e26a1d6e0c255cee94500a373210c242b9c3c8b7afde502e5b79943c05115d5ed0eb482ef1fe68a0c482e23e83fdbcef399bea5da0b102ad4f0021cf7e6af76c073362abe69083e7ab70878b059b09657b6dfbec935eb2cbcd7372d8d955020ed0356a7e9176df67c7ecb0f809e2614c9c233abc6251296ad107a6a101f480f9a9b854c9f20f575d1c280339184ed47c8f7daf39238c677d4bca678f68424331158824eb4943b59694e0ebafc2020a8cfb6f741caf1beb1337c322d331f09f266566403e4c33de1f725717019bab799d92d8086fdb5979ecae9810600174939466e80f314b2363fd1a30b14cc222a4f8f7166d6be68c7996247ae3e5ec8400965d8c4e69e20887fed8bc3e9ba1b4e37d6376b560376c78b79fd92ecb4faa866987d03841ba497e15cffaa64c285f5c66fed12eedacfbf9af5114ad5b21ea8e77a77d6259e344d4daa56d7d0c22fdd3aba149d2e9d11bb9d088029557e4b1c2eadcceedbaf9c2f038bb1178d480a5fa77224f72ada509abe35f9bc9707047561d0496727c0d6eb26a93d1f7f114a911b977339a3193dae833e75410e89707f8b2233778d0871df141199e6f320fbce48819e72166dee799df545669bc72278e8572276e60402933c21a875f6f8d7e4abe6374724062bb79f61315d9b086e4e91352f7a42bd6cc510e1f56550c3c0dcd701997d6102be82c3b8c907349c4a89b982eade023bf63f9ef26630e772d20cca342edc1384d9986bb49925a0981ebce99511d00c00a5720ba2a6e793bee90d74febf97db137896294b17aed7b916a8f5ce2e0b2e22f147b91047a8df45a308064b4f1d1e3d40d660a4aa1af69085e81b2925ffa03ea7049f4e967944a5a79c68b47412903f9928faf23f02cda02f8d775987e1c34dacbc066b1ca0d4cad77044fb802902bf8ec3f1a02cd99e029d89908cad8c0cf96ae5b4fa4bc08170da52beead6eaf325642cf6cb045be7f65de6eff9c2ac5c1745f50906a55051a95ce2c39532b5a72c2fe921fffc9f47bbba98cecec3a25fe8995d84c8e8545645ea96c4f22d5aeb795dde8178291ee63dda9b1163c57012fdf5489569af99347f50fbbd02462ea11ecac73ce75e12bfbf0c08e2dda326918710e6a03e370dc54be6adf945fa7485960d6a08f5334485cbb95b59389fc1ebccb80d9c2cf97b1dda5acadbf28e57947c8b64a54d43847690d5631779b17102a40a990ec456cf57ccee9eb2c4582366a9b33d8d752760bb10892758b787bead0c660744e0321d63c7b5310c1fa7267622ce05f7f230423d92eef1df85ba4f9be4aea46b3d667780a55774a0fb6d6836e9eb88784ff346d13001019ede3ccb8a0b6b8c795a497297f9874dd3da160aeeb5f236432848ad3a68c5fd2a805608ef8e3f31a9fb291957df4e3fe6ac84665ac66757a9033d8f3737b2b3539774771938388ebc145e8d4eee881705e6b4cdb1bbd36518911a18fcb9e3dd82efddd2a1713edebd809b8f75642abf726c52f13b9f455fcdf75f710bf1d3859956cf035d2fa56831a7e6155f90e7b7c7e01f1132abeded7f61aed278e59b56051af963c67632ad67468b8a562029b7b2981a48d0a1b137ec53379be36cf6cdb7ba4c10b8242bace79902d4f1a724ff955501fea2d672d7a454a61a47e135acb2ca9607c5e003f7147fc713f35e9ab332559b661775de1d650511a85c79e18f65784f120cbb4b0072cea217071576b85d0641319f3f6bf70d00861d26595c501efccb0f948094d8b382337ed520779a6cb5d9f12f955ede938e69e23bb3bd69e010dd10b5ade4f30bf0105b35b40e98ec5902314ace692b494fce5c080a5f34670ddb26003f7990a97896017a07d6f5316672cf3c3fdc4c30b599ee554067021cbb9d455362ac186c9c4b743ca8a75a9eaaccc49fbd3e5c5e112feb7d501f493c6b63323e3364b4c88ad9d61fe77241f3aba4b1cc80c44e8ad2a800b089658e93cee280a3650948a424a468e4530996ad7eab44a3f6d8a55ee1d853cfd4e31ab1bfc28a3a99b49a726ea0fd326db7544a7b7c15047b1916afdcb032e34f27ae46d4f3e39b8db1f75ff685505aadd0675ae4bb4753851df36a3ddb56a4bfa9e203aed3a268845ee5663906df044fb4e11c1e5e26bcd40b26f922be4c1ebff9cf0c9dbf4a2dfb8392a29c4d03b3534a4fa51b3f8e85be5794fbd93584c440112c2dada4e63a7e66950dd38cf153fc6284b4f4d916c43973bce02e034959e1177bed1c7dd2261aae27b148010fb9a417d939b3734bf0ecf1c8e9b9d8861efc0607e18a715325b80d680dfadb95ab150e41b4a3eec0c24bfb68323d1b069ba23073006dc1e7db3443f9900dd17e5c59a9f7b19fb4a3de8d7c6b736e9a81cedc3aaee06b7e81553f09af5238cad3488fa0e745a3b96026b776798be1e7a63467be28d80f20281cda312422780a5db13e52f0435bf71f3a8e6e3f5ef17ee331a5a1c3037a845b737fe29ec34ef1cfaed047bbb6e9937adddc6191bce2fad3ee8413d4178ba4ea5a5d93e8b2a82363d6b14dd3ba923db9a7a1b6df38e0690aa19f62346c88bb999a3f54453c8e8c7ae8accd35a0acd008f23b05909642bef545529a0a0d5d985f0fa1655587470f577ff7a029348f206a3015d80e09e4a872c5347f01360921aba4ba95320e3d954467f0e473ae56c768a25e2cb42d479c2be9892a3aa20027eade2b3d84fca5c76453ad7b5b44793bb047ce553560f5daa7f640417fcda0d30ce5617b70ee745f9b44135c902280ce2fbc17993a5e10f6cb480f528647f64f5324081c533f2b547a7f02bb348bac105c8daca8173baabf76775b5c4b50ae1fbab4b4bbab89566209239869a9368351d4f5e52a9b9cb0f0e43e494147a938efb7e6d6cef559cfa4e800c230fdfc31aa96b1b5d3d5503b5e2b9c0db4ff0b3e0af62fb3a800ce16891bf981caf7a11f78da5d2b5c934db7e0a6c6d24dffe1a6e020a3234898351f802a3c2ab4e3d45d284a6355af9a6055da38ddc55385846d37581fe58a9bfad9e14fe59fe40c04df99f5c190ec8d889ace48440fb4f412218585d9894dc65e0e6b07ad8f14e3abb44284f751e244e23ce224b9bc310c1e941400349c1b5e6b333ed0326561a3f78bc633567a65460c9a8621f97b70ce7a88e148d49c4a571085a6db5a42ac07925bba197a35e37cbbf5e3f6c69c5acea79e9c79c0574a2ea8acd030babe3f387a5fb5dab13b623e03230cf6b554c523a34dc16339df92e088ef1467a9fc24a7d954c4a474dc089e3583a1ac339cf28c34db468c5c61488cfc0e8f7fa8dd7ed1d8f1d4d044d14558c4ffa005c17828f736f86f4f54ebdf23e1e6b1f52b1ae8491656b013fe218809d8fea84dd34e41f85baf97a8e6ca733392f04e72e209572832b3061b73255436917566f01ed95336a813cc808866ac1464050a1ed786ca4d2bb70a9d03e35544dbeef4b4a0863b58c9ab38d21e8b77d2cf3ef62c9fe493ae69eec4bc2c1b8954407a283133e45d03fcf121fd6032ddecd5380bbda29ae5a8d57456d176e5005dd23c5e174a2b1d817ca1d547da46f4fb2066a9066e99a073a8f7af6b9d00f860e110fceb77d5630898ab16affe22ef0dd8761932e8a61b23e6d25d481ad461edd63133cfc276ae3e4347e8c1a986e94c4c4a299cab5dcf500ec4f9b7e05aef85bfc9d4e8a893a335915574b29585335e088908d8b902289f0ad9655cb977d3790c5812ea7c134be9acb2bc7c69994d7f5c0d709e9b3ad99954eaf4177f8c92595af0e6db970cbb4176942443f03796968200c6abcce94555259a26d78b1595fe3ca63f9033144baa7e97218daec51282baeeefffb8eb6e314d35754c0068f7ccde7ce47a56295f9da2e51184926483e58be34ec338783dfea3eef6e454359fa26954a355e14df27d8c60fb3e74cac3cccb1b7a6f246a672440dabe97abe89902efa0f45028eee8467cea4f4eb66ff963e8d38cc27c226111e1977c91689776e2338977ddafb442b416f2d86b6df3779e2743cddcff0e6614c4f5e9ea9d7693d04a7d2049c282c21b19b82f44f657bb0e319523591df376cdcc5efef1ee99b1b06e792d97df95e5439dce8bea2eb7bb5c152068bd64bb7186f7ef2c5c79b461074012b9f51540df464e98c6fb95b2ccb334e69bc40c6ea93df75326f68c516490ecbc9eb88410ee27351e2d81068da8131f3a7c93ef7efb932b1d58d972cfd812067745ea49b617b492ca645fa9f6a2af962994475a34cc1034db9bbec3acf250c05166b73d1cb7a8a129f16a7bbed0b53901f54d48dac6969f293eff5523b3b3276a31454dda0db7f93ecb61ab1e95e9da0b7a42de742905d100158aeea8101a57390f37588332b2a8e269c38a09232d8b78a81bcb4eaf2973010b1ae1160d16246bb09f0c84dd02a77f6be26c551fff8a8ac980a1b2210bc27b17346fb27c1d40da7a0d46df781ff2042aa93b597beb5d7ed99d66bb18b9f8564492da598cb361ddb6068c806e36527eeab033c595838559a94624fa4ca5c1ce1b278edff22f15c71e5cdf3f63c358cfd49d169772e02fdd370240bd456e0d350a45206824cd909d587e8964bb7b7647e432b94dab4eed7a21c4e086609bed8cda35b07f4caa5a7772e226a74a79f42b0b3ade779423ca4f18fd8e13b928213c3221a61d013373946a9cfd072df14ebc408772afe06171230e5736b96d3390347a9461c4b1e7ae9b954a318bbc6894f22d96bc8c004df12c895a7abe8c5941642f25f1cc62d63a892209c8cbeea47fbb295c41159839ac846d3c16c7701b0c9440b355ba5c18a02e032ca8ffddb9d3384094598909699931951b5bd642c0508735dc9b7c21795664fe16bae9a47d51132a946eb4f2c7dd33a0417f426efc61925c3c22788bf12a3868090c6757c0efbb334dcea900c65fbbd6d0f556f89bdc71dc4066d7d93bad59d2008dcce579ba542e5a4972487833356b168d35891d25084914fdf45b2825b3ab6bbddd546c48b7edbbe3269c7622628c6f2359e7bc4593ab5cff112bdd50d5bcc0fa8fff94210a9af05c55be16f98e71ff94a48c1e9f241a9b69815df2166b090f1d89faca0adb824280ac58330d73b77c2f9554727472a0bb4541049e7b231a7b08fa19829ca5c58e649f78dfa17fc65b625f395b196860c6e6ecf7015c83269aa7c96918c6025361d13815f4a9979674c2f6facebcbebe13eab10b789ff3d090a5b08240fc944cecf2f4734c20f2089e3d52dc865a603af073091e4a6176cf38f7c2344c4e856360f99556572d632602f9d5b77df94342638b527821f021364e9158abeacb8f92a3d31aa7b00c370b738ce395fe12ad6d945e8a18b2f73b9d2508300bbbdef9966e3e88436030f3d10c0eb5626ca9de702b527e6e2f8b751dd8921bcfa814e01d27311e8a5b57919d2d57e2b2bc7f5ac32bc26d1f2c4421a14758578f99055e5cfb919ae16678daf48080c284f2cb3cbde97b59672fbe8e82de64ad4c0797a5462754a491f2c4130dcba7cfa841022660d54d3b352be36ef22591c6028e24cc494e9bb8c13d3b23c3bcaa2bfea8738200a2f0da7ce62815ef7dd140298250e64e416bd5aaf4297ccd9561e52e174e4e2dd5b98de374866019d3a4b0678bfff8cf08a6ec2661fb253dc8364eef2a52da3fa56b006934acd00ec161d6b9c61e11f55ed018ef4585245aff34c8195a8b1dfe06e80ca18b4a9850d315592de50008b5f9787d8a78a9508f78679da0ea8126d3882e935e7fe61b152427c568a69c03fb6b7adfe0c550811f28e40fea0138294c563f8d77f258d80451e7a5d71e54636c9c85196b4570f5125cb2a03808ebe12f3c6b573c58306ad028839add504b27a67eceeca6a503d0ceea713136a5bab76f0101c72788f7acecc4aa1b05aad39b53e0d841e4ba79795bd066c2549658fbab01f3bb93599f1520af0c2145cd45176b90123a4ccbcf020b208f773ac7aa1a4ff56ab79b3e20dee3f27bee5e1ce6fb0a64f3ee16487bf89387660cc3ff4c36218b9e048928c4c5fff46a392dc728ac3815b7afb8b21396a6e30485f9c4a36f220ff4ab36e8b4142da3b48aa4975ae2a5c844b22f71b6a04db2e7506411ac2c5fc562be3090d1f3aad6a68c9ce9869d52ea21e619d64ab8d3b4182e57f00de4de62eb64e49f615466e65a1f3980b5da8f8403f57a33d41e82a6429a146e8c7b9891c7f1f4988ee4e674c9dbfe88bc36264f9d3e158b5b3192746aab19eff8f1b7d3bdfc5f94f6cf4ba192d28e051c41163b66a8536e1d417e4adf64f1e4cb12427b6c94bdb051c90619f5bb7c2babc9afa4f8ba117b7ef8076897e4c50b87a90e36197cec20077b0aa9327cc2a96a8f83780f30ce0d3449cc428bfc3764379164f07ad36dc127edef8a633d33a29a8bac13f5c3d3f5e1860d7c9d225bee9457d0109852f0c60ee166050064584b70a38f63c51ae15792f4dca823ea3ee68f580d5a774cdaa25152de511e14de2353e0896b15c06671c615dda8d8d476999668e025a3615f4b07f4752e5e37505af43b303421abffcca5bfbda39620f07808f16a7be7ade9e2de2eda20d25a2d46a5075c1b799630d0e47f7e3177c6ba0c330dfeb9d2f18457a8fc3916da5d357da82098cec243ac968b4d0eaeb762cf1a70a6c351e9b7a6e37870cee26b096f84ac894b9904b2227010d1367505bf0485142154d31f80a4debaae91ae0020865e8015107402efb2ddbf634fa4fd946fe7efa662625a22705affe5327ef5ed38728bc73fd564df6637a8605f10a573d8a9078e2b6704e1cb112746179a9f32801dc9cea9cba3663db998b00a98667ffda435d2d86953d99791c4910e21015468c80fe1296f4a65375e09344443bcc199ba29c7621aaa85b30ffd1d1eb909f7b8fa4b02ba69b0aa0e24390372fb2fca72fd42ef80c49b72d7d7ba77135eba427afdee679299e4116601c8da361badac58a2b9a6a63ea50e44ad2d313ad678cac52f2dbca7c56ce70b48046273ce42ce3288b753d4deda945945a2d2a7254a374f08ff0d211ee3c0d8ea2f270482ed32988adc7701eae101ccd4c02ee8c5556c58e381d9cc25401f6f05a55188229e9c253225407208666cecf32c983f3b2f971e8809fc3cc78c768583a8620206b315d419b7924d2f2923819f6766f66bef8f83e711fba3f5c0a305fec3f0bc679431e47bb7413772bdd672007adfafe7ec3682ce0143fe8758567d22f47ec6bf28b1bca254201ae74a8da7b7fa65fc6b416da8a8c5e23ff3fbdf2a4811cb93a4890ba00487e6278a8ff965343967450ad78a1a8e3b8974443cec55b02d8ae67c75a50b71a07ec3aa602e16c3d601ad5598777ecfee0d3a5b951cc8711b81fe33c273319c78ec119fc3714db65940373553aa1dc33f7ac7966269f4f2ef576744e8fb31222db06acea430b7017a3c05f008f0ab0b9943ec7edfac5e4064d68ac643ffd12f6588a79a764597dad2e019de8d624b49ddee514910a41d7af9a9970c82211a63d5fba8d0ed8d4b15e27dcd7a57c1b7b2cdf4becf3c23cb645c68ac727e69e5a744c3d42757d7d086b7ce6a03834fa73df455d00cda0096420daedbdf49a7c5edec0ddc06c49e981af51042ecbe45b02da5b41843d9b651033800b1b671fe4b40ef74035eafbaea961e68247a58fcb143aa9442ec4fd8b09f54fd457fad4ce78c55cf902e409f64e4223deb6549f34f73cadfde27f5710be4fdf6ccf34cfa98bd7bc6ab573d2e7d0621cea02ed3248ced512fae01ad3e209e7560d85bd543fd7d3dae493bcb357862e5ce0c12fcc5862b9fa65457f7dd64f11898fd41ca39d53f8b9fee0bee4f31c0f3e2d745f61d7318ac5426b247c931cc593e2d8f49f44c095755ac3897eb7fa1bd05302e5a76e79c4a73e113e2a3a220728cc7c343353a67a899318ad6cac983564cb500618085693df4b1d3847b17b543625d0b192b7b25a51040a4cb2a4a070fd7288195e0e2a009fb65be3ce549ac744149feb7b60d9f40e642f29fb03f401f3d4c7b3ea9d0cdfb92d2bd6cbbc7a4950211e3023f4683c593e9f342962f88e40af2113c15d31cc1148d71d06d6fbcc2cd6ffed983ee4beb21498c87cbd015c085d77ddf843612079a49486b5d5f7d1e4043f8aa70721f5023316a7900a72d8453a8a390fccdeed2cbf7b76e31f898dd3e62098fd0ee851aa8210489a3cb58fb0056c0aef884453d2f8a4b90980826cdb40ac9eb39262f37821af9885a589518d96dfe7d8e226869a69bb1646ebe27d5d0f62248bac3b155d55af8e98d754e8020c564fde1215074b1294e561702d88f1b751edeed0fab8abc791a45ddec6fdf516ab697b934c5052850ff6614eec9cd8b2fd062ba2a0dad588743721ec3fbd86a4c0786cfe1f422755ec857aafc4710beb854e63c65798435cc8c93d263f7aecb2dc4f3855052d61a86215d1b8b60db9078f0217779958cc16c3cf598394275ca375deb08fb493748afd9361d9f61047d740e28110970ce32a5470db8497cb7c89927411bd4e46777e7fae0b14ae4ef29ee6b08c05b1cc5888b368875ffcc78da8a21f7b7ad337beea0d145256e5f53e5ce984b5b0e5b96f38e9bc057a5919cffaabd5094701b2480270e45f9f4e6640a3a7e8ffd93efa09104bbab9a9ee0efb7cfca83bac56aac0d959ea8556194eff3d76464c9047a6a2c24e481b875cf132cd6bbeb9037d5bae5e38333c6fca2e9a77bf8a0635971ca5e2eb42e13fae4765a298f7d431de9353905962f4da46db1a4b16bcbc850a94b5452256286e34328cbbb5041ae19de0011e463026fe061c0545a8d5accc781d79792ccf0abe35bbeb33bad531da178cb83210266405a17ae31f4bfce955ee92a17ac2e1a1aeb8e34d05ed50a8b45de0fd5a153f3ea08b7a2b99646f5ee0e3b53c46f115ce8b478782b8151b82bb909b654fa0099f5ab1822f5a5549a5a21f51f9e347dec8133b8c98cb697179135e4d2a8735d6456589ab86a84649ea2b025046174a19c3e00031e2d50b4eb04dac391a9e3c245dd9f55ab6e67d8502cd587f0db19c9f933b1ed57f4ec3603a6a84cf6454541e6c098d28c423fdac0a551a65f8450226bd2ed2787787674feb9be7289a7e02f9abbdbba2e4d0485ed13c3819e7e4fb4fb154576e2e056293b131553ab47f8b031c1f6bed8e79a2e31e1fb3f87c3d9b200595796ef72421f265234312ca850849e85a5222f736d42f53e1484ce8432e39f6e978da75e8301066bc4dcb00c66d0e5a238f5d5ec5b4aad2231a7f55693b672e2514e17c3bbc91886cff33d278993f49a87bf33a0d07c529e992aa3f0ecd6d2776c91a6486f273c57e0c5a4e03233a18d3321885ce7f779b1dbe32d4928ee288b89933c23c9436422e7b5dcca8567f17b8f67047ae033987428118d7f48aab1d6b0f59064d36031ad2d91cc4bf4239128f215a9e2053e19a59a9a0727d1f8ff5fd2d74c071998a5b37f62d17a7199b4788983a9e1e99b719f3e055b30a52f753fa178cd8d3f5b3e44c9d6c06828d844c9dcece25bad66097d63838aea140f1845142e1fd485485e380090031336c1a128405930c8cad3fed4fc548ad88fcefbd0d3fe9b18f40b140783b85193cce22cee4bd1e8c44056d21729ca5272e05034ffbcbd5f249f7cd5f32c23316766e7b2b5ac7fd85629c47d80700e541de4b27b40ffe563b97d3a2e3c62b57780b6da19309cf1fad8dfd428eb14f7331a332068bc46ae6a38302deb1ab6a6b5b77db8956213bb0c7828dd80f19b23b82f8861b522638df186d245475412c49ade22684ac01f3e75235feb868ff13208277ae9cf1d1c1b66c2c21f52cd5e8377f03074fbd6d34487accab561f34c10b98dffb6aef629f179427d6fae6360c8c71afb9c86c72d111a58997548abbc499490bd430371b8b6212f5420303ace064c6250f6ad9b961956a92d96f0d3c0322c5ca14c333fc9088a0c47d24682b91af251b1957db8e97d830b4bbb635f28348ef536b9e35feeab6e28e81c7afddb501d5f8120ca2ffff520e90abebeea8e46a7b49cb79e8d1fa90dfafd88bc91ad124fce5946a916cfd66dc3d8cbccb4425fcd5d6848df164130ba125bdd68c706d620e67e99bc2ffc5fa80b4527ba74fa05ed050a6f65c81fcd3c957b0d2099a5c662eb9cc25a085fca72f24f2fcab5eb7695144eb14f4272361a1db45e7ad9620ad84d1af84897edf6dfb866a86bd7d69325476068e3009fdcf17a3c0e767cdca2ed24c9b209f4cfc66702bd7b6c1e7e5e2de0d17367183d75903323a743dde6289ea4bd10a8aa2b86ba52979a6da4e191bdbd817d88ea6fb74b93ae4eec824670b9fe1d3301d4998b4939243207fa83977772182025bd99f1cf2b73347c418cf7a456233a5a370b126761541e2f3d4aacf25ec06615011356fe8dd67901e048e82d2d5c5a390b0b45997c9ea4eb1427bf38f07be6df4f56c0b5fde636af5e83a57e5fc50e834f13f8c19e1d80f749b0810d580bea32bae0a3f50a794326814de098a25a5d04483935714c8d884bd51b078c72f144e5c8688deb24bc5dcc39e552f7efd63ea4cfdcabacd9fedde344764fe3b6cc8ba67cfccd7c074a216119dddbfa675b4222c17082a0bcc67d9f46b1ac7f38fca79f3258cd17936e9f4e4ae6c308450d84f41e86e8bc6ae880e6a2e6c811b609da5a81fb3c7482a506b042be1dd7a2954550a19064d8ab6eab80dfbad10d857e130e23165d7a5e5598347034150265fbd694cd785e45ea42b53ab8366a637483552bb67c5bbe325a6cc82c4c243518f458ad8ee4f5966600d957b0b1f5b6623b13cea23232094cd5df70385eeab68f748a9e71e547e2c7b74dd0f9733886bc022b0bf11a3391022105365d3291f114519a8afd5583a087142ed635e300810ba60f52bce6e029263db2dffede11f9615b71b4b36a359e4378fb92db6b00a891998e1599ed354021f5c2fffed0bdb95e9340695d2942c1fa0299428d414ed59ad5e26a6830e150de03e5ac0cb059657ee05f745b6cfceddc291b3ba56319008b56862a81b6550c5a833aaccc46cfa85195821ae497594006d0b0064fee688b610ae756547e66f724a67eca3a6085e76eb8fd2788572af7d5374d583415521aa0ea54fda2a46468c9cb6d4d63d3b24572598a7523445c76c0a30288577e8b15e301cc428b075be3846f7b8bcd61dd79b86d73b1acd4fc94be6ce6565f5eed8e401ecfff4370dbc3bcfbebaae52a3cc63a139d987cba536feb9ebf94ca76a7c0cbbf02fe62bb6f98d06fdfedb4924d56c8118345f5f92fd64615a53255917d5ce9d0e3a3cc40428b6504a4066a4e6acf7c069d39bb6212769bb09e7807a26df1c8c3bd8e1df8d2a225490ea53ea53f2eae15b9cae06f3c6ebce15a782864166b618c8479ffd853c7231105573d6e14705c95b0e830b101b946bdb6584fef136edf3998d826bfc5a565a2983204e568cac1641f77750f15ca81f98cd007e60a6c4c106f5134dcceeac78bdfaa69e09adc671b701197f648a8038f172645f5affb15a3e3c7528e55345a6af728b57428f04e345220b0a73bf6fd3e66fb25431d4a9fa661157c4e27c8fd0ca3304520bca7ccf4eb50bb3abb8b2abc26c5217a20d0946564187cb2a98faadf1dbdd7b9d8d5cb1e3760a53eb1a3cd630eac87eff70fff213b52db3e0a4ecf47d979de6a3f001a2840e8dadc346e56db1db05f11a896d374f3596aca6c44a761f98725f0628d841d7eb18794c766e16c557878c5860947b246ebd61568d750e0dff84fbb8abd6a3727f8bc70fee8573d0a4c2a5c89ae2e15420079afea81abcc9d10df688bbd114845724ccc98f7126a56a3492cc68b76553924a901582ec3a57f1ee0685be8fc25cf3abccb11eb254b261f470335362c918fa0fe545b42401de6ecaec2581442470a53aaccad0dfd3b8581e459b4baa6b4179922631915d8bd7b81acc053b5a41322044a583489f7917c4802075bd28619dfe63a2677a0901533a6c5642674dff64ec3edf924fb88375e7b66ffff37fea2ea5aa0a4ada96d30926c3f9c575be5fedcc072f1c8b3e1f540246d98c471a42ac3bc1ab8241ff72013fbd9befbfb84742cb7cedd021451f95602c5514793a6f67f0c36ce24148162f5abe98cd429cc5904bfe2630537c18faf1bf073ed483730af069b46f9beb879f8c8d8eb23261b518fd30efb3a5ed341ca665d1c650894a837c30b0cafc6d3915c82286664aa535dc9ebd91f01a0d8a21bbab6eab6a5eb9879226af72122911009a1fae535b545f344e86e1fda947a31316d8eddd1c5d816f93faf5100f21bee276fbd43d60a9ec124ea7cfdc57da446db0ffffb9e130424a4af66c86ba533ba4f49d7bc8024c88faa146c5284db7b3c5307e494eaaa9d40adc4c8cffcc90caf0e1e749983a1889ac2d001665e6a02bc7430bd9f1730c0bd05850d98d204864b1720599c350e891ee6dc6f794e44673fe447a9d0f86a408ddf0e0da49b9ed67affee46c625f3f6eac9f513f14f484ef43e60b2b915276acaf93686772230fa06554ebd15fc84140d1510941bf7a0be9c8ac3240bb8839086afd74320cb1f28bdc8f6f93904ee6eabe185f70f2c039c93af6ec726f3f54a62936d78ac3b33f3e78ff93b0e5d83d512b0e5c868dd88c4f3645849d297460a6ce2c3d57c32fa3a5b606fb38a1daf4e5dea8aaf3b54fe0da7d8d17d336ea71ee0a60885a29ae150745f52887d9d35c5ebe91d76ee2a32714228550fe0ab3adadbfc516557b86bade45932c1399588ec47513c50b9028041114f7182245050c023d5c57a2126d7b3e7089470d239bb2050c4dee132083795cdc50ac99066e51110c91f5ed2bf016037d0b56d920e09edc9839286c58c5d9c654c2cf885aea59204894c4f319fe78f897e97d05f213ddfe85feda53e6f29a23fa6df336907f68fae06484002d782c55e2922c7c2cad32bd02bb6239022b52683b5d3a84504dbb05cd4b7d3b06c41fbdabed9c70a3f6220a54260055bedd45da548b5c0876e92cafb88cd7f0028e46be198c72e3830b9a0298e51bdc3c316a7c4b4a290e64327eaf471954996c16d92aa5ecf1a3f60854d78fd57f20d41959e37c22ebd58994bc4288b24707970c76e1ca6771139f2dafb859aa2bea9b58d53e76ca2022f8135984c8e8553957f9fd4aebca20737e344d6b9db9ea64fd6c396ebd3ef8072d61f11c966b7f25da2977af0254c2aaebc2ab191cada02d9abf2a834eebada2d277d6f81725f342214f885a5aacb9216bbcff71bcf3e5e2b96641035544cddcc6b5b339011d3d5b8a11c0614e09582ad2512ffa22970d4e17de70358d96c56fe8a6039d77998faa4b7a9e98221029618bb49e5cdf6fa0741c3e45c23a0ed05cd56d08f4f6347eb35f0daed5d73bf972a14407f54c1b747ba61c351e9c07688cba3177046877efaa3756a712a28b7c7df26234c0cdb3ab089499e341f4dddb0a7683786f0d11f9f9371a4bfb99c7ef5ee463b27194bd37567817af7818d498fad98658f87bf91b63e2ef463b8c6ced45810b2ce641498270473ff0b1c96f601c319871e5e61acb3587bbc5995153ecd5e8bd189ec58a855bc8d16823a13f50db6a616d328ef0bc3e88d9e6d17c031a8e9b055a26b149e27201b359903d713b9aca61ee3a1d9653c1ab0f590a837f0640eacefc64dfd659c329ce2797781290b56ce02b9aa65521045081cf68d6629e1ca3421403e98e8cdfa3a31091c529d9ccab068b5be25f9c05820a9d4674773763021048436ebddeac18ed6cbd6ed84b28a923020df81d1ff474af39d7b88fb15154f7240649ff4e3ce59f90bc43a981d45d6e60383db887f42205625e30d583b3ee2e54846c0fd2268803cfa2e4e76e6066cb125669efd3ae605f970fccab933de54c4eb9f70a0c681bba7fedaed138fde02e7b6921e20eaa594c0527b49b842cc59ff66778508234233970e33922bd999dd4cdea9f81c477b230627a5dd3cb35475c6dbf1ea9125cc95f69628b5e7ea70ad7d753f8b0cae4fbc3e08baf95f8eb8a670035548a457dd9a41b92e89168946bec30f6c9cc03996bc972194fd75d2bbc7a274a4687e5ebd1aa4362b8685dd84e7fe906d89e8c95636b33ff8691ce1b42033988cfbf39b43119ccc1b807676ef271ced1b079c53176ca9a04aff448741bd6a8b8db64c9f09c7257dd6aa6c200fa5d28c7b6fb98e2b41bf2086e16a04cea259c9a833a23e65e2261045ab0544262bd58b1599fa8c4e74b2aeccc11e150806e5644def1ab624d4984616a7e201c4f7e7429fff4d873c46b7a9f54f1dc5770c31b7c2272846a04c3ca0d1c515305bf6caef672f8427285786b1d781defd8ca0097df2828f995176a2c804fe23aa998ac05bfd49e3522d57971f15ab2ae90fe319d04e52482f31addecea5f1b23167d15b544f837cd00a145ce856c60269d0ef564ab2d12059860af6341950b7ab5c554e7f3ab6b1f001259c8902f061df16ef50878bc60fa6a2afc2243b15a40b74cefcc4b6cef2bdfed35b09c41e0ce172655d1040f8ecc429c483aac8cb7b61f6b289b46bb13e2882257790a70163106c7f8bca015fe72f9fd3d1f4ae5e9218660c3fa5d8ea7dedca84971586363222053d16f82a2ad03a33de9b57af04a2be913321789f79fe384eac9c98bfac95fb39798bccb19a452f26b77f044e338e7389f521a68ec9a6b5316452a56e4bda4f0bd85131925fe8ba905716e57f92bfca79cbd39be27c21715418f2457b769e5d0ce0eb6579ca15e70e4cab1fcb6199dfd85dc54654f5367185a42acdf245d92e1ecd29cc5d47c4c9a257fce0384947588f96dc0f0862f6d3968a25bd0c1fddfc296605d574644c7c450850fa2a21bacdae82a0ecf3cbf9f44d4601ab5e47b5a90bf113ba50da76774f9ea6912e4cac5295e36ba037008e827658c4ac9cefdcc7f043141ca7f55df8ddb2b30160163bb6de05f857aca2673bbafc8cd00bb8ad150baa4908cad1019c588f05672cc04fb2782addca3e29feab208fbac677aa04f619d3fb8e728070b3a81833e505e48bc0aeba9a9d99c59b131064dab827c5ee85e6f4da1b3762fcda3e284261b87acbc8fc6697928ed479e4f7e4461b86f5b770b3dffabb9938a9a758a773a5c497af0a016eba422a5deb59eb7867f029da337e1409bf98b4317410dc1efe1d7b46d19763a48d3fde0c4623e4e6f2970b01818e1b71d5ec9a682da1a88ee3ca71d4190084c034e4727d0ac4a196f25fd6ca03130863f2fba81ff5782d765cc5cde1dd56f193a9d6ada5384daf996b7bed0a18a21474dd1ac7cef566c4c61acec86070321122aa1eec8b07b2535b6bf3b039a5a3818e919eaf232dc04912d39021d26c96fdedcccc97963a4bc3af0957565f094fe4f90493fda800a68a5def336fa284e0f46ef2d6b5ce08e92077f33fa629322679a92264103dfa82208ddeddf588e9784fa62e78dc82d1a712ce550faf5350a5bdbb1850b3306229019498c40eb72f306d2dbf214d8ccb5011c36d181c8700f95735bbf10b32a4e06bc874286ede08e8d0b1aae806156083037a45bd1ce9792801efd20a85a3c92e980bc6572313d46bbb26bc7a1e7efad5975ca51334989ddbe42bc02ae6e5e549405637074d07b47b437c1ef9c9b0e4ca8200570721f3ec69d05fd534e43a3a4457f31e818cfa614380a9e0ffd9903ecc79ebc7bd44bf2bfe00df3633fb49475b6825c3ab2c38f1f461ce9e6afce46da94877cbef9252400bd5c90e925803a53fad42fdf01b0adf16784d66b5fb1383e3f5b41dae6967247834887658c1d93f474575700e12d2589d0c0a1e99418e5a56975561c99b819090c63c2336b2e93c9a0fcbdf073cdaaf761f4c77fef21b271f409399b70869ea7022bfe9f2cb2509a1a72edc52c97eb8f80d16e2720afb0734be631e97d363283ca880207a4833e0b7fd70b8c762fb93eeca64dc2ec86e395e463a923aafcc69e5f008e80f24fc48313c27986371722c704b25871f19072c28832796e5be5a92f475f63a0732b44367b7b8195412aee8c02174c95e8fc334e2a3956b48ddb20dce402e269d97d6f2ddf22fc559de16a0e73bfbc8c37eb44374603791cfa4c565cb5b3da5da0dafdcfdb103217133a84631c4fbe45263dc6fa326c59b46f56c8aac658e2815727fe654bc186407557d678adc631944ae478b6080e5b9e7094da2d6d9f8fd86fd54c3017dc64c65df18cb57e51e59cad833367a63b1375ca9e86d16e9d5fe33559f8818b1523e116b52399b689de0317e282cdbcff8e110a3358ec5a22c2d0f25e9cf656c0620146ff2b9898823d6c9641ef7d323e59e3857f17a02925ea2b02d43cbabb5c874689e6a041ec74d7ba6382a9bac01aa9d2cde7d0e79a6ddcd104b613f81c0e82bb87d8af717639a998e0a8618f64faf42e249c6895eb6324c6da793081e044c6efaae1a9440e2e434267d2cc15a69afc12b01c63d99dc6f9a9399ca9b8a946aea2d0a4091678814df5ec1e363b0b0119964cb0dd6572214fcaf65129247d7c9cc5d17f03041d292b9f6c76ba45bc2efd1d7c440c759d4435bfbf131c659c66a4b2f8f2422d9971f9a7d500ec50110b67950d65cc748117c2dacd114ad74165ac1b6a23e41d5d0c48a419d4c13227798bef14fd3137b5a7a8809cf44936351dc184d189e1b8b5f2efbe5e366102bbbebb6ca3ef4c85be1b3fec2b05aa592f390bab3310e6da70a3c8f8986e03d3622b2142753b4da8e8bef5ff3817f3f9fa81fb8a6df0432fdd9cd2104957a27c1d11e0a162e46ff38dc44e0a9c151f3ed88d30432ee285566bb686b7e359161d87efb8823b7ec4f060ff6774c847834bce7006825ae4504f8c37114280b9e5cfed209e8369f7d1ee9d833b680180e14df2d6aa1fd03706fee41455b7931c8fc848f5f5caacb95d6e091adf39008c81cd13dba08d26c3dc8b1aa434e40792d2e8e12eb211122f4c18db6ca1cbc86943d16cb8fa25d14c7937f81579b65ceb8c51dc090df683745e0371b9da53a2ce59db6eaf6ac18166555aa4587101551c51e42bb6ace15ee14bbcd83b1cb346c8db760cd642a44a43dcbd031c0f5a333b34055ef97fd9ff146f819d69a9acc8cd8146d16c812f92a4625e7126c3ef74a0de8c2995d0859e8d3e3ade17ec22437f349ebf0693e862c108893d1c026b7e9f928877af84b17200fc494e697a0c09ce934724a17a20a87b6b1161ed9e687f7f16e45c8488adbe1fd373b2d79958cc711a27a0719136ab6ea4bc5c57df808df608f1d98a17478b12b35c885b2ac134501a980316f28a2d970f144a4ada6a987c910536135987b790ecb5ec1b8abf0802a6fe9d1176f5d39395e64baee195b46a4a72b957e49433def309b7a41dee89cffdca8dfeed4774b1d096d28a2a7a86189e78cd04fc614076d0184c368da3bdb722c976847fc7589e099c6275bb332a659d886fe5b18bfd620fb0912d4fa51cbb727af6b6bc21b4536c45b59c6f8dcc104555788cc999c02a8575aef6a540ee8261bc00cf76bafb3d05e0ff190a07b5fbc0b26f1d80a992b5eaa0db18cbd208b11965e48a6f1f7a98e716aa07ae941f460d6905f2ed17e5d67b67324fa5444ce7eecff32b1216071343938c7b35c6d4c780ca593bb912b37474b37aa6198836b4e7e15b174ad8991b40029c6db02dd1109d244940f3c2a7e151f412b17265f6096a0b5503ec75c93512a5dbb11dc7ed82fd10ce38c6dc01a68051f8b931d870800a24d7f831c91139209942330bce10f2dea77e2f7ac6f0ccca8a7f4595154555bffcfa649f4acf7d464a356c67f306aff3fecfd250864cc4a97430e91c023f9b609576574302c540d03f1db95e06350e39a6d8bc61895636e47502bf6d9f373d47f8a97b623b3885123dde5408083d911137342587abc551e095c21c51f6ee0bb3b3410edff956e3131ae09a7cc57e6a2c2ee2cb88d7becc5651873f7fd62095e11e645b1cad22a3f237cd38084d24de109b30f36abf2b54b2aa9788191ac87b84715ee44af4e79889e21a28d27529a5086d405650c97c18160571bb4cddd63864ad9df2f299a2573894b4d1f6fca4c5e6f2cbf2f3bc24ad9c94357916ded7aea3b4a31d79554fdf15a3d9c5f5ed95d8b6eb3060fa707f90e25ba07464cf6a0c1a67b55e13b25339ae5a47366206ecf0c7535da09d296d2469d1c6fa31c64eb7b1f277a0a0303caaf1a7ec90daddb68351b32da77443ba8d9b33c224382c312429d0e60fca53dc1f864a1c4614731ce7406eca6dc02acc398187f3775ac58f864d2c9abf098a0a722866478068d574a7405a683fa81875b7407caf15af951666948b5780f87af776f31f5536e88856cad413423d5313d30e63e3b53989a1288300d0392e87420124c49ad744641ffa28b30843e7f45ea611d461fd5e0f7062a65e0bf0c3aa6d4bdc65a402f71f8f83ac6fbff0bea73d04e574aa09e0fbfb3f33e5697dd86a0cf629b7762faf9212b6a9459507795e1ef362b0ad30d38d6fa4f0e82dca07f9ade48911f218ff15805eb85f26ac085ea4ef917a23a283f4a41a76a11e9e74c3624269ab002ce7060e2f86ce2e846a34ae16e68fdc172105787ceade8048627ee5c293daa94d3bda2da7a627bd677b1406037a7019034162ac678fa80bf134cdb1343e0a960fee2b0b4c6c5c26427ec745493b8c5b73046cf4ad35a7d72a6c4e0038db74a2d2ace81853e642da57cf65c1a5e215225356a870c8d00c3e5b743e3b1f066ac42f67a9c0b9a705fad9ace71238f0588e903744fe5011fd7512097dd26ab223ad0a9d32608bfb7938a60f41bdcf611ff20119294df614cbe947fc7457ea2519b0998a4b60f6dde6dee53dee8649fe74c9a90c6178c41fe2b66543e62919d05c8cb14797a0b2518c546c677a5e66dd31f2e2dab557a2a9738ddac33d6711db5a71a06b23c7ae758a85a6e633f3566158a1b91d0b8874f40a0473a00cb18c46124f9a99d43e8904d055c2390e3f452b9de81774c1b5ac27126618423cbc6865b614f49b9f0a85f4b68a6cd0e9a1d6aef66a00bfc15bcfcb6a0139bedd6fa90e57d33abb6f616c8663e91b08d1ca5139b867c6ff57f76d2015c685c2b251948d8bd0d6137659634b448154df6b4c62818f19caffc3a99c0f7a5027fc2818ca969d971fee76aa711f769020561cb6898623063adce3168f5d4052cafe8e5e8d0175d68d8d0d6e4a03c5a0651924729e43b845323193645237d50207db9c70711156e3e0dfbd6c11b770087ae0e63bbd359c67defa9fc29de7f5ccf87284d1d7642cd53ef665076d4107e57ef7355f7cadabbb06233f9103d82ef9c056d6c5ffea6942e85078592e30be76a59bdcfce8b2f590c1beceed0edf0754b2214002b215951ece677e009c61e46d79c52e0c32900123dd6083ac97ff726350583c3abeb88b7fac006e3b5f211d6399733e83454491af9e81eee06fb3b7f02cd55021d277480610712f8c02baa6700d3f87eb736d2aa6c5bbd5ce87ec8112e9f0888d2abb7cb5b5b203d762396ef8ed0c08905a5c584d28c1a8e086c60aff14b13709b462cd7ed20bba9da91d08381067d7915819c0fca3f43df05293f75392feff13a1da8265ae8e7e8fa33272655796b7493f395b2398d1ef7f2fa5706711f24b79e49c3bf0567240b1d075851825807dc6354a573a4a71fcc3700c2f7fd907b98c516a63db427dfc377cba39b3b813b4d1e3fd4ee291095d79e41455f3abc752b118cd461f18de9b1b9814ace76a2eab0c51c25beead82e507a64e62fc0ccba263fd06dd3d9973417ea637eb2474012d2d0f421636177949c170a4c825d6c38fcdc3a18e2734ad134cbed6a600475264f45a24a1f5b81274071778cc52a5e0bfc7bf5afdb443135150b92ebe663a10d38b02d4178092561677d3b6a1fde559bdab4024a2c9de58023933c244e62f6d48e7374cf17c263e13b4e58c8c13f4d50eb3e40ee17c0a2fb929dc2c868e4e86af05abd9142a5a57bcbfd87506988e1b14bba53468cc62e3fd0f060981f80a2a12ef96bcd82e7828b1a6b3a95dff9322694c3cdbbcbd3b667e7be5007a18f3a7b7b93083aab1e903644181548aed84b70698b9edf899f5b8bec88dfa91950a82e81bb00189628b65efdbc943fad079f6cd7b281e8ce032f412e1d312a401b8544f7063d984e317d1ddab6228d10fc55097f9bea2aef17dc3f4131fa643cef611a0ad6f3b9058825a312292615a18ba043dcfe36c921213c679aa4900549bff7799059676eb9747b094935902f7c659d6e8511d9813d0d4061a8ddf9ebbbf74dfe2e533de839c4d8fa3de38cb1ca5810ff615c84e81edc099600ee20036a3b44979dae13ade4766cac1dd750053abb7ac5be10262031ea467197bd63bb4e6d1059070011a5e90e74197a86557b72760c8e110798235a04a5fd8edbd34e6e26515e09cc514e903de7b15a82555244db530724853b43de493d3294b7a7ee5c5807185e239f4aeaf8a247c7c59114206fd550486aa250c2e04508935ae9c82bdbafafd40ffc3eba4f68b7ea151b1ec4e8be4701145c19e427b1bbdad8cba450df4f40d2a963d24db3f803c5d8a2fe85316deab31b92e4ccf1ec2b89fb2194d59befb1dc538f714ea9e300803524688e41981d41d80eb4824f4d2dad635dbb12d1e86260980d6f044dc2920a743e86929ab4b872403647db78f38fb77926e31a9bb1531cb53ced9fe17515858bd4b8bb34321d887c8bf8a2619e3d0e934d15c93042edff93e688fe5483f9c4d62f2a1e6817527f0208434db7f6ec54bef5f4155e0a256180232bbfc4a1f31243473352b43381248649067019500109e56eb92a84a7a62041e899a9a44aca2963fe5bfa632521a8cdc363da97b247dadda88f44ee6ba9346d467fe08397c9dfd3c2a0defe14355944e8d277a3a35745b6c82f15fd78b19cd8ed8c67ee9ed231dcfa9a3d0e676345f33f2df40de34614689d6725cf93f4c227123c3eff93dc7c5dd7cc35edbe24ba85c93f6fd73724af6744c7c1721985e48c3ced0759f21879c7ad16003142a853713ef746f30e62c6adf258f4e6990e09877e566a966a71d7df53ce9ae485356118267db22a1d3f6b106f31a58b88da3449fea6baa8f1333b4339c6d383e0c61671f3c6d4344b8b1d77f1316c2984432708906ed435a89e9ab07d18bbe58b5a8fd0cd50debd7ecd500ab13d7827720c335fccac51cb9d01c0cd4ca91139eeb37c3098f9c11d842528479423f8e3cc4ce72a8e7d427474dd0de095c864fa86a7b7620166ec9d01ce1ec91e49bc47fefcc9387a6da42e7d50e81d0bb91ddfbe5a21683611a2431f46fdbb140f2197e8668048e7f35acee55d8dea7ed110fed0c0ea237ed5d10614bc298baa5e79ba66f78b47d46d6bd68a966d93576e0e87abc40f4cf16b135afbba46a5e2c1309cdc58f420397b693ff6068b446866fbfa72d45c46025d2d83e00ab85ec9762e1daae81f7ccd5f19792d46a5150c406b7543ab6c831dec5a13ad992404ba2b0d2494f4f02586f8ee7913d9fe9eb30256ee4fdedf7c1158e2b73b3efbb4910d81f74499342e96f6a31704a3dd058a93f116dea2be5b61142e4d7cb05ec63be2a5ba01d3583994c4d868a18170931a2dd9c431162de668e8d92cd858264ce7676118d3ccb3ae821c43510ffc00d7753ed6dcb232fa7aa913960c2a5a8929b3077e1a1496e6fe0fe4d1b96bdea8e148d44118894f5d3997dda8b314b705f2a43d7fbde138767aab95d26435c59797e88a1e887aed3d970a7a47683bedb3070b1d7428c03e728c7e65079409fd3670acca9bb7dbd3f3cbdbb7d34af3606543f9b089365c3d96f00fdb90f7b17b3e4fe131b0e10153f3038cec1dc1191f51a807c1d608c5c06e1c98df4f0a88fcd00d1e86f76b2653e58076a7a09c3323baac4004d3e160d19f56d7d496acdaee02ba08fe9ddf440516a76ffcd084f0f50e704d01e89f9793435fd98d74f578c5066957e6af79cf2eeaa8a3a89a40d8cdb2615ef301906ab02f0408700ce9541981468a8e0d4daefdbbdd72e4d452ce585c541d87f259e5315667e9ad944c420a97f55a74e23138d4e5ed0b2e4203bea0782c9035a0a7170e11c40299960f6be226d775f830586bfe68337a24ef0f82e4813525289e88c31a2752bc7d2830a43bb79a053574e29aa394e73e5129471e99cca6b6fbd3a179fb0f86d3362a60954618da082f52c5b5d48ab86c39c2705f52e2fc75e7c94ab5ffb9650b5be86f07b0bb8d90b1293214436a13370fbd19c8b35b16d85fc8c73b839fa545d59830886375b54376d146e69988efde575db3117c294bddad5462dfe3b3936085be36108d547525122b2f61ba5e8eade6624bbe6192360854011619b8c275ef1d9baa8aebd76dbd69bf0c3a3abf17bfdbb66c063c43c6863a5d4b5d1bb47bd21a6ade759d7781ec48a30f81deca82b66bbecb737b4e7c78e2b67bcc1475316cf52c24dd64c80ecb9defb30b3891e7f27af9e0166619befab5f763915db60ad33ae71af5a4e9fc3ca438bf9995f25b1ecb1e65e162f5e77299b1a3306b21282e5f4e8c28dd0dc5a22a729ac2e2dfe2c3205279f401b719c45cd4dfd5d3c254c46899a52fd046144d93f9ad22975d0c87327c3e6874ddf7a1f317bb9a55368dc60c8df47403935f3acd784a02fa5b7964a192eba0cf59c77ebf99800c06190f4d0138ff8f505c34e5c76d0274b6497b937478d826ac283d76628b1ae79aacf570ec5176b6dc304bbe0929abf2187852b91b1e0ac6eeabec42099ba875dcfbc66bc8469a16d7b5cb922b93a4af492424d2eb38133fb670eba43a730845bee83bd8f873fef36feaa1af404b92ae311bec3887c43861979f6f458d17ac25c78fbbaf24fbd7d0ffbcfa0ac1fbded016390161a8164b0683f73c8f37b4eb9da19602193e382b2312cf3c3cec6c535124e4bc2d348c3d5fb11b5f85014519a4918386396329f479c5cf50ccacbb1c0f4367a52528009a2dc535a1829aff1ca1962ffae1a7d25f9b34d2292715b67bfc0b1e8698c17d8115eb561f6c3e8b9193c68a38f9f93754463e05093290f2ea0e19feb3e1ff4201d89b864fde97a0420f8e18bb81f47a0c1cacd6ccb48e46cceb1ca7532fcb123d546b6bea989a5931620b7b17debec62927e5b7632778793ba79f753f1690ce37ac11aa16ecf59966f0940e5e1c14192d62d1321d92eaa01ddd5e1a502c9a3c3701543880e2293efce669ac438b23542a54207b96765e995b4200c6788c796a9aa122d52939602d951420a8a722f2cc7f290267b2794f1b159b75f825ddb6a6b116aa764a0770a08ee0f70b23d9c86111881e802e0b465a00860e00dd7b124637c9d19ebe74907a7b2c01a10453c1e41e67ca5646e62cee75d543ca21e4742a4d787a1b10bef8aff7d8cccfb70c274a8b4057ba48936eaec62e89de0728a77c3c506e8d58c15bc1db8392a941286bea220721d3467a02d021d336a2ea383c48f1cf8baf41c9c95dfffe940013fb39e8a4fc2ded3e72a3487802d2ff82c4ea93bd6f96177b9b954ecde7add7a09ae936bc2856eda89c83d42a0718e7de1bc726d801682774b38176dcfe30bc76be7f7eddabb3ec6857ee30743c0c9cd946cd7b90185b0ba8c9940aa99f9f8f8531fe417be2bf85738dbf77bf8b0c25567c194f29b8779e92d48c8a305ff46b00046caedde2fa96d2626f04fa3117f5d75689a067249f92d8f896c6ce42c2a3c30e80ee90d8101c5abd7aa23560cef32ced316e84feebe32c54efa0711fc9e0ce49c4cc6ab2f29c0b67d12332e19ff95528723b7244cd1f7f1d6fae630fa439f1b4c3f1de84bca9cc70fda1cc2eaf05d9185ef8e31a3c56dbc6b5e548343e80d441e10227f8f01f0da9cb5a286bc0788d838f9f877d5f6c3ef0633eb338cb536e4360b79c6edc33aa4552b7569ef7a2e5517809703af433948112167b517c4bdd38efb98260810db137029147bf18ec556bb6a24388f274f5a1fb565c82a4ca4608df91c06aeac19dec3d3313a33cef776feb3e5e8aca2288b17c43fb5fefbe374a5b6a2ad36efe816713261a5e86c0f22f1c014e94b29de40cc2a6e0399dca5c64141d73c95ab2414fff4fefbc53a0a2eed4cfee068b054351247c781d186834508e39683e0e25e71119dc836e414233b42512a788d0b16e5b7f73ac590f7c0ba9d3e3bb4565351ac2b3bf3ff4884352c95a6b7cde938660fd080d14bca327100e64ba13e2bacad7e5e0118c3193a625177f91c8ac7a5edddaa3a9046d1404503b395890da8454892b8924c997656b3efa0d90097599a1bbad68414c7a3e21183cd0c777cc4a334bf63984953e7c31c6242934f905e8030a611e054b39b5367409c47f33ce6dda28d627533e9949b39fac35f39402032f752d1e46ffce4293fb79fcdd334c3afbab1375f140cc167c43998a42031c4e2b30ab2ba668893a0a83843865b89dadd909c261553874e64e675825544ad94049c1d57d94300b3422e7b5fb1407eece8cb2fc82094ac01fa82570127ca38a7de83548da4fa8d299c0cbf31397d8966d95de06284655471ddddd85eb2de5f2b72fff405eb8f51a57b0196d6c579f33ab6427fd4a976211ca762d62c116b9e8d3c4940eb0265d771f3843fa200fe5d172e56b40a6df259a16cd91f04b10fb687856b660bb9f55aeef7d0ebac0c6a399254cf1c7f3cd3251960bc0ce002018d151b1a82e1359776ec0a6463df87b8081e24bc94368e11b13888794713851a4604e08da4df1890b59a937f9971c3fd67c770d0b5416b8072052e2210e2b16dfdf0f95a283905a50952cffa6801d8dfeaa76935fc2bdaa0068ca8fbfae491886e6c1544a6cfdeae43bfd1ba264d108a007c74a173e23b516b0e6a8ef2a39f85e5c40d53124b31de88d5e899f8e513fb12b8cd398a0f00bccd6ccdd006ff117fd6dcaaf5547cc723dfb0617cc6fc5097b605333dc3bb229a65c3634aedf27bf89021569973de7a3d2ff3d0448dd479faeacea85e46a08b599b45364a88cb60523ec15d091c9623411049d3e89f8401810af318c7aa7249884226d889ea625ea1a7e97b328063379628ce7c60fb495341e9ab83cb8d5a426bc49ff53cc1c5cf6803e2bb00ebc6d0016032c9bba0953300da259c59726160b6552e19b24b2cc6eb631c15839f346cfee25be2e32a350f8abaf50d1903c711cea153be2b6b5e4cbff03fa381042731f882146267f3e964f5b90a64d84b4014ae4ef948b087f4c8da04ddd9b8850c585c59ee83d2ae496bdf01efe9b8c85a9b62fa5aa4dcb554a6325934703fcac73fc46dfc16dc39dcefb5bc5712241d01f89b78c95047475a3cccb7f8848b003f0012070da52d662bd2c2e2bc997ff42f4b2fb462ccc14665e84e1f09af3652f56350b6df605d9b60898acb8aaaf7a54c33844fe1056480ca73f9ef8fc370a3fa6b6eda7bcfa8eb093a95334109b91aad4cbd4fe0f0cbbe2cbcea0b6c1dfb6b9723bf0f64babb96ff6a2ead676bdea5e0c48d8434f029f1f6f4f3f5c59c346679e0e10d2971380f77763951039dc6553847747fdf849484e744252e2417653928e3ddb702dbda10e98c278a1999eaf7ee12a161fefdd0a2bdea2661c5fe4ea359e9f5556197fce0f2057bfcb9f11e41085ca7d950271455c404937e53d7fd30622da4c9d1cfe8ff1ffcf75207e19a7970d8e2710b20faaeca6bf41f75035731fbb64ed200081fa10e2b88aacf1fe99149886bae9aaf5a081b2e737d19f812e2e4ca341f7c6627ff3d65bd2b16a35b72eca4e06f6051f9193a064f5463420e455d4819cd8a010eef937c987019094708ea3415d02aed0d0d3b104b7bc7484a9ab6200a2ead40ca35821740fc973832ae8bf26d64adc64ebde72446bee502ef0b324745b5a91bfaf325c94adf98e0e9626e9a7252cfa8d2232bfa6ad9bf30b4d88e770d9829b99f48d3d35be00a3a1fa2b0ce0090d35d4687906efdc2d151e101eaddf501c48ee771f40dd4a71180163e2a86df8d6d82de91b274ad1ec23a021177f1c9198f718992e333f9dc3c8ab73fbc0547883edaf13d74ddb5af055eb8426487b679d20e067497848be04368a1655e1600adf9e7fe97425510f9749c4354e803b3386ef1980137b284c72932ea775e1abe4451d178c9c0a1d5cf90f92ed7db4c40d4a2ad4416710ddd89891148c1fee94cf2110e353837f6786f8223d9250a2b42c16dc48623a23e27036be1e6b3e996c66d22b0d833a911b3cb2401d97daef8d6dbdf7afb6d6b4ecc3420d78404a248e9175955825bb7fbdc9d0fd5beec7d55af8ee9b6c7ad6d9886211e437eeb08154f9b3c1badc7ecf46dbe47388aa0891ff6c3cbf39c503cce746cf9aa0dedfb8d0066853b647e685d1ea056ccec4ab02aa3675e26b4b607663176194480731aad9cb94f11c9936e83af6045287c866cffc8c6af9261c7a84dc2188bc00954ce20236a96b07b4ff50022e6f59616b831a1ad065d1aa667fd3660830719ff558df49964c7b4704dd31d41184dca673058f1881fb0976a468ae6890b461a986ca2d2f7cc1b47c1c5c282506108ac95dc0d821d0b980a5b723335e958f3ac2bd2a162f132964715329043c6dc657783ee8fd0e237973f30cf17d0282514422cf95b98eefdf62c9b48705190937ccd179d9d81ad8b1fe91f218f53881fe181e43071a830ef3b6fad58baa8e4b5f829ab271bb9e64359e9d2d9bac00735889affefcde8f1db451702f011041b486810fcfd8ebb31bb7e8b4b480164f87f4913a4feaeac60cbfdcd6974eccf945d81ca7ddd9ddc77faef8516e0709f6fa516bb769c6742ef8ca879366d4318e823f3a0ba833b1ebe007135ecb74020b47a867c379bec7e71dec634daa963eef194c2290805a8889996df3ac8db847de81a911a45372b33630b05140a1fe03180f3351eaf39ee51a7038f252ce2b28d024fd482ed6d4ae0782169e0f495c6a0427372114d91d73fe92bc14eb220f4377d9231bdeabb2fb2a5a0bb688ad0a597c063e1ca00aa4f351cb000ff1ca319a1ced30e024f1f92d66376a615b89d8959eed4bbaeb0e5ebb2b1cbbc30cf892b69ccf90ef1e93ccb4c7685bff52a6bb6cfa1087a245d08a59d7ea2074076eaab6ebb5c3d10e0d62c4b2a419866854508e0e279d1573b97b07e151536fc4ffd3bf1d3e46640b41b35e32143cce0f2a6c87ba6dd3d4c7483c8ed76742fa700c80750c0041ba3afb7270000879df3961e8c5cc6a1527e26745c6bb9be6e2954e958a2591107cb66f66b55bf564ef3ba35d072b86aa7fdfe7f2d5692117907305f1b03daf037e2e34c7f03643c7bb17d75796141d6c99b54f8b5099949873e4cd0306a8defe07d1c694afeb97cd2f398f5ac4038d41f5a17d72ad17d2523aa88ead6b659d84e01d365cf942292f97336e05ac3ea70fa04146188ce894598df075dcbb86103e1fae2172e88c0e535dc62d39fecc66610cfe14a0f964989796f1883dbfd25b07df80cba78a97ac8bd181e93c70bbb861df4178ef1fa74bf10357b1e7859ba4aa8edfc2adf14cdb6c0acfb0c9b6cd1f35e525d1de1a7a77447f858632d513d4f49d5db9f7785a3072233ba600bd25d0e78bf364e55833131b97c58b574c30e546c2bbf156d22c4a0753d9944376b3f039994dc8fd93239a0fe96760e5e9a6cb9a994c908260de83f9cf07b3bdfd978b8145d71bbf38444a5b23bd4f380425d5803bb673c17ce98816f352265fe967b711e17fd8ebed0524663ebb69abb96047f2a6984eb6381ade3e549ea3e59d262aa66be8de5d98f3d0dcb332cb110d8b44878c1a403eaa698a5ff2dd0a6f4b31538d210113b562ff0af53656093b3d6a884d3a4a37480844d95f76d22de59558b2a458be2039f44b0981be655ad9ea41ab65d2a36e6ffe6db5ea6e83c7d5573ea87b64aaa86110175770740763c18dd2b385bf093171467f66cbf6b07b8ee403d8cb32053e048bcbf1393c0f382b48664f9ef861089b5bc5e5bf8b00d2c9b2845ae7169450e24219209569c97145748b2e842a0f27806a1f49c798446d6ff42140fbe1e9f4a77f00c1c34bb40fa3a800dbcbc7a3e680b8826ad65b9a10ed610f2bc1b08350af6abef384e7f078a3680352e96146c49f66facc6e73879a2372a22d938e1bd0dee0cea119964127b5ca8f9cb1549902e10605139fc4e680035c957809726f1997267165dcab3ab88ac6b918b87cd5fddb6e335ddaa20a7cbe0be007832fb130940a8c3916c461f7c7df7741e3d86995be3c9cbfc5586bc9e167fe15c889067b576cf078915d44219f44fd5dc95051260a7d1bdd325e7db8757cfeb55ef4a37fd59e4e1387e2ebc1a6a16e49abf5c5a3472a3eaf5a344966a56c7c442d3c7ea41e74a703af6819b0accd91fccb92fcd9da39608ca400ed72c97e254ba660a715ce228f5d88e9576230972e19a1224901bf86634f19772fdcaa27d3e71bf7753e658dc4685747b3fde3f76990de8b1a647a18c250a7062b34f26a58a3a5090817025f1194cfba5f229f60fdcffb4f63d781c7245d41fafbbaec45f133cbc2c03707dafb951433cececa4274db3397dd2ab0b087b3e483f55c393f677f32c75aa4768f3a54447cb37c3b06bf1b7851275bbdc68a29f279183ff3e8175b0459240b357d2318d2aa90a49d81eadda9013a89851a9ab400598214c4c34d2b0de1a253aac0e3fd26ed33ceeff8a788618e5f733a1bda08ea58d40db788b0f36a2b569b741459ce458e4c810d5b9d876bf872080e782f84cf1d53994ff3523e1eace942f21c98d91abad5b15b5f683d1c3637f4528444af4c8fb5a1db9bfd10a99c202e7ab555c392cb30ae85026e21c725345ee608e02b526a42364deb65da104547ce9c6745080ab31bc65f14d4e7b55aa51da4bd10e0f3e44801d59f9fe8e1e2d4f0e97f6907d0cccd3e4961af1b23e4f73f38ad37c1b7fa50021bcf7c40144ffc2764c22710cc759f9b81e62a292138a4bdc9d2e1b5be3d71778ae95e5a032164514f81cd8319b42a32eecb575abfbad9bd4d6dff247271f20c21872583a6e0694d99f2526148c47029d75f8be408b1099468af8446f3ee8acb6e025ca8dfea55ac844c2e72a636edf58077c3d25f92b29a133de734c354a75f40949c152ddb95c4a22cbbdc445f5f349f1e960362fddba1e4ef253196d3f7d68c5a6b510ece317ff9b8bf788704e999307ed59b7f45b7cb422f68d51cf1c553063f1808339454529eedb411b6642cfbbc14a705d63fadf82bfbf0e9034a8805795f4321483e3dcdac407e98dea30e7d667dd2298bc12849b72f9829963964d32edea28742706988f83b8b500644821e81582a858111a394fed61deeba29555df1ae02fbf6496899559430a81d440dbcd117a036823b8fb1d1b3d92f890f6099f28826d1862325fd7748b9d43910c120b40229adba6d36da81678148105d515da75e7b84f2485c103cc2b919ebd4562d85b0b4fec37c4aa0fc3cf6beeeedfe1ee47dd2c4fcf49e86fc08892b7498263c6486dc54d318d8199af8179fbe302f12d7d492fe5afbb90dd76e3b830bb3e04634d3a06650e726b07dc719829c55444a59f979b8ede6ceb5a445442ab4ad96102fd7a63696cc623a62516c540c656aa0244b0037ae55ae7945a2118419e129bb8c9268b03bb3db259f502a615bfad045fcddfd916893c51f62d151364315f147457725368e5aa410f753d9f1e2b753ec8f91a073e3ddbbf8f9f00355cc63a6eb54cecc3c8c6f6a30b9a91f4732987cc91708bce5c785219e409b77e4651150b203731380c09ba854a0099f815ea935427de7705bababa304f4db110132dafe83132bd9696f32c8de5cf53e048c5776bcad1820fda5b767310e94df724e57324e03e7078c7d345b5394f57a21f34ec2ae5c991fe5f5f317a661b83e14983e7d0f41a3aee9cdaa4c2ec66f006d39b9d510b48d0d8063c7c1307cf6128087d876ffa755d17d0aae208f66f964d272b433642267bf5a35c49151da184a37c0762f09d535b864e52d9886ef33fdb1563f4a78edcca66c518e033e6fef40366ac92209d453231a99a639060775c0040ffcf2b347772205232cf03b98e10e0bd2bfd3ff3cae16f7c12837322b5eff99f915aea88a52edfded48cc0b5b0b4c63ccea98b6476885a039f46609bd4e1bb9435f8b18ebe7ba1961808392218fe224e3716eec97415264e1d4cbcb2dea3c6e05a83d51fa3ffd7cd43c8a79a7b34fb97a300e1c9e43ce086675970244c2f9680ff64f47e688a197672706ba47661f75dc2553bb02edf4882a4bfa0c533c740b7e57271b78c5b366d69218519bbe64be615c676533ba9ae2a91ed5f1a3b0c77ed2bad16f319a06a968ff4b4a433a11d76f2b20605c4ab1e8f7ce112d2b3770721c9af5eeda173fd7826c94302689af0e71ec22aa730998ac85a90d32e2430aebed0f404975e56af91a1b8e6c24d1508c3f2a7e47685cf9cead24a7c420421e3a64411210e0376e68dc4100390bf33f3dc80aaabc7958248c3647f7da6abb2598bf88fe969065da25174e4cd28f762ff22a7a4fbde5059cc005ecff387e0466ee4fbc9d749879491e2e2125a86fe179cad7bc75efe61e05c9d4b7466e40863911bbb05034a15150ba78f5a1997afdb1ba2b701f16526e9831fd9cfb4a318af63b53e992e45c256866ba7fe175d2ae99002cd3d28da3b3b06dc97535883ba47df978eb6df461b524211cac4f286774459ba72418c2aea996bd0d8a689c68f7694add721ffffabbb2eeb8cbf5c666f21358b45490682e639f961953384f92f4853bd104661139ca25ceed0778c5248aa87f7e8c58c0ebdf22c1fdbb85d15fd16e6b1df8065f8be9ce810946376d3d71b5e57b8e5dceb9604d1d3eaeae9a5ad4d78d4d6a24834e3434796d55b9d88a11f1c23ceeb1f4453abe566f193810cb0ad733a272602b7bc02d4c41bae54f84ba38098e6b2a73668d1ddd70d0d8683a8d132c1c29f87e8730690dfb0fd74fef06c9a7587896c465741837cacfa04d45efed5b01b7b881382f27b7fb4cc06af2decf7045481c0161c8dd455c7438a8d4550c76cdff1b83b81f0143abaf44bf9ed874c2ee97b820439180cf0749c4b3cf48717f4da667d6503a10916a3ebd9e8e58ddf3a427a9a86cfc9999c199f0a5f02375bf0cf13ff4b4d914ff6686df890492130a1ebc8ac32b827082c333ec0de7703e34750588f1c4de84d5cd54d14fcc90eac22fb941ba29a179c11f1502e43ef47f256306d8c2ad9ba41f23f36985eb9ba02a53c41b1120fcbe47fe90a0dd70352c3a13ed007024e0ce30bd287e3a8dbc4a4eef35a3a8ca140c41a93717edd5aa26d8b9fdf69a1d929dbd7020e06feba31b11389dc4600867459b548b784b5a684246f27e052031f5bac5a85f3801a4ebd28f43e01322c8ba6e712b507e39aacd63de5872ef00f79f56d4a081832ab2f596000ddb96bae21b02e2ee4e621378fe503cdcb1395de8ffcc6c99559dc4b82644edf2b9ca5f95f356bbcdc5c43548fc173852fb029dc286c2ca2813aab1bc4ada14b9dd178e2b59cd7f164d16e672b99fe412474c3f08451bfb50b2b9d24582490616878445b4cd2ba31f06b64b73421ba38aba0cb7b32542b0716864283fd8f6c5197b38e88c4a85744a20c09a1ed14ce81e3f93813536a20f1eca7cd591c298eda6e8fe3dc7f5956880ad1bd66f085e5aa7e752ac9c708ed41b422693aca787d4ee436dd11bf5aa971f46d6d5a660a4bd886353f7d88af8f15848d6c185e2a20b8c978802400b137bb1b297891b6c38dd76af059c0ff43a90d3ede382b0fc245b193085fb51fb6b85151458c1d746a808b4cd922af7abb5c270ce883df8d88772318c23a42c3565b8aea6ebbce9cc5a7654f99fd36a5a3d9813d724e4eac5d71e4cbc803279f935d136f10774d006527f4bfaff4b8ceb2d8de7c775c54f20b4c12a890107717355bf5f559d4693f13829a724709c9d0824806ef9b24f2c2f7d353f380fd1da36f84fd1c6e2a4946ec50f80d5b16226f4b9a4b2b4e04ddf9b311d593f0ce5b2434844eb72ec6c65d457f19c6a782fee357bd5e82d75fac5f42a0e2674aad2f3a91991c220a8e322577460c3f333b862bd8883fe2ada0f1267487bb9c30a1c46f8dcb865999777122ae4bac4c3d39d3a53174c8d7a49d4b6e6b8ae33c0f423202b1f39b5102b8346bf661c70aac02675d786dd1575461673a48e0fec844b623f89fac1c9b0ea5d8d0faccdefb77d08b52f1b34cbbc2584ad140b968a7c9740292e33754ca416730b9cf883324e7fbbb1764475c97100f8722e97dffe558e90e8322f4b1685915256ad6fbeff1632764fd1109b1a11b8b04ef52cdb5c84ebf1379860e1f727277269e4d7b336c36a22d630d5f5dbca2111fe457a41f33a6e2e7e51335c03c4c1ece8892f1807ce23388870409b968cfa9259365101b44c4df27255805c42f8842431f290106df72fb159d227cc334970632df3cbdbac42641f78cb81f0a1bca55e232f6e20b443988c71506a3c7a6658a87d57b574023cc546746b373a461fea423df7720edcc0e4e3dbc6003dbe3c78bbf8e4544e086e9b3efc6a338eab6e3bf217805fe93982c823bbaa750f060f9b39412c34c399d85802a556dffaafc91f9ac049c8b2ac0c4b1e6131a1e2e04b9a78f9717e05f067f29167c34d6a4b65c136886d38d5df47f4faf68a4842a0107cdc1473c77a6f6c8e13305ebfe9dc94523c8d5fbd22bba7078eb9c278b20788157e4210209aba99f1106e6ea3fd48fa8d6206ff0aba3026438a2fea4af1e751d569068fc25e927571409a34dc809ed386dc7861021d11652e4aaea062702a9615f33a80b23ceec91dde6ffc3fc043b3829b2ec8400b1239603efd16a2877910884907019d7da7a99abe297e6c87a54cb9b9325a3c34822c6151ff61dc4c44766939d8fe7dc8417d396e7ecb62d25707b3f7793ae26868ac961dfd0542440b56de18f21d0748e60360c382ccb4dc65dd70883f2de021084066fefcfc5d7485278b73143b285c15b5cdc1673ad891d9b9440f5adddbcf9def6237650a43b9bcd2faaafb1828f999b5dd0b3d788e666569aa0cd87890ced96a7f61f969dc3f59af43fdf56a0433919ebd93c1d4627fc0ea43d433675edac1f0b9cc3882ae47dba0ad7af139c5c73bb7a8b29cf89e53057683157a23f063aff6985b0e3a57c1768f736f5ef1b1b021353a847ad1abff3ab0605703f629377c04704156f296ef0a9b6c3c704d9e41a0dd91e2dc8db9688e6eab23ad3b2e40c11fdce766edfc6cf73fc88d1118ade5808d9d4bdfcdc1378bd27bc09124e2b958c1ac360e6c4044ed141ebbf35d9daa16a20160326346eb75ab321303c3b81b565fa86dad9102890907c6087105bf6e5aec7de27fe8adb0d1bebc3b0d30e989a25ad11926ee8ef92600b3e9178231d2c24200c5e4b22b882f3c6a34d25e34bf91069b0708302fbca703939df383ff847cf6e78938a23b64ffce6e97dcd7dceef5485b6350453eaad9945ceeabeed50acc2b5f3ecf5139f49024178be01e0271724c223be8ed3a7ba3b28c94ab7f19e63d296e028aa7319738b3dc6f62b38accac6d12310d42e494185d993ec886e859f57f3ab171c47f00c2fd8b31695f532af1166d941bedfac422b493950a487cf4aa9b0b97cf90048acc1cf0ebc31d0312f257abd95257e85bb78c27bc7259701d1f69441ec55bc7014892b534024af7f74db32473684dec4b2314a0209e6f3e895fbab0a2e164ec12ea786290da9d65c7cb39a305f2ba5edc136b731cbe41ca354d20f162cb4fcbb13a1a246f14f02c8fc9697eb5e6629b38e5a45d312bf5dc90de60572cb6544fab0cd4bf011b52657c0e2b542e1591970ac4bf8f3fdb81a5992bd33b9b775554340a1978bf523194d7c34c7a5b079995c9d627fa9ce9ddf0d49a66cbcda2a3bc0260ab7666c3b745b908f4aecf7884c9dc10fa1af480e8acd14d78176d20aa2ae5dc07f206177f83b6f9f19be69ce373228eedd20b2d75a73bd58ccb528df8c724baa0bdfa7ae1b61dad84deb26ed037f96bd49deef03770e439b616c3a5678c967f953dbfe543d6f8eb7ccb6caa27f14dc8cdcce94f22e647528f078f2ffe30fe59f3abeb6f223ef8f87ee08af85d3c45becf291ceed1e1202c4a3d85e8f73c660b7e16245c0cbbf1f37a54f9911fff67919cba77dffbe97aed2ad03c001391ec734d49702f0d4cdd84efd6c0aa18b2b1af70e5e060dbec9d84ef8bab2e9e0e81b3fd198d64885abf4e26597bd1d0637c8986f47313173fac71a04f533dfebd26c67d19c1229c378fe21221093c1d366eb366dce334b14a3126ca4b8f60ab2f9f96d6eaecee809ffc9ff53f5e9f7af45a1189e2862c2dcc00d0d1e8fc90006ad573643fa9c27c2b9e427a66e4a0cd11795c83a6bf4ae15f72f2da36847d1282b7e4ce2600def4945e8c1d46c669fde16c2f5bde426965d898750cec16fe2dc0daa7f7761795e8f61f78846d443e14aa31d82057d1559a0db91f6ad70a52b700b48ba74d5912a724e69981ca62134690c38706504755486191152dab6efdb116170b0f7b9a0122928c0ca5b65e1c13e322005dc88ef1f5a44cab13ed636f8697a90f5bc70e6163c241b73523ce2eb0547363bf9da6a23f6fe51668b26c4cecf1a19b4b2300dd68cc2be7c2e1bf6561c9740fa409065e01e1e254fd98e0db91d5c86954867eb74e2e5743ecea962b6e87e2c97a6b443ad18b3aa5ab78d69983ab4ea610928ed9ad74aba68b44f15e9d2fd912faa7f13f97bb4075e9412342272ccb289d56e0e5aba40b2b9ee335307f3f1dc4f9541125b55a5cbdec96b5dbd17b42a52eb075cca24ac6d42e547423ca8d11a65360c2dd00ddb70f13ef22a8d9465e70cc0caeb6041a90aa4cd9e96c2982403dfe8b576b4249d79734fba5103c476674addef7b3406041b3924d4ffcb6f324d95a39d4b32c8df991d99f79a10b9718747291688e56752c0b1f6fae1c7612775c78f8d775d439eff8a9e28a7a5d77f5c1bac14b052e1a8108c36cb3677542a6abf5b429c65a63c45528f620154d5e33b23a8de2a4c3a099b056b647a96f1844d5fff73a5522c772e45583c2046c097d0ab1d31f902ec27576c1254ca1345d9c3bbca484b9c5f6fa41dc18be409646d28e6c4c6a5dbee0ce87dd118a7f67fa420c7d811d2fc86029c7278b7d92f73056f44557fe17b1956842939dbda0cce8b167c78e4fe7da229776a4ae797589660bd28ce4c65f29031c5b2dd3f34b877a7b87c7999946d1c6f9f23152d5b0d5d0f49c23c6ffdfb1b3dcd47a2d33cff50b26fc0845b85f222ed35865f0a758e596d910893209f41cd1219aa5c9f603ba351eaa511e6de1b30ac71918191fd41da736794b3ca3c4098cca4e73741ba3f170c3244846b475304c2e9b689bd37f014d8146c33d5c9df38f326f36aade95082b1072381739f20021e96c2d0f41a8c032c75898e5861388952b14540c27501f989bd4cfb049eb524f9314b0f39b52bf391676704160c617d1bc93ff947d23e8b046632322c9d321c729233324d4806808e10399032a63a7e35ff3ab8b0a9005851e347201638cc1ecae263d059cfd5e48bc86014888d8a951e65ae626f6977483b40a84e8115723fc0315430102e19c3da22a2e1a38bb2f52a3ff94bf8b2fec24b76331f8784a75c18c646928713f9f9dc6a7f8b4923bcc1d527474ae48d531af48b46ad60ef7c0c6b8b938c3bc43202326154ec3f281020217b31e911f263a215b4f4cbbd13be9dfb4a00dd2c53663fb32de3496a9baea802c38925092c0d22c875b8b0df02981d428c4f8c20b87935ffb5e39807c66501a2496676bb94a4fe11510fd03ad163ac81d45accf3950ea47fb764da626df38e6d7e52d34ef3b3600edd4b0bf22f5ee26fc22ef46acc6ccaa2999de4e632150d699b936036dd4ee2a9d084efbc6d9bfd2c0b1b0fd0b9db4d656f35a45a2720fb139ccf5ce3bd3b82a7fe643f58c81a28f78f7941de8e9d6a39dc9e217501b45eefb2e071ce00accbd09249431d3c7ae6014c67e78f19aa4f17ea4e50d85241d5a08320fc01f3374449611989ffa5e2f8d3d787bea1e12a29c718d672f519d3e2130840e5793fa556b7c6d6ff6cf373d851a213eb3020d28f167e84a55c4b59b6b3a0f27e3e661a579ce2211914c12ebfba8c216c256e34f4751711c055f6f4fa82c57181ae5095a73f025797fb04dc8b7e3062844e710c94ad6e5a5d82fd413b25e24d0101643b096d0b0b079640f56e894caa4efdece24a32bbc7d959ab6704e77beebc9360ec7c690350a464816513e069e4f0e0fb580239fa60ce4f07cd27e11854ccce76b99562bcfcde86f7ab8994c11ff3eb2c49519be14992b56f6a16a0df8b1937e802c7f02c54006092f26e903ea87c7e6ab79c8c4b0748f7aab9dce5418ac4dbf7fb2f8a7e1c09f6a54a7c081e0f70d7112b119a34813f449c4bbb4199a94d552d747f8d27f362692760aa1c664bbd888a58ec4383ae68ea12488f65e8dcf055f0a8a8de22bcf127bb5b7a405e4a49438c8dbe2ecee32e8b897e444520a59f27961e2a7dfb041a3a7182c8b13ed188c38583228d908521af90ec39d281154169836e1a9c17ac050a7216495f55b5ece35d84cae569f4294bb7057e2d76a35dc055a558996a9d92cc1a074e970a20c99ee608bc783f990352a880ee4d798aa93fe2d6c27b5b35c92569a6bbabf5aaa96acdefee86cc73b43287afe1d481a018b4eb5fed4fcadff5e3443c46fa0a91821d2940ad19c149b93af5bcb5d7ecac659b1d3ff0dacdd67b815445a49f2ecd5b76767a056868975c691716ef62d053c538961f1f9a09b7c537032cd24087b9649d84ddf6f17227497b16a5dd61f623f2377a530a69ca8d3d24dfa93ce419b9962b79b34b56cc6331d3c1f77a8c47ce565c64d36b4fb1844df5bab0eb6a529722849690e477a10d8198baadaa96f370c7361c0717ce8a610e9c18413b92f8af5714350fcac72d524a1ac6b3fb6b3f9862a54305b7513e05a13528d7ce33b51ddbb49d7ab651cbc2f4c34bed79c7cf38d16c3da9f8a0cfaede2f2ba9579e37f351a8c434ecd3968ad7d19fb25cb4cb12303041d030695f8e3d6e8a9fc7447b31a2d0f8c4f692dbba9085ce8ce941773f29219578a5e2fbf2aece937f00f3eb8ea1fce6d9e0b601600c71e662662ebf2eb9914081ce890109b8f85ee5c2fcfb06b6581c0df591d06feea8d37e6a1428febbc78b3fc7737e90c0d6f70dd62f1b8a744789255925f0ce748134c7657253632f049e22fd314a461c0de113d940a59e505e689951932090893d3ec7ce3738b40efd72bcf21ae3aa04ad7cf8cee59185e1a46f175f259e5fbd61d23955a29db3da54c3ceed4ee0caa4c4f1dc95b260f91c2ef33e66b3c87f40a847560c5baa99163f3daa1aa529a9acfa6cc740f77d9f8d7a064f714e8000735a386610ffe281bdf77c0e5b1e90886168e5678596f333d7ec5c5d697b000bb4ff666846ee0dd934df7c6bd272021d6aec6ba247d155e5e6c05f718a0ae7de6e5a34ea1f950d394635bbb1c223dbab00c1fb769ba20880688140e71dd59eb834a8fb89f85aa8cf6895c9c69a52487c09610acd927fa70503bdcd640c3499a614a1a981f22fa70a84517341c4417e11f527c1007f2210f96fb2ca89e9a28a41fb1541abda538933535c87a55a080e4ac942e14229ca394a8afa902f2b70efa6c181a6f1eca068af64b88c07ffc2dcde75e13412739ee58075bf568e90f77153a14526509d042701ce4197510a52c41b4d086ca3cc76b24e4b12f309f76292417bf7ce1684a4b1d0d24ccf618fe0d1dcc19d56b80d3c05cad57d6565219adcab1dbe900cbe5fdeb866b85a80140540e4aa9babb352a8c4ba1a60661993d8210c42647355f441173be95ea15af85aeaa17eb662241a6fb954c3ed9c24f2e40f669644317ab7a875392bcde0599b10f327d3967ceb1d871fae1f89afabb04566746c91f72a20cb3f20081e05f666deff02de1ea74b9ea70bbfa4200b3834d358041e162914cfbbd6997c5bce9d3f66fc00d254b227f684db0880073cf8c469486000321eff054fd7c99226a9242d0e1b6f39ec0e7c3834de12ef8bf6b4b94d8f84ecfddf35666d76171e0bfabd03cb5ca2040e5dff79d871c0a2d629af3cf9853cc83189dfb1f14f893930582fa579f037bbc41c82c4c01e4c866aef440b854957d9e8e29e8256b408155123cc8bd5b097c1a482543f76ebece863993e008bd3dbe24b800f09e86b09957cc395d458774355269a9b7d48cffd2adea349666823c1080a785657de88d0a0810c854dd936b641b8e52261a324990a6693b88c4d49d73bb1b1bda272e52e0b04c87f0d5ca379ceebacdbb85cb377cebf4a3c62daf2a51a231334a2d70cf380d64e603d79fe463135fff3d9a76b68037fb108c827e82301d24af8c88b55f3915d1fa96865fbaeaffac6915e70e43a8c0731d6e2bd8bcafa2c61feb8774af8e63e7a39f6301724c4423f64bb56d4e056dee01730656db2df917f8932338b04ef8b1c443f00e4670fbf46322f9a61027014cb831faef39d72024707a07d3ec8a6e826efef4b8850d087a5398f39933841c7bfaeac8118cd1e3441006151844456ec7771afee8e6ab7b9e33ffb037be5cf58d70cb71cf2c4cb1f09430b1fbe8c9d42de0b9db5ebc95d4389e39502e116443e8993cd7917c260729ca98cf9cbdd66c7804da94ed20e9a47aa0508f561c370e4f3a42314dff541026ae50b4e7f1e89bc48e18fa89042ff6d55e4dcb7f049ae81c8a3667c178707b328ee9834b332d056db1701da3285adc6c56e7a6075767d96667738b3e92c0fabdefacdbc29c8b8c7462c12612a32d21b3c1fd454f55b998c7c4cf362429ccca17513a27a2c294b52e957effb474f4478716151ccd376bf7e36960508b053caa184cc5be12f3dc47b2dd2f10ff4c98e09aff54ab3b12b132e0c8d831d098c818b643c39d67001d2b8e7113d8bf4a65d2380f09a5eddceac26e33e2e8f831669e749b00105f43da36bf9f21489db6987928ff4ab316385a0d4f4ef188ee15d0d90e15c03e5387986a0f54a1f3cf5cd7b8e72d27eb19376c98b66e1b3352b4ddfeb00101ae877d65d290a74cabe88486bb2915e1ff6b8fe68bcb2dad4d356754df1c8d45548fd4c59d1d2c7c24b23c30ecf802648ce1021934ee0c2c5af8cbfa600f45f8704e3578c062431b06bb544a2185fbd849302381c67a6ae0115518a99cf7edf67f0d63b709e98fba1bd99c28f2d6b9a413c18849a1651f7a6c9bea063f7c55ed9d3ae50c250e5a1457bf13ccdc32f5d914470a880f703c72964929fcd082d785a3991ae3d1e2fdf349eeaffdb7e45cf9ed615a1ba3d5935d18ade6b43f9039777fc43045c6b75217066eb5d20a148cd1c8903558028c6d5eb78e837acedb7392e8208ba1860a15d9292d5507b00faca629eea08380017f0c0c28b4aba6b94d093b46003ebb7066fc3fea069ec30ea8db9c00203616bbfac829bf0cd18bb1702b22623fe1299d0364bc59b2e10e3a1014c2d8b1666c492ee69c87781c891bca57fe659dcca85df98a30dbfc35c26bbae7ab71cbb7c4ab775f3077a3dd97b1be49ced44bfaa4e7426d0087646bcd6ad0c3e97c8d5c275e1c524ada7c9ec6c2560ab0d302e9a25d9ec901e58d3c87e72d71fbc04e135157303d614898a440e40433b1d795737464381b11c08ca05bfdcaa3173b8251d2baa2139cec3255f5b259e74795cb4ba988460c5ade3d6bc8479c220b8e109201a2c56e24614744a0f3a22fec10e385ab941db1d54d814c2667e093bd8da6172cc7f92c2e6bebb9c59047c12fbb205d694ae031251b435691e5db6e1d9058a596c58bb0d4fdd17d46f94257fef1989419f911c38a7094a7af925abd7c1add1d37726b3cdbba67e1da8ec423ab2a037a6131a53bd0d0743a949f31353fe6b2c23747ff7d2856ae4b441ee1818a4da6315c6953dc122041af19fcfa803540ec2091abbd591f951643534d5a7a7545ead67dabc8597b42be12fef3ea27808ab2c29da2ecfa72f6d509b51acd625bc1a2c32117eceda01421e7195f7aff32842cb7915f64269fe92bd1c2fd5cbc6d06f4de7d195a6b8ce6eedf564b33e24a96e9a5587e96acf9decbb5296beff14511d64643545805d9b01d8b6b2eb3e2eda140bc41ae6f7f78151ea245214bac70ad148dfa2e74c22b0632c472f0428d57bd0259f3ec917b032eda20cb59d0a3086e7c304ca050f0e244542a1d5a6f256df75172821e8a8f00edadbcfc2d6c1bb8e5e8b9c10fbb2e32b01ad9e4fdf459c5c490e541f2df1dc1ad5825cc7df30dcdbb305075266f26cc56159c49633a60cf1543f4062a19359521bd97694b2531022b6d1f7dbdce6386c1e353da35a424bf11fd5b54242a4b9bc8bc2146e73a9359b87f7a0806cff90ee3374c254ae93c0d1fbdd7892cd368ff044ce22de81154775e263175dc8698b1bc2d86df1a8f96c00ffe4e904dfdd82c88ba0aef5bb754bb702d575391bef70e56360d76e6fd3d35758510ae0708f71d819fbe6f394856597c2d7622807dac0ee82039f32547e7d89bcbe6687ecda0fde20d13619f6f06b0600e010dff94b3d294abcf9328232f3479bed3ad7620e70e6ac483952fbd6d6751878cae97628eea2ff0be38677dcfc661c1b95fe53a6341668efe7c6988da4fbbca0ab5f25a1574851dab795563cdccebee04af04a86b219542af003f7e12b34525c6d55a23e04d3db9fdfe50e6b63b8ac5999d279d6c8c71ceec538a2344097c69ae710b43bcb12c624ff8d7fd3f6ada34862a3a5f78e3aa2ef4cf043edaa9f97677650128cadbf9469c948a575bb906130c2c22657ccb56ef2fc71205771dd82fa8e66f65d220ea87feaffa6746d773b1f25a65f1fc7011cf7a8b822d3741b63b84bdc7f3bdfcb278db44c04699d7a8551998398c11bb7dd1ea108a1479eb0cfd19a82e715f4cfb5d2f2e1ff418670607960de84cff104be16f20a2873a51803ddd150f7a1d070f406f77f5c9b8a5596fc1dc798f4f0ca2f3bed9e9d9f03e7be4c694fcc8e410f97699b3d0fd61bce985b285c35e3b3e322af23dc07080e29da8308a14f686078d7eb63c4637432c4150a6d6c05982f3b39cfb43271ff5256a5338276460c8ee4e3d96b592dcdc1139650406de946968221c660f80e1064c672568d5b6e397c08d814fbdd5d3c9de5a2c893c33e02f4769772322e6085b9fbd16838545808fc83e7cf3eab524aa65291ca68530b286b9ff01a6a838c4138d649367b675e9e2edc642b61c3587d214cfda555cd67acb9210605565cc8caa6fe09ffb7ce9b246bc492ea14fc759d8dfb62c27d00c0813710abf70a537ff5d7a35fa5140db0d48ab0f1f27d926ac8a5df8b97e91a3d8353c05ffff0aac7c0e7a0fad51af76e2fe99b3ddbd6cabc931b175b57d8ebd5e8ab14680e18a670965b08c4b6ca09d8c5d61cca54f1ac069ed705affe2eae049929c0254bef4a7803ba3e2ebd70a5d4b6401c9c945b003032254a4c51be348652892a361db559ba718613e41a523d08fe86f513fafb2065fa02989a7cd24d660c10bf67fc099f877985981fdb854f06bb1f3b75ea141139deab35944d83f1f1725c07ec55b61a72796f601453ca3ffa0653550264251cdda96b243bbd231789590e52dc607c443195686c4dd9854c71e99f1a23e00a1eed89acf0fde386da778082751a0e4d20df2ff1badefeb6eef8909fcb10100f00ade53e0bf1f8993bdd113be315aba9ece6da793fff504d61aa41fb32b79cf4ae5b216aff54020637caeaf2f8fb2ac1af2998bafbfee8dae7a65276ad5b9743ecb429394b6eb122b8cc8bdf38c8376ecabaddabfddd88d4e6ae8585ce8a2f817024950c641df9f6f801c30548f5c58a3c0793ba44d248fe01eac625feb42c7f59f2a94173276c92dc73837a2415e7896cd0a780d3afc68059ecaef7d612e584a6960efbd82da71e8104257af9ee648522fe27e8295e548c345025a83097478411b747ff79e0fb9939f6b416e5b4bca7aee00a59b5f39156281460026d6e11ba3a74b65bc5f02fea6a4d48ef85508c5fc70d5b815bacc6320d8b9022762491d83b5caeafbc7e9b705d6202dadf7eeb132379d490d3cd541acf07f05e2b48edaad7a697ee90381f673ff95edb44f824d5a8cc7dde6a581d831863fdf9176340c8c5587493b266615aa1f1dd128cfce34910a8888bb0ef483e790748f8563127709ae0181bf7eed3be7d8c9dbea3a89ff23b9c50d31fdf6f561572e495d28567a8ea8aa7b29206a3111ef4e35753db6de986fe86b3b7782ae04eb64483ae2bc2c109dbdd336055d0b7950663e22818ff3a5ffb9d82b02b2c895e66aad851171d3c411521e2b94d90ec518c95c621cabc86bad26ca9b8669eb476742558cf98150e6370a4bb4bf9ffcc34342cb1cc1d8cd469611c08ac12fb344c312d67431be58c4d04d89ab556f7bfc6c63823224d6d1b690a2a337516285a7b054ea7925d70cde2033a33ff59eb6035f0abe92c6a7d33e852b845d0eac96359bf6770d1094e1feb6d46e3f71e0640830d315b0c83809f1ce14246d59f0784b0af3b664a5ea4d95ee4e6498cde7d52209e477c5a1eacedb11a6f2d705862eb7b35dff8a5c2e20bbe1ffff193a302852e3032923c799f0f18b994437b37612b4f1028395f8cd866c6215a20f6844a63177485ec818229e4bffda69550f836893d5c72105e8d95ff689a591a4731609df5e85f6d04b17c578de1a3e219082c09a3fa6add5d7295a9ef9b9b5e3da22d3eb3a1e108b3cc262141017f7da7994c34fc84958119703ad614e50e42c0ea7391f73116ab7780f9061e8ee581c4d81127964e47742c177d4a69e956df69af7bebc9db59e13ca355206fb4e42633ba4df56e0d848caf6d1785a295fe88c79e9d53a9066365441d6baebca6884999c989199803fb134cfb6e7c04ef810b7d11a50964ea9ea56bf9fcefc7e0cb208205fbcdc645c03d853063ac5544706f47bb1fe1d2029a0675bb0215e6278497c010f03f05fedb91f4cfdb4bee02f149858b2c9677c076249042163a61943dfee6566b498790b4043566818eea1b58a1206d1164f128c32325685a712933dc382eb4764ff1e21332585681d9a857373e3bf110f525ddab863b34cb0b47747082f29fa21eb87ae81b6391ba114f8334c15046170362d473c9c8a9c4d86427572ca4b952500790e97542054cb29bb2d3bf39dca8257ddab58f03cde768fc7a3bed628b06c4c268ea0e6f82d00bd245eb18835b3753ea80354548e08fed1e4a63d8c8a81a2a61a7bd680ef3a3f787ce9d0c7d54be2eafe20747f3f02cda91c3ed88f0a293995e561362f7e920740eaf653a0d989d03a723d38ef949e5e006409ca0e777d67e114a00dda6424ecb5f6799d02db75abc9f7181291aee86a090238fdb28d0b64365d864b1984f074bd847b903260882f5950cac27bb0ac717a10e432f30f7621ec184f1e4d322fa71931a2051c8aa775f623b2d883e1577ce438b89339ce1e4f8eaef6161ee8987428e867bcdaf45bb4e567b4a0e357adcc6f669da3f4d6357b1a3805196120f1d96d18be8185c452b529c82ba82a8f15d1df3c81afb922d94f74520b0d6729bf0705c881f637782916a43d53f8802556d1f3c59accf17077af4a25cd6c99d99cbd3596911ce6a68167aa02413bba7bc8a82a39f48802f81ff7a48dbe2c0bbbfe1e152b8ae2fc3248b1704b1082919b84ea29408326934066cf2ad577b6cb8c68f808a09f95c6e87a12db94f6fb88d7a2b7091fd2a637c0d85bce4727a435349f7823a70654b834fac7f1f1a98b52e91e3b5a28ff7acc5a1edd6977802e65588f87e893a893ba8c6f5de6bf210c7fa24f9f02f7680e31501d905c6e17d1dd333442a9e212a431e721d6a0b315ae1117551b5185a00fef2176230dd7f34834c80ef7ffa4c1ed5dd64489e10901437f57490a779ec1982a8ad755fb86af86c808452ece82f22fe14b6ed23655b21dac2410554beff1f9d362f504b80e02866927ef9919a20be3ec18da7db89b5cd778c1135e147c983a74db0c49c11ef039ca54fa7a5843c62dee8be154ef06607d34fb2d3d50922014e643b3e319833f2bf60347585061ef9ae142ae2e404f7db6bc07ab0aa6bb30c1980341b783f4b3c6611919cb403e7cf926d6f6f59ed915c0c66e491e0a86ba93447a00ebfadf5b11a2828eddd592e94bc15b6a205ff3dd07f62d98cc543be1550016b13cef98761eabec5017252040781ff2c1e3ed7310974a55cef0911ee9cef3f7b8c95cfb287833e8fab93ce8a6000dc6a7b7f9c0572ad1348621b4e685197e476902b474ee295c16c4d95bfb3c5e89490718ec26dbafd1fe599ef76a01c8438fec15182678cdc244396a68a63ea506a73d34a58804af92b4ccf283318b299bd0e99466d67f010e37231ab0af5c183d884d334ed73a4a0666b2ccbf76a5dc65e3348eae8177b0a55d8f74131be08847cbeb6085f5b9451491dfbe3488be453abf69b056b18e0e509e5e2d785556b9a2f4c828515c59167cc01221f96d258bb30360e99e909d5da0c733ee8ad2ec20a72a9f21d812ccbf5b57c392ff4a41a7df216ded75f2f44c368fb0684f60140f863d84a5becc8e9e4da2e7f9800ee70d319a072398287193b8809562145e7274eb449016fe241bc8dd9c56182990434cffaaf2e35394698ea9fb3f6f991b2e2623ca106fbbeae65e6638cc5e647023fe1b9703f972b5451d2cd5ceda879fa50c93fece111070d1bff845db18ad4d398137450bc3d0eccd871028620c9db7aeff2884438dd3d2cf85c846983a57e679995e5d160ffe0e9874ad1c5f3e53f6c35005ba51b98c9e3e2f00139f2492e2ef83143dd1a4f9e1d253ca5d786c4dc1856a9f2db7ef5316e200aa9e73d3972571b30253718b2bac4ec5470bc75a2848078b83c34aacc2b6e8a7f37fd09b5ec627ca936e8032f842671ae1602d3b40cad0f1865835e46ae2d8d08509927504fa16c307b14dd80ad3fd554823b07de2209e53c73106751a56a447b62dbf3a2a5b0e972e1f944576aab62040aa7bd2294522663258e0382a8d1a2da202440d48f12fce2ac8b5ce8c21f3939a0a65de0b88270ce156dce52fb038ba8366c7b5cca4fb6d47b34152c60e98851f3d85d101e42125f522aead950d4603675240355e86b4fbf4977ac0aec1bb2e3e4a2625d235c3e82a1fe8fa5f6938f345fa90e072a7402cd3b70bb0eb10a273c3727647d2f65c230d8ea9909abe2e860a2fc08d243b8aa229a53609dd0cca424eda33f9cc63cfce489a187a591ccd012e9f493e7c5b4b7cc355a85beceeef699ee0c529d8047a9aff5186d504176d496e4651fb1ef39940bce15bb730a3c466f33d84617524d193194d8eb73249fe187a2ed644076c608181476b2ef4796550dda3e401cff507117f62871ae4618c592643c5ef7c842d6c237746bb8796eeef44c98c4bac525fe4ef34fe1512a7670b06370e0da25c7050f8989501310257794f419db9da8574896c9d04fdd615e15a67e7d94c252adc0ead466fbc4643260e8d8bbc7202a1b842cb0110fbc056ad90af813a12f2ef3a58797132ce3c0b94373bcef51879566d77340d20625883c5260d1480e8fc840555b3fcdb24d4bf27dc9145aad96db9f952819fcd82dd1c710d7d511bc5cbf2a7afbae2782353f5329c7a548e644b997cfb84e4dafb2fecb053c3ba44194363bb247719b74a52688974e7948e334b66ad20fd8cd25b2313ea97343c11e6f37016c550123c11c3970038b71a99a47abb0e1b0bd532dbb7b3210206e3bebe1b5b37d3ef789cd0285657ee74565a2550deb67c4bab2277ec0d9aefbebe6670dd14108925a461750c4432505cfa1d1011b32380ee1cda0de381d2f1c975789826b83cdacdef10f33f0d2ab1270616606c0e13f6318a526f9d1ef2f3c49208d336ff24137000dcb8700d30334b906b1f85c900144fb649132ead82ea893b8d8752f5ff92f64b6f2944560b04c619824efe800399b19a92d1ed205c23b17279da42e5bca64c33237ab21545129b12f86a881d47da389703e2d6222f232fd5a4d9af6e472878a5f54645dad957292eeebe9f9a1bab1134e25791b4e651f66f07705189b87e8d3a76fd09a98fab9bd01a30ce4f80e370b51f87cd2b0b4c0103feac4a6c5e05601068f35ab525c975db261781d9331160ff99112d1c67cd5ef1a773ae8bb1fd5a721b22414b43cf2f7bc5335cc733888a0165b57f6e5c7740fce0bd3df804eafac5547c8a917bb25d0837e957155d516ce1f1003cbc2f2db7ccfa11e3ada029783d03e1ba8791128e47e65a1cefec8a53ed3d4ad2f24432ac048f02cb005d3def3572c4136ddc4645bcd92dda18e05aac21a65bfc3fd7f14dec18f6e3ec0b122007f878346473f7d7769d236036e615aec3928f1697b18eb9b9af783799e5d59ec2f01494d49ce58893d2090f1555f77dbc199c1f1c80927401b4ab2dcd96ca81dad09f15989af4e3e82136de3183eb698f87f51e8fce4ac4f1e78d628c3b7926a98338b6a09d02c4dc190504bcfa364e0106a95ca548342b28ed5a6d9033923421b42522af2bad79435588f4fa022a8eca6296ab9fc1739b53765b6518fb38a4eed1548433d1fd3c81a4290b479714ac593726dae87d28d365d0817fa9493013c18a8373c0b6485221974537ca8d6f6fe2b0b2bb1ba96cd17ebe5b106115b1eaa65f12da0147db763c99fc43b5beef375c6d129cd183bdb8487fa02c256679324fef2e26a679e28f45ff9f21dbcb16c8abd335b30bcb2a90147919f077489a5be1814b22d0e1369e404e180973044e1e091f8bd76a546c7565105e7fd83657d0c6944d658502356251c21cdc4073c24a67758f0e48f38419f74a87d859da5f6ec824d74d0dc28614d4043f7d37c05c4ac9dd2d07adba7d1da9fc0c0506ab02c23e519cbb9223cfbe3812ed2bfe15deda21c4ebedbf4d1a69ca6f56f78b064f044e899b905a451f5d2cd07fc20d61db98b979add49cedb74d5515be5c4801448fc3a7425cbddd476adc43609e1648faaa949bd2595ab89a92c163af3cbca4810c30d0502a3f8c4c488a7b2148a4739e7e4c5d0439ec8d1323b092af73625072454522d3fa591d2263be1a9b9c10df95c276e7f11543357fa280ccad9654c706369a7fa3e8b61f14b586e0179f4e03267c3219298478e387e195ec1cb705688ce1fedea6f9b60b1a4ef20bb26124423e93ebd203f9e4365f8968b24c8010edcbc8ba481543f0cf4ddeb84edd00f3c648a3fe75fce9bbd4668f76286a17f27c0cff9a699e439050f95131c4d5de3ecc9c4d207a49904a070aab29d988b62eb31158b00bfcc595d85543b256f24c2d2307f91925d1f5ef2301c467e518aa85de136fcfe91ffe98b4eb55b8c7bef7617500515f25fa02d5b217ebd37ececdf448149474dff2004890defcd8bccede9aa24c1210032ab68ff2e2e68534dc675fe4b449875634b6dedb9c557001245c036652978388a2f501bc1f03348e67f479b9ef4eb9015ebdd9d46d9ea3ea24888ee4c41af9993c091b443af4a1763503070005e3fe128bbebe902af55e08cc8c4bf3d85b823fb7f905d1bfb4ccd85897684bb91450a4a4992bea30a519f44c8e6c0bdb6664b8579a4971f9df585a35d5e85745767f4da5b8ec5143b7c251098529097939651ceed30ac842a39d684f95ff020255e3d0be9fd1a93f6f534c46174469d84db91b08df837f0a2ecfc7600b9d940fcff99adf509b71c52a25459d32e7a9dba4adc70e073acfebd02ccad9d54f01d3a8d67a39df0f6ca89ef4249f53a5f62affc72afc89180482377dd91b10de635ffd3877e83c294d8775faf9b9833a2d76330e01ce166049d2208b69e0971ed1cabd55e236b25542ec225e687a8130788785dc64c76fc4f6b86b81ef302789836317fe4c9b16679dfc6f12f4e20be1ec35cbb2848b8ee01e0b89925dbb65ebe77cf3a8bd7a3b5fefdbafae22618b55bc76ff94db8ea10261a564688c9bd257a1839a1179388ac5722912ad2383ff86e77f5cf97d7337a9dc8f474757ea9b9e13914cfbc6e4907a2c0c46a0db519c7a5da3013e5caa447fbaa30bdbf367d0015f3a2e4e5d3d8ca6737bfe5033e93897c4f950d3033851c9854a86901f490e70ba529739e4202f3dd26f1776f9b1cba6e4d3c6b148d5680ec4806094db14c8f3dc164ac71fb0d489eca40919a8a67b23188c1447532c7c6b8d747a0c066fb9b71b28ab80c13b67536dcbd45bb60afb1a2f205b610e15cd8a41a3c2c35055d2f0669c0a93fa8f652e9b094f31d84ef477f177f7196b265a8afba71d57acbd5c784d56190f11eae2b83f24f6d949ef8f9cc718f224c5bdd236803f13e203a923866a49553ed8ed7d0b0228418f74d3af9b784ff7abf665ba61de66d60ee391894a8cdf2f090f7e1e70df5879643f99be552ae9429374a11c9fb8dcbc4c492c724809d6768b1760f1e2eba1e5545d1c5fb90a338e9c340d749d1f80a24bee5a4fb6c975015f77196e1b89da6a0b91aea373b466b5cd862c22b93c0deb4a235bbbbb149247abd765ab69e4b1b10ab993b413ad078524cc660d726b9d6ddd8752e41961f3fff192523b83c507b07616462737030592caba9306ed6c87497cb0b06b84fa7e173bd2b4e5eac0c217638c5c7b9dc8817079d3f64538d87eb31ac494cf07a686a8a5f74a457a9f5453a14854d57747c1d6d809a93a1df3fd5b4cdae4b1eb34dc3f0a51f56c441825e0612271447f34d06dcb53e5f3b2563e44278c911c30b0ac7297d87029b4a05a7720c6f6294bbad36876337956a7206d4d378a03caa77f1f237cb06ac1d67e135a483916f7edfe50d19e8fafc9a4cd48d60034c58003233f48ff87925bd65153216bc9fa8d6a6cca1e1f6227a0bd3aa6f056da718b04c851e51e9be6d06339254572b34d61388c22d6936ab669c70d654ede435c435fa253996c6b4629bcfa848efe91c9e7e85c6914c5fedbd6ee32772c069946453fa832f1628aefb4e910d9b01765255de3c49abfbccbf82c383538aaeae66d25311e32a8d6775bb1d0c87fd5be56540a3b149a214a1ac7b36fb6a8dea3a3554efe2f51a01e366565e8cd191cd44738f7d6645423cc275d31cb4d66659d01149362b8166a276ea63d5f583fcf8b3c195d384ed5cd2f6781ce7f058bddac31dd560458af5e005f987ccc7c732399a2a7e7f59cb80f22bba7c4cc0462eeef1a21192cf36d36d5d8817bb83573d76962f8f877dfec0c342e955bb9c7eb2010b6a4c6cd87e6af4a023f38aa48244e59a8e437ef7a3a0156e27540abc969a9ac983d4b778e17ab8f10f50e0d1b78a8bb5d0c34e238cb941f3a2fb341d9e2cc5d520575629bc15c7b63d5f21bc5e10da1e35dc08031dca39a2173c04dd8c03b7622da6670cebee2cf757be5dc7f3cc3cbe5de7f98540d6ef7dd352ad208e791ffd64fc2777edb675398d45ce165be2963e9780b78c37157251bc835a0795da17e625c42fb643fdc0673ce7940ef4c1740f3824fa642b768d6bd2d7b708cd0c51746c28612c7ce2d1fabb69d9dd8f723f4e723dd6683f831caf7a2391b5f10b2a5c181724ce72efb4f59885ff4976bcf2eba96e32db3b35e2ce93f2c3e25ab2bdcd51f1e598edffe76f7efe4a286ecf33b9e3c447c688d12650cbc8cbd4c20c6d508a32f961cb1fc1242eadfd71afcd78a16d1e8b44e42017685f39dfb94788b6b39176041762d4df6b7aaaa898d7e140d410c5ace0b60743720d2489152f5295ce99e7c67d5aa029b2f85dd51348fcd935a3ef5b80447fbc792ec98b2b98d80bf5fa7be6708d1f1214da845cf93ec1e8e66f2200c09b2341153603f5b1e6a1b7476b8008d85c402bc8050f37cb99b20b9942bbd770008733c5f56daca2dfecdd3cc6985fed9c2f91b70fac560f714d2bb0b84a399ddaf1ca855ae25ce28691198d8a2654c8485a61f2eb6e5b34d479390f520ea381b28c70fd25ac68ca608c96a68237f6229f83dd268e4d41956059fa62cd2f9931faeb5fe98e18389a8d99fbf1febcfb21595b2f79844db63c3442dd55897a111fe644bd25ff44fbfe03e8b77765af3402041767d31ebf3436957b20a6a6d00069ac71bc287a3b519df25af5a980532d680f141deb6be48b12895b3f2b716f5741a13f99ceefd06cc0101c0f49f1796bd36f9a529d3cbc222f27d119d4c75d1d9dec68f59cc47d5782933ae4a348577f1727ff2d934c0f4c1c2e55a2f96fdc545294b9acfa0329db79644787b931b8a0ac35e90c5ccd547c4731b8815bf7445b7c553dc2852b621a21085bc69384ea9af3180ca8cd654bd56d09e2a9174a7c77b6d75f8d9f637a26c04078327307eaa9b1b726cde0c2f5b4373886a0b4e9b2227710bda589776289a20efa1d054b837af212d907c66a7f73b2d25f6b103abeb22db4dd94564ca5d43fcf10eccd5497d281dac1cac79889d5d17b10e4065dc918bf65c60ed607518a89f43b07cb74a88f176f21ea7787106d862917b70a403f39fd5f6811b6ff2f8a5d373a6a8e77085759c149a4da5cb07d44037d7f4e1df96907399344317ff54d92e60ff52ab22949902e41ce93363c47fb8c623297cce83933c16d4219333b45d7454056bca7e96083aa43f60a72b39e2bc1008c0da5e25123a4b9fc2e1ba400aee8e23bc94c51f16ab7de26648bd40640675c3d12873614c1847af6de9aedcc08cc0cc2c0b49cbba2299970e730e9b4f586f2048b62c6a8abefa799ecaf5b690a566cf12477d325a5625162511394a573c5f227adb0999707b83f592d45307bde82536dc9efdca6fe0fdac1a84194a15de9db91d3cc1e16d670aa8604d17a35c0b4780542991adae7863ec9a2f0dd0693674d22819268a1107a84aa290ad2dbc9f4b26a6b9f7db2dba89b0ebf09771b7220441bd77810febcc720f90cee76d4506bfd554e5be3006de81b227bb2814cde1dacad2eb6d2a8b5910ef2af9a9d73ca41850cf9e0a844da7eeb46184835e97fddd027cf715aa529f8eeb55d0f3c444688b69a814b0033a5cad62b91fe927d3345fedd022220848ff561f13bb118e6d040253841bbcf8ac3c62120dbf966fc1d2903d0ff495e898356ddce85e1ed80350a8ed7363a71f3ca44364e6bd0705486a63cf031f3324cee1fd65f1ce5436577c6a9dda2f369f26e7f70448b9cf664138be667f32aee35af3c8675e8bf7aa9a75c6e5a353fe0ea70f1cd36845c4234c8a9e69f02d0850c749316df50558f5a932575393362e2b8e42281c198c8eb8f7ae5c6e858a102865a59db0b7322fab3351c54401798c494c4a1fa41eddb8577c2d36145d8d8bd5dad606699ccafd9410e465d3aee5cf218aceceddea7d0e78a9ede788b5bc9f5ffd0f17fbbd8ba91c03a53bb1d133cfb5e9ba173ec3f5d3366aaabbe05d027c17043e789cb4862024aed511afbfc5fd2c28c74dc23a6d8aec26c5897b0fdec92aa29fb1a9a346d3f9d01a07ced735dab9a50dd279f34abb2baa207b401a185da85a0df06faf2b18892640ddbc58cef2dc448f2c1f63eb7e1ca3c799fb38445b8cd22c1cbbf241f63bd47b3bc5b2fe938fe05e0dff68e1e36b534f0b2754b091bf81f6fac2268fbdc787961be9a968c86c97ff0d3adcb473a01ef6aecd2032bf7766738b2bb5ee94e5423081c3638b426920ca777c591fefef016ff6d6205364ab8f1f43d5574b42d3a690829721d65f3f6eeebc3d20ed3a335d6c769cb33b60e2955dffe6fca43d9b2ff321f41b8c0d00fdcf0d8013c257415824183c34418114c7c56e9721371b6f3403e0539f1855cae381994bef348881bf2fc36bb4a06851ca1f936ee732517b2c0bcead04a79a95978327c38d2035bf233b74b953100fed5e467127b29790a13fd01f092ccd7d65a3a9d1af106c90689c494a42949d7f7c0fde35c8dfabfd12874b29d2a7161d8dadf01c5e0edb8be30fe13c1aa4e242b15256e729e5a7c75ba585c6d6669d5f4282ebf8386385470e0968b9a297bf61e862abe083d99d330a77bd6ca7376599a6185ac7b56516cb7063a22d85c939b24c8e9f0f549285f3d775fbae2d28593ce8503214c20d26efde4c287efcdc4d48e570baa0040b401f2d8f2ce26ff681bf9fa3fe81d92703d9d69d89209353fdee9c7285b4726c7875bd89c9224238036bbbb8c7fcbf2f0c21f48b595c45a9eab4aa22fdb28cb52ce4f14acedbeaea0d18d7aab6028f17b0c7f66a91090d1e2b1d1a115255c54179a2613399986285c84f44568c79180e147cbb27fa59141d7352da034e728bad7962bb2dad84a0577fd085cc27876a10eb90cc0c426aa49424dba930e2a2ced4ff27e3a0cec9460e700246e61934af92b7ec53c0e99ccea00b39da4ffb7303ab8ef971bf07ca5838ab96ebb7644a7a01e06987e9413faa8e9bdc19d46681236412ccc0a69e4bf506d4042d40cfd23495a0f40ff467f7071c263f7677ced5da9b6697b3fa6415ba086ff9d625b914ebf52ac232dd216671d4c35eabf9377650b4cfca6788183275cf7b6f1150c085a84037649e836732bef8746962c8357bca4f5bfe2619ee7ebea62b2f46e77d59783862e18db487f1f3ce7060890705d80b30cc02421249d6a2a087e57f38ad57011fb02efdb0ee8561bbb0d0398eaa9e2f237df0db8688e5885db60116a4365c0a34ac3fcfaa66cacd04ef7f90c79c8113865a280489f75c3189a1afebeef03e59ec48c51ed49383f4efccbd3a2def454022f52b62d74d04c826f78f119694596a5dc8f08a9a0bd82bd78d9792a303988a87ba0a3a66284d07ac4086557f153b1362d58d21c22bdd1a1e5fd04080d3c20d9a49a5e8fc0edccf6519549a4104cafce1c2e6b9094660e1b2784706c36fa1b2e2178f3f95bf2b903851ac286820779bcc39874ebebc3a08267fec7b5d52f5895c3921d4254fd1462e7b459f9ba3983d5d43377a0e97f5731cf692a6fd9b741186d5f7dfd252be8e806f3d0749d808172250fcba4f6705bbafc1cc0af338e13c3b8235a10da7ac39d362d767b20e12cf24a50441d201a33bd6b713c8ce08c624729c125b06a10f134864442a87c2635aa25bb1fe429da10bcdd029d3cd04763d89243302203e3477f4ebf5e5609e92e468e1e92984b2baad3398b7bedac23b048ff8f295fbe08d0f11b5343e1848b0a13591c1da55fdc4d1ccca8e1c4ee87985f302c5e65d1581745862bd742dde084459e608e32f5aafbaa3c490111ff87afa8956a820fc2bd344d8981b67b35b9401ed27de3f5d73621a7f88a749f5fa29ccccac0969afd5aa20b4fbb5197e14a310d334476e99b7219d9961c330dce5188a4678a72f8d2225b9626f656fc6c1fc88bfb6b65ae6ca2de65586cf7948341b610fb7ab29879d3969cebfc676f6a5fb592f5a2c3f55bede6ff6f7a848494abf52f6d98f0584aa2f8a4c05173e0b7bdc718f25cb4e791f214d2ed24a7a795e0922a26dd8475f2de34bb35e50f7d132da4674406864785be54bd56e092a58e3defdfb8f6b601ad0b2a4fc83367831641f5ef6585b329f7546f5f7618bc2c2b4d45857a27ce1ea1cf87bdb39f3b2abcf5488c5263df72d21113813ddf97e233a2a6f4babeb607ada57dbbffc4fd9bcf5325069f279b8cfac41266ea838d5bf9c364613e30e6f4165b4ff9e7af34572974c129a911a59d23edb85af6580a2ce30484622578924a7bcbc868f15e55067004a7f30a30ad8915c994cfaa5689abff90bbf62fa3c96bb46533645563615a5fec8d092d9771425b7c07c9b9b149d1d07765e8b2a6e7cc06d94e662a870c8f4a40f730c59c2cdc716f4d31d854eacd5a9b1122dd74e18c6e36d04303bfbb4c732ccb3d649d6c1e14175820fca6a951b93c2e355b5b5c642c179f60b4e84bf4d75b897da2c0a75f24b536869e2c560c59a69d895df58bfb382d441c74facff004f91dd6312ff14f53bb47e5bce44b951fabe6b9f4fceb03bb233569d3300c3297a99690be6326e7e529555cbd71cc818559e97c6b80502d445d595969ae8d1be77c40576939ae10481015aed532ac27bb743d678032092208cb60c9ded5ff0044e034b224feb1a713a1c9f11ac259ae54ac924c3493124990adbbd46aae49e59f0d50d736fc739e8f750bd4ea9f54dda5d7bb7885fbe205d642f9d8b5e0d03699e3ae0b45a5dccbecb5f4ad2d53c36c6e6d039351c03d50ea3c831fd8713644f8128599abc8867c56cc3af34c7731060f03a853ba702ecd2f9962b9b7166f5c1bf3d8abbae03c9229e4764520b48eb50175376767d08e540bcfdbe0efecb7b74aab6e628a9092e33c50b2d124879381c1a4a801e2f0571dc4a88109a516828fe906bbeb6d08dc98f31d357719d7caf999a718fa3fac95f80e23d99b56dbd9fc5becf80fc8abe1ebe713b3dcf338f28865ae251b5abbb3db8ae939f4fa85d094f7a21ce7460b2a0df289fc65ef7f35e85910697ff960850995e639c1dc2bb8f89f8146ccebe94554b542419ffae6ab4eb56c1854d0a3decf002362c1843c57d371bb88ce918e79afa1f6c0b2c2b94ad3e21a55381a7620a4b60d7edfa1386bd2b962a6ed3509bb6a85ffb124b53425dd2dfc7e69cbe6c883d8094bf0655ed4d5aecf14e328015cdecbbf5f529d1fb02de4b40b933a68a925238710758e3e94a1c93270a9d16135ef0c50e9f2bf43355b22446288d2eaa03f997505256163d1e1eb86d049314c12ce5780204415f66ad77c84d1344fed0a28141d193fa6ee8e1e8d5f20b34a03d71f4a9ffa99510701a16e11efeecc7e8519da0e513333481169f39b0e211f2dcb470b2e06660829f87cb428d20743ad9d8902071e7beff78c3f49fc2c6780bd1fe75cbfe9cc28cc138117f3a412c8438934289f804b2044c749abf097c63de8421235960fb1c67f003b437a1da5428af8b1d6464f37c6476d9c614894d57e9d1d34cc4d12834160280361f184ca648c081c6c0eb7115c7ed99d95eaf14866fa934a97ff06af00735c7a717342899f2654a7ce54b22d9cb26f46ca7a60f0f4fc390d27b1fcdf7d1699561a33295767080a28ba1c54e7fc61745c7c8f22a393ec4ccd61d46470d0a437cd04831bad183722d2087ab6afb349116bb50d7ba059a553005f47ed09f7c2c1fd7d4ee40191d90578a6a59c7c27dec08323a1a34bf5f787aa7760ddee3451e65bcc33455eedb43070665cd90aa2ead6302c6618e1d83cb2222ababe70efabb66d5b4be91dd1284ea0834d60007f319de5ae032d6cb198736d9d8bc4e7ac5c9cb5d564699acbe20c73ed83f8491cffdac57dd898b406e9b933a9de129a0230570df9d60d82af07a52ce3a379cc60394d02c6cf5cdad247d5c971b0fc82194a372aed3db02c11fe0b6843b34f60fa22cc94df9f975cb1bb2ba2b7bb53e9c69c3283a091e436ce8690bdb66d7867e96c7bdcdaa8ff1ad3b9cd853dd26f23bdf85efeb9a4076cf30849eb9fd58f3193f17ed3a0d8278cc99f37c7adbab0dd0398977d03af0b51da42bb3c027102dab909489a30d07ca3ecf921ab288db67be5ae719714da4a8611d055a0e81d2fccb98c3686b9aaad9383c4eb242cc7f8bd4d243330705bcc46a42a8b3ef1e5235606303e3893cbe48a8f11c4ec596f92bee0540aa1f3df62f570e991ab2c0edb9a65726781f6084d2ae09c82d01a3923f337ef69c7a7749f6769fa4c7d6bad9c528dc8df24b7dab7d181a09fba3be617812a0c3843a37627dfa16c5e1733f13403bbd9624cf478f3c287ac0e12d7647a54bade91a6a786531f0c0c93e78eef5cc3cbb265b0ff6f91413b6113d69aae56cdf5d611a64f08064db356409735a5c0aeda2bfb64baa9a7e890296681727c0e4e1c81abea329d0c2bf0e66412da90f15f5661c7fa5c925de5b6d4c577cfe4501c603c7bde2f3613662ae72fb84c96040d3805fb237cf2fac87cd03242f6ea92635b0166f316f58ee0a00f1170dbf9a72560ad8cd8bd7f0049224053176b3f2461a5bc58ed4b095f1cc744a31059ba61a11895c20c62ca7bb8e0ce563cb202da7f99f1aba0f9afb001b29e6ef2ee9224c64459798a7aca5eb5281a0b69b627a7184b4947e005c02b9aa117b54529fc78378ac209143393f14353987cbc525741d65d8ef951e2c35955f226630989a15dc0a8e50c99ecc4327bd8e23b7041996753cedeb9fa1defae0b0421de1d7864d519847675aade6d3ff813bc1dcdbc4601838f12e38b04dfb096c2d49879970c7b8a123c661e6e0a30964162f352c614ad8733e307d2a7ca7ffc5b23dd9a4e65c9d3fb675a562e59b3630f1c00ba81f4ffbb7c9eaf5018f2cc9c7f7a6f645425eb5620ed1bcfda5bc2c61e48550d0d9a2182a860297a8906748a3bffca67de3853ff1570ef2075960db9040249b0b3ab26810a00f1f2c2b47f38dbc8c73bfe5886c75fced120ca7ef58f84327d03ecd52b5a3f4f24cd9b6747b3ff99b451e9441fe62e390affc76412f4a37745c2fa62adf58f201505053a428db73fff7cac384f5d96d6791699fa9447576764b3be3a1a4fdd3f0ad59b1b06384f54bca1be3cc524e362b87362541f6a109873fd281a2a0f3af6861c939eaef148463c52bf851353a8915570883c8a5bb92c9bd7776e5a653ff831e702e6867d7354bf7d38b5c9aef6e13ceac29eefa6c839996ff59697db981f3402168ae57bbc754c3ef3939c930ef0857a7794ad62f9482d54a423a80224cdd1c2eb8dd2a557b857dfa6cf8784188dce83521563fabd8c495af96d1a6426a8ed17a458d532cd064cf2ec52bfad6a1fe93fff95bd6b845a84b04304743559dc2861cab65d4ccb63627b7fc0fe626a03e8d7ca140cee66ef3da5c937c2aa8569fd23916b791c026d89351d505acd55996e0e8852635666fa112954271462d1f746b59cd76b50584808605d9ecacd165e917b078fda07a67149e8d7e02e2fb93264f0cf92eda48e55731c351bda54fdef0a0da21dfee3dac105c6db4e04ac1277190984d3422f165b09f05bd887f37e862bdf144c818f5dbde9bf3b8688cdc3565adcc57683e4b323d8a2963cfc192561897bca19679535f5603ef4c91d78aa833be1c3bfe254dcd6f9b2d2ec334ff670bcaceafb57ec27aae2e793698daf303e01f1506cd25a233f204da6cc6d1863702914748f2a88312b0d89586c26f70f68d6409b1f850dd3c73027222d37ea569911bfd128cfab95651c0bd645fb44f299b1fe36cdbda7a97304810405f371e4d0b93622bf66658e5d6108996bae60c45f5296465f946245993626f01d55578348408d0e12772522712621ec8cb9c2965ebf562a1055aa9ce34d3084fee7939cf0ed69648e9bf6930be8715c4e64be7da7deb8dc1ea668f3742ba710d2b89a14e920a17c5b5023464190145eac3f097069b14cfdf75647d249d752dd596b5ad7f300dba3bd16c2714d015b79a1956231b1881f1415366ec607df279cf0ab6c55e9d1ee6a8c9c81983410b958173ce8e3906603e2a53dc78d7616e500e0f61d9f8e5dded32317e7c7c7842bf5ff3357c5f7b056d992067cbf5ad77a9975bcff9d51b4d4bb15b7a5ccd63f21a9214999d9ecadd485bb8ea83a88bc473f6dbfa55466de6a4301baacb793f512b0d1b58c5d2affcff069c52bcb22f801dc6051f25e61a45e83d16e46eaf11f409f96fc3525e3b729a421f798d08e70717366217bd1f10ed8cb78acbc6291f77c570d525e18c759428431f9c2d0496f7cfe255c7b2fa80506e18a11b8fabfc91086c8db48f2d433603e3a3e62422e514af7bce9f394cc4e76192a72f0156a919cbdd51fd389c68e7c309f1af2e56a0b86cb046647a973e5360c3298175b36f74ea5afd18fe4992389df0b5004ccc2674adc56df73ba2f78800d1588ba6770cf79d2cf6ef04103132aabd81bd40b9b2d00f12a98629ef2a515992d30c72a8f16105d410634b452f952d89ba409dd477d7d5293f4285bb5d5cf06a3b32cb8fafd8af4c665f603829a0f923ecfcc68e57008fa0264734e3037c968b168f7bebdc1d677ef543f532f3d65b356a6587ae8f51e93db59b6297a812d53386df61808fa664a1062a71313c95757928e0ddc086fac4a5f193c63fba0034b45a210c6d1b800e263e7e70bffade00ae3aab59ce428f8f26c87b3c75bb9b12f09eb5e3e927a5af83ea1c3c88c82ad9293b248d695ce95aa11552aa5893e62e6db5297049fc30061aafecff8563f5ab4c5a9c16749a3de9780b8eb651c0a32a8da450e039b331e67f15af5027d8d6f9028a655427935127b94efc59770f9158b364e8fc89a36d373cbf2ee7939a4b292a03ce7856ec1612817386573754cd9aaa91d2a5d5e519ed47f38db72d50abeff048c094d0a4b34ccb2960a65672b5ff524219fba10d0b4744f9b81647913b61e855512e48e97a05b090764d5af291b3f66b3ae07de8fd7425a462b870ce12ee753a24296d96c085732c3068192f04cab430bdf3d87c6487664e8e593deed628178ed59ad43a1eea8de60465e00bb7bf9c7670c8feaae97240d135d58d10fbc11fc81f71304242c77822a4085b51989f50f3828d6b6aafbc035568e418ea11cc5deb861ec094c1579b39d3d76a052015b393362bb6e887e3809a84143dfce2d3637335e6a7b29daad7ddbeb726aae8dc0de210a69fd5b3be507f2b8de4b024eff0652edb11c443d3624277c161bcceea39c19dd1badb0fa70be5d8934826c111e01fc422730b0ed150bc3be8a51f60518f64ec1eec65845170c43919780c1fa87c543c2b6947c83ccd546acf701c8d2e40f27b63aa27b08bd1434f63b37901a148ec4005ec7ede9fc5030a60cb68631b2d4d24ebd5dd55e2d64e09893d724ec04892f0f29d71b91b75bd27a5d35ede413a7b0feba27bd98c404decba9fb25aa30321cc45b9fcd1566899d02d640b5d1adff0c72545df4a95825cd25c82058151d30e183d88c5d0c0c73e72a15291713ae5f54a2c4450399e402d33a96967fd88c86ba348e8340b5374c872c63101d5df69c9fcbf51935cbcd3d1b0134df21df3a290bdb0aae9cce77e725328e4aca387779a1c2de812e027e38a9ca784974365d8dd98179efe033987e5753d85433638f5358aeacd6f0a2ff59570a4216cc06641fc143a878691e3c29ccbd86f439c53fe610be21eb445989e4570ea8b618d91803c893ec68bbd2abd304b580197a6979fa098eb2056b668b62c80edca042befa39c431b407c0b85ce3ce368e832b9b6e1fb4a6333e451bb7069aaae13adb5d44f0d739c4b75c0aa010e2f676e1b8d28bc3b43838e77fd1eeff8f7282795364325aa7b55bfae1a85ad062ab3e8ff539a2c351dfef8b08172072bf5336c3675f369d7ce7d7ec7d791b33331ba7b497707181f88b9ba9caa52798bc2d4a776d7ed7eabfd2d917a25c567f22a7bbda75a66ef34914db9c5d49a15b07ee790a17e0d061b5e614bfddbbaaf40b6ca06b5b4671eaff78e750b845bac1a5aac56249ca73e9c5a8d6cf92ae03906ad2ef310b4bc8643c2ec39f45427d362428b2972085a2229bc188ebf25e7d2cfb6326b5d681e44456b38b16d55333d6892137ef18cef2bfa6edb26a5c784b5876ca9091c9d3511084246ea6f15d2346aa241ee4afb4c712944b95dcc0c53fcc8b62dcdd5b8c9573092a942f728019fa66c5b723a9eccba1559b38eec102db4997105f284afee339b77fef0152099e61096beb6ebf26c55c12a88a48aa7410e3036b4e40b89b7f7f0a1334a24ec4963ee3a2a4af1f186ef820cfb5bdfad5eb9f44ec766df67a90b1ecdac53663189d4b7151f8c1892374aa9ea6efa00a648103a5d73df3da30e627779d289d4d673db9c25c0196eaea439354fa7d5b43287cda905ef2386659090cd207a3e6e9bbae9219dcfa62530f8b05ed09acfb9822a7b383042b14808d60e4a42d0ccca8f06b76ffc486bbf719644da32e2bccb81a17aa4b62abe2cdf9ecb5d221436bda41c5cfc74c74e81108ade9ec522c5225c9de778df7325ca2a5007f9d8b2e0fed14fc3543bd855ee4aeea054e0faf0f8106a79d0623410afaa9245bbd6140ffbf0669cad0ec5dcf8adc54ce0a729d67f1a58c1a0d84a65ac42f953f94330eb776dfea118d748bd21f04888ee9dd03ce082fb2ee4c6cf0885ad8282a71cdb7b647eccce083690a0adf84795bfdcb2d36a7b14757ca5a30a8f4a3434427662237f18c91506221d068f0e5745b2e9a2ee7f65f08bd80f6c7b0d8cbac146cfb88fa107840a6378e1da1fadceea725d398db3dcc488cba2b377d3193fdd7c08314bcc71176a319288b829cb0c7f7b0b858786c8ae0428caac933b456cfa5f3514a8438d50ae02557ac84b41c17b66a2729dada9bc03772b2b8a09927c0aca0c69dbb55ce1f0a1c09b71d9fb74de5e63bb52de6affe58deb33a3ffe06c41143023a3fb2112217d56ede4e0fa7b53c4790d67350002e43ba5e633f482a0f89c5c8d73eaeab856279a677b26b48bcd5bd3af233b3162afc9e0a448675cb267b78e9807c70ef12265162e1f32e6149b4f7b35a62cd508844e380772a89263e49dd7d66faeeef8a254f7baa21785ce7e96cea04d295df989cc0131d2aa8ccc19a4267485088d57d4d4847e40ff8645855b5e3f0b199b2c97e97e102df3f56d72ce134b2365bc9463f224bc8985552ffb214939a99f9c9ba1e4a020cb979af58ed8702d335f2fb7cfaece321e1bb000be70531c3e184c0fc1737e59c1f25b1a09063ae321ab3988cbb364b8e1c2b8d54313918699f30ce73600ec8823433b52c265eb91730604edd9371dffbc153e4c5155a657dadab1596837c2939159bd450cf5674fc38d4762faa5e1496c0c00d79c3b2838a7cf73eea30a8db00ed5ad40d62341ade8b82d7256239c293a0f07d399106f1fe20f53ea63d802f8694c95ef0514083927f1d0dbf1de32f239bed77e5c2f58c638fbdb3dd2978751b125f09d35c8d665e083fc7cd9aa80b58be181ce4d250a624bbe8d78beb279d81661e3a7cbf5cdabd75af9abf7e6110dac2df49d871916406fab00291e7c287925a4294dee6c51913afaac38ef74f75af5012887932584f585fe208e49572c2bb14918ac8e0b1cb490e4c8f0ee75659c21ae168a2239d7b0a87d42188ea073fce1f6876cb93a2066e7769b93d2b16953b7da8479e752ca361cb6384c4a2d4654aae9fcbdbc4e0c823fa7ffa0828bfe62add89854e2814dedfe8a2f2ebd48d91337918c327f670ac39d3742ca71562944ab4c44063117a69fc7048b20bf7c6ad82c4f6c5b106d1d6cc231a1fc05922e69fd0f3158fa8eeaead963ed3752c2a2eecd8d3c2e1678eed696b457bb9a1e62fc641404347407148658545a1da65cd677d4161f33b95fd1f21832a157e58bacee69e6058a496b56b67321af809045c65e6e4aa96e7aebff77673b9bd6de42039baab170a8c1834e073329156b001a7ad7ae8884c157c7e734dad10efada8b7c7ea3823890cc664aa56f68cdbea464c7f8cfb8242feafcffb3f1360c6a4749db332ae5e345c84c64a5982846b46802f46cc1e5bfc734c9ba8872c3e3135895a1032c359e81672cc077c8596601600242d34d7a3ebbc6eee2a4c3e0a89018ead5ae1a4f1f7eb7c8661709116b289fc4f9e51d35ac7ea04df07ebb5f160130b3b3bb7fd1cbc9a0149b79963cded8588571c61aa0ef57d0a972f74ff8a777380d95d39f26fa84a5092ab0f08a74a67652caa5debf82f40756c6df86344213bf30061dbba65bb1df46555664e2e51c45c8a631cda32b80c63a69c7d39efb14bc38cf0df87465b21b1a6c991f8062effb1e37aa9e7c7207dc7ac130d48e91e6c923f0f67bd67c9396ab13a7e77ff6fa377d3c0f809be8323d410b87743c11b84549d200ed21ad502f38c2da94414946c7a6b94758aca3457653fcf0472a14d1607cfd56174d67dd22f4417bddbb572612e07b01c8a60c635eb16ca0deda6a141043c17bb0fb949ad9515a67922f10fb91e562a7ae20c06ec0227500c5f0158aa296168966c9068df53bbb427bca7c51d1eb34b70fa40c059fe12033999c04d927dcf7a9cb8077c230cae61b0241dedb6c49d4f6b56d3bd6c7671709f0e1e2265efd0bc67cd74c3dfdf1767d6685f6d1eda48785f1469f1712439d1085a67ae4f6445c4dd99527f7275ec8b109e33124d88e7295695616a0862867e0c0a316406f2e2bdf3f58bc25b8ad41f902dc869bd608c8ee55a4a1aabd80c07e03a5be1c86e717f21967066e97176799fe84532f8d4b2f16f2049949a404c5b96d729b26a4838f2197b1b4666008496ec56cb4affe5849a51e3ae0ccbd81b3558a17633c1b296f4392a57ee710bdf3d4e3331023c60762e16b05937890dbd4998b2407a9ca4a94b8175e8b2d33f1e527ec56c913f47fc9db2a3b94cc51032cb40abcd75551947a9d45a85d636ea00ccf8bdea62d90db9cf3d107398c9b7ef7a2a243b7495e84f34fe748debb83818dbdb1d653701fd3a0c98bbab8430ce94ccb1e8457274ed55237e1dde1bd95e2b04f0c9b62685d511deec57e3c2a09489ff77e9e56e8907064bc1e01f1ea86ab341a956770cd73c995077697939a02ddb146c56d1afa794c60a0faf5566085a09f1425061ba54fc5a20744acb83966ad3726eb2214e7737af7b27da44be370aa99892bb213da8ff375ee2cf56b5a905c76c7032cffce4cd24b0f50d36e8fa5965e46979fd70e08ac1079efa438c92d3cbabf2e2e772af4c0c061d3f833dd0b19ecfb68e1e296c53d009357a6c00e3879da3b5f681b1b5dbaa7a6be456f1a57cb36413d27dca23b0fd03bb79abe2d83e8e797160a2055930c783055fdb00d4ec86de0fd480cf93d5056dfd3e2bcbc0279e9b916449dbfae285c1c631c9cfc6cb7b16f2e485e7aed223504fc40aeaf3c2ac50fa5b87869117a079959e528e1933b4fe1a84cad7888a5d3aad8f9b3111770718c12b0868b5d5b7ec6f3055cbb57b00f6e5141163d54a7a3b2d8efaf0490f57ba573be369d227908de3ed9ed7e0cd9dda16485beef1ea64c8258571a347b445123e39e9ed81a44f1602a29948bbf643d5ae30c9584fda32be441ffe92593e47b0657c4cfa26a386cbaad1e44e732dc012e6302ff935e515909b51cae0a8751074dee8ebb1df33d1e7f82010c1dee740d37ef6da2dab06828528db018c55600d588e5a94a44e025abf462f3b4c33cf20b9b0037ecafc4cf9de76a42e89ff8182113c7544ec1adb85ceb53992c4f11ae9873749006aaec1168c0ebcfd4e98fa39b9531213848c89c53295299e01a948a8b33b429df26e069735ec4f1032ae6d83939d1b23db7343cebf344281c24a25cf394885a766bc9af6caa717df6f9cdbfd35aee7280f20d19d29d85a45da98bddb999b4889fcb6c1719147550826217dd851eabc6d0859e7fd1f118579a33a71bb37315ecc6b2bc28233d45e48b36ef8acd888bef5a3ed0461bff184aa6aa493d99895241afd2b0fa88e3d0ce0dae1c203caf0560ed65f15b7c3978ad172abcf51fa75ab52788a4f5db8cff87640496fa923826d61a1c591b031e48e68ee22d5038235817eb7c9a21b2efdddefeceeb9ef50f1bd908aca8cc344c7714ebf9a9e3ddae49f7e9a47fc50e4f43f5ec9c956836557b79fe3281c9781a7f4e7dab5565e0aa6e700865d245377432a734c0b1a0f5fd0b222309903eb263d31d61cc9c03b3b2fba02450bb3ab7da86aa2a6da42a95d1a6000c7445ad3a71234929628012bbfdefc23b4d8d9db4a87256f0c43574613b1a9694014fa2544d212ff22b2f6e73a26604f443a96a1d54b42ac8efe094be07035ba80873b2ef845a43c3c59ed8c720cf2ab2b7c1f1f33e3fdf21c1d91a137a5bb168cc5f73d0c836e314585ad34c73b92ac5ee512e691ee013b353e8e7123ace552f25fe119bbfca191614aefe04e8890827f7848188e3da77652843a4094d1319113f68c613c2bd47eee01484e747b97ee517a1a75bb0418d0b332b6fbb0f75669483ac4cca78a7454066006e3b467d60e035472ffa87ab100ac52bf405912cfc51822260762de52405a70c0430c88ebd3bdeee825b86852c96885f41aef8a8485a1be821846269fc76776dee5fa28962d73bd9151234524efa1afcd0cc0dddae9b712e9d13e26a4e4ba4ed9e481d63d5a0033271736774073d0485e9d80f17e04b51aeb79a45c79f54baef23b390be4751d8f1b96b1f498dfe976c979fb095b88323fba3093ac50529c9d535a83b3863e822aeab43bd76cc96d00505dd64f780dd14058db6213024448cd44dac39c03f68737c5b9845b7015f8e8922e8d55b28bea1f5af69467c637a44bb9af23474bf2e3c64139730c718b89948ae7fc243b96d0669257afea519086fcacb5fd921dfc9bf3da5788352d1598d0a159c314fcce31ba647bd2b05995ab59d5a13af45961ad0a97d7d84024a7e72225da0977794d51aaa45b588263d7f198c9fe0f9788e737a749b4e87071a7b1f6422584516ad9b6c8c5c9850f1a8e9db5a51c88bdf15700527881e7d414490cbfcbba136cc165e18a4cc9518055cb1d134d4d7698111e8097028a202561289e389a87a85da96269b23cc7ecdc95448c7726aa16b2cf8a4a11f72cde12e007b4c9183900c2ab6feb589a152414306cef6c5ab2ec2a4b31f922cb39bbc6b34c55aad30f16237ad453d9b2bcf51646e00af8eff962f5289e3e2b4bb8b4b47fe9b6152801996ab3f9753be62249ee73218b3b8280784bd77920f027d5aca10e4869e5af03b8d0cb20e79c3df46c6aa306d2377f54ad29ac27437f01ece760e30a6570b4dc8800f19ea3697977d34aaab59611cb9f2af78716864557937719c0e1d8269597abec3de2215b6ef742840bc564b44d249d877d87d19b1f03eb05b0eb8d5a961dd1e9d2c710b415ade1d45dacb16a649fb1db69dba3826910051856d34925a08d9b9821c9dac22a482567a75a5eb16fed59891eec97fd8c5389d725b10f4b698a2f3a3262dcba3c202b077f992f7de1a21c991c414d54d37e700466d419247b3ebea85933f0a5bb57f0d491afe4a59787d71ea14da46c0e36a21a28704b78bad0f8741deb92199887bad59db0dd2bc30b2ab64224af8f36868f77add4c62cfc38f2e075072b7d709f358e4807a5a8c489177132673aadad0a1d0c86e8997d427332efa7ee6f4e9f95d96ba6ad653ec66c35b291a8b6d083c1fb160acb19ee73e05cfe848a38339fbad5fd93998b9aea4817ddc329def60a1064d7ea794293e877fef3a03436acd97a13f168fa8a1a1d7f2eba4faff31578071a1001631a08ccb8aa3e3c9f60fa128a539d5cdef7b747d23808fa9446aece88873c363429c8b35e58e568bece4aa182a2a3de0324ff46ac4dc2c7b42466d14140e01668652d19a6b4634ffbd79d3352b5b4c29178454590e58825ce8d3da2d2054ef13b753f4ecc4c3aaf6a4ba5fd677724a1e461963eb848226856c306087d7318d7c88454cb87708b649b3301caad91c1421f142f7f7c6272899a59108720056be080f0cf710fa13b738b0dbd105b7583cac1f93114362f562c1a8bfb4368aab75b4a4187544a598463cddb44b57aba569e3e4c0cf06ed34aebc6ecb470d1ed9c4c75466dae96d4c384ed137acd0357e30d12612ebaf3591adc3800d31930102a57f537e25e296515252be19e1110d929186f00ff3ee84fe386c030ccc0e11145480e6a7278db4cb011e7ca26abd861a7a0fd3bc6bc6203362c0336787d4f3ce925bff91a728e130135ac77fd7783b465cfe4228e7b71a49975d407172bd42c775d8d69d7e34df316bdd474a68e255f07e0c73b55483357903a76ac423391fa0a8ee12a1534543bdac495dc7058b95383f5f8b850e39d5168545a18886ed61853c73498838c737efd39fe67c6a25ab5ea748e33422be22487791416f5408c42465fc623c094976d84463efbe4e04e16d7a38ae19ccf3b94d30dbe7b50eecde56594d642b3229f08244853a6dd64ade91c1387099dbb762368bc9e465455623db892a0d41fac4c102df1114b10a5752a2adaaffabed756b69dce415a1abe35c55829e23a309b19cdff51dbbbe8f3404a235c6064a00e357c8190f0fd0a932de04281753c2453b2b79ce7aeceac8a33891d4eceeca2c485c9365fa25bc12d8ab64ca1b710e08d28804a93d3597d9bbfd1a7942501350b5d719438dcb64c28f6fd8bb209590fdb2785de24019ed5d5adf6f23a9a428067e4f765bb8ff279b13a379e31c631b2c8799ef41ba1053e2d1b97e56fe8ec9e4dc626baf72aca2e4568847165e922204420aeb2d95b518f671d277e6d2de19509e5492a08cfcaa88ada45a3ed6c05569a3d75c995f320a9f4efac99336df3d30c930caccd3b267e5e65ac676a7fe4726a3fd9b5fd04a08e9efd21cee750abb904604c4b544cb8fedcc21be6c52738071b877d9fe92a932f4f7ada7507f507cc869f3e73e479f52f1658d6cab0ccf94d051647ace896e21cef714862327a0de09884af2f4ab5c9861507d3188e4e8f9c27afd40a7ac9df2fc8ac5b8cb8d115bae36d740f79e9cfe84b0ab1c080d2fff4fac7baf12d9a7233f942a63b9dc600710e4c07a3a0968aced2cd49a807041efcacfce558cc231f06edfa112b76b45ac76291511b3cab5a02dc06cf75307ffc0186b1fd83b79c809d8f4e7b9feb47fe61bf09facdcd1caf56b4200e74572fc38edbd743c428b348b8b62b97a11a03e7c59ac7f2da7b76399903ee426c146673a464c8f78aff0c0d49e553a1ae70c097c5d8a3c9d07f3d0ec5f473372d9ec1c080e69d03fb459db2493f73c2873546ee7405227e7bdacc03a7514d78b6cd9888d44d8c626740c7dce0f323dd6ca0b5b1fefc365d6140fbf47fa00abdac93c109612b940210cb0bf2040be57206f5dd3cad3ab660d00422febe04850ce6b8351ea01c3e1bdeeb77c93f48a375b800884e86abaf6ba796a09441f0271aff17a5ca96dcd9e444db19569be1574dca1a70caa82721cdab380aa684d71f32d7d89bd6cc2b0561e7b65dfee6bd792f0fad47b308bbb2a7247b9aa660c41ff695c763a7dc52e8331082421fe95c0c0aa437b35ea64d92ac55614a6d6a1f9030d769d8654dcde0c801223969a90c191b6cfde383b6f1a787d1c384580593a7e60483c674ff0648d96b8d8f0501df8c0248b0ff40e6d13a23c21e22f0b760eeeb06439d3c0a0805e936c96dca98d23bedb831b33840743cd55b7bd83094b937894989d189a226efe9a13446517f4cf52df62e791585a4be67e289a8141ff30f0da6da351232d890f782bf4e80d4c1b3cdb5e02f87031167e45806646af3dd948b8ea085b2e2f519d4624f08e050839059fa6d0f4e78b649ede48c88bf1a9f4dc92111d0db212e62c3f818bdf7c48e9b4066627fbe41a2b48650311e6d626395f82ff791ceb5083179f46e6a120f2c7300f90ec02445ffb608866c847056af8fdb728f812ffed4cb95ec791f761cc505b106e4c108b13e9dfe81403089f4bb37984d18e6e56b2dbba073acd2a7330762539eecbff3a52dc4f0bca60c58324a4fa4715ef3be209f334c872e309b370bfdeb8d9b291145f8559e1401d35ab57de29bf8263f56df7559509db0cb0570d9fc7b15e1be9dcf6bbf049ed496450e40a3ddadab911e4d9795d0cbfdf814dd9ac5f08cc869a822867de1f002dc9f266eff5e73ad0f756fd4c6f85e80bea05e5d5dbc3501668bdbc851c6911bb5a72aa459b961d0bff46da896a83b5eacf1f17715ea262da97ae86336801347dcde7a5e52ff28a47d992fbbb8093fdd8e8c415b37218897465a5f7d193a1de6747adbf376cd8c8155ce00e6a2525b4c26e162f880bd325eef6d2a28d5b2080a4ba108e2651cb0e706378389e8ef303df6d32ed86a8223b6112f676ccdc6aaa60e08cdf33cb85a01b55a687db1b274f91d3024853929181f008f96ffa5fcc811f035114c8555ac54ead705cd9205703d76faeecf43dd7621e95834b98cd7eede735ff96170e6453d97a19c3c3fd70c80f5ee7f39f748a9777e2870ff4d647c3a85f34241d56c9b83082d6c575a94a53521a064402769170dbd4bdb8643b9fda93b3ce636e0ced90ad7de4dda148967d4adc8f7c72c28165889ba1490815bb022b0ca5fba1c289718102024a88811f0d443719137754c9a4c27e19b38fdcc50c7f7005f2465434b232d9980fabc854965f15c09f85d528f6a06c7578d4dcce5a65b53dac9ee14ded2d3e412adf912f4a65568ca41a7bdced563015dca14a2eaca6573f3124bb252d700a298ad3e412edc961a4685d75728eeeecf4daf502f20705757b4cb2fc88d0d39791ae5fd579ce70822dfc3d0e0a17bd4919dba8c8ec3b5be879a1b51d65d1e0c6ee36eaa11c3b7185bba7e9d3891c7bbcfaecbf38c4d02bd251d9ee33b00da473c2163e1e48c809b30b8ce3fb7c8a1207b2eae4856e3715625aa302606b4726a873a1bf9a3323dc7b139ccf1a527429879085c04b06b3fef8d568f7f11d380388d07dc7fa8ba4a9780c9ae593acbd8082d88638b71e4e16eac958b52fc87057725f2bbb94d2e560aa835d007952fadded08b47bea4a66624f6c7075fa1f20905b67f573dc484c8c8b2275ba793deeae22fb3f1af679ff593439e5fef6142223267edc6160c43b90efaa4ed646e9dfccd83cfc5b761e9e7a82bea0e2480bc75e1b0b13f8848f14c73e5ba985d58c8df40ff2833b489013339f3c24abd35cb60f5685b575d8c361b2c085bf03d28162873b8924ebfd989cf00fccbda76c29b218795caa4688456a7f4f819bdc39d592d62db5b65793ba69ebe3c0b03f05cbead5a0fbd2f4b5e85939550fb6a17a85d8a5ef663f243ce93fd1e0708220c40055340a5c0ccc11594d6892e4067c9d1fdc592e0250cbf55f72467f155ae0bec67ab39a5ae61f1991cd9fd3e1afd5e556e63297022e6f792169dbff0d39495326909c37ee90e3135414adae0eaee27e51e2df1d2a804847a33c1aaa2d49ef2c34492f3d8692ce2d955b4006998bb63f7edfb59fbdd6084b8707846a4dd82d1496b805866949f29b2e2d4f8e613aeb34ed49c53758cd6de3ec43e28f3d98106a9d993bebbf99aac43c8e74383d90f79787f013ce0eb69a193db9f4d945c82d8201f492ab04661acd26444ee2f906ef2db5b34ae7cc157e58dc5d7949dca84a0d4a7b5fb83cf119482c762374c2cbf65c9b8f0ed1206d0fce498a3f48acb7d29cb15aae954e36a4f7c242a98b6e56aa95d738c6d109af09a5966b825e43f07ff380f3449f118838406009e45ca1d6496d5db8b0080189f75a59a49a2d6ded00095f7e3087e160ac98560cb7aeb4c19371283053a49c43e4d99f062a2538c73b52d63d8a9092caf39e87115d308bbc3cc686d40ebcf8b0ea1fad1972a8e26ad4b07e1a54cd6edb696c2dfcfc2981faf871850315845ba5e7a504134f78f969000b63f93defd42d322e14f85190695088e633aab24e744b4e362572cbdc450c165f763ac7164688ce7419810e17cf62dfb717c8b933864caef9adb79df939ba49de662a4094debaaf0119409958cf653a80e89d261c0607aabe55d722a79039766c642f7ddeb4d5033e54b7579f32184e1ab513e17265611cfceb57b42f261a314a96dcf28954c20b27afebca3733369332398a828e3c10283e311fc9430362f6369f784edec39c394a2ca0bf9074c9b0ed0aa3b1ae3b002f5a88999778fb054849e685179d7b4fc99c9fbdb620b8ca5874e5eee0fd76cf825903cfea7b16fe8d60bcd6699cada20d2f806c78c989eef270db50f6afc97a6cb01eb887c3313290b639ec42415ad2355eb94aec45254b7f21fa23cac3dd11e1556c6280b0d722928fea2ac5bca48f79699634b4921b292c60df5feba9e7ea3607595593fadb9c60df34705e05713e18a03bef4006d1b55f1031f6fe70db2eb491ab5dd3ff64c4c8a4589cc4dd75bd7d763961998c10bb60ee427027142e26c86a680ef711902416b4cd1bc81db17f97a631b1e3e97dd7b2ce306c0f4dde275a2555e310a3efdd23ea41e2d587fc64460730d6fb87b164201e8e72c224ce9d11d1416751a6cd9d7bc6b12c80db3f605b396ec8a45cd0a0073fa2e48b5d791a19ffae4bb39ed8426e7e834e714018f2174d2247d897eb8ba4f91fbc997c761cc1586f064aa51835afda6973bc1f9527e083cf4e223168fabf1bfff63a65de4487e2ff9fbb9e0e9669222b821acfea93758967f3edad46712731a6a6d3b0eca6de042e0405ed4615daed8d5b779329b3db5464866327b606be037943d24a93777c5656e83f1c82e0b2f43fccd56a8a118d4a8c21447f19c073366a5a7d01cf0eab9ddf69c2fec4f4b102a96b6afe55b8fd708e3b6fd57f94c6a06a26033ed4719d4bab5ae3894c541976183186a263550eb307502fd6c7b56f9d5be6fd608f4c7015b3a092899b695c766d7902265379f27e50754db3f6de2357395997faa2238a80e4b3c39c75cfffbb0bc940f3da7d7a9f16cd6029edfc3847fd272fa86b0e35bc95e0906ee72d49518dabd3a8dd692f47e677fb70db060a2dc891a89b5daecd74680f84df0d34273375765889f7acd691371d8b3dee218bd3d8addbb862a46d775664b367499b79d014c240061503f935e53b7ea8be8cb53bb582013c0a7af66206843defb99cd1f07ced71cb121d156f144ec8cc2b4c7fc8d4b197fc95cf97ef8119410655190b1a65f471ab4aaab4f146104459f8504253029e6ab23b8a1753cb5f5a1457f321579007eb90842d024b0c6cd2bdbb08795c32b8ea30f080dc1d54d4519d65e8caf57f2b8ae4d5a65fc18b5a6cfca3920cbdd9fc827308532c4dc7e5f19a28d14a39d7131364c491a7a2f6076e2b0cea3b977250338577fa911be5bc12b657d7623e881010312c8c7212564f70a2e890607101e865a3da7a200e4f7668bccd9cd4f9482dbc1f2e2152b696ed5223931194f35cf97b4ba7022578e0079527f7fa3d737920365ccd2186ab486f39fcadd67428bd9493d0a816c944515c3626e71c657c83db316f0ca6592ba3a1dfff1115a974144425dc6c100b9b298eb6b255765c22c1d5d134058b679739a3046bdaaaffc149ea3c7d39c9240f98e1fa015240f0533ab1ddc4426b7a9027629fbc8bca32d73d99009b0aff6389039ca58000feb32f9bec14cdfa6c137bfe7f32692c2f2d5a98002d5c4e03885fdf0962369c77a5dbed3119d41e615b56bb5f08691c5f158b4f5070459930e5ac967a24b43ad4dcacbcc10647a5ebbbd27f13bc0da8f3c337e3a3d8a2125f0b7eeeb8aafabe5183646c5e82091e7430b238b52ec03f1b2772466eaa74806de54a76f3b6b2af76e6d98b2e2d5493d1790d85a86727e98e4aef8d35548d3928c9a6754ce11711dee811dae45e6247597436e61bb8052e0e0800ffe9273f2a5a7eb0e5d1cc1c53979fbcab0fa834555ffb9a51a0f0c836b31ebb96c60536014f0724020418283fcc5da33183a1824971dd313269f45da31d265b5373213e979d3dede6ea5df12e1d3cc5aa6b072e535038a1d24f363ac9b33045e2eee83089b6ff963026b9d944b88d5f4c2fe5173c5ef179802b729ebf2088e2847cc4fc879a547d58332daad43734e31909b43fce7c4932281c7adec78ed851c3f38359e57ca24a0a663de582cd97f6d41e6aa9566f9c4747ded7e9140317fbb42d84c636a470bbb9bd0cf4ebf48f9fccf72b3748bb1ae7965416fc2d69c6a40b49418799d1c25dcc3f60034efd1f5ef21ff79ab32f6711ae6d481b778c7e274e39b958372f07e5df83f6fb6e2c9c30d486b63ea920e1efe92ae144500fe111cb780623923ebbd49cdb491ff8a4e277126ab894ba980d72568d02f4b00fc9a718db66e98fab1f8d046778bcfc6b3522fa4b5f944d77afbb855d93e45f859bfb5e51b49c69b60f0fb414f303b8dfdc822bc48e2af66a638d3aed5993a6e2d480d744f7f7881c6e645b898cd54162e1600862eb9aa7f699e47a5ce1d941159fc536298f8a456c68eeba2a3dbf8da7e25d9c2f9cdc30a911cd82ab48946cea77249331a00ccfa15a09d204f9e2668580416628527ec9e741bf29be9c9b0215c1a8971eda45f32c021f00bb8e5897eceb5b3064d472b7a97d3d9737b1f4771045544a9bb6ca3dab01c087d14c9daded3c6f2619731391b4f2a9d0cc3772bffc18770da1b21fbdc839a2fa52a89fa054ccde6236b6358a5ea3a403c4f2a3415374907731469979caf2b97ccbd28df00258e178949520f83a9944007b73b70545ac698b2a43f1341e8bcf50edb976b72dedd5365074bebe25f91a711c902f2ffacca4d940f22c554cd3c79e5a90733924d64dd518de82e91f9ac22e825c729cd968d9ad89085e7a301b6b0c02133f12deaf6ded0a8f4dea76ddcbead7edffde81f7683d889dc57976b1fafadfa0b43779b76a07b9ab086c76d0153e892f2d11fd5cc7122a28c75325e2c294d072d28789725a03f0e3df5cbabf0e2aa85c98f205f58d2d1e48baaae726be5fbcac52bd11a6a1075931ff16c343f9d078e0fd60be4a1e4cca3423e627b6db73407b5ee5dfc759b7fbaa1953bed6da5249b5857244a4aed30a8fd95805a6a272eeb66de1751077d8d3a6546298814e405f0ecc43c624d7a4eca6c6248704f3951cd2f5a29e3c1ed66ec1d560fc9fbaa3013f1596d0aa5c8f3fec129e1ffc9fc3bf640337247f0676e1dc178f357742fe5432b7e54da721d8e30313e3401c7c7d59c73d432f4f6204db9419d449b045acce1582b0adf86004d4c7bf8c19e0520d273e6b3cca77d7ce324ee7b27e4219acc9bd302a798187a96fb69fd174b11711bce635a70add317d0564d61747dd1fdeb43bd81903554e8136346061a2385ab9c4a94f95e89f8627ecf947648303d1b3d525f620c234b9862137d41a4eeb6c39dada028d335c7b16b254507fd302a17caae32d58ed97740b536810e31711e810f0dcec4ff4a1602bddfa4b59f3016c130d80e7357b139e18507d2141e103ca26b17c875254b17f9d5a7084760e6bda01f181f1cfcfbf538350d5263980b71901a89812e33e0f8fd1c251768515879a2cea101d87ca23127a9fae5280969c2cae856a49ca3408b3bf62a7697b94fd6b44433f64cefc256b6f534c258341a3c7545b4e7ec0ae1808b2ab79a1b09967e0f38d187d45afc55b41ff328b5c67b9238ce1a90a08941dcf778a861625f4493f044b038f946abb77146467e27a24ffbe12ab22f9428e60cfd115c4b1d2305c850e2f0ccae6c1652a0f65bf2e8932463f0bef0ad3a393658e2c7f54e41ac4b4699461483d63aea9544b94e5a0baa18e4753ce82be75394bd22a37db33bdb9f5db83490aadadef4cace8222bdcc7dec9ea2f0fdb3e72eafeef09021afc646c9490532c557a4f7b80bbe2ca3819da04bb7a13d6c988556fc9cb5651d15f9de736859bf6fd4acd039af943a1e1c587dc2f602e7f8ca00c47ec2ec6fd03a1d3e1c10e9c0df5a84c85abd7a90bc77308536daa780790239cf5c34a1f38f8044b82d2a4f394e44934355981ffc9366a58748aea6814513484b62962cf67549cb76c8c935154101d1b1afbf06f3fe94968fe4b80864ed2d38ed69f07aaf56989957dd332bcfed9d5839b5c21ac7b9b6bc119e471a93f676d2fedd44bef26262c6a3e45dd845a104457f095af01644dc54d49d60f40635db3fc179e3e6afec2f9248783d0eda819b2aba1f46b482d44a1ed658013516f7da81381caf820128e479bf344d44a95017edb49542817afab92814e86a473102b0faa3e8cbe41bf00e0c9a54f49489d746487faa001ff3847e5a2edec2c05bf1d3ece1314121ba5cf468afd02b3aff86b9ec6c37d8dda6b98294a2af1a494bd055c838b565a39095034bc16d88b2d362660fd1b38ab84958164e22a25345b27e280536846329569b1a9d256d9a0057bd08ded958cb99f1c5ea1f5b2145c9511203408839124478fafc7a3697c31d8881f1cc45661a3aa0d04f8f8590132bdcc07f10fb88c80c419bd10e58054aea0efb9f8918560e049aa3bb9caabf5c870f542a92fba05d77ebc89ac450d71fd79a495750d239f0dd9bcdb43d6f2679dd09b01858d7a2bfd58db8d04b954056fa3470a2030730d31e3594bb6430f7cce291f923cd64ea4bd985af6318898ccd98ea33bb6cf2c9aab5680ca22c1dc2a79b149bb5205ea3c785af55255ad58d9abb318f334f363459f36e40c9090a7aa9cc9cee0c53f835f4755ccf01916e6cb11dc52601ea4f769324ca40a79dfa6e147ffb75e3050c3039eebfea692dfbbdacf225b47e611fbdf61a9afdd762d6d977bb5e86d04dc2484b2f5510105e6353d7e3960a2fbd78eb8a494d59dca1e973e8e95f444190db1e4ed950e71b9ac64eea56a04eee4df63a6f7e5e75a555f66595c3abb314fd313d1c3a894a55f75bab6e03f690b67e20f0254a55cb688b0bf9c74c616cefd50e470b7cad8d8ab609314df7e2d2f7b45f626cb5af8e238e2c5e2cf60153ff9d5797060cbc0e6427d3a57c28f2eb99f8dfa80784fb94b33171e06ef31da54ebb6a2a3b66a69f28dc8cd9e0698f488d52af6f60b183fce7815a4932c73c79a198ae37e7ba5754f38bb03cc0b3740871bfbb02593f4fae6a0cd470915fccfcff2f103d5d889d29e83117e67734644a40fe2a86583f2bb6d9c7eee5fc149c0eeee064a8277f5e7ff0bdb35b1ccbe156d706af099c3b0ccd24db31127c5a9c34fdf9c950722257b5da054e913f6314a021f61b0bfd13eae66d5f1692d04446e2e8b111805ff56c3544557bf1b4a2cc19d043770014bebccc3889993263a7785a8c1758e16c99f0161dede678819343211b055af181f111e2cd3367b19e57160f4b6411081e919614d1cecc8f5e2a6aad41624aba4243f36b0af58b7cafa3a6e64569ca3d94d6bcd01e19dfc30fdcdddba021a2f1dc439c6babcd949277079949bcde469bebd00e58df550bb3f181d59236c49d556ff6a894980a1d402f891ac5b22039445493e4cf9fdd05699f76a8d96e480f6c6b3f0bf0a96b606380c9deb449cccb3a1deaaf2b774dcb72188d6f8f5de89f9fc14b62390de6fc829501e903ef085ffcfa38dd70b0d638d2754e9cdb95af50cb2453bea54213faacdd6386e973813858c8a616cf6b136c26bdc332e7435aaff2946037dd96529043586474a4caa28ab5ec70e2ddbec9ed3abc6d0c22b33ff4962c61713319c1c133a9d4b531b3fb49f72dc97dd3fad7eff9c02157dcb02c2b568d9695e8bdb51a016ae86b29e14fbe01ee02eae90b90cf9b40d8781ff6785b545b4c4aa47bd9f3b5b833cc19da3d6b02c0d80c009468eff3229245bf85610e8a3e89a57b9b952a13b839d33e98a88dc15c478411b409ffb6df1c0fd2812bf16e087b4a42a8e393d15c007d5a10a7d6bc5d2653ad62f9c27cc5094ae653b2b607982212a9724c55b88c1a55483c275296b8f4390e66ab8526afbebf2f26a186ca5a5fbcad14250865bfad915a62e89d33f977f104b51aceed1044a4f4461467654152f0162b57a1f9a9ead15742454c468e7c1f9af838eac5587cd440a61058b0309b35df9db2e10dff77ff3972bc3201688fc070263f1c06ef71a65f43a8f9ad3128d51a370fa7da0745f4f7d7240ca284caa5d2412628290ea910aedb35d995c9be37b492e2815edd2266342232c7c088413fca600c870d3a2863af2fe38d8ea32d727f41afd918e9d41be857220825d2d30cc95605318ec8cff3a607236af930d6ba29fee4dc3e4c46d36c487b51017b373a0735b2b77d3f6e439906a295738a7d1c816e83a0b4c960afd784833b87766856ec71df438f5d8fdfec378e3f516cf29bf167121652d86484190dd95721c5ab4199a1834f1daaa0715a778ff2501ca760ec77ba505eaf580e1394ff2ec6fcfb296d1feb250d7a9c2a39e767994493f68d820b9bbc9da555997c7dda2f6c569b2fd2b1ba00b3a2a2a3c32a7cb11d95e5de8b4ad0ef8545b0322e56aa80aee44aeb3e8a6d096f6e0dd60a7cec8fabadb0bad6f42d825c828b7e4815e83366e5af3a91a3cebde3baa1f6be80b3a61958a5dc0d33d98144381a57ea6a0104f8f738431b06034ceded374bbdc571f8a58a9be8ebebaa5fc58bd470e7735c38da4a68ec0b461f32dfca0c0412547375699e359453a9038d57cd5b05b75c0e5e277c84563889e863b18bc664bcba990bb76031cd6f76b4314bef649a04a2b6271fe98db225ce41652cd565676b606453f5a4b1ff8a7fbdda411f66c0659d09e5f2a925982222f22f74944ff7b1ec37cb1a6f2ca13acbf26c0646d9b9bfe207b2e0713406bf2fb1b6ba2faa85a76621afe508ba850e649674af18430ec94aa97c112d4813c0d1e5efe95d9974e8069adae01cfced6ed0d0ce807642fde69d03c6b3f8593d92d781a641802eec2625f4ad28cdfb3b0f61b3a201bc31f8d3a79583a7c5517e1c7105da5214676eac84d4fa85ad6902906d5643a289abb821c389ce6a288fd188b01606ae99c27a38d2932d189b409ec601802f2c6eab0840e9b6b80c09aad65fd338bb8166b6cddc1f109c6b022bfc901661cd0dbcdf18905f6ec717bef914d06fea758155ec6b6de75fd1e79f2dd2b40702c90dc0b5fed7c065b4bfb91b7d0534d9286816ba5b8a69e4cca46c2e29bf26bf4614d8dba2a4dee4451fee9686c183b06b5860e12a94a21e53961f350de4439e2c6d51a9095fd7ab62247ad7609a5f53684c92308e9dabf20c481b41032edcce606915dc72a375aebce5e7ff6e38d204f30ede66d27a51b9a97da09038c8fc6297c586ff072b77160bac399d9744bcb906b45f3a84bcf580959a5bfab069f723adf1906ee53fabd61a3f455339aed1de13afdeba84b512740e374d55a9d997a8b5aeafcfadb40f3c02ae68524103db1d5148e0ddae4d32a97c9bd738c66a06fa4fbdd6a7b35782f594e451bb656b9241cdb4022283d95079248edb85faca2830a399b67d324a6bbc734c68bbf4ec539ea3c5e54d50fd5cd457bd60a39e2bd8171ad54f62ef9b03be651780a031cde75681dd3e0ebf08c550dce0e575659d20c21410f212c49a3a643de6817f3ff6f44ba94e5cd509fda80c92faacf25cd33ce8419343627d5a9c4d4f094dc1a51600434a922b48c474666d4d91c883aedd9c4f147dd6d7c69577af4529b578607fd18b65018d102471c412ae0736d8e8dabf7d3a12ef8caf723134285b9a2526aa574c0d37fa752a9f4f6757f53b7d6c48c250595993aa1997d8cf4f4c49acf76d82ee6a14ee4bac7811936aea03a1927c095ec1bee8ee721569b7ca7a7c71554c59d8e803a6e6a0f0f88508ece4d09e7a8b964dc64d175c5503d00afa589b8ec4e2ce11a41da191d96a273d271fb7362c7bec46c1fab08427d9a49f9e393f8577358cef7d553c16ac38d89b9b87ad985fde97773c911868153e68225b70e9ae31829d1d3a11b14327cb1fbde3ab53f7d76df9e713075804b58f419e662f79cb2cb607fcd4b6963020890f3bf48939da7d1807acf561100bcb30f744ff4dd5f48805db943e11bac0a59f3183b254e3bd471b023df47ad9b8d6446dc8a693136d5e6769d639e92a29b03376b4ef0e171da35c5489d6b151d7ffe4ff35cead9feb993cacc54636c7c947846071bb85ed157e2920c70193b176c05fb43bee15ab0e02a05fce606fce7ac8917dbe9da628aaf1d050411ee52bcc6c064a31aa60ee331511e6b2dddc01be080b8a43e9578f180edba8fd8a4648cfd6b3f33649695735776693b7ea96b5a0afb851114b8687a46b7ba8c12afd7db7c9827cdeff10df01d7ce538e2b94db588ed8c5f875e7bb5339b584f078c8380594abcd6293e16f2614d0b6eaeee67fc74c0b867176bdfafb7a521703496ab338266300036b88a2581a55945a80587e9f1c4edde61cd429b91fe8fcb535856eb6d6a074f21846f677ccd5735d3651514d1c58de09ab6a7031473c7ed92abad43daa2dd9172b7d0c273be4a964869cf1507b7f29c6ccfeb33b516311f7c63283d21babd2a4d17dc92c89337a1614b663ca65f2a7556fbd603886a4413314cc8fb0b0e63dc31c35ca436c52865b1112b57a26c31f2c1bb93a978d2a0290b01c929554e40937f9fcbdc31ea03736b14c741fef847e237651aaf9c0ad7bed8e630e679924f2608667eddec0bf26d1689ec08af86c63624a36e56eb603d1dc304a48bb0c42de3010a62fead1b9877a3fcda1e40e50479d2c9aad801f031cfc290146d90de0c0844f38994eb2fd320f48ad52dbf35c45c746498bc1747612babcfddaeb26d5564aaf809d1981dd12d92c53209afeb01fe839ae8e78bc71e9664151dd23e2f8a718bbad8335a7f0dfa094df3462becc83b2d484eb517d5a858b6d395d35a9b3371fb7f0465c36dbc0f61146dd6d314e93b69b550b0660fe619a877d35951b2384a219983a57e82b8395a175b154fd2be10f66ed83c85e5a3932d6c7485f73bd2761b16597b9fb05c95ab4bf3081b72b5a89156872dd7b97fae54576c8c3a90048ef23c697788bdc5c607f99dbdac161e1e122ddb7b935780b86cc95671d12a24c97680f312d0d37c712a91a0f50908e4f530ae331872f9deee2129882fbfd5fce88b77d4a1c76b0cec419577126052894e238115b1fb2710f173188f91592613198993509429e1687d45d0ea81c4d7b39139e6910dce801f416aa19c6c2f57d754bdeb2dd37451df8192a0262e88744112f80987a5f339d7e5e637ee91b0a81a2edeb222374e76e66a9d2da95ace50a1d642431a4792014f81b77b7bb1f0f571914ebeac1b90b3cd0bdaf215219e40d4e3e54e99e4f70e32c6e605751102debd48a583f9a8d67a50dc47db2db027a3890f5fa18bfc81388830888b902716156b7ac6285575fb1e09bc4eeec93cdc5e37fa935eaffb93ed02a0bc878f4c2f271d030a79d14736154642e86ac050120c625df1a14a0708c3f2773aa87c1e3f15c157108530a99c96636f4c322ef00c1a8ecf6c936eb1b41a5e8710ab9aaf3b6337a4d3f4ea26308359b133b0dc0e597ef0b6e68207736fecd2c9ac97320af5fe7631ec4224ca251781db8602c30c7abd58e8686da50bfb885f88db6354c746866c0a4c685d06411fe23f9c040062795731b6418769ba63f61df00c3a67535131918586d4b874873dc3dcfb85c95f9a2fd026d83dad11042ed80c8a7343b45e3c01ccae5037a850371ab36ff91dd58fc6e978327f8648ae8ce92f13f351190d5f76e5b3f7197eb760697fd70b3cc62023aa43eb9cc5ff52f6c06b16f2af090f63eea09bd3914384e9b3a57ea37633c0fa8b772cf9ba3ec4e35cc5e257ff93d2baaf527a92dc8b24e0cf4e5b604b0d438d74740ea92fb4d15d4c692128e99f5653de645d3fc1d0484a0b1b7341718c422857f8b719eb0e9dc2907405c90bfd02e6a1ee97d4ff37c972dce9a786897c79bb9f1b31144275c56bbf33416abfe8fa244859a4053dc7e97e58dd77aa0874d306a7db915035a76f9c311db468b30247968263148cb3f59b57b01a107c6ff99ea526c80338d88b164527144723efb42a23ea73abbd70a44c777c7a7eacb81b9b92f775ba7ce107ad254418109f388b6ba3bbfa3dcdef7f31ac57e9563c952801e9ebb041e6fe66a75fe18f758bb1788a2bef1ebc44979cbc7ededfd84d97b019cb12024232a02cfdeb3c45a4425bc829814bf7dddcb0e23b01be603dc3fe52710f66973f96cdf0bd7ab3ff444c197dbe22e23de45c32ba2a4c5705233d830dff960fd4e9987b13e2ba2a28fc791d7d67b455ae3f43e398f9d52bc6b05031cce132eba97ca93f4633dbc26459e0ebfbfe2087fe466a82261c8dfee26f4a919cfe7bd8d4de9f9a92ad1f520704137d16a2098c2198e0384e625b7fbb7a4027f56ecbe6f49fbc0619bacdbd817dcd9b1b76fec6f07c35f86bca63fe04161747452acbe040b4afd969cd767b780ff65d9f35700000a2ca88bf93c7d77a48bfb408f2c54052a8a5f69e37df2f0556cbfbc56a96db8d50612f992f148af36d695be382c88286c42aaf980e165ea68c5e349f94fe02541787c5e06dfb57e9aa316b055d2cc4d87da374accab624998195b7d18a118d754ca1560b7da4bd38a92c4f5eb20e4c34979539402ce8277351cf03c32f315c2b692674f21662eb0729e661a15728f19396a3d2b8d6e03581797dbfaaa41f03bc26eb5aad6d5c885c4fbdbaa8aa8ecc474c632baa514043704164c5d706c07b96408dc389f4701b1ac44c6738962624d90a79da6eacdc5ad8d7cdacf8c8e8abe73d67b9e71540aafb530ae28f9bea57fb8cd90b0a57673f357b3721ffb2ce61d9ca5a8e9e228375dd0f4044af2a392975e97039442862e6fc7f1374fa16fdf35fbf30ca59f6438dadd20fe5249fb92f8860e7b74d108d2016a599c797b19f4c8de669b3c3d3be7e8a5b1acbb147f67dabf6e51673ecf3cd2840230d70b5b765ff8ab871090f9dc88160afc737ecc3dd5f8fab5f1153871b144b5cd1967e367a80707960a8c5bb1f3eda0fb2705159090849010bb8fbd0249b3662498fac2c8b8f0ac193fbd0323ccbc9a4c0366f09fab0db34e6391033b58a2a601c511d0d2cf91221c8f6b8cbb3ccd749d540b07a5fd599626214825c99d997a500eef7cc02b03b60ad097cbb46fd0da81dd6a76e39c8df249cdced0b778c59b1075b3a88b925a5951b5399b4b54c0f199cfe6951b837996ee71cd73cda3b9a65b15aefdc73a7f460ebaa311e098361c1978e86355ef83ab1ed7041ae9800e42f79af635846e308afcd0a79c5564a3716973e769379b1afea9d2f389ac0aa4a72964cd2fb179ff9f749e40522644bafa5a8c12d4c94ed6e5ca46623e81d09331eec3c7e3decf8356dda9e9b0d8337634a7d8f99ae13d9c8168d0c869c5207d2b368c8ea3abec28eed9692bf7953dee548bf1bd1d1c0c24568cbede45fd1ab11ac893e4f31f993451d65646d70f4362921231c4f1420112e995d94615710574dd88d4d3eecb1a32bcc940bdcd497e863576c85c20a82cda2aa0c14b2a1f5b6b350394aae1d5f296d40ce40350aa820078ce2b297f5ecf63002d53bfa4273ce59a0417f503afa1812a630ebf773d17fc0e46d5b617490573aeb858d2bce676c6f86b7780a9fe00ab2f0638a600592ac3a65426e98b10dc1987ed99b34a7231f7608dd6a0046f8eea14b0f61c0644cfb5a4e2ae70401206c9179370a1ffbdd54f2fd8ae2ccf2192525bab6c928d7ed511c6d2f29470988b651a578d38c6f0980504c9732ab5b7b32144176814bba025dcf5b7d71b6e47d3f1c25f82f4de1588d2b9efb8aea13aead841b653bcc997851eed00b576b3779aacc460483f136e5fa032dfa3ce109c945e9293cb14d07d6acd9e023f57b91769b409bbc796e15ab94f0be507796fe89eafbe82a336bfa71a5d229f0af1d4dff86fad56523592a6fac5148faa9594974dce5752208951ae7a523c518de81cd57848bf8f83872dfa9c39d9b9c8619acb6c07879a6d2ff7dd73b7ddf3479ee89211d2bf14154e97daa164db94eaab566004e56fe3961c26f898ca21aaefbe86fc512f71e13fc98a91554d3b84a192ab5664beb263ce4d058b7e61e075b90386b7b1290e385d8bddb21d2b86a49c284508db6895ee9219ef23e0af6d36ef38347b6045589cdfe037e5af0d1ed8708f030f12cb3d833f35849919bb41b18cd2ed67b69af09a7243ab8bdf35216d151173b101e1d9197c2f03a5c8b273eb75f04f77ef1fd59ec0facfc3eb157fb2f61e8bc0db5b6326c820b3b9bf23ec095cab64a498c26c3bd761c58fff0d0c3ced444ac84865ec5d72136d1df707d5b1719316c3743c993ec958d33b8bed68d8602ca75328350a323b741b7329147417a55c071571a8d1d93773c918a3711f4034e85e3e56624005a60ae2bc496c516b71aeb523830974100db24519afffa0f1f39faff6e520c68b843384a3558b10cd6dc5efb731e2a91474e50323e5ea5e1f94fcbfc8509c3ea9bd2bea6cd681d011500e2f43924f8ab4365f3ae3b38ce99ffe0e5dbe1fcdef512929872a14b2b264c9a247503bacb2e21a07a6af0a2001800411806928e66fc1440474634ef5887a351cecbd37042f6b0461dfd4a8a7fdb05e2869d625915e24a1bc8ea260020085638b263bf02914e1e6a60215cbc4ef96fca47a1c416cc1e5cc63365fab470205fbad7354bd6b72ee8b39c0a0b55672cbf4aeb6ad5d68ecf2972bf172b313d868b0c8e3b3b3131de1c23d7c718654a7703a79228f6c5e30b80af566f35c293ebdf014bf3827c33f17c451a2fad2de3441bec49742363d1a6733c83fdf80de48b5923b908d6ee3eaa5434a927daddab3cb99fcbcb6ab3338bb44e3d9723a10f5aa7e2e34885994b0fd0aa432289d7ef399734d15f942bef4dfae3aeb3271bff68a07ef44fed3d508669bf4558c5dc3d2f9e6f484ad98d6dba22a9236dc4a374fd244fbc39d0ef224be77012a26221180a408f781cffb65480cd12505d1a8891aef8b21c421c7ed2d9fad62082cba1cf129d0cd5ba3043fc8d929dba0eb3745101c7500522498eb6c8ae4701ece38a0a32564387cac8ad80ebcf0c60b034615c51b840e8a768288f986bb60fb3739086212c4339fcd5770f58acc517391d49174ae85efeea47646982b04f4b08482a4cd7013d8a3b3426e88771dfc2c7bc39e38440b8449e1fd947e826ca34c431b5668416df7f148883052250b6cae6c1efaecd76d8ba0a3751e455bcb6a21f1d8142900f92d7cbaeb4b38e258b5d17a501ef9b15b03badd8cfeab496274ec20d5fa7c057d79bf5c29ddd96221588fe4560b37447b2f9608b168c12cf741a1c428803e8690f3d5ea8b1aadd1b44ab4fc4cb4780361560faa3ad4c9f28d2bf56c1580bdf6e857c6c5be79b53d011899828b1bf45f4003d44a96e477d1bc9b928db539fcd3bb06ee15750ffc0d29fe6852941a02db5163b842fa170e04382a83e7edcf9520c1b0b3cc49d70fb2c2f5f8359c8cb4fa368e2f99d34febd9cdd8bbabe300a16a1f7afaf09777fd6a09328d16b160dcaf7329ecdd81524fb6e2e1edc98f382bebff2637b71f983e3d002d8b712e05bfc079e3150bef007f6c94405842981d3e0ff3ded811f0d4725ca4793bf03821e3251cf10bd43450745a2880ca303490cd66224d56e3d6aace49dc4040fe4a513992925adf7136ad6bd58cec007e1fc7e7323a5247e945c6f17a47688b489d08a4abbb9b22c7200be088f6c15e29c85468f3c6ddf0772a6a1f24012db366e5d0f216891cee8b984980a2610cd731762d5bf97554d8a4681e0f4b5bea9e36605713e9570bf5e04e3de720fc8a9dc4a0afcf215fde619c75af005ae540f9da25ccd8683012ed2bade53ca020319919c90efff0d01d7c002923f1860f324546b680e0adde9b7bff4396caf18a0334b5f5f766aa34b9bf030abaa883f2f10eb4b1d2bf3a40d065b6e35b0a05a92fe67defdbb11d4a2eeed4f3ebb7ad5754ba35637bf9a14f0350a954fb3b28b3d6042ae85653e36bb587795b8af691530f7b121a4e73c83d0f2e11c7a91169d591d5c1ed36825027d5b307f558b43f747ad8f2ff1388197c94aa4379bccd51d7f6da0d65b9f7a5b385115e15d8dbad92fe38b9252fe2d75ca040249794e61519f1646092a79bc76241cfe4517f8110c730a0a1943475cb143d1407c9fd7bfdf5699455a9ad4e4deb38b0b3f7bae73333543e2e9ad531ee932711092c847723b991550f649181bb804c79ca75e856f87720a25b4557e56e3b0ef5fb4e2da21dc137a2eca4c112e2b05a4ebbd3dc1ad46e56963b171c9826098b9376fe15df9ee62343e3608c388604e2ee94d95f3950a80b809b5d1bcd1789b620b75faa54a612b5ebec7011c504eec5534c0ff27d95a0220f35562dd8862b8e0a3ff842628e7effaaded17ceede5e0dd6204216752275ebea948556854e85a6afbeaf8e239e05cb58ca5b1578ef5cf8e1c27972375179bb49ceec8967e219fc52d70798b4f1f4caeba964f8796e5daf5a44fefbf5333ac5490048a180277a7b30d255498c9e22d569a0de90a2b8c2d11c9763f5000c18772fb46805da6a4f487888e311e62498b5f91210ac771ebd9ca0b32f9d1b70941b4b2febfd2768f656456c545e7cd754fb62902e026652538ba99fb90459a136e89ef04e725a6f268a00fd6ad6e68f555fd5d8f062a422e617929ae7525323f22f2c5315b9e657029e5d6630fd60cdab508d8db50b49af6111622334ee30930918286bb5b5b8e3dac38f015a14c629ef351998e3ae96826030733c3d2a629480c418df5e5abc2730e0e5935b8c960a416d6e5ea235687ae37ac0f8835f9af065f41cd90707acf24e38d2eeca01e40f8939f77310301255ea3192578fe625f34aac44826d9771caf960d66a94779e007eb2b930bc9c6128f03a58f3bd54d71b780bbddba962d74debab7aa6e7d3f1129398e7f276dead3b6b987dbed3da199ea224dd8e156f0d2970dfb39f67ec45a465e2392ae72ad3137eaca2be45ded4fa04e1314563b899f1363ef47fffd7b2052d4394b65b50d5229302c6b648b2b9a74db3f7e81d0ab64eb320f66ca442ae2f7c113e364e4b1eccfc8989e0cc63706adfe4ea93effc8d72bd6a4c881210f2d76889212bb7e83849bc8f9c510fe77a49b8908db733c54e632d7e9df1720119a8a5ed9fe7fbc668631d7260b2a6973f0dcfae5e7902ba6bd5704ffaa04cb0af74feac31ffd8fd37cd329aad2631b1b270092cddc0ce0a0e09c8e9d38e10ef3901e97fa013af15f03e1777a732f0c00e1653995c77e7d837c73ea0c57702346d2b90b9d25edfe83e1ae3232a7871cf57d5a7451de804eae33fe505b37f2f4a34050470b6313713a8e90837f5bceaf64f6b1ef076533c1f34535548ad6fa77d97a9ae310099a51c5571e0c7bdbf0ad2c3ab4184a1eceb7c09813f3f972f1b960372b796cd32a27eea1e06e7f7786a7f34b2974951a4fcc06c0c314c55c5824c8ef2c3e8c8deab901f9f7db840692ed21335387e8d5c3541a9a2acd98296f0e684d9d4dc67b2eed6a27adf94ccdf78e407ba835f244602530d605e1314508b76fef05a0a92de3efb17051be7ca7deaa68742647bb59fe3be0fc333b9aeb0285e4669955fc668066f37a2638cf15da8f520e3fb93a900dd39b785fe81c49790210febfe296aded513de129443f2ad03c7cd1cacebe5b8aa769d4da56df00b9bfce8a8425371add0e5759265344a80a1f3a572ea26226e7a5ef6315a0f3b2be5c27e28393fc017a3d44fb73436e12a9ad23c4752f234fc209c6d75b3dc3a325f5b9961397da088ebce47b3be28367b62be2f18f750490f646128f516781f4aaaeeabfc51a0404f44a842a9d1689c0748bcb1c0d344b3a928867f53e6a5f809254ee8c3dd86792a548fde69397d5f5d04c8089efecf8b3a786268e306ffef807c69d4d3588bbf970506f6cb8275849b711837675ddbc770bdf2e461d88b812aecf0d3d3a88de0bd00f2601bd4b13e4bdc58b088f36577a3850689e2f88322f35c89c6c534fef83bb1bc203cb4d2a1d6751e5358d9cb0789be76331a6be91a6793927f254fb033df775311ffbb77d3c2e93634a8a55da8d176697323f5d2f84932f876dfcfe673dfb21aefbec281d9b9debb7e4a67bbf8098256375c121ef76a2bd805fe7ef3ccf621108e94ae55dfcf2bf1be68fb9ed145f30760c94be79cebc10f90524719a8d29b6f3b70cb6fc0a7097f4926e75828aea77306cab2dcf19524df1ad55fc080be993b84a43f56cf5924751e8389c911d5b5c88660787a94006f04d336192c4495556446fc4665a5ebcfdffc14c1195caa8073e8ba1bc27d99c13939d266ee3d5bf8a181ab013c338e2e88fbdf4fe7019f7558455aa5a132bcf8bc1614f51a9895f6b11c67cc2a6bac07caf1357fc4f6db74eff1d74335cb282e4579b01c27470940b2afbb1bee7ca41abc18a2001f08d1662cfcf99a36f36c57bf7e2e6dc3bf30161dd5980ea4ebfc2c138cbdcd84cd59854ec4a95c1e651c0df0e16964e5552fcd91c8c3806be464075a2cb9a5450595fc92b2e118ed41d7dfdb845b5da5ebf04ad64af1634da890ecb7c7b0a77d194f2b4724896042f9eef1aeeb618a7a8ce77f6786d40175623e61e9baf2118d396e9ce6b2230d6d213be00b2f4e6a1374d3e6e1450dbe32b3fcf9786f1aca505b07df378de3978b7ff444a40625575ff04513809f76cf6f57890b62fe44a56bbda98f71e3e6174090f389abecc6ddcd2b02b5f147331ff767ee84ee3308d0c895f359400aa6cc41c451bc8535f6fda211523f244a832ad7fe77093adde19e03817991ebe0f7553c84e78e6a4ab9903e95bf6d8b953954f7c0fe00e58c2febef05319385a72226edf1537d0f0e358a627338bf048a4b6e0c5d5bfa1c2fcbd1073d0d06b3b1fa41de535baec3aa1d2176488634344aaa912fc6d1bb6f02264f9bd74aa68f39c4a556eee3b7e1213506451bec04a6b1bdd8445817aafc935ef7016f3334792e70345d58c7d6b5322acd78b1b64cd4eff9b555c92dcbe0a1f27a7b9bbdcbb6608e4c0eff6d8db23c47b2e8e9d1a74112ec12cce172155cb1fce68fb98cb426ba56e74953a756e7089b66bd746aa2df286bb28896cdbfa3df5c88384a659b046f672539e2b654294191ab898c492eff2b7e0d09928dc7ad08adcbbae222b74d5b398d173f1e12c0ff5ad0e4c6d50614ca33bf8d5761c15840afbf1d93abc742902b2ffbbf3ddc75c057ff79daeb7674da34d40e6e06298c762a34df127664fc7f918eeb16bbd2f0219bcaead28f7017270381ea0f96977b10b8023b6747e3dacc78418861522c528fb68e6e72cf49c698be481e6af44f13218c7d752167f0d70e70ede24f66c477da3ed047070eccf19501fffee8635efcb0676859269f842ce1fe11b22762b9da6e0b7832b2258b235aa5aa3ba7bc25599e74d2fd83e92ad00544a04b74726fec5cf82d57ec81766f56f48ed0d39d5c52b0420a264f5998ef352cf0c7553671265db2be6ff80772f70e0df54e91c89c61408eebb74f1ef1805b7992039769c03f15cf5abe87a63ea005e28d7dc3d69b134c203f78540c721058c04a203b04dcf1d4a05145e73a956802e8697bff1c029665711ff80beaf156a53a4b407f3ffd2707c9b62912eeea5e95484031a7cfc124ba1c6b808cafbfa2ad493aa61fdbd37e0b8ca5d34caa29949b61d7bac4b478d19c83fd5b1bbfb60d5cfc917ef82b4a77895e6b7c470ffcb5265648d77de94bff2f8184064f6a16ea94295a759101425b0a26408f9b24375bb43e3becbb79e3a8eaac535fcacdff09ad9c5923952d266c1807005be7978a7c7619bc82f56ef3d7b1cd832bd9d086b1afd7241963e1f3c23f38b58b589b4c100ca76732d5bd6ae4746424f0cf08f5f11c1af316771768fdfc295db87c9a8b6ea9d75066291248abf46ff48b50f10ed90eb9be4b3833234e7b6979c167da29de213a8e4b576fff3ffe46efa3e5c51b4c65922324dec1e932c3ad0c4bea5bdf7df47c459bbeaf1a8e9544a894ff5ed4d402a63325fa46585a4743f2c9c9f948cfd1539218a29ca117343bae0a5a5574ec46f51ac145a8a49cd67216d6273ba3e0d9a9859d5bf98ab547bc9aaf79123a5a5ff85298b547340d4a7b8c7441852916095b733178f6ddebce3562db2dddaf352b5d672df567399f15d11f900c6d87875ae6cc3c26bf3ee419078856ae5ddc4b474cb889285ebdeb0cf76d131abbaaae780d12460a94011a62d417a7ce6ffdb90846b5edab92c7341ed4b946b362b579730817b6af49ccdf2628fb538ab54a8ede4bd2c214b138d362ac2cd04033610d7659ef39fdf0eb27997a60fac2fb6cce69210fbe8c4d20a29d8fe4621b6b8d43e6027c1d713e642324b65cdc3bd1a0ab9d2caab913cf74b6474ca42c6f59df76b13aadb0d0431a964b03aad35d9bf5d6c32b097f19c683a6643b1c03885c0561542687dfed57dcaff12d2c11c046413dce08e225a5eaa54353ce62d0d963408ad2511be6e7095982701c3e9a36624df992904957b6becbb079318f7ef112aaa813503e16c5bc375088a1985d6aa6d04794b459884ba39e841417c3ecab6316fa354674181bca10fd540f6b9f3fce5541bae6820478799c22310801cbccf54ca53494dbab7a7257f01a806224fb176e077606a53504926010d29cc3d19266df72154438e18bd9cfb4ffe91892d75c1dc335083a6c1f63474a68d7e48b3def48e07c32796c8e4feb22cb5c54fce81b741836126e0453dca63b313dab8e38f110134525271b4f6d4910d02b57b85bbcc562130d5de9963139c268c571a15dca791958beec8ffae97c1fa29e053721057fd4b51d0f075a99472be550b499f797302f9cc70928a7e1d796a3f6bdf37757cb92c6f1c0d3ff2fa1d84f4b5d66092bdb482856dc817504a970b67788d304dc15d31d87d308ef8478f9e0353eb595529d87768812af6b8026e0c98f5df63299712b4f20d3c23fa4e749ac3232f0632e8f0dce2179303b546949e71df793945f6fade93d3910505b3ec450ab418f048823d6a2f9090d2c425befff569b77bd7c1934373d8f0e3a2afbc18673e8d267701fc672ffa19a78c6b46ec4db551a5aaadc4c1de492ba51fbc5925a149056362fcef82586d447c3f1c96d5aa17dc402b06b1fd819a256c182fb44e484ca8a912da9c8f13bc640d6408bfc018a1f34b72d34b6351474adf1b5dffb875692099807951721edefffbb42d8aae4a4dc4013e13b9c41bdbf0da90138c6c20b07c71c7750e6fb9ae6e9271718e77a046341fea4a8fd004176956a0732b6544dd188873663581df826de289beae07196d61c4ee181ed3b36e23a5a17b7512688c2eb3e0ad3006e7497c4b1be1484ef98ea1275b59131c67a201b0256fc1ef52ad21061541445876b441662647913bf03d99b695881e3df3921b1415319cae95af64c9276f103ee767505338b8ffd27ba574151bda09dc69bb3800f3bd5da6f5769fd9398793d78f46152e1111894f397d77cb21a42bef80016f67bc9f973fdf9e1750e0207053a5ab77d9da95da553d27b6e4260f41110214b88e8a823df70f1674da4561da50c21b8233b17848d01fef75744086583c2576b1655bb2c93080f4be3aa96bb003985fae24c6342ff1d0a7a1f435664bd41f6786de29f3f8c00d8ae09b5d27703eda44899dec8af9bf850aada7cc53a0f7b893388b252edbd4b9b5858ddc8b1c3c5cefc122cc0c983944fd438d2b0a236fcf889e1b4601ee79a2ff7c50e7cca147b73bd2450a3921c7993d81d893e057fd2ac78a9bcd959136b7657c8297a228dc09cef8caa5351726accf860268019a30047e54e6483353f82a3f1d0739d8b911a6bb9560f3d6d4d218a17d311534171f2d23912ff51aff01b8c21ec54b1faef4c8add0f5cd03c2b59d533f5e74c68e98f9b7f3ebebdb365d23bb16316e17e23b3a57a15a9f9bdc66526367b0190a42a9692c40f2c9eef1c67c721b6cc4dc3da783eea07103e8b8a348900fe86b0376e6a602d29d1c0f5a1141dd6363db66c7b8d9345aa0bc8892c6c68eaea23a7cf0aee902d9a18a59e1e2b93c0ae4650f6959886111ae7841e095fbd6427c63831b0e190e9e4a4a8aeb85ee00762d936c397b3876fc828eff49c1485d12d1b631a577e6c31c303d5a360414429c8a26c4a683e69b4a71aef4f2b531f79afa14c77563e4c177b30d7d2d9093393e21d149f2ae37d3b556e7184bd8ecc3c88ead69845137e0598648219cf0bdf17b2a863f5f34997bc9dd930dfaaa6a1c9c32ea9f49d84078183299b547ea87036988c91ae08c6524ade05c075958e2ef78604ef4f5aa4e6297ad94742077df0a01fe6808993bb236da78ae5750f200abd94d59b9af26a2a93fdcc3cf085cfbc5b679650425e374c17f77bbe94f65ed760c0f997b94f3f02507ed4efe4145e795c0512079836eb8caa14e3cc98dc5a4cc116b30786dddbc5081319ab5d5fe2f264e83c8ff850f24b651e5b653ccf1b774c7399d34be79e017a417ef3dffca84a58f95069a119264723ccce5247188cec30b63bc477eabaffce900fd5218b0f49c9e223c59097ac4d777dabc90a319d23d0d5e6d6543d4506bc9b041a62d215c31a4668b84962743880d3809f8249a5659b1ac6b1d9e6cb6d36468001ac48ef63253e5ea9766b74d94a87c44e983f27b2ddf207223188b0270631370a6a42d8c42dfcde3595af63c36692ac548d1d828d0befeb928a4af5c65571b4f2365111c9cc225841b9dd1b789f397317560b05dcc0141915327976a9e66c1d6e084d456ae8d5d3308e941bd58f52d6adc9f92e67bae7bb8182dc9c91bb545c560067d59c0c49c4133351c48d96572809ce2d39bcd9af14b54306bf89cd75c54fd9efea5f6c5087eabe91fafa3366051a753180afd30d64258e6c2435e6239cff1d88c9523246c06057208c5001d265158c796af72ddce522b4d0bc24b691d5db735316b854cbe34e3957096769e8800fa8762b2f37cde94542331ee077ea0ed0bacae55a42cf4a95c5d4aae9fbdeb0cb1a17ea5a29d4e93e26a484222f7817465b2a2a5db5927a60686c34c7df29c73e9c7426b7165eada786f8c0f13f7ec0dbdad02124e9785e1086a3905046c8df38b22794ee84d0b8d756830c0fd60fa451a722e80b0949889d447eb4d94da80c4637decbd4e51cda520fd678d8294df6421a10793fcaea6cc3a4750e8cf8fe6b974e6ed11e16749ee7a7ff0ff1927198020e6753e6ff5f19bb156c7393c6fec0be69e70449e739604ed44a92d8b3f4e13c61043f1d10e5760a9d25ad38ea6e2fb990dc0aa39496636d49705d2c542cde4b8da3ecd5c57a392211e7d768422a4ef189a817c6c34808414eb57b24da5b9f23bd65114076b222eb4b24d076fa20eddab0adb6a7902efe999feb4c26e406acd483ee5f65e4c00c2d53e6ec300e62f6e9b51044b9a147a541010201398dbb062de0e35e9792e89373249754d0c385d2de4d7f1d4aee60629e57176118bed6ba65d6cdb1c2e12fb572207eba316af097913e38e0062743e204e4508d67ca0aeccc764c666744fea8502dc488cb682e9a6c49c9b31fe0478328679ba92d9fef72709ac573df88ebe6fb6df2a2118e5cfbd430641dd6b84f775086b1a8370e51202cbcaa119d35de1c2a15ae02e033e439a1b629d2eab8a2a90fbdea4a0dcb982d0ea8b4e95c38490aab2a06abb0850caaccf8f3ceec559182ff5d7cbcb199fcb15de78a486fa5d36816cdd774e6e75c04df006230dcb24ea859d33ec7891494766cdae5e78afbeb3b80660655b0cd09dd13e59992766a6c94ddce622773d73c176d3d22c800407f27d14f59da14f6bb3df07bcc2f2888066dbffea69f7f4f93b32b5acc304e9b72d7c3618f3f0a03b6d5a5bb4f796c7929a66e8cf819f61ada022c76fdc8916a916666550686bc2705cd806deff1d077ebd33ba7a61618acb312066e4529136fbaae8dc0a0c22f32720d8a4217e459ea897c6526f26c8d7fdd13d70eb4ebb0df8e6237395b3ec33c3cd1ca4f7829b52ecd8cfd3d3b1331fa6ebddac5dc9cf5aaa80ba2de2e3a13422ff1fb3fa81f5101953c5f0a42892664ca849cdd8f8133db975d91962e10d701d2cc84c269553673310d7538e268c85ea85aa3c3e29893563950a6772e755d778706cbe92eccb5de2d9ec9ca6677d4dcc606557641ad8a883c556afa415662e1d86b45590d954d9f68f95ce8bbd35ca767aa7381f274312a321dbe9b2bd94fd07a7989e73f3528832d817a215dd945368871eaf06448cd3cfa40cf4d3c8a6a79a521f37932982528610574fbd3cf6fb8ec89439e5198c65637891183d99f7b8699d100f82829805bf3bcc1fee6c0bafd1d1dfd2c010aad96d062ad87821005d3681c5625ee082df20656e2b705c5009bbd9d0821c2703a2086a1607beece9cc707a3af031514bf4f55e2615fcb4c02d1469ab025b26426657a4ed4ac43baa6012d467de3a5123df9d6fb67e0b4572bea5ef72c1db8f3ccd8239212496f3e1f29dd15712c8a352b94d4ebf83fcbfd3bee153e3e1697674a4c7c0aa78d4fc292be756df4ecd8188bb804d6a913c6c386d293aa75a17d9b8f97303d049c283fc7656fd9e7f929202803177020a31d88fedff094ffbcb32408a6089706222b944ee8875f4c4b297739b31e53e1ceeb23dc1fd74689e9c78abea5dd45bae5a95c6e4c7a44f4a7cd2cc4074c8a2c3d086e476c027ea943219ae36164f6db72722818d4b036113e3f4582706438562a0806ca7c72b299480604a25c631d9adbc05edbcf90ee52ed018415a6250d03e50fc85a59aa0c54558d21894d2cd0b77555d2d9276d7ca4c70fcb6435edca8b7510709a353821ebed26f70f302d51417ba944b1088d9407fa886d2030aa8b3a39c443407014f2ca8f75e9de8a36c808a46a2bb087f54c08ac03eb54fd7df437a2e6026a4765ae9ee4290ae610c583dd02e6a2f3a58966f2f2e5a5fe30225c1123539d0ba903e2ab10e35415f3d4dd057999a43fa02b74dec818c08b09ae95ab592fc939ed0f602ec3e11c8bd81cbd746cc1ae1a2ffddddef0fb7eaa2a38667f20c71e4aa5fdf825434c649fe6bd7b3538c3d6f4a23cce14f125aa2305c5104fd64fb209c7b6622dff88e645fcce736319cf7098c3b2fd4170d8218584f9ff25e0936c92bb7750281fd6b3eb07c74169a976b8327ba9df9c69081534e699d6a78d613b13484a8642692079f928ea3d67ea8ba997afd0dc4f746644141cfaac959767b6d2a18a42a136312b566bae98ebb41ee5aaabf7951670ac2e82a1bc0204725e07f547e6ed93e8c4e68e3686e3581b04be788e8327728cd762e120c9d5ada0574b25015a042df02ac6931f4cf7b9ee35c0fc7e203198b89b05f834b47d5d7d34fe8bbb35bd99280f6c31759fc930d6b7ba733b8680e192fc5af99a5c55ba6f085c0051135aedbdf5dba45904fd6012bc0f6b5ee6afd2b5c1aa6e824e7f91d7a8eb9d8f4ce500674e0344645871c18b37fe454f3a044e5cf4d0020e582f9f1a09566cd3c989460a8e4d81810fa1f0cf6387e001cd67c298448bea7079c72372ef3d0f053dfda5f0f6bb673eb323ad5fe67695d8822aa80608dd1513ae6d0c63619178b0b14c6b57b75730c248029bc0aaf5bea8c103c6b916f1f52ae7115d0ae1fa233df2ccaab17e42bb21437908add57ca0941a3c74a3e0f750b3dcb7ff55e92266ccc973162ce1c1c9eafdb6224fc9063a1826512db6a98204cf399d6571555e4286bf6f2bd25c959def2cd1f282eebeb94e3519d1a9c7163af5289c9ac0ee12b344c3f908057626442e7252a741e2c95a0153db3d419bc0d01321bf6b8a0ee318f215b323a59179faa3e268c52bfabab86b1e48cca68adf4eaf3b6ab1e9d60e780d9d6fa33efe5a4ac8ab75cbe602e32a0d9789017bd0680ceef61eb8c9baf5e5a7e280cdddff11873a21ba0914246979d5d3b6e8a1c24e2aef6677382d650d29e43798d581757945cfaefd7b8befc1a849e45e8412dd76adedd069a89158b4a8582de9074d257272f11ddcc1b94ce684f63f6ed1d3a7e12cdc94deb4fdb1f0a6f402817907236f85590a008c84e862739e4e6f02b1ab2447d514dbc9e5370acd387de7351a71437d1388551ff55c8a55b1798898afa89668f05577376efe952d8662744d39482cae720acc759923b8cbdc776824f08d5ef8565f917f4368552990c659115ddc519d6e402abafbfb4c43082c6743813c30ecc312830198e9ccbbf31fa059188e4824af1e1156d2613e41fbe97c385bade7964876640b9764608fc373719cda2204f85400ae91bbc0b5c66e41277223261f30f1ab4daa81ca3fa9ee527b4e1fc81bb4502b1aee44556f4c2ab162b7f6468aac13ff32603c8386719b249a74da6d75acc2b055f7329cf8b8858251676a7b90691e93774d324bc507034fbee99795332f41674b52ee1b87d9623dbed78171816e16292bd1bda943804a7c4649648c9b1d0d361fd9cc51dbf5b42a4f6fab0afdb63a0c17a2092b56d2d4f0535228bbc70fa1c7e7a7a2a0290a3545048ea80b8d39d85cef3e443e5b257c1d8ab194cc8e0df2c424d1daa767f090bbd5d4288ea3ddb1c3a85047fa9c61fb31f31450678dc427fde3fba565c4ddb35056f48468fb7aa4c262f3bc3edac51415c0ac3681c7b53a5eea23658741c5498a16fa621e03e76388412f2cda95d75b8e6bca86428794ad802f7c5c262a295fccee62a255b629ff8c3f9eaa8a1808b8d361f450d1c82fdcc8b3f6a2bfc46cf023dcf4a7288410998bb824c82d99fcc34ae59e0c1f68a58333e409ea373821e2eba377a902f5452135ae843f9c22c570301fd34c5bb40df8c347aa7828ef8326a0bb31cd1d088e227a25d3e9a1131c027ea2c409dac452e2568382530c325908a5c3b1976c7ccba535bf677f09d97c88e011b204a86394feef8b80989a64129256765191adac2bbfbed9ac5128af7982cf634d8bf400427e6987e5d63170bc815e82785698ad0794cf2eac0e22cf26e623696b412fb45e247b2fe95abe2d3efcc583e4ced837ed1a776ad8c28193104178657969ce1ee892c0708d8ad7f453c988167aea69397962ec499b4ba006e781dc4ec5441cf076b53bdf1287862c8baf3aae8fe88a68283e7283724eb00ade6bf164a9afbb935c2bcddc5e85f5b91e6dbfdbd674ad05582dbe736fff2578d1ca59295a52c737756fb3f0e829fea4510a8f227a7663d99cac2d16f88dbea781ac8ba544a35c88ba646dba49b464a77f4d88a72b5bab278dcdf7c31bc8352557f6d2895f97fdb134f54c80e9870c3369695cd38d1195d66d608814cbb33258ae7638f4f217d68a80bbca6369967e62d11375d002ec06c1d27d045c12e14cf25f81a15c96404062a5eadd64205b4d15928b769c8432ac7b546328ca48a78d33c9b2a47e0c74ab82b15bb93945288d74b0a23226df693af1ecc37eb887edbd5374ec70a8a7c2dc3b64826a61e0abee6c69e26bee08f54500988a2baf1e36f03976c61a99cd5b634ec134292fdc0772b74cb5d2e5ff1b403857f842019b4b5bf5836b061cb6ab978ee77dfd41c969ffa785b3325dd06e8587ccb448d6060832b172af42dd0d371c862bcf8a96199676f825779f0ead194a82a925ed5d8575c69d02943b659a83f5d3eb036f1b10c24527029241e2c4ce8332a234c3f4674eb75f57ac7bd272fef1341564af0aefbce4c3e21618293bdce72cc2861156c7a52661116194c13d8589844331200e2cc108e1b814a99f480fe36cb795b87eba2f38558efbf636fb80c17cca729cea30fcbd846bcac75ec3cc014097d1829e70d837cdf1c64ec28cc869cc1b1218a3fa7b051924332eca19044e26509e367357cd3dcaf20b3d6d8d0e030acaf332c94467a82d5d021c8f5eb6544b03bbde3ec403a322ee2b78a5ba7e1da09085503f7bbd46e093c61711fff5e1d6558759106304a412c2a87ca4a5266e40740c2a1a1e1ed88d19d255c899e29d1a11a71ac02f3a6e38b60fafad0e1dc2d91b12e0b00625e6c351843d12d1b142429d62c6d1c7ea54064b54d5fa80b4bc88c13d83690d2d552e7a965a62eee9377df2e334bb452c598a4b137473bb38ad0f987be9e3710dba3787f9d1024de9411257db4b5fc773ec352eb47f01d659c5936047fa36fc62e4137224beb204eae3c856c630060c89d7bd75f4052d7d504757d2bc3a3e7586c93ce4cf6f8ea9e9bd76a570fd605ed2fde1d65a63de4dac6f7ab65c5577926cf17380d5215658e2f3fa3ea5b24a70e101ef72fa70ea20453a56a4a61e7ab89fcf8d7795ab44ea12c0c369cf40b5ae7518a30c792868fa9ea3be95c2f380c873479f8c6a3afa4a624e9e7ae94f5d1aaa414b4a17a2a6cda8fe55b923647374782c8be136a182d1f1c90c3b5768d63b6d76fc4499f32f0c7e5aec35cd43cacf10f8c5913806eb29e9aeb7e8fae983d952685254c86d1c34d50cad722eca37845f6db75479d5112b2df49d61f7d67f2c7438b2aa20225423bcbe7c17cb7b688117afa2b30e86733b2b2834f5e257311f30347ab5ce955c667a501064ac2e5fefb0c9d27bcd9dcb35027c234ccc200dfdf5458e797075139c084839c7731089be2b85724a1e39ba0df500a26d4a7a6f66b3ea2b152a0bb2d5a8f79a16aa78fcbcc7298da6ea5a83b79850cdf962ab656c6286446e5701c41d853e353f30cd142b631092ec2fae11a158a95ffef46ef0eb673a1b5ed61302e4cd58f0a2c1e28d99da67a0397907ac8d433d04d13a9b80aa761971ff83bc01bb973320c48eaf22471c2f36fb60a5c8408ab7402db65d2157734c85d5540c4ae49db2fff80fdb0f6b05eba6b5e4c56af8aa0044cce9be2ace3af894bc2a574d053792439ce30f60837fd21db891af926cf856c22284af861122812c2ef3cfb89d400f3f60849340e9bb771824cf41dbdffab6e462cfc5ab1bfa35ee63476f74939d24407d5f14543b7e082e72f9e6f5f10d823c680ee0bb01403dca51b997362128e96ab5bdc1349eaa8199cefbdf6bd6de5773d129413b93f75e88ecf12aa84e1ce36cc3c39015a9ef91135162104d16f6f64d2fd0bb31aab42eb1f637783dd315d94b417e8376cf80f61bcd3662a63bff3705bd2c6ee5419e479cad11d86e9c407e9acd8676f9cb436787a686ce4b1ad9646b46972a92fb052ee64db7ec0e52bdf36e7235cdc9c57388c5bbe115bc95bdcd759fc96d11f5745bce9d0306c43f28e57b020eb6c5835413e239c9be7bc3408c5bf16222aff1f60b676833e76e92fce6242f3b23f3ca0b9a1327204408ae29597df90870a91331fec6beb54ef9607b85469772db9cf2714d994b68ce9bc2eaa50f851b08ccec6d9255b425090d0227f1a4064fd8e663c69d539f13871fb0277ec4ece71cff036017466950046c094632901d1ff3d514ef2ef08756b668b32eab2d654314e9df9659428d4dc95e9828ca9db3d565a5e1ac73acaa0190b0cc6f27ffccf8dae01287c326c28d7b8bc467b34929d0525b71e3b573d76ac1a236ca2c866938bb68ecf14136437475ae93a665e3f004af83875cfdbfd6e9fafdea7ba087b1eaeff82701953c4ccd8cca332645271fe3acfd3310762bd5bd4645ffcc04061760e0b7c092665de12685131593f1d0ddc40640c858bd722e29e4582bd7a746126d2babeaae4a928d4f1a42de30deaa04dc26deb8f0f6816221fc6640f9fae5d011fb55048e3c2bbfa29eb063f6d082cf4be102b99885e9edd18ea187180c9ecd86991c5fcdb02e0a0e8f941f41690c3fe80579b2f752e33b5ca3967bc413ce93c5916a387b31d7a0cd84868fa904d1da376314f79657e896745c3819e41d2429e912b3747ff588afab889aa7570df095614aa9897f84f2147119d37a7b4033e0ec57513d6b5c5d1f69f591d891aae5e7ae76b8a10b0e9718a96af118a5083c3f70c4a24dbd2366de5e45d5544e2e51064be9449cd83e0968e4734f7be65567f6c7d43ec43b374ced3cc8dbbf1915161a5cc06997178b4ad4af1b103d68aada17a44b4e7474d5752ce9fc107ea070fc3f82e340c3640ae04da2343cfd07f1e18684347ccaed0939f15583972dc578f33e1bac3ab7df183a20b162b3f94a64f24d0442463eed7b80e1c166a55b5aec4fd18b898cd7bd9106109eb2725a6a218b4afd833cb15c6345ad396501f157d3a3dadf64e3bbfa79d5ba37fd21a41d09611467f26508b23ed4677201ecae968391da0f9b30c5db7d07d64a637dba6f4cb782aea2e78fa6c442de77619a9afbc2b78579bb6faec1bbf81ffe19b9e00ce990edef35919cc1bf49e6869291e7a3c7f72a2c7750bdc8501ef399145c161216cc740147d810a7b88072d36e74ba4bf3a20faede17a3f53ce702a48a65a38dcff8a7328123844a3cc6090db00bd6b6405ea45ba1901e86d621ba7ee8b7829dc60bdb99c5bfa807e86715a42f34d5c0e979dbecdc8fbbab63b00dd74ad9e92ec5aa8da515a753069a313c08f4c9010e78c023c80776a3ab8890a710969c2456f5d668e56dc6c7008bc35cc66b421f89cd2436cd04f7cf353d24784940533b33ee2245757d12d214434b7ac55f043d9097c5474b315cbc4969b049f3454dc40d9bb199f384dcfeecc0e65d480f411f02d05746828db9ab6b5a0d5685070074ce65975624bc79d104d5e969da30933bbc9c0349e731c6fa34e093f0db9992f6e94fe76c11542e2d127fdbdeffeebc88b6ba853a854ba88bbd36d24937557a4c3b0197defe2b3abf71f6a66594e3932c9dcf5550ba159d821fdaa6383f89c4029308f9e980df9b7cf478458a37e2a0e6512d129e0c16a12f98433cfbb32893e91c6057d1c641e17d60007015ff42d572f775e825c626c6ed69e8a99747268c83f24ea61aa5293c486763255b939bbbcc5e95a60a93e4b3ef25ffee02fdbbc13ff5ee8c65e676891ab9daa226e84d884501a4aaf2a04cee01507ac968e0fd5b6c6f65223593b7a29b1c3501fe1ff06510336f75f859d5acac019b42d57078825e30cbff4745a01c49484c0080879a97c336f34e776166a7b0ce4c65781d24bd9b5a9b62fcd620a6507c3dca1397371669dca64b43e2b7ec5d97f5301e2fcdbf7f3c62938490d279a75c94edfe5b5b848ac68e93dabcf7fe5f3a29045f017b6eb6d8043e72a47ea93b175eda0d1136b76b491f7f9764b5e9eb150087c4d19f164d6c35ffbf0132e16e83f357c177bcd02a23669ebda6e1e60af6be0714f97e238e5e43d89d3c217445048d85c8d5d5fc568bf87dd320400e92711b37de38537d4dcafc2c2620d34569a2a53c48480b3b1c77ace7bc68d94db343925b98c3d0b02871fffd96cfb133a7da70ef5f5c47aa7dfbccc201bab3bc908fcb88600c9c1b50718152f6d5f8dd26a1b269c7a8394356eb12bf675bc656958467d29cfa26d775b74c5f7e64e4ddfe11207dbf47971a177b2eb1e47353b4eed918569a9e99a24870fe7b3090eda6194828eaa03211903cf350e7d6213274d5215fd821f1f5a86e4095a8d39353fc2075133fc503df35529250388cb88639371760c33f3a20084c04de19d563a9c7166b291529e157a6dca3ad95372bbc0b036521a1fcd422b4cefe7bf92cbeb54d34985b74f632fe2397d5029cf267004f6b3f595a36b555ec9c054b72f39f6fc05e7b227cc0f9127488f943862797019a9de677bd6e84ba5c2e8498c2e49608f63971f7850baaaa1bd8686ef01323342bd8c2165d441a2c2dec8ad5c8b84c338015699cde486131fc8d391709723916fd2e51a15782568258f514559d48fc3bd9aa8232e019796d500b79bf2cb1a3b49f38fa38e8dccbc391970c81f6f33cefaf1a0d9e7f77296ef0d4c39e0bd05c75f2dfb7ce68e866b7452db18773a48c6bb150eaaa141ca53c46378dff69a3d8be7041ec4e90b98afca78b6e23d2be0834ec01835c5b632631866c8933e6a646ad37db38babfa2ffd487bd460a923d48f7e10e82033d196720b30faee60ece5d0edd69eeb666b743e79c524dc9a52cb631565f2efe5629764a2b85370166324094b6d035610de3569884ab9dfb11cf90eace2b04942aac684c11b5458afb6175cfeffd7f8a7bc14e42507fc56d66f4cf7d03b353214c4e5ffbecab197e3875af95bbd1073a3a4a7dae8134b26dfa2a3e1c473e07326d300805b39261210bc2e58cdbb3878d0e84d2d2aee5e12edd1845a3d14828aa988db5ce79ad4047590fd4b62888a637fbe5fce8b2106c2ee67c078f7d4f01b093e3aa4e491109f5c8d4cf2838f2a8015b7bc65fcc116cea0a5773c193721740c879aa2e89b8dc1feaaed7bccf7a08c4ca1aac5a6349b0be567fdb3f478168b7047bd84e8852ac410dbaeaff9b2edbfddeee39232f2eeb016c2d157a1cfbec5365b3f0ad7e90e70145898ab3be1978f1fc6173812cc8a57fee9228dd28abc0034543571296af20c38dd72793e381b1f4cb4f17afcf186521e2917042759db51d90e683d29d04082b34e7e8d45788f1db20b9ae7b32b734bae229af99f55429357e672ccf615851f25ebc8b35175527a58798b2514f02a2014ff3040f231d38d1019b39bda605dc58ffd0714e94b4fff4d41f8d0704f35336ed3678b93ef669af9b408c5be5fe7c3730fc7469b9d3747579061fd0cfe917b9512905cd18f5f98ff9c95b0ec09949a1b237f3208ade6ed4f8b8e4053a48dcbb58507fb128088e605704deb66d232047ab25a986704768d4e6bad3a309bbea60ebf1ace987db1704c12be587850102ed9774f0ead21602540db7bb25da66384c2fecda36b9bc8a5b8c0d5ede785437ed60ff8f444e9fed4a19414866b208d8f3a9d39ca9f68e8e4f742bd93b3616a9f38c1b999f6bf22430dd658ceae67dd80d6ba0913fa8554dfc1c338675252549bba9cd942f779d83ae771cb4729249f3744c57c27076155c305bc724a004d65f674c78361b7daa992f81017d55f524b689ba0078694efdcb0abd5a3bd43fb44f0296db89e63089b31e80772f07e2817e03b63c424a341cb2f7514f635b6d1e9a05b687a1d6c9a026d4e188e023cfa4181ca4cce45a945e755ac5c61481146a81201438f497d4772da1ebe125eab1b265daaf24034b1e980816d6773fda78419b9c0185ad7c942815fd4796867fb5d40e1843d01d6dadd94a1e9b89842cab029f2da38ec31fcf957de4a11ba7fc8c49023784604996341f99595ed997d714ed019218cf199bd77249bf7d790aca4fcb2a20b561d57649b2a5739f24091375e5a82836697ad69679f6e7c8516c4685664f7f4e0bf8abf4e5326eb83e2e06ccb60966e77ed9ff6318224a97bfd46bfe2138925ea9e680737cbbdff58aa1555a94c0be4bf54ea33ebf5ff87a103d4aca1783ed5f9154620b994779293a8fa4a7bbb58782ea0c2cd16cb9f07dd1c15b492606fce0914680e8318c71ba4bd35de905bb3668ceb7710ba2592f2540c87a2527b5775ae3f1ab49d7842d1c7cfca7095aaf87ed09de4b0c1be977e1c75006143acca2551cbd73564a1a89f6b3d3debf341b4a9c6bb9393fa14f55ec913f78e2354edf4fe9a0fda2f00c1fc9419fe6767365005ba0414df5ac2aa075818eabef3447eda0571bf35c9afad533e637ffd6d4bbdc9387916209bbc621bdf55705f35c3dcb99e7e145d3ae739f51d2656cc2a41afd6850aeb8f4e8e0e18f8938a0ffa47f1241163b4e4f3450080e3dba55af4b3017e8650259d2c594f86946867a444e08cc5b1334a78ce193ad8e31eb96d8ce94ae13388afc4e36ba0398ed36339bdd2660beb83752939b4d7e6a9ae0b0ec084b4787cfbabef1278ad8d27d12917d891808d12b76a30985effb601d3e1f8bd77caa6ac8b00b2236a926c9c1816a86f7566a3728d4e571d7bec08c5c324e8a8115cd0002efa70246d2fb0f2816a1567fd766ba704ac7d1aa4e759bc7692183a6847ef3200c8fe63db95ae3cf6e3fecfb562bddfc031fbe11983ab52514793774069285fe70486a83982fdb606804a3dbbbf99b523969a3b0b9e2666acbde8d6b41f06ae98c4469b583334b5ff071c98416258a4fb930fe7f36f03e490c63f4d6a44d4732d2bb2ff34b2d2cf452f61ba285b628206a69a0b567dd1261e284da47fa8caa9339c847a65b304f5d38bbc5a01b5306afd5407812b3038a5d8b33f465a1eb488cbe89bf519b646bcb830c4cdcc93edb8928a905e9ed4ec51aa655a2cad0d24529abe4423abcac9163d39c339315c6954703c77037aaa93c6af9c6fde0aaf1ee51ddc14cd995cc659783d29baa7e456290d177fc3209d1897c8e09865e59b4384ad35f6610c470fe663cb46ec6544bc0152cc8b1505362c4444a231868cdb020bd7dba96619523d902742ee6d34389b1f8be2e86fe093f0a8044e994fcb3a7a66ef6e24ba6f7a016c228ff13e120afc13bc14572da274294bb20492cdd8e3f7bb5decf9bcb0ed3191b2590401319a594db2bf52a81831d2e17620cb84be502740fad6ba625ce4938f92eff768862be380972fb67a15a9e24e417efbeee0cb3810384ba8a652e303c930a5ecd54e73797c972e156904ae3fc2c1b4fefccf78193452b65184d20a04088a05412a92458312b511cf7eaa72fddae0b475a6976c4dcfc3f62b583ee711ec326a213bd1aff8c375f08426f5c3accc309c0f6d193ba1d636d1ab2ac198244edaac436664d119ee18e96e000a0284ec3489653dfe6bad81433912a6eb35de28a6e89fa45e0998b69ecc075cad0392f759f0aa7bc26da9525441f8627d94e501b6076fe06bc0f06a2b7a06ec6d12b561af59147631ae26c2b131a2007cfd6ade7ac52d883ee7a1d6d557b1496b439d551bd9a0f25ae163820f641ff8d4e7a2943e35c22967f275b296fe6d5c79d41d8585277b1a43c249d73d0f3837c0dcf068ebcbbab4f9380b2ff1d7c355491520be86fce35944aaa16b2f4e9ef29d4e6616b06b361ce538f72742e955a848e43c7003620e153c70e36c73b09fc0a4a719cd3964ffed04d7eed2c9e017ac9885ad3e908603ebd332fb9a064702e5a47138b8be4b8540d7535046b079302130620f35c3ebd515d975253f1dbc093202671147e449931f4bff1a05f78ab8a9d750a554693530143123774758c94ba7f7204e28964b49001490dfaf0f02d660c720ebb84b9fb24c0556c9f2e5782542bf05ad31dcb0dca958d5282aedbec3b254cda4f00dce4cb384c2f42f97a227c4ec77bce7bc19a69374a152ee86d34d91991dc3f437292dadfdac367b69a3a84245db9d3fca37c7e7f6e1c55d6d8e73566dfcfbf4b7c35a102dc3d74b72f2ec603b1a50b21bf527674d80f445b34c2cffb1cb5bf94c2689d51eaf5664778a1de4a8b49e7f467cda82d93a75b2101aa755acfb3dc478dfce897fd1c18a2be65deceebc2c775c96797e9fed1993485a952bf9f4c332b42fd2de76ebbfea4b915e083894991888020a2f6c5222ad51879fd0f1d9c00861cbf9239773c02ee1b16ba9c003801354d18e374242fbd1827b26c6880299a50ab8acd18f1478f5708ee1d42630682f8280335fd153ab72d4a423412721afa03aef28801c0c9ef5dbb8f86aeea7d3ab680f60abbcff1f7db8e359b136af4a6c148ba907af0519f4aefa876a9e7c67abe92067fb98cdeb146f11a708bf7d12c3f6bfdc7793a4e37a7bc112c37406814fbf00e0a72bf8fd51ecb72839ae7bcb550da6406bd708b40161494052f299757378a1f95172479a490483c2c6a29362f52becab41c95a719d17201f79c97ffee6575f7859d84c7607c60d27fd025ee210aecd335e576414339baa8fae0cace92781044458ebce84dbc6a189df3da3d58857389c46f1b39190248b2f1d73e4c0988bd809bc9a8b5d0ffa63f39788b3f21c5c07e1c2b73239ea2129d4c3aba076f6d1bf954fac52ff19257ef1963a41f382e975f97d0f8b73e9736acd51a3b5e329bb12afc3e69e5d2f3eae621515588998cfdeb8897e6b48f6f3095c4102a2d74e8a3823da4b45080488f20639bb1a0f3d41496201ea6b41487f390a48e84a429e7604dae6cc0d6b171f8639a411a731d4467d163b0e7a5a721827c57dca00f1f46e01f9550ec594aabb3526640ebf406c175dc00753ff3a4fa88dff454c23b77360efd9574b558409ac40ddcc5a44e56e38787ee71b8d7dee1f7e43782d1d771147f9ddc34b2fec0efdb70ab04d615333950193dcd647e4f6feeaec7d98fdeb3011fbb30c2275ae1aaaf0367e7e626a9ea74eec436cbf8bc207161ecc7092d930271c0110818c2d413bf294e906f24d889f13da2f2311c51a7e6b4e2b338b875fc1933a5569443e4ac17297f41b0ab1ead91d967112017b2fe702c9e8106bb7e3e8473221ea461009ad64b7bd347af3082246e7bc45d1a47df3a874071d9fd1e1bf1e89eb664ed29a84a3839b7503017839c80b6c8f771f08eb089105ffe448bab8fe4c9869d5fd8f6f4ba1011e1085b86f544bebde8c2a701c897a8c9c10658d718c47e2d0e470c427c3edf85a58e794815d5230b9fd10f798bdb4d4fee720c604b50c8d860a473b65b39333ca4c303774ee65868fe0e8d8079ac3940c45c532e29011dd946a8f49c603f797648aebcbcc42c01ace3fd1ad3cabf0629756f1c15547ba96442c53478820b05731caf2622ab781974866fcac3556cdbd95646e0b92ac3db2fb2104eb3e33ff62855fe2fb9a68b34020b1395ac12e2fdf5b8ff806f3915b8f6df82f6a9432b3cf36ae32fc4226b9607455ad340605dd2c795c954ed21c31fa4539dcfcc3b8d6aaa9b055e568e5a8f53030f4b2bfbdcf29903f3993aca519f403fc4463956f55d008834e8f711dbb3cbfbbf124958d5bdb30ea3ae0942a1f37223bc81f87d714b3c2eb8c8be4aa8c5b320c1fc220d8a755fba0327552b459d7cddfdda30f71e31b1f30e86d342f2498ef11e47e02f867b2c9f4512818017e812bc7dc53b5d3b0448ad9fd56ff0bbae4e12dddb7ab8cdd25ebd248e7ce22b414ff80b8427c7599356182f86733807a0228c0e24f2e64328fc3ccd052d53628b56e477cc5904ffce9165c075118065c03c74c4448d9010e25de28f82dee04821dde96f0502cd784101f57faee21609dda302f375aecd230a799d72ff0744af19ce3e697c0fdaf42a916dab5facb390e562bc325ee7c104f39501baf97459b9f0ce64cd43585ed528b56e1a9df831642b3645a3966b855242546e9bd51eb2b5bfc637cd9a3dcb3a26a7ae55194a668afd4e95c58a9b652589e7fd8835931f16c57e444599a4ac3db7f2db0226ec15a416f608bd604aa80b1f983dd814bfc84be72c6fe4b67f8cab35b1136c9595373581443f95f9f269dea6028f268e9a7cbd3ea9391573acce5385830ba0b796ed17499be4028409f5683c26d85a66a73e56a20585011826ce3b516c63e4317baf26e71124b95d106c2dd8c2de29de63faa5d4f09b77591bb666194c5eff714f724aa1cb524e1245c4344542d036516a5feffe7598d54af1dcb0e5a0e67882031b8d23ea94f76a7d98a490030907faed7535b0a9e225665fe6a8e7cba3b1a1d003becacb2970442d3be2d55392b2a5c29ff7c672f662e19b9ac5b87533259ba3de1178d99c891e5ff4b3fdf3774e4f47b14c17843d8a081708c75dd1a444ad3b685e5d258fc0f7bdc40db40a30ddbcbdc3f1c529b1f6f05331ce3ed3adc42d6d4003f5e29a4a78385969edaec4af0351c106349ffac95d68d82b9cf171f60acf7c7bb4f99fdfa6e7194daa58108ddb8391cb591019d880c31aa4d15204c09062f4333e352df6129a6ea01b5cbdddaf40c9fca626505167b4539a0b8db902384552c05ab9886bdd9ae2b61c7536b52607955624892a30267b95a88f438295ea2f7b6fcd514f2cfdad8ddc8066dd01aa99ab603bad737768d82adcea9db675fd1f339f2cb3392f1f170428d5e30d7a29a81510e4038cd3b3e47511edb4da9782e408af53f6e3f76e421fa5b7ca35ef2d20fb98600a7c6b30d777253e431f8e37121c6ba879d157eff7735cf19fff3fdaa7d0190a2cd0c421417eb5e68f037a473b63dbad6622e69a67ed98056a5d4caf789574ec8f1272f726eb32332422f9233cc7e071e0956828fc50f9ac9e533377280d281ad2d4d611295eb82f0210fa720b81699f1215b4ce52d38c40398f42e9ebc7f26452d917b66ff7baea43a12a6cc1cc3e7a1e4eb0dc6ef0be8c8070ef6b7c2092203d42a35812e97b7d633b040412940166837e3bddcd0cc239c1b0c7b4aaa9784e19a09e60150c8fc7bb0d52efaac10c37141fef40a8e173d7191787d33c853484a535d2a022c9b4459608c4bb64c994da4ecca5f47d2a150956cb1c1a0d7baf7afcecd341f9e7fed4694de530f4f258f7ba3fd80b1df3a165d63fc1a39fa75ae8afac30242d6b4c79ad9d32ab1a5e09f8cdcd5c98b134a797ac2495fb3c4df409bc0a8dd5378d09833ac4eb0a1a9bc1e2dc04451579d0d805a866eb8065fcb57887ae1cb3090147d7f947ae7f204e2a364714c9f6352d59034e9130064c8992ab4d8475cb1eb5b09d16fd6e0965b025317de8eb78e792cbe202b608db7149f74da0c03e23a37550732c857859982e13239b1d27ca1b0030e504044b4d0898e5faf789e927c129bc51e9cee27fb3c19e13b8db52e3fc78b9fb0efa5ef3590ebd524b5e2ce750e6b8d669c8d589536e387b7b875ee980385876b62f5e48ed540d1036cf323d288618677b7836b59120acf22661525be9f553af2ec4e00994c349e23a23415cd1a66dca8aa8cb43218ac8e903ead1790f481af586e311a76bdfb859c46336455bf211af4895baf63ca56af2e558ee63c4006d7f53871084c98bd11bd8fb4feeea6611a17b3c6ca3751c7b92aa18a76446ee0f9562f781e17fd6b5aac4f72c51674ea122de53612e0d811971a0f1e76802369b9cce6bebd994e831befb0606b61b2a78d7dbda789212aa503421599487a5b29862468e1075bbea9acc24005457847db888421351b367e522afbac66e2266931c2f240fd9e16530c8a67ed112d56e3f0dbebad6384b889d32c2bcf8523773e7bb80a265ed50ce8aefc9281333fd4cb3f78f59b1ca463cdda7e2a4bf2d80a456f98ee8514e16a8af8827fa31c0253ba4b180e758b47aba338dd04516726e57a900c76cdfa1b28c861ffde80aaf37f1de8bccffd862acf126959f8e24e17dd66279fec73f3f38698cba3fbd29f2ca3adcbcb7186b133d12f44c4283c00386a9551be6777d15e9780adee1c1d220bd3fe04d8b0bea12c8504e0e5aebb096d1dd6bab37a638bc7ca68d0ca3567daa38df18d7151937086fdb747b602ca6d03b13b089b782983a1983d1aaa0c06db5aa7608e7dfd198557ccb907b032b392cef2c277c54b1e9f8c3f03ea84f9cf8a10d9bd28971b736dd26dd2802941268698242fe00f689c6442c8ca4a49d7f55fa9878f47512a5ab5124c10fc1f10a06ac937657d86bb8a0237fba6490b3b02b95826b0bc748d1334d95f4e2c1b8262ad3f7cd222df098499a0acf788d59fb79b0ae71732311528f14ce46d24c1e804c0fc42b783aaa43c2e9cf6e9e466ae9fed63f9b99bbe58a84400eb4f0c610317fd6d487579cfd8cfb38b4b583afceeac0515bde294f43d22503753bec3f237c91828bda2e9745729f9cf4866ce3d8a0b80b1e33bd841f411dea654a3ae8034076390bf127d1eccdf374ac62c318096a1826150e982c9756d6c946ad6c10494586ecd0a428130651d387a14ea02b1bd173db24465b9b93fc32888c1d5863604c566b141e6fca2140668c41d649a506ba0e12a1c2eca2c98a344969ee532e3090a2313114e85cba90516ae80e65cfdedeed824f285de43eaef169070f7985259722f3fe2a1d57b5a7860269a18ccc9bd386d56c1f5ea710a224d8b4b1537c71bb261c3b21ca75923eccd32e03fe54ec063cc90961f54025546e367b3ebaf7d98d45ee86eb0b6b69a636aff0008c0260b21cbe7deb14bf40a096484132198617582344c00158a1c5a7f9bcb607f26033d28b0266b60b3c81d80ae34912f3deeb26e512f40569ac23ca3c38e39a802cb181fcc03a230aab464a91172a86df4073ae8a966e4b5f1d121104371a6d7003ffde1e0c351c393588e70d8c7a5693d0b5f8231dd868b28752b35b4d6154d3c8137c25007094dca9ffc4015d0f1387589f24030098461093cb5a2dcc6c19dbf2baee8a3d73c67340bf85e1f7b2d9e6bc6e659095afabaadbaf113c331884099b85f06c48c59cbaefe11d3c46fa60252e14c2868fab5cce26801392e720b577b712d5cc1d28c89acdf58140835e250009a0ed99478af074ef7370b735b7386cb6d2e9bb7c3c4fc0f0c22e355cc79b72154291437a71ecb87ee503d7b0db56416caca0cc91f0af0eda6249e15e4ba555a2ef274e71a0fd00d6e0ebd85f8cc33a66866add43d59a93a7a8b74db5bd0d0bebd1016bb08f321d5752a4296ee0fe16c9f93c71a16c409b336886d07bc962fe0d18aafc296ec9e40ce02bff0b5eea80a056c7d27b827105a88764d053e516250ffd7e9e86026d26ef58b6f5211b90ee640ca073b4c8b120ea1dcd911b94aa853564bc5f7ecce0853c3e5491b423ae5f222676190d5bbad04fc983658e48d0e2aa78f264523b9fa2a7b3ac84b8e82c6e838572800e1d50f4ca4d3bc1327b485bad45ce0e3b2583704c3b003baae4d672be3293a6a621801a20a33359e3dd97107fdf5e33e7cde2a20310f722744ed15a502fa8784a99712f91e6d4917d2936c02c9fa72ea448cb946f57c045cc1cea90338ebc85ed3bec24166198b38b71f667b57bc29644ff5f8b01c5e05fcf8ea7c885e5b50fbd521593faa10743dd86ec2a3e39967a2f4f8734bb16671a81f388a1f90697dab9686891014be251d7ab656bb6fbd311f2a6f2f8c438d75a842d203e1949431ef36cf7fe10ceacf6f97edba9f4e08cc15fd8da6874497fadd30a9b77bd6d51ba9c2496096d480030220bcd23abd5613b35cef24bf66e8182658c77b80d3cda1480fbb974c4c71884ba4e2089fbeef42dea2bf35fdf0afe6cd7927ad7b7c9b1790c13143239bb659ac46a685e43b6cd2bd83e83515f04d50811af57a0db6a4fff4e79948a1c1c6d367bcd962791e14048bdd1a06a7c2acbeac22b472b4e8b0c92f75e3b9001864389b92d351702b94e34320e3c329d1a6eb9f6c1131f54c1a097eb74d782f30ac9297a5b78574ad9ce4f988c2fe036e1d898908e73291b3bb3168a32a53b0e4137ea1d966988645b51de05029b65b2280f27b18ecf4f84662a1234f3bf3654f778c65ad8b39e5b61a4ba5221eb2b93eba479c99aadd21b4d9a7e7ef08de8fa32290bd233b72ffb82f5ad74086dc3a81ebe82b63668203184ee37685916d2daef7c8cd95a4ee53a06ac44b9236a95834e36f032052ef6d219a105bd9ced29329c78de034f253697b4d493324c4446e4b918102cd22c6bd594db6fef34322fa59140c26ec2d565d8c8fa367c58ba3cb5ca5f8d4ecdae1951f8ad03cc3d78dca305fe78b8a766f13c9ee2f49fd3eb90e7e7b84c67c4a2d3de68824c82666bb75143114f2e080e42bbcf3280d7ba0082f98f8361e3df259ad6aa131adf1910356bb72c8ef59886b60e1d4c393e7833b1b4b3a7088efdc3d80f32a6327a902d5ba44074b32b77a97b9bbc5dc7e08fcac892d647a51e0e806747122391df9a8271a581a5b946675033bbccccd0a8fd5acf35f627d7242cbf41c704ef3455f7e74d24487a29326f23644b17c56b87ef7c0a3889b28f944662c4dd26044173271648ab1cf2dea9ba230988aa220847e089397d5fb8e62371b45b8f7c7946268e26f8a45aa12317071365d2c47d7c0b4ef0b55f5222007078ef66d73c268b24d9f5cd40f496572c7168a7a98132569f25d3ed2b322d29a6547b90c9a7993e330a42cf844356485c4f9061081f85125e0e4e56968159887f6c2ab57ae504ebd8abd503445c30fda8065545bc608c2509785f5787fa286e41ca43e961644c5942653b0bca201a4d29de345e5e62ff9b8bec16b56dd8976f176543ff4fd9b62181ce55e893560fec73f5ffc6019a707d5c1e339c945d9e27e7fbdbc2a4bfceaf635849884a780fd7adccd852e588fc31d88468bb42484b2116a44eaad460987f8fd9a3b9098f09ce1f9b8d272856b969e2d3a561aa221a19b2e2207bf40a3bba2c962d030e1d72597d15b4920f3e253fe6747a8c6bc5a961866cd2bd614a56491140cbe0475182ed054807406b1fe978289de60744553df7b2e042e5715e11ee564c9b8401446a5f23432cee936854d3beeaca4f2aab7a4d290e39cb207a92c71896abc373f17f5780737543b8d25b8220d5e96bb090eb96b28fa56d28bfbf4dd96adca2e4caf3d9f608b88e842707203ae301f44554527a46e4b54f9df861d9210df4e7d58557731ece124e86177a74728b672ebc04d666cd9c548f56caa83185a90b5f9d5665807cb4645a383c24a7d9f228cfda2627a4efe969303070d30b17c26d8b6f105aa83d4068888cfe39ca571f3e072436b311ef26762bdccb2160cb22e123a0d3510e8c34f8840d5941c2f5b9e4bf607a790859483e63364be1979815f350088d1c724eaf2ae0c7671b6e1419dddbe662db0246a370df6013d2de5b91b3d52c1d731602f66e4975399c4dae86e440b7fe3eda6f8eeea6227fc8abb1e55309e35f4aca4ec47d55e817a06e2ee38a55de3713cc6d968b51bc0d46484b2a2a4fcd95301a822e85300d04062b325f0cc11e238fb89cac2612b38ec5218192eb63a1603795af59b6b05c0437769bd2d764f75ab1c741542fcb5a8c05eb3a284e70022e9eee784836c43759dd3882a56a707d6a2b2ce36af9a70322660f559c42cba6a3a1d85a915d107ca6e6be230e71063f0bc85c1dbeabca77cd3d796900ace88b2f47d62d515a00b23b368a00f7338546feaa9c09f7d1faf48ebbd48aced67e868a5c80833e507ce19472606ce011e2704ba77ca0a37adaa4cbb13a80bbb391174c2f17d2c7d1fb01b7d64d23ccd8ffbcedb96863129d62043454e3a7d6d0e9b5617d2db31d581e687a77d93b95e7cd7a23e5e283be70ec16554bdc77d6b3544cc13bc6307e11e6f8b510a57800bc759ace219a29ece2e27540aa6fa5fb7fc62139fb415f404f9cdad91a753405ff8d131c0819f4a7c86075abe43277d15c13261eb542810e35faa483e6c3c84f772c77099459becdfcaa73b4c4742863c6111acd677a859abc4f67e349ca031ee15cd16112e3d4d1b3d36c8b571f3480cefad4d5d2c1015fa09910c955654c383c667204c618b52655bf01ee6cd5cd9ea9ab62ec01193013317d3b6e3223b0624e2b1bd027ba03264d98e5f2eccfd1324136a859c39e005b111875b5794f3bc9fef8ad4e4e8d2a94a07fbf405c74648dcb61ffb935fc9c5ab51a00fa3642fae9d14d6def482b8e5a01981cc3951e6b40c665b9a8063a4aedd68ecbd30fd1a10d28a224be9a6322c690a32502a610f28e3ab150e201e2b2b23651abd8f87eabad9ce93ba4ddda9426260e6bd4cde9b22698622149643a65c272b2d343b038c4ba68d785f8e5bde55a0468aa4b4fdc017579d79095c39e70f9b91cbf2904f30716d27330158f853b6544949c1ae207c7e1e452377e66a2200f3ce06a9fdf0dc6809eecf839930f0d1b9b2f47523b7a0f831dc9132aa9fec5f197f240800f78a69a36cc67c22e3815521998fffa70190a691fda521549a43b953800ae62d4f23e3b324681b3e237ea52e1e1bdbb57953fd1aff43d3d9a9db8975668ab3d9bf966a267dd556e6b59cfaec26757f0ca36061780defa4ea1f69b965e53981e4f0fbbcfc04225a9cd7ab6796dbf9d2c6a38e061471dd9169f0b281c726bfc78c86bbb1344899867d34c5241a4a312b994893ff1dd33575ffa32db8fb73e3176dc23a14b1959b8380f056c2e0a802a305263931e70f024e484f593dd2172a60a0e8fcfb852bce12c9c5c94be66be0ac5824b9b337a2b285dd4948d5be098939003b19b8ce470a8719c8de440e7901f4f154d516ef270dc759125702793954bcd9a99f3c21385bfde0745336a8d277b2b6f841c61f9c0af61f94c8fe8de07329eeb3bf54ba7d07fd66d6577500edbc11195ddba9e381bc6d1726ebf77c4cdeaf248077b84c5300370a6bf9813afec399586ba4844908a742439b30de8685f422588cde0c0e96d2efb79d99da84359d3f06d89ca9c6da6b25e5b7526a005169a4acf028a5e6ecbb24cb9731498ce8b4217f4d00d930a6a67bb254615b8fe0a78842a1490913b50dd7a2e4a7bae1cff07ab33b5656e5b01e63050fdab3d2139d9125551f26369325e5b271b1d765de7430ebef3dfd1be53ad54fb1eec7c29a124befb58d9a4f47079b610518cda30fabbfc1ea5a1bb513ae7465e26a43b3e55d878c4bc588605d474c2ccfa0d96d1fc92fd8712c6782b633300476baae2b7cd998173e6e145da25d5d2583d4e45511dc3aea9f4d5935a98e30fe310b8594516c1933997389f5788de35900ed4c507145653dc96992d5cd8fd40749ecb17072d611272a70483a8ec219b88ea5e9cd6cbd51d8878f8ea7f831d0de48712481bf265f4b5ffc641a6a25b0cf4b617e7aeca950a378a9730a3bf91c4bed008e7de4c70cee0da2913616eaeff8574d01a9e2fb0c2e0de5e5301837f36045c21af6db545f1e00579076e08ffaf86abc0d3563e1cb0736967ca4cb1d42f33a6043910526120264c3ecd41d4f2ce02feefd4d6a8a117f269c44e0eb5352b14372b4e70d390fdb1d185742dc4cc15bd93ca3899f9163980c4859fa009f2a6eb67554fbd2a5614d8fa87eb927561eab4f835570dcb045a4ce71ed21c4c7ef07026d20c8b113c072b075709cf8894b7b2748b972e7420722c9360fb381c51c0b63b916758e92142bd8a5988bafa179706f5638b87ba7d559b0262650f46d784a5bdf4ad3515e129039387f7d456f231d6ff49a0a92d67e7b7fad868ffe754da7099ac4d8ea5b4ec5295d450f5abd2ad5215566c87d723097d17d35304a2aad842bae373f15aeb36bba6eff1128a18bcd158c43c54afdd727f024c53b0fe9d553881972a99fd3269cd4c291ba3fd22351f56831ba95ca980fd76926e35d50e6268ac45c4e55e842b740e81c07e7ca9604896ec92ee4e275b12f56ebd64695ddf2480a49a9eb8e26ba4ba54df04c07131cb36bf95ab4e685baaac0ddb9e2b22418f20a4b6e748af378a8c9afb275ac273dea220c4dd76022ea330e4471114c387d42f78109065b19550860d09a940f5c42917f586793e85543978ba54db960fe53f824a9dbebacd685792dcfb9219efe432986f1f9bef9aefb755530070daf4cccc778b656c069956074cd217261e7585031d4f19b6ed5f2c18abd8bc9b25a4112744fbd689e5894d3cbf86b320baed756d439e8e6f0d00b8bef00541534f38bd80a4c9d1e13e10102fac7cdae7a3519f761022480748096d586df12dbde6cf8f318f5fcc73b894e31718a41d33691df772ebdc83c2e698ed0ae34e7b348b59a4cc19592269d859615348973b26ebeff1ba8b55af1e02f9d78d47d0f9a3d93d9dd8b7f7011f454bef2de31f3ccb692c9af0dcd2c3c2296e6b2e07a39bc8a50ee1267cbaceaeba6a627f6fcd11c5e1496c9081fb0c7ce98d761e089ed79dea8ccf44da5b17fcc518a1b80853fc53581ba0c4456463ae549f8861388ee65e092012c258101179e8be56e45f7fa0443e47f01416da14f13619d23b49837d73ffb26b438e43f7abe4d97ce7a7093bc4e0cfaaf6752ebc97425e49ffb4fbb31e6ef2982ad499e429963dade4e0fc0c94cef8d44d4ea0c7406a795870ee7e18d795d2c3e93f183feac1210acf7aa4f774f99e3e37f4ec742fb43ad8b31c8f6c3b96ee05c97fad12178304beefd1ebe75fc403f39557c5ed71195de8103f301d5d5e3c96dc4e4207d990c74acf1bac29aa2ef6312fed687761d7a9dbce4dc5ec535c905f6b0cae701069a9b29b1770ece7f4816240058193958bc341667fc1f5a0a766f7b9fe784bbfa465b3f1debd6d10ffedc8ea5f16644a02d77c9a7001847d42ba98870370996fb577e01705d802c306796e1ca767fe3af2dc6fbfbd0c429499a5089730aff0615264fd24e2a1841a0382263dd5d91d6b7d86dc1bb177a549049b3bb9e7b25e87baa96d3e29febdc3e8954865335815451462e6274a2d8472e033f9a89f71b4c94c16adb3e8a2f10c3be8bcce941d988d35b8216064cad555a2ad14ee3c93eb44a2bf3836002c8ea43ab927daac3f0e9ed5f41a6c32b9b131378efe8ac99d7f6ffe88ef64153d797d4f752a81f7f8f8334a661adcaa1db4e99508350464aaaf2510f07dab0fd7de2af4fb0406e4a2ca30b9aba798aa21c2cf77991e35af1d94a0430f0089cd4b1d39f314609e2f327690080d3876d5e8ff8dae04a643ee839c076b4287917f1e56bca18edf68def0f08d22d5f5b89b6e0d3632fa5178c072276673b963fa435863075e7af90b222ebc9bffce373b21cb6b6611b770ce4fdc2243183805cc08ddfb8df692022ab0429f7b572291947b222f241a06dfe7f83e8efa868af2ba3ac2f80b822bae90c0e6d44608765e1606dee70d80661416f0f1f761758d311b25c98e4c551a3d1c700539bfd7337739bfc73b9174314380ee81a7e852554dec526c852f7b60e6de4512a11f7358693af2ed568ba4b7ea3ec39c7eac93364646b8b800a55f4d7c0b029ce6eb3ae983b36a8686eecbfba0538df2989d27d04a8093cf70e59f6391122d5a810a5fa178be0f1d62d854cf0cb1d2308ce2586f1e983b7bcf5e6b639c1bd29a77269a1c058d3807fc182f9cf02a1352ef6ac5b7141762a679a212f032c30e6ce6face9c9a325427dcb110e901ab9241edfa826203394e2f6c7cb82f21acaee41d7eb347970f5a27482a0af65742e6ab4f197a3ab0da808fda40d18cf03d5859fefcd91315a744bd3aa7f619c1defa34723c1e2127781653446f33b6fbffa0a752452d1231222c18c5cd67613851008d2c0fd7a98f262a3a2d3ed0b9916bc481f64b591a93c352dac55e5ef28ceb08e5e719452678aaf55618ba379b8a6e36b1db0a493d85ff2f0391e98e721cd6f26a749024a52b4c209fd1e9025771971f9aad5c4011da38debe47b25928c12b3edaca88596f8be77763a4b2ca4624c5836f859b651ac77733e9b6f878b4c4b68c46c0073a5b0473254dba604deed80e84c315715f5af9618eb9acfe0b9cfc0eae528c3e22fef65eddc506cec6ebc39e49aca54493260bd3f70ae5fe2949d6f0abb3cc33c553831c3610cc8322f464f81135f3ff8e2b2350ea8f70ac1f6bdc7cbe1af9485df00bfe8cf58c6b0da9dd7b9f9887cdc1d91633c1047fac6c2299ee5f26cd72a755677f5061abfa372ced18035d29383deb91dcdf04a7317e3a00563883a5ee58d55fd4314f8b1faa1ef30efef2c2e20d70bbf85195063b60276a2701df4bdc0cd88c44ed989f18db4cbfdac237abbc5136b94ed52c9adf51683d16fc28096ba8bee0af37facb7fe14e7a7ed94948a5f398728a53abaf8dcf4faa5d7f9539b64cb2f14245a59a535b9eb968771eef148684784885d3d95cdc8a420ad997499c5d4bf4e14e1c4e46dadd1c29bab76184dff51f34598fe127ab5145fb36e691e74eb900c8a754d4ba7088478870030999ae14f3eba2f53223b45e70becb28012ac558e38100dd4f9453f2779026c7daba7bf4be26a1b28505d048ef7b7e4e553d3d7295540b0470999f5ce418b604ad272eb13d00e63b6ec7ab679d25621cb375b1b26b6e7649adcaa6ba48a97d2387de1462e720f8d890263de7cd11d0033200556e99362d858518dd0da8aff6cb7772abe489ac1c05d6b1aa773c491d5d150ec99939309317ee1bea9388173f25f30c7c4a6d5fc51a433e7cff67d8bc91efa83d8b5f3b5b2244faffc06ff4edfa4780a638dc7f6ca994553a5c0242bec3427c7b6802c49d45019359116f85fff7733fd1a9dc3adc3e6131e1e9eee3b51651d31f5064c60e8c183183d2c04f81fd4bc81dbbc1543a8d0045f82987d63876a046fad875b26aecc6d983ba5baa20ad470791a248104d232aea5508f9ff94a31819ab47bc15557f4a9cc85ebf7f4c9c2d3f47936c30705023388ba47934d97d6bd21a1905e571446de35ee5b76174add093bf0d7d771518a9c88f3df9a5de96fafac3f003e297f94564c75bc7ccff5c6f12f1a43abe40734cf74f59533c2930328b1b92cfcd8f7bce8283c3ea51ff6fbc69ec551b6bb49bbcbc87fbd09999ea98d245d76972b5ec0d82f006cb60bc98428a989cffd930ca0e261fb4024e5a29d5d184de1b9d01a2f1ef9f79fcc470aeb769025ade69f966018e1676e4bbab987e5789dc630d7f9dccbb4a053c2406ef4b6ef57447fdfe33651dfd1e120c04154c853cd022bfba07bb4b17d48683e177bb013543de08202ac75dc583e4d08ec7e11ca186f8473fa4731236fc99fc8a4d1e2acb1823b2fc231bdd10824ddf3e38bf4110f8144ea93b22d4ce92744b474902771797e8b4ee7149d3730e6d24e99e3ef34639507e40a836f57c3d0abac17ab4d0f22f2ba94c98376fbae217b27def9aa4c757bd6a9adbf13e32992c2e720ded972c18e24a6178d7331d61304dc2e03fddafd344d21fbc3241e263ae9a9e585a44d1a18b75731c26df51ab6999044d9cee41e1ea3237ee5612d5401536dd4c50a0ff3b67f448b8f9fd604cc9ea0ee87bbfc4242075d24625c6486ba53d241b84d43a248418f340580776e4e1b3146d3558cf6c7919d95f0fddb86d1838a2ab0fa37a82c4b64b13d65a43e20a45f6fae17551868cd4c10dd8b37e5183f2fb578f1b1844debf25a877f37f9b581d69d72171d74d4a97564af4f12a725e8ef8fb4420d4c52d004aa0f6825603fa10fbee1c26f4bf585a79c5db0cbe094be95538afb0defde29ab1605a2ddb2fc37db26574a48a11ff4af785b8906a7c3a854ea7cf73ccfa0cff444aabe61d5651722e2d368c2182eb1b1962a2f2542faed72f9e1698c72b80c34a467423780bdefc10bccdb2d209223c5f347f9d632ec7fe05840e4c1769207caa20b223285114485d14a75fac5c5706594bc4ec41852ea60b48975ea14193d443eb5bcbe28dd6d0d0c3de031cbfe2ab3544d700493c0a7e2e7960dba8daf1be413ae5820abb01cf0514a276cfe45d0511b1d286055bd1f3a9d944bff98ad812b250bdcddff7f4757ba59cf6fa4aada1a548e48fd5c90dfd4f5908668f28be298b940a137f887f359a47e01d49d040919b5b5ee0c012cec14c4236c636b6b52b9c22a25a73933f075883a0d55814dbf9008680be48a5a11212ba201a2492e70d399af740986fa5f83dcb5e5d627e97e7ed5f0a24d7f31df854eeae42d7c5d9fbc6ff6fcd246efa9ace12494b9735bae804b24185ee27c15f9ed3f8070874ac34cec7c9379bbd0c8d62f9632ac7761c03dd16127b347d16598e71649cf8feaa25cb55b93c61c955060e336d1560e6a08613097710d86601ac372884408c19e2ade265333a6e8d6b83eb71d07405fca083f6a583172f3fc17f68ea1f050cd10ca2ad2eb57898e93d0f206fe4f84f2d67c54fb7de0e4f3ae66254524d9db6c788fb14649b25b25d5ace24f9e420854289f8d3b2e53f0bbc15f47569de6270e66c5f351b0963a5d559803fb3733f517cacba9616d5122135a7baf27263858f12476eaca7b56a57b71bc48e81deab40db9223c41820a6d9539389c6846379aa46f47e038ceb6c64070cd457be4e450034667996b593ba0039083f37a06f2c434e1e282a2b6262ef0893605b8cb8eb306321632780fa76164974601154c666563729fc9b063032c04ae3b299e22729a09182dee26cab9bba6ea836368490f63baf276f538b31899aac9acc8b47afabc66730d2696f9efe95f1f0f7cb0e3836fedf5b5ccfeb3ba426795a38770458b99f302cd997d275ad1e1787372fedc16d0402d3b7603e3c4cf821e8305913d5d604d71d01809f8f17fa04b07e8ee6eeca7e6e1a58d3583f36f2a25a5626d6c17d8ba4fe964b134cd8b3bee26052a58228be90425999c758ce817991b1ea9691593aa1956f36a28d6118e513b0bc08d7e6cde5cb50aac364ab88e9c6ce727a2dd42db1758cf4caeb34cabb476d88dbabebe11914314ab296c31b8705c34cabf1d45afb051e429b47c12c5403f0fcc27c18b85bf2510fac68c42565042108c292407756f4401f53884774651273cd77cf7b048fa6c7d5edba7ace27629a795b7d845806be4b1ac580aa3579b4717dc395b5d815a0d0d7db66b759e52eaa031b97a9f0988aa5b7ebb3e5e07ec71dd2f5f2d891b8aab2cda877a39d34c9e1f7386a2c4cf5695b6dc1a1dc17d53d6794d7fe3ca6ab993f1cfc2f2b4a95e03167fa792ddfda27e198a398762d8c38d669460e1be2fb32a5aa278ffbc51c6d1128fffa1bba93ccac8d6747d9ebe658e88d433ecf0dd97a496bfa9dd721c81423ca74c7a8d347147d2a504d18b76763ba448b33b1661030168b8a53cf313f023a92379a2b6d65e088d002cc23aee4db117f6fe11b0c12c2871a1a05ffdcf8b624b63bc06ee468c266ef4b7ab09ed0e9bfda43a7297325f3417b8678b75b302b8afc34c8bb95dd37db7a662b574da8e38b32925e45e266e5a0b0a6902752f4baeae46d6538d5813d58391afac0e872898c82e1c7bc86badcce736ab563f6fba1724b9691d5f32ba08429cf823a5cdf3a455fa0ce29d4023fcc17d99087e649eb0083a62350b41e272e4c9693b4a933e16a09be26bb3f698ddb254463b56552a70914e5e143bb783a6a7561093e377f352d684ffa85de3cecfc03507dbc6a8b18a8862dccf3893158732c8fd8d271c2349fe13f54767002bbda492393f58e559dc776f22e831156704b0984b3ff1665069d26bf685aff6dd0aef239d3cacee1afb2feb51cbcf4d8561a9d375713cec61055621eaa7daddd8d6042b15338af3b08da9b9209aa1ee71f9dc35294d0ca22afdeee8f37d60896d5f3f14cca21814ebff1acada73b4c6dfccf097759468af999e2870345052ebcba77a3de19f16d2d9d675155c8211cf51bac12542baf9d2baf3bc7afbcfc327c17c3c9d572164f60c961e218c5afba9c2419c1a45550d7c6df225078155258d277e20623029c9673e7ed1d0db0dfae4c10aae0cf4836b9cb4425deee1ea6c5833c56e5c028a7915ad149636deab73dce41c821a42fcb9fc4459b72c52a7c227740ea166a0613c6ab950a33ad3a9708d86c057d34174b79eaa98f145699d62af3e9cce0b747d802504620b52e140106788ba0055c0ee786f0dfd04ea36744be408c3a08a93192ec6b4018f9a19bea5a64a102a1937686853805e971d5d3f875cc5304c28a7228b956cfba7c8f3334255cbd4b5a8fa3ebe5417d728899666fbec3d8f386445f410dd2ad167a28c55bd4dd939548a65438d65ba44ea96963ff69464a7b4b7add08f7fdf52d8e3e07a1ce16f179782b90a52165878c28f46540bb513a0efecdcaeeb3b55cecb11d4ce45ac8c19972a5cc29a874dfac4caed3b7bdd3556f1250a8e1ecb0d4b1be2123ac957bd875d97d9a38b53e70279c83e5c8454db2e2ef5f331d7cbf30813080f984e9da4ca359542e849347e271fb90370473a8aab128e1bbb081c6f39223ef58c6f00145cca79d7d7c0a3a72204305d1de213228adf5d48d6e43389a469e129e68e9af5e72899dad64f054e77d317c8f349d216c366dfb7922efa4ce8b9d683cc63fa0b694f3c9beb306c2182a2b6bfdca3b818121792934006fcf00a8ad5e782fc029a2814f438bd20955a9965d9cc951808bab8a88a3ebc9fb087ef3e985fa0b280fa46d42bd5fa94dd1cc47c80fa4e59fc9152ca4191bd62455180a13bb9e392863ef2f79926838ab9d476f272613326301fc071c5aaf57db8150f508a6315bfbeb9413fcf6bd20fd37b11c354f6e5a88818296c72ea66e734c934f75c9ad0ea05e2b66d3135084deb455c41e30cbc05e0d4ad348fa1bd3705e2fdd2edc94dbd4a8d3cca562528bd4127a24baaef15bc228664e23741919a3e431fb9622fd43faad917d5ccafc7e56911972ec3f65d0f4abf8dd29b5a0bfaaa19a834c7622794a373f601f2aca0e77725f0f4297f2a3f6674512be766fbcc4f7b5146bfd39ea30472e295d5476238a1aefd0083d87820cf98d191355c564b966b55c891d65b17d466d299385a41df9a1c9720a79536629e5d36fb805230dd15132b5fce621127d2d9665e7cc01efd42828b688a3eb978980e6f9f5599d79839ecc61478f0e504e072cc225778e86ca18b710398fd9cd50b898a082d0ad255b62d542b2f5f95f74eb425f5ad1529a28209faf58570ffe0bb7abe8c62352f18ec1bb8979ff3e3caa67c1ba027e4d6be0fb82304702563693603225ae2a7f1b566dceb8464c59296bbffc97f2f21f8d41ca63f990e8779a30c35260c9e3f4707848368c4057ae20e30bbaf589e4b727a3d804bece3d9788e595b42ac917ef7bdb70874faaa1711c3ce59d65bd30f2b79f36d3ca93272b1c3e0721d771c11fd9e328b062425d35053eeba1c204d71c07e79555b7385bce1b3218f08e14b926caf8b87c073d1237da8d8dfc8075d343a207a3032f9ad168a96cecdc4d2636c7fa449e0011f8544927cb92197dc57397894816ed0a590eb9f1e7763507314d9a651f3807e994c0f18a6a7addcfe735eeef5dde81b0b92450c4ab575cd7956f3e0d37dfc6116f7b7413904b6ed979e2205936a004df694395f511d4b1b3f1e9276c49da39bbe3ca1d1e0d86d10cb0053b037f35aeb805e8d3355c9f6fff9c335a11738b1b270c374147a366c8e8913a299b302f2d6cb6109384a2369620e2a56c9d3c956091592698ed1faf50fd46b262836140713e6210e03d04cd6249674a51d608ac781711a17222f6c85b3fe2a0c4f780bdca31695d5cb17a3984bf1f72c230a309da1ceb12b859ec1ea453d05a84e04de1381276304aa05ba3f055043e3bd18c6f7ba8bc096494b0446df755850346791815ea51bb98c33e734577c98cd0255c71d192876b303ef149a3068b0185776ef7a445b01152b1392b23d6d905b9078e1c4b7f5af8d1ded9556898d91160fd4465596bfa5d7a3630e79f5174f8de1534f5921be96e46dd26d1f22652d235c2b05d4dca207dcafef2954a8d2af155b99b081746a78401ece0c76c64a60b5c6cf4c3980bcc5ecde28a26d19e169ae35f7a3c5bd4b4da969a78915054b20f86e1a7cc22bb6012a2181a32f4865bc6a7335d9e267b9e46ef6cde01d1b3e6099fea4d75add296ae47390c792b1bc1b66b7199a4b94c922db96ba79d86fff3f2ad506b46ba4337fac4bd066abc388d39fc86b2639fa6b1fad883a0769b20ce38defec685951368e96aa74c2856c1e3d66a786b28369f3415ff9ecd0531534445ffb6852f86bcd37d07c4601c39d4555a6db5aece2b9980c0d145db42392b6c183d33f83088feadb3db37fee15d1fd10cd7583a16b1dfee01a93a0768920bdac0086e08ce616c530c8b1f0bb8ae3a20e8da94cb0f78352936ca5b61b42b08f9bb1e234aa6731382a90a18e506c93c21f7f726bbabf5be2c00b7217e5925f3c293d6c2fda6a199494f83522ab15a54449f1e25ab5472b4f0f404f196e142e1de6df3738328f036874f769964457d9e8c6d5e39e1443ac99128cc8d41980c374f06128de463637f781433f63286f9d66f26c4afe20f022d42d0150ab2262d9a2994379fe89e0191eed6795fb6af9c60d39141334605a28d466c7786c00cbdd2e4039308a8d9d797ef3c03858cb73d4c439316e6c380525676030acf90422772874b2f3798867f176b0064eab9890810ce08dfd0b33ed7512b272c7644ba8d6cfe78dd90c80ab5a849e1cd1c410b3ccca820fd72af15cd932812384b7b606a65be517565bec48ea91111a71bfdd2010b50acf481bb5ef22bc61bc2d0e8204a6cd2e87cc298d8ef42f1d5703016f430b6d4601de39808776ee36b34f524bea5b88c2daed891b4baff15c92fa1cd3f9ccc1f32bc9b7aaa4f544e55ee96b24e21b2222b2ab3d0c44336260d3bda5fb2c42afab58791d1623e21fdd3747a72d839f8fdb9d0c3492f9b159350db6d96d2242a7c2b1e3c665871d88dd9c5f048cb227f28cb83c56369b483f091e1542e3a4b388c10089e7fe243f79ef1111d4175fbd826956f9f8683a191290285f60bb496b237a8e49768c567301881e1a28656fca0125d0b4c6e0ab044ffa362ffc487b38d364140b9437e50112af44eba9c8ebecaf86eb7594fd60c2d192aeef90da6903fb25834c5d4f1f1ec42f5227fe58439d19329d19e1e0dcd246337ec52c8f301982327e79558423a3eb2bb5ea441671b739c97057a711962cde6f46216957d58e601b2624239c27f5e2a9a95889ef5f122bd4a96b09e9fee0b8b35719e8f1f11aa7573eb44a90c61246b492fb39fcd2e49c059e01f966620c0f9a2d86e4b8e2180c24bdbb97fe3da2cc3f794342093add4dfeb1a1f4c911a96070f38647380fcf08ed51f2b77b88e0d1c13b7f17c8471fa56fbfd99281e143ba3fa3772e7592623cff819df919ea6363c807ca50d8485d29b3c0c78e242e4189bda85868a170a48d29c28ad7f9ac886643b2c99d3fcdcb4b17cd83f89c0111528fdc3af8f0d4ff9c9bd9d41e0711b447c005e836af6109efa842ed486f0c6372e546d5def7fc1ddbacbf97f0ba96fb2b46a418e715533e802f55cd442812f589698fc1e92faed2fb2d53d86b2911d9ebb1609b2e4966dbadd43d9142a855c5c73a6fac578910193de8f186563e7780b9dd4e1d528a51da5880efaffe5ee078954ea11bd76ab2776c9eb95902c213440a974d237b5dfbdb4fff27159e90955ee0332ee691dc6324b99d4a30837942c5890fd5e1f6fe005c50071fec105f2742c6dae12623c2969f8078016a078660ed1b5f04ef3a630210e8959f2ebb37adb2ca2d3a15da27d4a8d0ec777baac3de91333e2c0f26df5f0f69b05f3076dec51012d6572bf811b91cf0bbaf422ebda7123c25e0b9c386a5161dd6c3089aa71de5f772864216fdab09570559e4a77ffe937828c7b2c2b58dfb4c23298ada4df891f4e5d376c63265361f550d8a768e1b27d67be71e215e753afcc4c374230871b057abbfb1d852cef9a1d0df174266d50be0b50e54ecab683e0869a4b21de4e6ce15ee22e62df34e1008d9106da562381e009c99fe12dd15825cae307a26712f334754631827ef3ed7d05f36a355a29d17ec509d9f544dda1aec0685626b538ce269f6c2ca1110403163b3fbdb5818b0eaf643a265ecd6ea7815db9e8da1c6c30db9904dbc1e9a8c82253bbfcff44349cc39a9d5f470c4d3e8dbd015efd4443e72476a6971418a0b10ba536a80b2afcd880ef07cc93828b9f32e7e0941a3d059d9f46fd2420d2e2d5c850021aa7ba65c2d5c8fdb0e3a4403c718bbe0e5b42db670bb34f4b1544a53a7ba19dcc00f3a48219eb4f6686de1d90f1830f0c0211c104bef863a2634a06f561278ce71330f7e6cb5660d35673e5a38ab959ab42bff14175579c391072367747de106fca4065619c3356943ff132ce5506eacf5fa7ee0da753c9d8a32600521d140d4dab28b3216113308d99429e97881cafd642cbe7712e6427ce0dafa678a40b64832a68f6e6c318e56d7b6769eda2e8916d16815e33ce2eb718718feafa314d45c0eb7cbb751c5204ad551c58a5eefd8b7918965a89e4761ef1a6ff90ad813e0edbc0d1420672ec5b154108decc5c7ddc087f357b6643bcd59f64bf2a9b254ce58d8d212cd94582e8e7eca465c6a4044259dfe1a4f906111f9f715e2ecdd27c08618df7e5da2871805a2c8f9233993c7e9f73eda97b6a5fdf2dd8aae089304b64b3c8de5d9677cdf03f9f59b69ec83880622bc3b46bc78c0af65478a4bd1632fb558905a563cb742d0fd2745e904555ce2f47c4a14e650c454069d8749e9d2f58f93800632840b62cde7cbcb93e458ae2f09f79b5f7f755f1364a79d26f1be3a87575c6617b4a546b591bb16c7b735b6454e97bbc4452c48c3974458c2d0f73568eff968afa18c8e746331590a4566b986510924b2460b8b3fb1159b95f0bfc17eb1f6dad0318c34ae055c688f6b90f6e95c798e93fbd413b587788584ef4e8889365480922450c36c6df79fae5d3c60a3a6092e5442e43298ba88f8fa5410d2df3cffff25b650f09433ea60b3d5bd54bfa635fa69b890d5d2da74676f689c1cab6ce6a162a3b453218bea0ac4423c61ec8aa75cb5ff8fa2780e0647154fcc1f4cf93714af067484840d0e9ada936f0b4aa8fa8b98aeff43999c97a091528224713b89507b7c34a31ff2f9503d956d4f5b42c2ba9d821c6a8eb330758505b36b20a25a03a4b70609ea0b896602eb8d2bba7d62518b3a7943d15e34c3db0dea80d61c13b861805bb5dd6d6e7594b4041267dec04bd14399b3ff01db70d2e2a24e63961f6a0f4d489860eeab6df658a84d60bc92d0dc8a8a2fd219357db13673188b12ca6367e75ec363ca95cb97ec787ed8996e6e541c4f55b15c24367ffab61eac443082c8b294c4b324af904c63c8950efaea9a099fe144ba05e54f4ff0c1e025c4062a19a437520b9be38269675d4483626bb27e052384ce7a1d71814468efafa1f95a79f1d07a6f600103338ebd89d8bb775ca4ee18c616d5213b030709b624025c920ff432910e480d1553dd8f9a53d911a0007fb82bd640139e2647ec9fd5c4d5b56417675a5db97d667f09fb7971ce6739819981ca12d74473a75f558268ec932476e6c7943ef58b890c8fb59c7a089212ae692857b9cfd48fa6b4572473f752da0b97f3e47ccecb4e835fbe950be7914811610d173229f2aa75e8b225c634108c676dac0d406074cb0bf4bbc5e838fd64e8e0e49e3c0da2e3bf09748a887272c82eb6806fc1f3cf3289be0425baf27cbd54ab87ded8b1a9397903509202be5221fdda550c0733d5b2c54bf15e5bf71b42eb2021f20c4692b735b4648d3b187aedc3f39c0c6c8023073d2f9b9855fff8506565e87ce28cc1c9c2c7b63354f98455fa88bbb0f6d11baa63c4f449307889b615984d029b289e13a6a4235ec8323cadc2d82ba3059b9002ba147c27c93dec8879ae67500a3afcfac5b2c9baab80bcc104eea291dcdc736eb03ecbd788ea7299e113e0d120683b5c775dc27fa07338e5625411c1f412a21ac11a2628de787f9100e7a4e3f7fd2e0663db5d87fb70a0964c6a32af82b3d2764d2c46145cd2406fbc585aae226885fd09e22986c4223db8cae2af9ca3d452e95dae44f92670447f5890ec4578398106fa670ed52fce2172a103fa24df9ee251eb694005d13098037ee57aa72364fedef69c0407a627e0035c9d62c980bf1a79ff33483111a453f240bc9e3904a09c83120af9755a6a8afedc5036745673c98663a7ece6cf465d381695ae045f8122b3b65034cc900d1413b2d3ce61c1815ddbe1445b9ea81df09aae785048508d45487260792622d335208b0f0bf5063dde77c593f9675c879de6af8e47f8fe4fb03b0fee62cc596d1b840feff2ac3bd4094f59272ca1a07725aec21c10711a28ccf31e3ba510cfbb3ed9966aa8db38866fa89cb0682d1a18544dc38fd71ae10bc1f0cec2dcdb0d5d519d2c9c2145d1423c6bd4fcad8ae03f080fda372a9f7ff8fb4d00a51b6f0f5fae849a03050ecce0f2bee44b19145f9144d18aca781c70c41881fe5e514a1f9674939b318428b3fa75ca99f10bba5baceef59e0a0fa92194a0e028ae9c29eb3e0e95e9089d02f1ee6b11d5d8a097a71fe48e2c547b211250fe01ed9daf4c5a6c3ac67f0e8f80c262f88d14215521be088c0a1b8e490a38eec59709bb2cdea2f8281d68505d580d3ef106897dafef98149a52fd351f3f7b15128f4d27179ed15bceb2d1307a0e41bb05b761530a9f1bba1a06e305785ed4c644b4cefcbd9d7092fa4b1e30dff111e6662f9984e9c1d87ee9512e8d86c35991a85ec566537498fa80ce5a9b8ac31122ee6dcd74b51aa64ff0337bd45dd4f4e03f87063ef1cb92d353efbe74c49502216f693ae385a019dc55dfa79ced33a8480b0814971d78df9404821a8ebf9bd7a45d61a8d7be144ab49f3c81dbf90530ca4e48d2d5d7c2aad71d094678cd412a4c40971199c9fd9f64710fba0ea799f1e93de1bbd58fc1fb2ef784fee19d41fde744b12d921b3e7f08eb5c4a23410f5bc837d826f0c2ef126d15fede60956b6b917c77fdfcb836e8ea49ecc90a61c88c471f28a917d3eeebd24c54ab7f3b046e23f9b3bf57363629aa4ef2deb7b8a7e0435b5d2eaf689b27ef64ccdece89c9df0faab07a244cd3f3b3f681d8b6a58ab7e290635d3c1cfd54b0a74584db48b632270c87d93824cebeae2f3584c223de949cbe1601936b800d057c7b157c2607261a0e6e4f7914f71b3467d426712ef2e4474cfaa18e1c3ace31d85f0f0ea42de4c372e90b0faf11d3ae9390a4f835981d9c8546d0e58d9aca7f334abdb83efa357f47a18935ab4981f9dd5aa2f3d213664cb40744880dfab95c39815f257d97492f23925d4013d2480c03c305bfbb9d6bd82c61e1aa293bc6d5df9f600029325ebfef5582b218cd3560808f1d1e6432de1719399d10ee96d150cc6441397f3d4ec44714312dbbd2c1ca9ececad76d2d6d7d59708a2eaba1ba312df64ac02984c75db4f502e4fbf77434cc05851b47dc8874d7085c083d15430197d184c5a88fc6f3fbbb072f7633eb4b92e2bd3cbc57aca6c4afe983ff3f667e1b2b5a3621be3c049800fe54b0236483d9dc514d87f68c914bfd9626d837b73407af8d9de01f56fdc5b6ea1698b9d6c7ff0c8c603bab3d38a4b6d50d80ac00607f1c9a8211b2104f823ebd7f36473567c0a22f1561081ea0ff43a863a17431f421e8fd52c36e7780383180c97e94c4409008f943b38604b13885083a312f5ad2021584bee1c76574379926710304439eb2fe37d76c8250bf2c164033a3da30bfe6ca4e49e69ae4ed77ece09c55a0366e768b99374f2ea34e489dc99a5f022338777ab090c0fa4f1c2b58125324473c99d39b72e6c679b57c4458c8c81e2f9b8f60a93b06a2dd3f0e70158889422848453ae39d8357dd74a7071f4bcfae64de493d9f285f7dd7fdb8283e1c705e7913eb1a505f9e453372ba2ec4a57e7aa0a0af065b921f43d4e74258ef9c39185d419a5023e12b9eda6ff691431862a65ecb7a1fb3bc30e4036a1049510b7d4ec3a98c15e54f2bd48f462b0cd0f642ce63e24a13a45ea7b981d5634f52dd63805fb361f084420a48249ba657b21cfbf597232abe83648fe84540314d320b9ae763e899469cb4329b50eecbec92d86b289a03d68f47398313345cd5e924928ca53e8af87b65e637bdf0034b5d998872d19c23ea4895f9218eab93220ac85716e94c081653bcb49a88deea49a120ed5ccd601575ef20b918cefd10500292c7f47f9c7deda3fc22eac84a615a709b4fbed3da029a89d478059e7c6e5dd848130beb71ccc0d28f748f88c02e166424b8eeaf9a9391ab87e8c3056cf41528928a361f2d0e184c56700b161d385d7ed2c3635077fd3474abfc5b4a95ce316389123e446c7a1999152b98a852e0f31f6728d2e295c0b449bad867d56f655e619d878ef72319dad653374ccb64fa5b8555e4ce28fec65f512125fe17410ae9495e925d58c91df7161f7b0f787e4313eb60724768fd4804dceb63a9e6e6d8cde9f77bde9eaa81210eddff45d2b2acc529ce7144910fb349b9019b9da185e17f2fd37cb6d9597bac0087c0ed3adf1f115024e4705571d404956dedd57107e4af07cefebfd87f573a1e41f11c15017b70a64656ea972929503ddd1c9be69f1d1f6dc84534ddc660b71cbaed90d1742b53caf4336785d06b86446ab2850e6893123fda34cb1095df2a9106a2dd0060a2b910ba4b6ccebf05c9ae3b1d9458dfd9742805af78b5e18d31d02215bc45c7805a0e5e1f19f605dff6157e6099fd1e693480fb756eba1aa507a5abc42ef45984d2559e81f6707facc5bf60824f1f1052b9f3158edf1f64ed34e33b7ae2e3e182d89649d61561f528be5c83bae4b345ce9d252b68e99f592dc91afe25e24826de9212a05a1bca0fb33c1fe6e40ffa38628bee0109087e9dc7e67f545d02e00c6b5fd5c3d66d7fcf0601eddb3dd315be9f8a0bab09b9109112c4eba66e13b03a54496b6a3e7aaca9a145c3efa84bc9a0bd5bb07bdc9417ef4cffcd18166e23450704f2cd6c9ea77028face3d3334a9c4d2b9cff2f4e1b8b820a99ebd9e635f989309cd3d7bee64ac703e9faf3152e170fa949667fd181d70f126e0a3eebf0d54fa553b442a75cb83070fcfd200e8504d1cbf38219116f8fa822897199447b22e8bed511bece429e542ed23475298b166d6dfd86d1b861dacc67745fa1f8592765a161518e1012b335f5239110bbd52903ad184507dea602b1390c3c5b47d8ad5dab384c4113f5128110353fcb6a46e67edb2446ed4422ae622cca36c84535f894d823586a2af6d673be6032d5ff65b6d359a37096872bb3610720dfec9a810c7457e08947267536158306107a753c3598e8b5a90b5f48c7c0f4e8359eb36598100eef07deddb3fdaeed23204353085ae5b13549433a26b50ee38191f207759e3e1ffd1440ba3184959a3a2d62c06a60337bb82083e5e09b80c6e4bb3fe8155148cf70dfd03f74102dfa0e89acc679af99e827f4ff6daac4e4e10e46daa680f9aac9cd0a9059c7197d20333900e6f11d31678858299ad34c5c308fce532e8b96969939e2d60aa5be5307066699bfe10b716b4f9f33423c9b5fbef3f307cb764b0e29262f1a4a9dade720704d00039acbf5eb649f7edab69fedc88d801837b4820f25456c1ad945ae3995a2c625ab43294c3dfd3e1f83d852bc94b15a6c5ce175bbc8fb2e0b452bed4dc8e307aff179859787e0fb768b57b54602ecf3cc79c9cef1ab6560eadf775a92127f16d66cee6b363db2a152f4a42f5e78f63b7d811bd0e7e64003e1569f8f43313d8876eb4feafd22ca547ba01068b9844ffd4ca4fb4f8f1138d7cc5637039328cab5d119786ceeb13db3ea544d579c3f8b450ddac039864d664e2448a70354570c81b92567528ebc532bf7701b2ae5df9e3d71bb58f22639373010b5e8c672457d1a663a34afa85a8b00d7d61376334009991083e1d0ea33a078da12505a8a06b4cee83f493614339114b5630682b848a2dee2e109ae27c032d9077ebe3f60e65418d64114bf9b0c09e23d76a62e75d3f995e0ae4c978b6025e3a15d937d1e620e44bc52fedc90c51c56fa2b60e59618c589444920867e17ca5cb14cfa83d8d330d734c3f77e59922e55668bdfba70fd592b9f4da36ad5b39cb4b6fd211b7cf7829825a0d02fd824f164cb708ba1c1c27172f7bde150175bd55402f39bda2bbd9e1f2407327e359a8473fa57f86a7506d456197204b7cf4e9ae641dd31af1b5b257a8ff43238d7571517d44f775595ea22dbe29490425e0dccd542f511403341c52f0000a26c9591f65fa7020b21de4cbad12f28d9cecb35e63dbaa89a701891e886a470c614fa32941a8384c2e17c324650cc8ddf75c370f534b010ab49baa20f0a5fffa19c0fde7b4c1a4a3f7fa41896cf2abdc2f5855be5ff5c64d9fffbf0bba1925161004c11e21cf59942e534f26cb996a30aa260545bf5a277e8acca5278541f8678359f4b1fa15f078d5e708751c6975ecae8e55a8a89c7071803126e495a2e5a96111dfa55c6d14a2a3d60cfc969e9a1a46b1467f8805e6be600930ea6138005a6a476598f88e1e568df264a424c4ada0ecb886d1612054f85aaf52a4819d20d5c3377603f0be8faf3e1f4eb11d9544d8f68e764f3c73c02cf10637dcb43227a0814cacc82b63240ec8dc4acb2d85115a47fd14459416430a597e6b86c0053e5c4653733a3a381478faeb77c2957e93f41170fc45165443e05a600775ddb2d06ef5bb24cc75886896723a8a8c7ea0cba1a965dc0f9d54e1365951f92fc92eed32439b085e55e33af137972fe89aa664bc1ac715055c37c3c7aa0d985bc8a344c3c7a29d28a6ab5ff55fb9f38b761d0151abd98db40d9414f16f01c70ccbc74708216895562f13fdfef797d620ca772719a2a425664c05d2cf71900c274627767e1f7217f8f0382b550d1c36bee701c291407a21cb6ff1136c18696a6947b1456a07c6955292461ef2d9551051b11b66123f6d604071f1dfaf4ae30125dda4de55970a7ce4d5c72568b1d3f7f305c99694dd5093a26ee3159e26c6b5a541ccd1d96a6f7e5741d14eff577cc8e9fffd2a14288a41b051c64265a7c532516c61aaf14be69b87315c91ba2644c4864a3198a0210a649b0459e66acd33d0af57a3ca41f612dee5e59d8294a2d79270fbd413178d04c4edd2161c8f61c0b9e9fef5efd0a682594615a2e25c72e57badedbeb35be3dab0e8e0f281a53ef8ba87aa04977ebd9d48d801ef0401a9976ed57aaa3630dc6d92ab795fb2d6db2ead3c7770cf6097f245854b51c32189d802f9e9fcec0247365f8cbf605bb1529a019e335ebe6b20316e04f5376011271cc2133f61e48cd548a9b1678b6435238bf781e5b0d0273bda18acfd6cb13b53f0e29b560f931e1bfa95990ec585ad5c2ca76c2c5af26314c4932225c10de05b169d54605d1c5f38e6e67484f274f817966440110cdb4f2d4623181623861f51ddb4bde3da22e129e33d3da7dd54e741ad32a37ca8d24e44555e807dc5da218c6bf9b163982ea3b246199e9670a8de40ae52f498b18f0c4a05de747c5c8f22a9fe52792848202049b1927f99bb2fb79bed9d01b022167acf36424db4c4db300b33fe6860736730c39b34e46a0c5fef4ce2b0319d55c697fd07fc8cfae0e21ddbabacc47ad47d67d7643f44a32d9b4071ae54cf90b40dca4c54facf36d18d723e924d3e9c566c0869ced05810dbdbe85b0dbac1ead3c4f3412fd3d3822c4d70b87c5e8660d44cb8ac7af9943252756e7fe052b48e75c570e24436d2169a9e3582e875adf89c3efd7053baecfcae80d415acbe86ab65d67182d17d9a1ce2e477e8c4c05d69c15d0f84e7e423c3644517259b38ec137fc15f5781ec70d55b6368fd3d1eb66c307ca308e51764453f745f7ed4411f85a01cc3c966945f3fd57306e4b38162c66d234c64c033f93a0c6c76d7505d13df1edc96356b8f549889b44570a6e5828b7c931f084dc350fd14d2e0e608144b505ab7024a05a0f364f3f909d92a5e51a8515c21a0f6046f3853ec468d0c74eb66e91f77af7b54e8429e1acc5407e94d7aa76ddf90db6c21e6f9f2585bfbc0eb8027c2a6e12680294301e681a598b68cfed99f49c2f7c186db22647c6b4e0d2c56b3e8635978986659049ba41589d7c0ee732071b7880f18b411f01073d9528413ad5319d1e4170c3f01bd46008348f91ef874b27d3955f221d533e05d48a929c01a30d07b122dd3a4f393b9f3d5efdb549dbc3590d59eef8120ff9b79868aac345adfc891ee63e4426851b2863c298dbb8c6dbfc7e740ae8267f2789faae78a388392d6d08036d493b16d6e3f695c744af5ba2f2ca1b3a94a04868ee753abde7493a25201a3b77108173a22ea24a5c0df2de82fbb46ad52e0e1ae068e014d5d01548a6744af3e5d5bc00970a964e610e4d0f6659e26f7f8066d3e73ff0a7f32c739b5d53a3fc192c2926a1291042785ed4a9da79240d2e7393c73cd52920bd225b0ee6e04b90c0f834a7cbcf710a3a01de67e40681d128c31bffe99691f1c7aa5dbb9072072c320ba5a3fa98171fe8bbe7239f28eecb171f3dee891ee939573e971a5b1fa35b30ae91347cca688386c285b8d8136741109914ddfe43e95e2a504a84ffb92d90b5ad98dc352edba376c27046141c1c3907eae6667f6d927199334f21fa801eead58bd6e3102b342e020b5c0534457a27838c87631a2d06549c3321559b3da47b7a73e84e4aa9f7424278d2a34c64c4876dc1e33886dd4057ceb16c0883d11ab4f42a47fae941922a0362d33f8c55b3c7fec3cfca28068fbed0e004483c6be14ad9f93782ec061b0fd1d1c0e715ccec06732a4a5773d08a338f09906e4f7685b9f2ba80f64b64245611e033812aac652ecd23a7173386c778a4d3b0becd84fcf45c3f07255cbf58594c0dc9e2d43e96ec1e7b6c12915bb60b8542871c563139e95cb667b0b1eff7edf040b31f01c6b169e389c717fa8858c7348853d3a628eb0768798310988c4255119da6022cf13bc57d5de85f6bb30ef661ac441a3619db43421bd3ffbf9a69a9d4965bc0afa2aa9e04e6a3e877c4225e1e734e66019f9de218c80f29bc720440afc3f8719dc9dd5db7c787fc4957164a2d79ef5e7cee21708c2fb8baa26a1b23fc3149c8d6df9141fe0be000e06b6ecc434babee305670eaa1acfc82140152b2b7938cc211306e12ef47203c31556e86343cc36c3f8a325aacc2b9eec8eec0290d5a5aeecc3521f18c3bb6b6630e17b92a81a8b16886cf01f7e1d83907db4de77220f234d57b18f84f656cbbc23864b2e0289c6a479525dc16bcf726496f4006e3759a6a4ff7b6972ff0bd52b2e2803e1e17bda471103bdb2c161162ac149fd30c32dc68ff8284e0126663d301a6ce64d17fd53d8d63c7a0dd082e4da213fd825b2cd718d138956dffde5cd51adfff2521113af1ea5762590053e3235fbc6da9c7948cd50c3e52991b6bfbc2bae6ab66a2664a9550e1a4e148074d7a7bc07d769c498aa1c8b652ebe2080257992bf56be00db824666457b973db1961875a8acf03e63ffedd003eb579b28c916325a84f596398d03777d8ba1d4e21cde7a9f302ec614682bb47d5dd00a4c3c9c31ee22c05259254a025bc71d8f91d56e872ffe08d5d9cedad703c06bb8b901127c195e4755b88aa5cfad4eb11472c5c4e2fabf9302bde6556dbe1cdc6f247380db04bcd2595bd7fbb39e11cfe6ea30225d3478504ad8a7cb271ed4156e87e94d0113e75252689c4cb655beb8df98e18741802874aa35c17f28ebefde4e6fcf8563f547e78a9d5bad886099e4fc6ed09cc3cfad7a5f02083442586011d9e30badf099c03c92583c9a4f47c030916bb5e6788685b768a7dfe9fffef721365cb19bf55e1ae5de36ce5fece55185774f5c64ec2b1f0e06ae3036ab904190cc4db66fa7182a27b5b6074a7274afdb1b3ab17d74642d23aff79f7eb29d3b2a12988a5bf24156b9a26ff3bd1ca5d6f936f639889367e4162d34cb8032e6ecab42dc48cab85130fca7e6f049a2c26312e3310b9235ed7f03f322d41024542ada73b825bdae27b6590b278b9610efe72fee4c758bf514f071fe3b590949bc81ab3be788b0988123f38f3fed829a55ed9a35ca98ee2f6f744e2cbe18709b171026de3b0a5b394ec2395772e2a5ac9d9d2fc7a98c9ac34b8511dad603581477d3c4d765a2f99a4df6a7e027cff561915eaec57bec8554cbba481664cfff517614ef014bd33c130b6fdc94180f2a0128f39f1582c8ea4a6683539a172c4af854dfb02dd074c2f5558e656c45c712db151c9772fdbfc41804bf0d5027753dd25ff7d23ad20152b66560eb22d7b77933a91add1763569daa0e5dff56b89affb9f53143a27b13c3148371759d2655b029daa5aec0495e6b28f3fcca1b110c13e72eb69328b16f1d0feafe691dc07d73cf17542f605cbf79d002eeb5246615675d360835d36087e967298831f3e61e118fa31524af458f2063e795e0be553805a924a7de4ba310649f68e02ce9b0345a6abafdeb400615f4a7f7ac63eadd25949bd8e486147838b7ef0883cba7616c14e203e298152b76f65e37bd3d40a6454c775fe125dd1eacb7e7cd6f053dd8d414c5882329e26f5d19179343e2ec8f64c57b5cd780c58510e03736429be354adb798a7c2dbc7400562df24c5dcbf8b64f62e046aeb571be6ad876e95347e4494b658741e9beb4f4c99ec4c3db13a391364f80f15bc2baf652fb47026c03b52bd32fecd1d4bbaf046af5d55213c1567a8b1e8404664bd99947c53b0bf111cf8b28f9e9da90ea60a839b6434648759b9bdf39dbb44a613c2d54ee40835eb6ee5bae98fe1bfcd9c6801f81a0b1485bea1632705201c278f6b94ed6f27a9afe2a73ed94cf8e08ca03dbb2e54e55210aec2737edc61b4445a11c163b06befd086b4cde961b32a8fbe5af3b068ead40c131fa18779454b09449e388da4b7c5899f5b4b499c7f910f55d5af33cf7e18c410f73e43ea89c06d4e6c0fff61efc42560cd3ae91bade26ebe17deb46adea23191b712410e7b993261f3f6ad19ea70ad3f9024b347c4d12db0cc5153bf96e285a7f5cb9926d3aca6e8897f25ea8835007e5c516126c32e8a7ea34862a6f0433b770f645e362b2c7470b49849fd5483c120f1f8fb2d5d71b2d14fc87b3435360f383671e539caf50a90f4b185a044419e574b88696ba0ab6792ea6664af9d0d9aa36874b5d5d01da39f10fe8492821f6092b65e82664d667a8c1ec338f431487f34e39d3cf575ca9380c0ff2283680966ebefccf3b8071d9a41bb7f31f0a15b0a792186584d4646c4dffeeb7220080ca9bc31a20ece39ed3c912bc0ca0a1fc9824d46e268bb11977409c2b5ad46918304c7edcaa8434e1383c93641992070f972ed0237471ed0c3de21849a0e39bdb4c1481c5372f91348a33580b9b7122c8d3392a7857e09cc95765628e6cd99b26606589c230afce912ce64a9725ac3f85ca00f5c65fb62703424bd650dbb75bcee9c6c48f56d6f9b3bdcf4b04f976598554a288ad530ec3e98a1dc53acff4d23e85dee0398d7094b798f3499977b4283169d1979b247a4680268a6ac2bf318baa7af1e850a7d460a00b61de1c90d86ce3939bbdd3006bc8c82f557885a1bf12429c48749920374387cd82bf6b33859f8fd50e878b3c9c6dfe0a82ec4596f16c39365d8d984c6af81ec17cbea9b0c54d7cebce34b95369b259f4a1866e74d55a0de539377f1be5f6a5ba166ef2ef23c29f56032ed9742c7e9b19f092281873e99440a4945d04b3547ab25ed095ff417c20fabba93ae37e358cab755735dd9c030f21d4eee3d689d8beefc65f3f44c530df7e92095cc96bc2e9e988354541d0ea417e60e71c356cc2535c825e2d2e22a1677b6aaffb638e8c198c3c800404ac00d88bfe6a019738edbfc34ce87466ea68d6e6d43dcef429f19fb0703bd330db9bc7628da2236dab7da9b44fc5f6ffee21f31b6a550ca388431f0017cd22ed117dde89af601841e8c89769d39b2f3846f3077292f9f872b43d28ead68090ff0ace0165521afff123ad6c2b5312f59dc2073b01f5bb68785a3039b53dc128fb37571ca3897eccfe2a61c2c4c74bee447c7cc9ad8177f2592a63633d7c3ac03473f1d49c7c5bb878670c03bf5ca80b55c3101f75f6079d2d6bce5f1cbafedaf0e7169f55661f678664a458bc5d13817b1e09c293243089e0beba351f3319f575a5b86b20f3051a3e168afc495553391b73bfec99aa317dd81c41f4d11408f23f43dca2f547e82f05afe41c79a96a1a624063d09b139d13494da82ad6f24dbb21f9d76cf620ef125808de4265c8f4c913e27753739a854875b3916167524486539b2fc4b311bed5da0c561f7c752b841dd927d6d13f0f08d8e2ab19667ea6236b09adef95094ff1dcf3f80bd86ec6e42a3e942f085d68f51259ed6a308f7f010871ed28ed8f95962d99d2e4ff7dd10a046cb1d259a80485e530c6437b29a92c7d6365d50de0753c783e89ae51203c166df5384fa1a4ab249a15f1c1ed654501d2f0d481a38cc0a32ace9554a7f08bb299cfcfb9453f2c9abdbc3089badd884161af23b9aa48879ee5f85b8ac1ddf2d751f9e0cf6f621688254565312939f33734ece868fd90f7d0944b0e2676f02ea5fb91cff163c5fa419d990e85e6cb657b4c1dcaaeba0eda496602ce83b5d2eefad854f1e81839e7fad063a7c8b0486d1e31933a465da1d5dbafe2482531d0fb41e8af1d9d0493267b20caaa2b77bc4f22a13ed360f4d9e50ec164d3fb0a073343218a2e2867304dc212a9851f359ab6a16dede6c3ec8fd99fec58b92f1ed11bd457f15b6c385d6579e98753cc67ffc6e41949775bea956b71ed613051a3eb5d29b9f291b632283e0f643ec8fac3f102f3241f22f0ab553c5a6c957ec67bf16ef89c0764bcb705613b44c8f0791b454af0bd3fa9fa72ba2bc6cdec651d998b5762949c6a8552228da53df11ada8074981344a0470d8e3cf585f5f785eab3bad409d7a2528838d79103be32175af741f73ca9849268a3f771081ef5c5ac243909de5c0e3eb73313afc938420c5d1e97585b4be5660367f3a36fa5769a301c39d533aa9b45a5fdad1839a8bc2203acb40c116186ef2df2e7cda1de913898ac3c383b40c4fd8f77ed4e57b7e4b3436d87a289e0bc5aaea4ce2512842dc49156faf87acd328e261a341bb357daf9f0fbcf834354ce3f85497054551383902de823e558151b3bb503ec0d72e998791e7647fa549e008ca539bb17b3a1c08a756f7bb98aefe11f3e9f5d34b09c4207c47709d6e288aa6d8f99c56be254f47c5b4aaee56ae1554f866aa58776c2b9c7474042408d016ab86d4e9e6b03ef0da9e62960af008fa097556da572efae03969b39db86e1fac422470aa896b173869397219e1e766672e37c150d0877a003ced1952e5fb1e33af303eac23ef85ab7176a489e1996cefef5dd99fea63d790ff0854433f805730eff99058030ef7e7c4e4ada9e16a52c61f4e6588ad8bf4df84f4887c58fe47c147d79752c8006be4c5c132b2b01ae275f553066a2da7beb752e1873bbcda6e5ef6fb385d43e8de74527668524a83b842f637b3c053fee844d476cf821ca8048b4abff87a80c90b06ccec9a0bd1dde463736463bd3c2ae5e4b2b13d76e4ac8f17da940d314d14cc6dee41cd98e9688ab8528a3a5c5e772cc2ea510a51ad3d44a20143eb4afd699dc10f8da5005b0ae6d8f589f7e8cd6c8a89f8b0572eb65655ab93ba9d9aa7f8f0e5b444a43efae578f2226f463975d3162d321b7672213ee57fe06a1ba0e903b2b1b90a11d07e80da0cd910831d4df0456fe4dd74a203f19e60399ab4ff44a6f7a0094114286af38ad248be1e59e5b8a01d55a4ec9b56cef22de4d5ec4b41e35ec63bb265508efef2607be8b4ed78e9a7028eb9cb07ea6a17b4bc9ca69ca7edc393e0cb1a0818ac2970d836ef0ab32c6ef784645d751772b27196a2b498b849d26f02b8b29e834100f423e357b23266f4f933f8b78dd32b2680a08d4013054f83496ff86fc28cebeaac138bfa106c6da8dd4d0ce3b61d5abe1bdbf53db195ec4e7f89a51e69927b9c0c53724b8f117b26641932ab6610f462f938f33bd5462a69290a0e8169f7cd4f6cb7a7085e43ff8e8deb0af50bc088cb53dcf33f0f6d2111b3fc5b56bc30f345a093f0c5a3b5461ec90c2732afa6db371e3144577767a6abf0b78f76e5d20eb12074e0addc133ad524fc31c7372864e03b835342654380f3f8df00293bcb429a63936a9c7cbc55da1b598798cd003a460ae5f473e30c9987d47e0b21d3f6c9edfccca60822789c936027ead5f04138027d73c2bd5a1b0066ce22e145730588feeb044055f7431627249419a6a699f5c47a93b80b6e714f6639325c72aa659635109f74a313f0025beaba16c7d0de8d90af262db2e444861958d703539968866eb8ba9955d04ba92a945d710005509490d794ecd803265cdb8094c93edfb3159520d2b16b7cd815ee357bbbec4f83bfbfc055643f722cbc0042f51232a4a620ee8d3a14fc86d65e540981814cf557b728deaa888904209e15b2df20b8aeb4c6fbce7df6725f10ed9d439a5a0c1960e83ed998eaed9e04d17fb7e3bd0e46ab0b26b2c07cbe37b1688b541d6c2f12b3197eb29acf67f0d05a2d305130df821ca7f42edaf36d3cb807b27aeb87a8468c5701d89a3b00e85425f888596737c4824f59dca5c441612faaca08b7ffbe232f0e1ac784082f7230b1b1233bc0d43bd1f40b61fdfcee3a28fd9ae35ad33171055ccece0577fd824d1a737f40b5f16aa8f1f4e69b833e4b0e58985123964923951be2361f58e5ee5ebc1884c198eebe2e70b07574704142865e890a1f7ab2da34749a073693a207763634dcc3c0b5a2b959fb9564edf6c40189a4c7c475c213126c214746a43b5ae2938a8df0712996be4331657accddaec451fcc8493bfa7b6c1dbe845d529345b074e683c5297f11893b772ff2f99e4b1a3e4ac9d5886ff1c83d179eab8068aecf0646c9eb9dbd2866ddb64eee02d75d64073a9ffa8b5cf9c0643e1f4f5373101af2130c56a76b566190c711efa1885c0194c7edd6028ce9b30cf56f2603de7871f8ad0474e184db4a6dc0cea8759bf38b905be1b856a3ac6ea8e782c6159f3681332055322357ac10cc9de22c57c6da8e26458700a6f3ae35984ee65cdd634c6989a27c5cfbae9ebdb66d5ca00a3be31064148121d2cf0a421912f7adc3f0748428e8352cc05852599a46ace2fa781db58a1869069a0da816da2c15b5265be50a4a37136e1e83ff5621323320ff0fe66968415f65c09379b29cdfc6ba45e81da54ceb2bad4baa5f23ec6913cf1eeec560b04080bf63f1ff31b0d235264b811c0fe80c57223214c7a16899a1d3ae4d3ea7b1838ce1a3ad425ba3849f5b5565e9ffe35fef70fb8bb0e3ad3e83f1c5da793904601202d87501dcd22e3bb412d2bfa8022e1d6fd61aa451ac2a18366145c601fcbd2faa8e0f53311225a23e85ab4b36e034802bee5770bfe915f3cece43e3e9325941e4f965dd18d9f77f8fd506a8df3d936eb3b3c6ba7428a1e093cdf7c697a5c10511e11c7d863ceeab15159d7708f27682bbfe5fc242904f0bbef33228e29eb241dd4af190b4590be4e669a5491ecde95207202f06b3ece8ced9ad5931050fa43d4c674d96844f2b1d02b8f35a4998b70a2ebaf186f5ac252ca69ed029fce89b34894eafd972ade4bc41b820ea2eb1c1119fb5c658eb9e048e986bc4403c78f8850c1b07355b02ebf890960b9f6d5106a31ea4598f574afd64d644883d9ca58e5daab5516ef30f14917dadf3c4137f0a48e1d8fbf2e3d7de81641ac8a518a2876861919a296ab543d0dfdf734364191a83e67c70d36b24c285757b5de34e9810552369807cf351885d40ffe016956c22d84cc0c34fc7f757951df393a3f82a039ed29e665cdeffd56b3627b7461860a5e2474ea8e81048a6fb56b4f14a0dac1d466b5d98e19d81b74c1d5632c388780dec0650f3d0c66a462c605950520eb0f633c1d20e54b1c65dcf7655c3be0a34b8a645e7a52d3d49ce1ec5ce35e43668296aaa36db51ebaaf12a330edd8e1ac06054abf12113ae2b4cd4a4b70a970a197c8496ecf359f86bbfb11dc0aa345b5085fda72b1a33eb759df87ccc96ec3ef8273dc244bcc389b6ac5e47d7133efab6dad8f7d21f1f91cf7f959ad67b32a8022306f7fb4e7d52f191ed591c254aafe8ce57b49e29f2d5c1b25b3cf5056b29dd77ffbe022c910c366cf0851d764fc0dabc4e28d70869e598311aa00be41992c5d457e241ba6be9164b5a83b03361ffdb44eb5f5e4eff634899f5777de2937cabf42ef62a236d9b5ebe533e37f35ed7a5174c796fb70902d2dc86c3b8e35b554a1af08bdd02046280fcedae2c62bd6a63a5a6fa45a5ce88a0338f5a32529cf0cfddd0f1f5d07305c3d298868a52a6cf69b7f2ac4fb53e5eac2b4ec4d603ce5ad4a2a1cbc199a3bf974ae0099b93aba13c10a45fde4445370374dd9817aba4d20e65419a254f876e64af9dbd47571c03f8522c7d53e90939e4bfe0265c04cb736905d2ca7a5ffce6212bc8d404a2727d8df92933948aff2b384587b21ebf8889072a0c09eca84bdba1218b0f4d7c4c826091e82c05818b6e4995dd9c8d1532671d7fea4d76d907a1bc5f175175e9d25c99891d00ac7e4ba4ee9e6518944d1f07a1944be97e707f30a9899064022968b0bdf311b27be249457874611c2df9374dfce275097499370d36373687b0087d8a04a249efc2fb5bfd33ee720aed58d7a80aae760c18b45187e8bc4a651eaef3e4bbc12a0c8a3d078d2b12abfd943ab917841228db0451253ff2e27f8c0c7c3e9d996f6471fa520454f0ac97fe8b8cef9a68877d81e8daaf590bca2e7e3db14ea16850b9da271e37f6b6805f27cecd3b0c57413421741fbafe97c159afaa590c4afaafeaead39c986039a80c59e3b255da057addfecb4d35c04514b67133f7c2fc4a169e375399afceef84897052d76f88da40446bf1f5a4d17613f09acb0194772615aa73c0e65d42ba4904d3ace5de2a8a2fa1db3fd8af8a09720aee8fbbc79dfc3ddd6f6726a040508df5a545c9dee7c64cb257644064a646cb905c5021146cbdb8e240e9395dde1aff35f628734235db6394b683d67e2c9541900b32a1c69501b0db7b1b188e1b7c16b8d33ca72776189963651d549ada7ee62e38e9517b0e01fc7daa81f632ae633b672b829562d5a459682aca49e350c28e0ad60e824563e2d32a29c9e353bb2d65da6da5f50ddebcf03f9a187af7206656bf06eab7cb90839b9c3f7c6720d722d98e5ff9eba1be522702ca51cd9069c5713c6f444e49b427969923e22509070a8d9035e62647755cda18d1080ab22df4a337ac39f9bd5d337bb2815ca4f49f68731fe2061dc148dd35661f04fc1167c0c76a55c8b07e76bad003cee800239ef6fa3c3dc5ba1a78dba84e4f8317dd6c2e8b53ca2e3a3d60162cbebbff47493c0c52e8606dcec36c783976a0343313bd143e6769a48a3477e8dca915a8fdaad794b3c897c139183c29ab2d7d18482d7a61bb4b69794428cb0ff8713e8a4321355ae27963a1134ca7e2eeef576e9f91f6ddfc553dfda5b30b4bbb5d147deaec71e3b8f21c7e37e33a4219ffd77c922633178929e4f70c370d6b1cf03c85c7052d0f0fa59318299c1006d5f66f4213c451e2ea126e4f8502b80c85733a5ccafdb2fa1e88802a8c24e6a92384cddbb0a7b9ff231613484ec4ad6c0fd2eeaac53c767d7ee4c68ca32eb5f3f8231bffc025b2d9166140ef1486555b66ef8074f24c98a49cd04283dc2a6c363bc85adc5fb594e3a16117aafd93ac8e25f0c00e2c8331ab77984bea13448c52adaf5959c238d9ffe83d548111d476275830f35017844acc2e4bf5c5a901076249477306e0c1d97309a48b66d8d39a86b3be0f217efe673df13cd5421ec17d918c2f836641d92b3a8e0b8215112338292bdc7f2f7f430e7ae8fc7cb0240223b820cb6abddbf26071376c8f513954ffe08292be523095391089cbd414cf51bd33a45314f995d6cbf0337d404d01ae5fa0a15bc5245625428f09fe3d6cdb9686143dce3ff1869fefce6dc68a441c36099b6e673128d473b242a46adda1c611655d74d0f17454f1c0a11831b6ad70bdefa5b492ab19e7036c83be8a25b225ed2406d11dc13f22a1fac42a5d2d4683587b9262d3221d3c8b1316bb4ed10f996e3555f55f91dce582840b41200d1203bc9800f27550274b681d1d45a90063a61431c98f1cdebd68b7574bc2fd416eb9cc5de8d78409f1a0722ba45a9482bcfea368415cbe113e91e47ac027b3ed90df91e0cfe3b700a57e93665053f57e621d42d750fbc6f95fa468224d13bac1820bbceb88bae415450a79d88f2bfe0bfa552d7a320d3cbbb9d2b00daf9e557ba3314d15293cd69035baff62946e4476e42f9168b4a7e0e81fd0f5d459f5ca13e22c0608571b792930e369c8ec07be9bcfd72d78c83f1f717b262d83fe5ca8ef3bb29df5c967a00499120edcb58ff8f71c8253fbf51debe532378d3e435c25c01ef491d3c87fa9249d003d68f9ab436751d69fae86a7b97f3b8872b83b1c4a6c9e505a332b8d81b2aa03555af905d92b3b9e6b076d7b702c21db47eba35e3d6ebe6dda934c5bc6574854d950c40d206a4b4d5beed942d689f4b976151ffe8541aa05bc8e75a8c4a542bd0a841915bcbadc4aec9f30d720f92e345631c939e0cf9202cde35eae38896bd491a7b5a258e2528496a438eb4e51ea28b584e65064319db84f1a990a8e24f22a8faca8ac2c4cc49c820176441b2f85cd670361d10a7814f21996c593ec9ef873816bb4c04fc50f481f44b37cbde9d2924c3852c27e59ba263952ba07dcfe1652974a6d5a3807db810f9f42465644c235ce83e9eb0a78328d6a463ec20b6255686fa174b9eb074c3fd0a831aa8ff464ef8307a1ebc897ba28d6fde4082f77724ab21b9fee325d72330d2b051d20cfa3680bb66b1ef65ff5a5b1a3f426fc24fa59ce2e6fd9add4a790c2810c9d5c731dec12184e760aa65bfe74528cc47b863579bb781179b9276a758c8f788e8423b3692350a09cd1bb542959d28b78fc54ac149167c51d217c36b38dde4f4420883584c54a2bd415416bf976f8ab880de9b66e109e192732519b91b248cd5bd33251003ea8825635519bc68def3774c4eb22991dedb8889141d398692c941c58c160e028b40ee02912bf9f59a22e66081dc9d538dcda54c366d988bf1041cc909763ede7bc8f39f85587fb3dd283ee31ebc2b92f6574491463ca8a95ad6e09b21422b59e1be15c7bc762d54ba3b4f6580104ceb3d7d7457124afb8bc4a2123bfb41e22585ae0d96aadbc2456cc0b6b96170683cbe4c0d0459c3d57af84073eabeefed607a2bafb281974620325d9f3fd0bd9b156dd4b3a873c2da09212671953a0cf7582d070eaf06522b7d760f39a70f2f5a791ad88e86e5a0f4eff08d664ffc3aa87bbb4f873ebf4b106a92f37ec724eda12a9d495e47b263c5abc2a6c81e7f875d31bc5d078d21140a90ecc4fb2f3e10db42bed10030c30d5cd9caf761d6ca72215874aeb486297c462d6f3fc50b115a3c24847763d7d708fea60e63a310e4e1d7141848e449f8fec1f6260225e4dffd4e2ba23280d6ae7a48c2a0434e58487de3fba85f5213af965bacba09ec2f3d61db1ab757bdea22b7cd1ec438b01b9758e1216719c3e71e265b9b9c760aae191c15a7ac10d7e36756ab8254d41a1baea2908f0874c960699502d77ede9766247f558690b4bbcbbd0dbc66e87343c165bbdddcc3f9c989620c7c005baa5cdf05d2cc3ae8ca69957415e05fee0d44d0e5a01288b83057a8996541fce3c96ce30aa1db82531043d5e5ac0049c4f25009226a97159df864b9524008f3b011780d9108d40cfbbbdcd96558e4d9d018e9ce8b2ae163847993d516bcf8865bb006dbc9f105e144cfedd9013d7840b9a77e96ba15cf6254a7807c8650fcc9bee6ab04d23daa32d36db2b2e7f87d4eeec675482739eaa5969d24b6c42b2626c446fdcca1ba60e5714d1118813cff16768efa1ecbb5498ead01a143b55ee131cbac43b0cb1ba36fca14dd28608279c2257d2e04ed4b0e76e37ed6e3c8494e4c52ea436f75c1a1caf837001b2c71b3b62a2499f76510efd9bff21341182e33919d4dee9974e13b84da8e24a37dd420398665f099b1ad6b5bfa38894fdaf8b554bd1255f335d2b8027efaa4160618abdef9f28ab5bc2c6664b9f0c67dc3a70b1bcf7d5720ff5474aa1d73ee9a997f74b682956cdac39014bcf49d7d4bc46576b38e750354d62eec1a06ded2d0e94d16b335ffa1571a7a8aab78e6d9b095175b377a84edb069ed9c3f7c85ff7542de11fdc8fd347b045a82de90dc2bd2b034a2ef0eae4e2d11d0be875cf129dec91026dd1be9309d426dbf66810d8d896501f0a6cd204fed13b1e78d58e8e8fdeebbe9ae25f39407b7937e5dca0b7e5d3d9b88cc986009686570d76a376fc9b1586121bbf6db46b3ecf9d64af377c2dee96564bbc3a91d0e0cca889804939693035fe0557d342a6ba4d0df5251712e12b4ad79f048250d25458c1714f7ecaa983301787fae4f29d91a7911065c347cb1fb1687622657b4cad32b6be87e95481eccd942bc6ceacf261b10f7d7646db4fc712705ac0a9cc650cb0b75b658905fb0a7c7e78433b8e6df0e9b3dd564f0a989bcc3215ad4cb9a4177777c04af8fc7c3e8ed9de843cc353261b6643a3e316b063f3b775d689ec791297e0a73b51493385a0673de174500f2b37d49fd746f5f7ecbd78f34886316fcf58b533e68c490e113495d9b5d0054f6da3b3a46a3f915f92db35188dc1eac68c3805b4e630a471d035bebd409a25bfd7beb38e2ba72500b598656d3a1abe6a37c5ff8629acff806ba01a49a110dcceddd2c7b329961de86b8e94c2873e9f80fc777ce12a1de47e6ab31c1728810377be31bdb701fcfad104fe80938e5f7613dd98eeb35185c62db06e10371e4f5cbf7a3cfb52fde52d5c13da311190223fedee3b2c5f08a9302d8efc3ff2a17b0612411c745c721156770a5a8a74576fc330dcc174d0738b448b0d85673a26adcf2981f65409095e0d74d2d1e8a53c3d2988b2257bc1e50878f65a3b345afb61f6abd4d3b580a2ec44e205a1069312c92f8ae417bb976ca2abf6225fd23b444bd0693c5aeca41337031076cab9b76210ff00c1c854bd49c89a56e14a8c61e115f17fe4ba38c5c6181bea5b2feb9ead6525af397bfdf10a491f3a3e4efa54e745de1ed393796916967f7d8bd7fc6ada63753f43ae8cbc18f4b57f2025fbeb35f53994888042fb56db7a4da0f79034cfa1592b1dd52572ff6ee1121eca1880c206e353a13623c134b1293a2b29a46492106f70c5900153cb99835d229f0050750a38287e7e9d6d97ab190f8e40a16990f50413091eb32bb22cf7a23300c6e7549a635929685d398b59cd2e792e05d0284699d9c5a3c8d3131a43c19f07538f5931155b0c8e115c75e8c56544f70878f96c27107ba76b9c7108311ad1f443b5b5d56ae5b5c6dcd0f1a09bfa7aeb21896f4441dc245f180c3736ca6e075dcdde317c4bca3b0490337ed445bf8d3813b018f2b6014561d6c00e5c29c430cebe08ba763c23b1d859d6397479832179f53368e0192173d3e224a72838be0a532dd2156959027353dc672f7dfad10132158476f9950b3a07d2c0cb2ba0c11c506d92be6fa507f582b659fee479ff9cb5a6df7ccbf8edb127f2f7bdb1c46cdf96a857f8986259dd9e47859b6e851d530cd4ba69f3c57bcc2a5075355eb720996d9417e29624a6d152324e57c249f85ad053c65fcce0afde24aeba696c75bdeae86c9d02cd703ed8de7b656f97de066ec310e3dc6ae409304b6c2872cec9c12622d16d1db9261f30d1d3009512dabed5d169db4b70adece5375c764f6ee50b676580e35d7f617e3927071ba12616365b34a47dbb8212cb1aec803300d29b774a311a02db494d8c25f89286895baa7e2ff63782253eb2c8986a16a86ce9de1b32a19872bbd78979e49ebe1904bcb81076648280286c40ac3ce648785c40c4cfc4af51fbe9247cbd8d93bbac00cdbf3ca630e54d2f8164cd80e22bd60a93be13bd7c95d8efaa54556f3aca8335fe6df0c228106ca77d881d77bccbb3499359a99d3b1caa1477c3914d6066521d9f4f24e8f37203335f161eb9d59bd8046053d1235d739f7a1139c66081ec150797dbfceb2d0720d93721f3d034539c34d5be980c8fda7d276d3b766b44c63ec796dfb09c61132f7ecb54e4697ae3de24f0ba7c50c6fe2b92543944d3e8b3c342d35d3845611b98a8b7e0750df5b01c1098cbb3e8966677de0902c4e53f92a069ad72ddb4be0646d442d99246dfa394ae35127fa7ec7dde7c2ecbe2060e9480b0c5db48ccf66fe80a83f89ae5b567bd36804f70f551d541f39026b80687637da00c522af6744c7e19db505eff60abc575a51193887adc5151874d1597c1aa50db43735d41d6395335313d9ddceaa02233f375de84410f62dd16205e351f86baa5e6c1197b1f1c15261c138b072c97f10bdb0642c193baa05738f7bd52b35b2812523c84bd4a1d273807799e0b8f712854389e063c6d2aa336f85de3af044fd073261fb3d48a1ca62ac9eea97f8642db6805e15773bd5603506b408bbceb31f6a871c6686b0074280987c0623e0838f7c4a6b908760ed4ae2b24f8593e8778ef266a66ba1856c33cd785ddc5ac6196f01bad661295f6f23c0c751020cd743b39920e98761ad8ff189dad37162c21eb3ed24bcc07f48ea17d2db061e0a3d5d9f8f572546fb6155b7b515c380afaa113f90d11a94ae6dd5184173ae3e8472321056795dfa184b8b854c36b0d3994327ecd859070c26902d1d8c876528e70b9d562e8377b3c1306ba9825ed202ea7569b18f2eee7df37d8147f3c784fe4355beafe93a790c2de6e4d1e513fd699d3b1b1f5fea4eb5629291b8c244ebc92b8f89469f5050abc1cfb42baf77cc1271053201861d6feded4f2970ce5dde2bf4a4b0b47fc2403cba3a3921b6446b4dfbf16e710bd5d54c56b45ade00b75223b8509ba1442a386c61eed3a8416c81139cdf54c89eae9f0d2d8474de2321265deb8e00a9d24ec782b7ce3a325917f586779b61a6ee809a3d7ee62bed4b328e5b61c027b442c8412744d1b1fc60d10adb209694df43c9fde7e0e70d3d3e625e4b2d854fb4166fdf1aa56215ba71c218a0b0870577053f4c6999807e28d235f94ad3d5e168bb2a0331751d05530d6f03c07e9d28fb7587fe24963ccbe225410d36c1b0ed713834f14824919676a1d2882e38343b5a6263dcd8d78fc48dd76508767c850aa32b3b6ae9d9728eb056d0f25f562ffb44886f7878ca4c68d3b9730d6a288bee3a2371fa9b785cf88734f8bba35848247a90543e2559c3ce22874058e0c0fca158b348b6d339d1971e7cad6187b77c192ae84c4c30abfba327bd2d816c45341ece032db32cb33a2af3dd56fb6e08a066bed40fa063c9e7ddc04216b9f62e1f6039cab0f45264c3742005aef6f5d1e439b9a479bebf5c5fb7707b11fa71cf90c7e08d3e37f5952a3ccdfbea7aad6ee3efb2a40578e7da5a42f55ef44700ab88bc5ebd2cecbc137fcbc2f315485861a844e33a842cecd72988453f7e04aa63ff9145393c110a3de18908f2cfb40a543a7fa11997cea9fe5c485e8619fa56e3accaa870c71f5b8f867aa394d8e6608868175638e82ccae786705c26b69dea04cee6fb4b54903e619afd9ae6dd5ae4b9b0e257feb8c839c34d2cfd9a060d4d36946fbddaa27b9b3ed5d8c4f5c510b980ab1b67de8c627b3230da73d7977b66dcbdd6d3eaf7e7033ab08d7164afdf3ff2283001f24a2010eb5c389b5c1af084a59671c6e657ac63c240e52a32e8e07708c85134f8981fd9fc39e92dab9b860cb81341fd2686d41a08f0c15e2eea91414f792bd91b03e55b41b71ac23256c239a1807f0fb57f2087ca8677ad7db27bcb7143161a1b00133c74494145cbea8b8dd9622c6f0297daeef0a16dc4dff24960f468b5b989c5c4795735c8b6e7e8d6fad23d208eeb0d83f1742e98bb39beaf5f1f2493fe76af1cc2f0e9014047f67d193119b88e9785d07c0cbad23fe9f53a97bb396fdaceacaca39a9a005ba5ca0a41fda2d8d6af3d6642ad4e0a300f86c2321914bfc53e44a5cc340c9a1c0d130079c6217e8f7560f248f2bfc1a8261d756417ac4cd82aa1914fbafd2157c99d155f65489725dc75993dcf618222bb2eb0eea250c74eacd96ba62644931fa18bf0cc4b9532b98ae03092e25c59c87556637afc16a602e2e6e6660999da525383a7a3c844e93fb6ac3d2a805322fcdd12999116080ddff33831bf27dd1a4a8ba7b56d64cbfa00d1b80992274efbd47fd50d3de718e32dc3e84c15be7a6fbbf40ea93d1adfa789c757a04f9a577caebfa03ebef56e1c0f090a1bd51ecc6c2b203bbd7e99ebbd2ee4c5f920c36e2394e1a02435c90a68da8b77f5727c50b072e051bd2ba07a93a5d7c79db78fcdb75f8ea8a49460a44531d9b77faf1330d44e039c83b1d7cfa174a5e07f47b85a9cba32dc619caf668d208c4afa1917c3e775de00c09c47ce8819598bcbb763452e32b8d2d833ff132b1477f09490c3460969916a16e22b43bae636deec0b89ab75bcb0fe46f654829c6829151c81132abdb6a7b1a67ae9de12bb2345b60da92fc5a91ca6a90fe9f8e0a272819df29baf652eb60f72e06d1bb6aa75f8ae986c644d78640864d17a526e32b4c9c9619bbab9c2d1b133f803d264ee0da1c1713d0e50cbc3dce82fb0fea17865df8738220d49c46f474fd60faae017e4af715888461c7d364de8631ac8ad33dc01e3a30903c065db19265fc77e652094abbc59c33301bab80c817f901e33d557868c168f9cad240c515d91bd08009aaa885edaecf769b9e8e9fdb1f37a55249efeec2f71aa8f455ebf1f25f9870d2c071ada011b5a4a1aa64929e9264b26d3aa150afe68ea2344f590660a9fc9b326336e6e34bcfd73062bc24df44e91733dd2224306bc2c57bde41924712d3c408548d05078f817df8cbcc1cd439997056a914e891e17bc7d3991e1d8d3c061e4e3f617d9e7b282bad353904d52e036db688909bb2e66b0d7bcf55cc925d67ef627cc8b46328dafdfa329d05ec1bc37eccd45813f61ceecc8c068cdf88da7155c4078955fff73cdba4dd95292e471044f7df622e06d6f2bbc5f7b8bb0e79f18dc82fcbec1a268e253bd6cf634fb1ceb5b31e8434c95f94aeb06438578cd212596fa72b05a0e9f00862e04b332260e7f2e9256c67de6c93e8f130c3f1972c736abdaffb1d6b7bed73f6e34cba2d814479cf4151e91ac536417a552b212c348a33536afc06901570b4db94482d5dd4511e5e0684f0949c2246903d1a77bffb4a152503cb772b20f09f69e50023652fabf1f2db23b34de7239ee5f3c4c7132ad08268b0219e61e7d89b3a187ce30529eb46142d58c58f9343623f8358845b006343f60c2d8f1133d16497f74d75f472ede8e08f778557a1264c02c8de858ad90a761b1b6c27c7dfd1b5e8200a6a25c33b3ee3a0d1eaa60f71c436d45dbcfe9404d8a9cf8b1bb2beaa0e0c9061ab32443869a3bd9d8455cb41dc941bd2a45dca371edcfe2de39e37b3f4bae21ef4420bf362a0132b7ab13cf4f5b88eb39607796155582d7dd01841bffd3e6b76de77b258ab49215f2603e7d3229d7fe6b26bb0b7135a7ff2315cdebec36c18e180d98a8f989bab09b1c6581863ab1cd37ee52b24911328fc5804995c2da8060a0b2adb76be17c83a239bcb3704e946388ea965403c2e4ffd740f31270689b9481137a8529d78e216e2419a80b3b8f4ee6faacc7d68e1ac290ab40590195603531b6394f28e4fcc5bc558a67125b13473afd489a713e6084d2f428d8eda6041c8e84d933efdc9ef5573ecef2fe6991e6962fe0cfe4f944ffe9eba5a426396627416487f14d1c2132a4c7b4eab58e80eb01d66c35c1fc3b1fb9ac9b3dfc0cbb63022323df553e449266897a2bceef06512bbd8bcb85ad443113e01667d1dc44247650a72fc3f4f00127aeb04028b82db70bfe9a2803b0f1f45cdaaddd1be035d1615371375bcff87ce7e5b7e659e59e4c45a725121378f5ed30400d2e397bc9feaf863ca3e17dc4196d174d7359593235a937843ce19f73bceb6dbd62baa13ed501cb7f671c7986bdce65e2d67e19c5db8840f7da963e1c76e5d3e9c13953b4ac290ff6a251d5573845c7490d1ab78d19bcd2c1551e5a8273959f40099abaa4fded37ceed116092a7b26598189ad44420bf9e2e71c197598eb73b8407c8c461a902d5de280a61bc993133942383459cef98bcb4a6bef7ca63453d5b6270e58e6d941c628db10a728767edb54ab1d312f7c99106bf1e64c299a1be2ae9a2cbc265da91324e1c75e93bd89bd1c6274955f31254a8ae08a84d9d2b5fc9edd0b608bc8ab4a816f9080f371b6a56c9edb1ea6414f933f72e58e0d2026d645b6911483bd242f397a5ef7413a2850cf93d06bd562db8f8e64dddad9db7396c8471c0e039468d33dec8067740f39cd53d4b6248a1f2d2cd07da98ef50b27ee3902a49770f0fdcd4f96028750bff692197e318aeea4edde408c5dd4338753a63560d5c5d331c4ed7ba762c989b713f7d6551164fd06bc64f47b4fafac80556eca0cfcf8c0b77121f06c9204de3ff2dd6be27287a7c6bd5c01a961c8d91b2d9fe182f375494fee80b0cd94e64d45da1e6db9a2cf4b4450fff5e11a8d1671a8b149a2b7230cd8cb059d1ee96dec5ee7187328742bded7220cbe66f6c52b3c50f519a91a9af47ee81ee80efb34d2130d86107a5bb96dc5d09bf3a22c2316944a687e58a9b5639f904759f2a27a139bf95eef66a6ebeef1c522558587559471db2838aa8e8e1947dc728cfc957b3be6515e80bb8036d829d09735d7fd80f4b4569d998117133598e4a6ada9d7cf1cf79775439a62e6ae88cbb252879ddc8a1b2464faa4f1e04de4beedf3009554f100ce2c55fa23aec962be4e5b77bbeb02b02aace52b23a3e4aea5a524bfdbb34a336dc43106f0595322313b5411a871e3b3b7109d6d04eec7395fbf33d0d215d8f9e33e730e8fef53f2f9bee3b7f405e46df74a5df0901e728c9ee964982bb081c78be350d18a5d6db3daef65d533711f6d1bece8d5b41ee70a4fc3630174cc381817e9d8043074e389ab90c23cab54a3b98f7854e93b507d01fefe25813ccf04b99fa95fc6178fea1be87c754432a2edfb1aff165e6568fe9d51eb16f66155313905e30432c0780de15b190a166174da8a25ae7ccf023372dee296dac8f99171c1a80a9404b32a605eb614766c3134c394c4a6a047713cf583ea20ae07b992cc0d5191510eed4f56aae84b070dd5da8083c42d3a71909a71abc6a67bfa54470210d9b4fd419232104be7767f79f63b14c126d54404193f8a337f899aec2ec73e18c935ea1f2308cf6be1b08093d62257527d1c1aefa734051fa293205508c0af6381e963eca9ba96b16f4f6799c13df1d956218c21f30d5736ba45164c4a0db3abd284f8460f32d7b5a48285e403b98492158dfddc2dd3b1da4fe4cddbc4ece55930ce0c416b834bfe6646f0fe97f1b560b3a359c2b76b6fdb084b402a39413513e04f0e05c44df5de6bdae8739122a5d24261c9e45980f0d6d14bb6c8def031f5502ab95d8b1a5b378a3a81d9dd2004c79da6e9d2ca61c1744b7edd9e5e5a2be3af24df56b969c7df0a5c2b8f17ea5a850816a1cca53633e28e40bb8b019f124060b2405b50d1dd24093cb9f2c6fc6b3dc5df63be09cabe9dc9faa555fa568277a9aea305fb54bab03d5fc8a4f3d0b699feb4b073b006c57197a0ddd076dc4415f1eaef1100e5cec8321be368d43b611077d131ff02994f3a113e5ae1b83d03d2955e10a6036547b23d54a32ca74f209a8e1d75dab585400b3ede7a731349013ce81ea1d3e368cbc76b1a2506d5787a94f2937d9bcd29a879504c78f3235b925f245cf195bad60eee45cb75cbafbbee5ef67ad6ba2ed686db93d519d84f1bebef6950ad6396271f0005f5402c260f02732cefba8888bb827f335d1df340695e36bdd3abfdcd4b12702c72ba0ec989516490c9e519515dfbf93c633acd360ff6a34d05929d2f16549554ec241eed48443941a8b4d21317595a095d54d4c6d06ee093e4b426d5cd51916206077888a156890581d5ac50c5ec3016cc950f93e86f90892919a35531429030394c34fbd263582304437a7f65d9cd71fcd79a94250a2e652b814481aef141008cd1db83d44bde65d668ff8dee47c2f4d53c9401765f153dcf9c52f3ba3b9d4f5a4fcfb24f60c0623c72cddbf351bd30a8b58542d95de5e21863ee37c4bb22c5cb0ace92bf6cf8a6b1da1a1acf704744ac2cdffd26c03db790d407f31585b0cabc297687b385b4692b24c2df8e80d8ec9c3a5d95a8554fe1c54e799ca011f398ba733083d47b2a51d91338bd385386caac44830b4ac67e80a030b8dcbda83707df53719b02d6920e776eb14bf0460763b20e3ed715a29e33421366a7306f95176657cef3377ecea655fab67e63b575cacb5d4ba3a1f11f4102e2445a0103afd4a3facfc6c9142dc23b4879fb30971291a5b611a07592eae6b1d5b43660d07af8697a772f3d3cc5ca4e5af43ce86af494a01d7a6042d8a819df1b84cec5d60538f80ba5d68bb457fb8aa7ebea5025209533cf72a32db1cd0c7231e3b7747a671554a4765c40817857848263b4d43a087e115e49945393a9c413be4323d5c62b494e87cbeba3fbb1b9306e90e4a571a4f5bd662fcc8abfb8a3188d28dbdb7adb10470c59bd85bf7a0445c5ad5534e5c7576d33d2694944396dc2ffa00199da1455f8d61b22c450f40063bd49e6b25f482ed1b61e67f1d32eb78d6252200bd33afda4ed7b99d33c6a9d6deca5a9bfc715142a9d47c11602650026ac9ceaac4c94f6c222fb29eff5ab15ab0e385e0cd3f9632ec2eed1031f2092db51a30f1d4097daa5effc11d20f4cf9d888c800c12b49b6c39c14b80dc10b308811201a55d9efc3f1621f9597654b3b1d014be5216bc564a3295efd9032a6274f33e6083ef79c7d6e9bf29ba322b757a6b3435729d84332afb5b8300a5de68eba9161be802e5ad79810e3a446cf7d104bce3a767e6c9a20c6c1ef82afcb229cf2e159d660a204bf7e1f3cafe6f36e564ff39e5ff501a52594665c3de64ccdf9490b159d604d7ddfc13dec8a7084d8a4ada738d438303deba5da4592d12da2eddfe70394eeaa4f78e6d01fb9ca894ec6bfd79cada87314e47214061ce970e2d19a4691b3734ccf04084af1662219a8fa81c404713f997223f5c5037cc8e2655d6926be41818ea0bdc1afaa4674bcd824133c0faedb91b9b4405edca383a450a2063ad3d23261be68b65bd5948014aa8757cbecec7789a4d794e89639717d0eb47f45140ddbaf853700b259f292cf25a5be0b021a6d5d1808384bd489e7f3d914f7ba3c20a70b0cf52344ed389e0c319ef502ac4077b9cc64bca8e9f3b641fd69b03f28f2005d600e577d6a6c2884b99581c364de9b4337fae4c2125c189fda9b3ed9c9ceea3fe7feaa9b9dfa2946b17a40627117a8b3c42af766d8ec84fae6a45f9dd9e2f0f8481a48e1fe10c3eec90bbc18ba853fc66bbf45160fd7e395e9981f99b081086488005a715f9e49a0ac8c6fc799dfeebfcf9f7e8c4e314b4d302016f4ff837d62ce2eeaf0be59c99ea0b4c8d57e676c84bd3362cdeac6075a660c796bb9a54cf91aec9d43189722e933520e39e06668e7f1696d8b4bdc16e8b61c74cf0450014386c5f8041ac68e8662f2bc442b8a07e676c765c3d199b14de8765a8a697da8d91bd08e0d071f254f7ac2251d05ff5f4e2f50a70b2a9aeb0d842ac51d113ac7019846b589c4796db3b9b11fb7e991c0addd3cd9c93306d5bfcae3dec586855b13b56e25d7a945c919717e565994b13cac471ab4286dcbe25243c5ad9402bb9f324862e25088588ef84a28fe2e9c5ad5e34c988f066e278f0c45d9053d4e31fd38a7187c25f377312495c101c6a6efde392fa20d06c4808a8aa1776f7d2f69e943bc47a0bc2eed4a1dd3ec9b315a282c07d78a2e85cdc4a625a4147793480b868352a30229af750bbf2c597c90faa6d42abc81cd610e69daea69b84df1cec1e2a5fb3e0cf1a5c48b31fb55feb5325052265061813581a6e150fb5323138713cb605848b7b43c3508a2e566020b79a873e2526a91c0f6ef63bdfbc9a15ce44ce293f45f1675b98aa3e632693b737f389008cbe52aea84d1752c6d5ff9c09e3a5698e2fd959046f5048795a6b8b20698290b1a4fd96e9654ea5bea5dac7ee4e6be521b97d8ab95b0daf9f45f6d7a040e7b96a42b6dba98dd448bc9d48fe4570ad610ebfc78570e93132a7ceb7c22e687f700e67a89f808dda23d6726aa7f5c20f28026e810fb55ca3ef4b95ea7b9fd77e7c9b4d738bf4501c037b28ad47aced61d3669e0b5ae02f60a0daefc7dec553509c576d1209dab26baf0d07fca91f20b64340d98b7f74dc93c5b0fb146d83c5558a06fffcf699183d3b9a9632b423997db60b76f2576137497eacdaf267e48004034efb9d49f56f884ce3969347ebd522f124078f3cca68ec85578570eb36b6ca0b298a1c715173e828ea3a71bfb19dfbf9d94523bd814ecd4908c3e2e61e2296b1263d40d4f01fef57103d2190eeea8431942e2211487bb10191d376c41fc4d9b61cb2918f12386e096576564705ed4c8cae1bd99efd9465f05a47ef3ba0058f8fad016eaa4d3b204278328881c2cb4996be6baf7bc8f0e973b93d2e88b6cf337fe01e35c96ad1e5889535804151a946f2d4297c44f25722fb984fd507050a8603ce9d4768ae2c0161c696e3e6c298ff4f0a7fc1629cde0c02ef4c7c9119a69d8cc3b662247ffacebd647f45ec8688fececf1062c4032b59594b6ddd0bd6b72bd2c14a5ed6780ff61989889ef497f86e948876ce7d8956ebc209a486370d41dc4b989e0948737e19a3b70f5f57d9bd3b3e727c2078cbb12a5855a3076c7901af48d206349f7c1f16b29652c5a481cb418bc1418764f57505a1716e18caca3e41b04939128813162d3b1df2a99548592323e381949b17e025f439727107bd7de730e0b4fe5d16a31a3b6f0acacc910e9997bce6933e813f34d2409c5736393ac081c641c99becfceb00b12419579f8ee2aa2bdef49948d1bbe9d6bf86ab61a509b494604c576311fbc6ce44519ae68d92a57b2935cb8780d2d5cdc6ba8e7fed944dc3346c16a8c48e07b10b13e140ae1b2d6e38aab1724774aae9f506f2d90359f2ef6245bd02b97ec6b2f60579511a22f2bf537847ed71397ab772fa12302bd2d8368cae7b10f2532e15dfbcce36189bbedc7218cc8cc23ce359f30d8a6c0c5f13e903075f8dfed992f9e6ed46c9557bc8413b55cd3674ef3fff2965972c7c8af317e1d9e1ad4393f799700f221bacb7cc09e10a6118dc198fffb2753e578866abab7314394cc205c60388e6966735785fd47f594f9339642944b3e41798ed476229192659c5d2f42bc3a85b6178f63202eabf7c8f146d5bd3bdedd94010b920199d374aa6bda1eb2a97b6be299e7db04b051c517dc5b6f441ba26e053320fee5acf2eec0e0f59222d514301c15641bf3e648330ef07761088ba5b1f8eb58787a135dd738d656e4970546684666f91378912e2ef529389671752245f5e4727f4537aa9d8d12a3870865c6dbe1310d9c5b6e8bf760e3cc4e7e3c357158beac28730a8fa30e7eae6bc6761bd7e6086b9bc042b47c4c3464ad08503334e94e2db0e94d0f876b614ce184350216003bb37727c6eef0dee8660cbca875d77c52e8f9ab494e6fe6397bbd99590e16b7db8096642cb1e8db6174794c2b727381414d74423e85e97bc7dbff11ffac5f4fb39fcc16f65b9992a7073454b324d2235616ab2e9ebb62bc16879be2b63988667b24112cf9e7b0a1ece3b10f37fff40dc8ebf6ad4bbd4e54b730759e755ff6b99e7ea47767edc7934c0f1bcaa9d76a911e23f5065b00511f07ae6928cfc1967f189a1e0334caaf10c0645cf8d3c27c585eba91d49d7b3c6743628765ec89d6e1da42b346c3236f8870a4d958aa7e103243c3db19c4fe5fe5555eb47fdaa1e11843e7b502bb2f4e8221744899c0777ff9dbdcfb3929870ab3fdfc86dd408667bcf1c4cf93020039b05a3f09dfde2cb6d61f6853167914b0260dbd1b0c02ccab4609a503fc327d89a7f9f38a392a8740c039557a4597674f2596a4544ebc1d7e0c00e93ed5eaac3392e116d45415bfd2341e05b3a3cf8ef0328cc0cc9b6febdb38d64c045f3e148445c5e73223b402e1098738a69f800d33e65389b45fd9b3e7862261d3a68df6b58c3e1e4a9e3e7bc3806530c6392689e9578acfd0df64008b738b3d69813515a34936c654af881aff7794f7c97921d64854e0757f6f8543779222c90965f0c23bd8e2d029d221858e4881c1b441be81c77cb03c4102031bf14ba19dd999885a67c5c5beb0935579a7682f30ee134168eff47feb9f5af2d360464ee772ca36ef6c57778ad4c5fba220a7c700b423bbd9ccad2860d3bcbfec6db7f596c006f8be9524872a6b9099af186e93bf2f5d5915bbcfd861518174b5b88bd67925d892081294e49917d55c19ac0a468628743110cde31253563baf5a0a2317fc33c18c2ad5ff25277f4ce1530b44af32704007707822cb746744a1b517bf0f410da4d17fa17bc625cd7f489eb67710c61f9fe56d0e35690b3c6b99e5b6a065f6ed1889c59807f38090bd857d2f70d5be29374cd67f5a0215aa31aecc44f4407f7fb4caec78024c7b80ebd350db1bf159a0dc6718b218f57e1aea6d3f496c0d1482cbb766e0b87f6e8d725e18f30a99a1c477de1e406406c4c7240159d0f85cd6b2efe741a3be2fe074511bf92701f724af60000f46e457d7779a2fc1ecd7248db5972575a9678ca5d047447588e05f356579ab8879807990e5c7b8913e2318e973ea6ada8131db85a47b3bbc9f5cbfa1a0c7c8c5b35bb42eee9150ff023542afc9ed6242a6e04910f66c4bc8ca50c2025383c6a017cc3ff4233bc5f4209506951c408adc6bca1dd06e395c22d56002e70ccb9fa2ee38e6c3d622186d786c3fb3ca3ad5383beeb6800bf4fb085d1b735466670993749ee0f0044e68793ea10404d457eb21584b34867f20676e4b2eed1330c3c39e3ee78e52fe0f2a33ff30754afcdb85458afa20816cc98409442439fa7b12db4064e604b999ca94698185cb6e4c3189c2f88ca3ee5f6c857a671c6db9f44b3f6f3d39084a3dfe1fba329e9e02a117c382f218a49fc25121ae1bb048bfe734d9064ce7244697e729b1af0a23de35629051cf74515185416f5d9fc9f3790b0443fe972924746552ba92590c6d11f25c4b7c5ecdae38f1469c2b5a26f69784817d82af1573a2f49c2b9ff73bf41bb783000fd4851e81e50cada7666adee4ededdf89149e480c335bb3df3c2f0f5ef84ee760b2711837999ab600851143ca35e72acf40ca91dd3231300a89fa96f5e6b458248bbc44c94626e67b4d07c1ece6e5b794d7a876635c696e297c6b70eee144f63e5fe5ae16a32aaae7859c299c55fc87131dbdc79634ca4228729f02e208c65372b671669c87cb8a373ab9a0c929ea26d0f6b89e8eabc08c276e87c6bd4600b951246be72e7112a0cd31a3b2ad880c729c2a93468a7bc8ef524744639bdfc385b1e5379b4d9463b92cbff17556a986381ae91f88aa8e9c6ec955bb46acf1d7db10d2c1ff1b33f023a625d773290be252f970e12a74c87df9882e826d145d11d08c9ef2f645a2d7d2271a1100ec3c3d63bf67aec8f05a16f15d65f4bccf202cdd736fd019d5fca58f915221c4a3927860c237dd24871702edaadc018769fc7729ce6ea8de36029a903c6800084239237bda095753cf2318706dbb3260252ecfc16072a330dccbc11b946c8a6a73d02439fae37d2d2bfb01863cc1d554b211eeded3490fad6b7192852e017943865372e2ffc51db4df3685331c0217b5b8b0ee38ab99de4ea82ad76c6b59c6f8d5c25134deea74d9df0842e3a76afe9664a4f5a7b787ea6b3cf26c91acd8426a83414d82c6b2a5ec460247f88c13b0947fa048ae5f50205ab81c3e05a7e6ba81205c2a4b5a79094c24a6c4feb0f8245b9654b17052e7912fe0c1a2732694572f20fc57973ec409e2ee4c8fc85a0e0ccfb57c9ce85166aee95fafb95504d0c2298462b5afb24df70c4ff4dc545410b546ac8ba2ec6a95d3538b507d7eeccc49a9ce6ce08f8dcc85ec008c10a5623ec6b83812de0a7e4294c54e2e7fddde579666f7ba4d937de1eb251f8a2c0499f24973c14c69ee50db77525b229515fd68db2652e83599710ed6ca34175a46fff24ce38947c7ab3644064c04a0da7828915662f6355860412be7cd2ad0685f31ef9f4c8d258a77119eefaf8dbcf145e1de859321e5af2c630a191f548507b7af8c560df2199ec76ee17ada254667f77134461f49b070801645a40a204ccb414f90ad493fe33b4362304fe048b89650a2f1f88b42abc7fb589d3a12e8325dc71920d2c117c182019e3a140e2ce2171e96dd522ae2f473cb100474660350b6e86be8ea742173ba178029d3057d3919510c4756460998b1247d7e32403470fd67a7d86a657fc70c75e875d32f9994fe883d0c8b02bad73d357ae82053a323a35eddbb93f4407985a8f32f0191f7809ba880ba8885523034f75627686f624fb096ddb7abf8187a1b4be0473a6ebc016f3a37a758d5b05a7d6903243e955819147bff59852aeff96ee96eb548bf509bd28d237c179644020ed427833f7b8f5f75ff246b7235c197279d412200894eba87d74105d140c4077089c0a0c9a03b662473f79c6a05cd7f1966646fc6e6812dc4d947273663de4a8adcf57c43fe5b216360c2c3691e53ae03626ba116a6c2c85b8d1e02f69d79fc469f93af6531392dba01eef1380372a453ce362a71e58e8e5c72ddeb18ef3ad09b1569677621c18da574da677b7269731eaee51598fc2b5ba49a8f69c67b24485ba4b1fa00315a8a266f04fb80fc6e71f1eefa91cc0a66d145f621ee21da497cae99105fcc1d833f79ff4c83387ba4d0d330b55caaef3c76d23c4ca6e5fc833835ddbf777951e5cc529b59a0b4fcdf7797f8ed53863d29fc46c4ab74233c27de190b7b51a1ac63142ecb300b986ba639ad13630cd1579df685217d13cf235e0b46279153289b5fd3a65c19b55e057b5e8b2c7461d4e3889096f2ce4304c742339753d1123925af466e2f7f36fa83e63a9273b2d6f146d8593362fcb42564ab7984e6e02c31b4306bdec4b23690a7a995c5252c362eae841188d0a6bfea42985db204f36805aba2d5f516680877a7bb498ffefe88a725b9b52bc829ffdc69c4d6baf516f64a29730dbc9599892948c1366baa52ca73b10a94bd2a247536a5c5909fe9fca355c7f55e9e7009c9ac41f04c26f60c364e98e14ffc3dbb4cf23a7a6b5c191af23cdd56d79ac640c7a53c11be8b14171ae00bdf9bfab5dcf061697d11af48db3560e4f00e61ac608005a16cf92d9eba4d22f66ccf53385009e17b2df3fd404efb703bbbc236366a7a5e1e42cd26d555df4a317afab694e91b8af46a767cba669cf979c1e832045b20fbeb04b05382c993addaa191b73021edd00607593216295364c4f8e7ed3fd330831edd7a848b14dc19c70b1f636aeecd1013a1d34262fe3755bde992eea6e237a1e1ff455ecb3b2419f03ba7712820467a93d92a68ee2e2238ec257cb352c78541cd955d50523085f0213a5841243f8fa8f04b0b111fd0a93ce1bb71a3c26a44eaeb9cc1169707e8cab5c1548f82614369f7da3d24db111c36160f950c43182f2fa08486924b2de6d3e7e6f0e7d8f6aaaec9ea178a8fe8dd46d2c2910ceab3b49d10d7c63031750006a0cafbbf48d547973a633da49372a6ba7492df7472e9958741d88b7c739b5ad4f4e839d8bf6179628a39d00524877e53bd284af33394599ce3e9c316cb9d510fe15223576f49b2863983545c8f30ea3d356d12da135c525f4303edf11988332357cdf6c31b29ba23b1394da6af3ec4f10c15c20099ce959b9562eed44c6cad06a08c478b782353a5786b11debd1834e7c531b5bd389f19068dcbf811af53c7c0e127e21f7144d4fb8e510ff0c56b3c113eeb4bc55af07f05c22bf7e047a92ed97cc3e9059267d0cb7458523ecef617958e923b4f10a9661bd0cce21155293329d91ecaa5384d1496fbbe354f85470efcbaf22bea2152c120529fad093dd4574b9423740b00608de807f4096a236c54120e9c844d34971fd4a54843e0c6056fa36a2d431e28fe3a58e38aa377b729b3e66dce81b78642bad6ba4dcd8291ec20e9266ed8d3ac8ce762c9d246ce19cdf04efa6d8b0d3c704c337bf8ff5dadcee1606bdcff207e07efda20f4b05e6861c1bd7a9c1a7df84706396ecae10e8890618aa7dd8a3c12743f0268ee1126469fe58068d685f9afb5a04c2c572341f6365a8130dc381a81d40fdf0171f2d620c395636c2b91a4f732ea05324b5c882d5e99d4fe722e1aa3272eb1c65806589ca58ce4a242817c8c9a69e34530f4a69a7fd50c51da6b059cf74333a4b0b4ecf7c5fc055ae97093f524c0b2d584e8666171040d679aebfe943cf7aa92c238cac8481494628b897301a0b59cb16a8ffeacec1e9cbc271f87c9c59dba42b2a450be0f99115d3ab007186af789e28decb314c295b70e283f6dee1f06d60b8072997e664ae8c511f9572c2fb765cf627cc38b377cec39c0666aa4f3525a5ed95e570f030b444171597f8d2f59e4ce9e899f2d545c60a0d5aadac48287f6850991a8fd09f2121ba096823f167ddf1dd39daba2516cb7831e3507d18244d7de9a9a88fed40ca7eae54aa33e890b372b6cfcb24f8f21621211d172546772f6d12c6d98236dc761553a7ed19d4d9220c93b04c4d9fc8524feb7082e8c0833a523da55eef1543a93cb2ac2fd4104635d9ee678d95f4e55809e22025aabf37d40a1c7402d1724f7dfead5a888cffec3a6212bf26c5ce21fffa3e7cb5163afed82247b578838eba1791fda7099014d9eecbec496b1b85256c1fea8d1cc2fe26f459aa9e6ccafbaab7c3c4708db92df938684c1a9a47739dcfe05644e4575f04fb573c9a1439eba21df94465025bea2d8b9237199cfa61e0bb73284a9e66192cb7b0dc9ac8945fe1770bc870cb3234dd5fd103ddbdd8b8ed74fdda04ca917b48e558c62527a1fd0044a2c7919a2b2c87c3c6c777a6ae23dcfed1739e4fa45bbe92c35276843d0affd8bcf4755866af928ccf3801b99fe91927d06242b6983a89ccb13d9f3e9e00a9eb1c472cbf334be458c144fb7a2f72efd29d7bd158cf204109cbf8360922384c81f18a3672e8812ac9da43375fff3961b4c81497844be69801175dc49548fa7542421bad55478a0cd06ff2e799165116bd9ad461440ae6d6bea2bb185f7e2ab635b30ad365fe41057bd7d4d8a00b5b66e642f22e7b4cc49676f96866f4174403cd9ef36b41aa4cc2bd0b18343df429b365391b44566b383e50c0bcfc0d40a4818c2eed16c267d472bacc28b6c49d1e473172344daaee3536e3ebf3b138c1b2102dbea17c45aaf31dd2f746d042f918d6e922abccd33418049a169ec8462b698314f1b9b42b86970bd7572378b4d3ddbf6bcc5713e28846e2f69e5e9c7e6ea94b53c1639a67f0c05fe07f1c3f08b49e6553eff6f1c04f182cf9c46af7f7d159493eabe9a624a73863e389f69aac05a60462c31544a022f3047f8f85657fc2d3942161f474a537851149cd0363deac0f63a2f0404ea3bb29d3a0084385d7be43629fc87f3010ef9554a24c4625db3aefbfaf34781e97edcf3b1fc3e1d818c2399e1b96645a0d80b9b2ef7cbceed8db38a845b67914663a221cab5e63fe7ffbc63e2aaf8c8f2b54d7d120455ed638efb4c0adff92d109dbe4fba3c5ba8fdeeae06af3e3f65ce7363aa87e7103fdf4ab2747027be597bb7e067da30b849fda9bbb2e1093b105efed43d040135719066009982f0703e546e30a632255221d18db441921a88614d15d1aa09785989017641fdb3657babace7c4277819e2e2629dc2643f00940c37c635682438c167f05c188e3f7adea8deec297ad6dac40313eb4754412ee33b3eab5e0a33404ca06560bbc8696deb03359914e95e874cf539dcbe6262c784bb498218d447722a7de0bb56abbf68055bdcb92c5884819032533b4317ba4c0a7aa9e7f606264d63d6d9e26312513bb4e825e48d922b9afb56e755efdf46fb0f9ae4d8bd748888aeba60f90a0f567d39b70fbf834e6bad7e52243deea50d94cbae0efef50210601abd7aec8a95fd2f0ce654f7210916cd15730cbdc1bf840fadc6222d16a733e5ffea18de30a8c853df6895943618fb90ee540a65a703cfef9720fd910e468a3934a18e9967bfcfc930d772ed46d08dff67fc7dfffeaf78788746494f85f73d292e149118a7b87987f3a7a9826604ddc57a87a2c1059f3348da6a29eca60ffe73d5864b853073b1fcb812860bf7bfe0c13494fec05a59a83ec17e5dc5e80c27f7c3e22e77b463d44b757ea42acf3c2f5d31160d3b80a845d3f8970f6aed0fe48339da1e433431de5fd00f04cd013fadf58e3761b0aa0c5f7e3b2ca30486263648e6328a436232a0e1a21199811397c55f3cf6f7b8e6289938df57b577783fe86d7b0cc126e22eb95aafdc9cd7e605358799fde85d18ea25af8f6726ccd409e8a9d70c61e4a64c91f6ade747fa428816d9a594eedcf92e5f8b51034337a0393a2fcfd1c18bb919ff541ad0e7640c2dcaca72532d42c28d9abc54f23aacaca8df3a6609630414800d2b217e0262ca2c977c7899bec3583c6872961d156ad4c37fba5b375b4e58520d9cf89ebc39e9dfab2c9d7dd4a84143bf3a061928e55c5bf5c0887ee5ff130e22b6024cd03cff16c75ae5156fd5b630aa0f88677304c4dafbd46958d9c0ed0a43723cd7dd2382e0f64c587aa40fedb49f7e508c787dcc141e030ef0b6c278d05e7d1406839d1fcb154790615b3a1bf2d747d2a1a80b82fb2dc33d4905dfd7aa2334279145b6e00050e62a96f604c36b9837ea8f96f85463e912f28f039acc532f89fc6a0c704df370163291e52030704b00c141610997007168ea19f239e1725ee942bb3806b81ef12273d68a68f526fe0e3c67d7f4a165b27156f39ee4198c8be0a1349fcb556d8b80d833aad2d82893d634e716cfb4f61e5314b1fcb4c4434d53ed8b8a3f18eb78e0855adac8b0f37478a288532f671aebf37420586bce0eeff7e87392937d3cb8127aa2744ff4f15da263725601d7646532be9ed15b37a7c461ac59116e5f5ad5786c871c3f1af331730a8733fd7835c0f2367d731455a8d96f5b58a0d29e49589c15ea289af5a7d7fb3a7b4ccaf43e14e73fae7a9ec9b2eee4395da170447a05f6e10e89b3d7d89649baf2e0532bf0c6a20c60293de45724706d483acb82bd780fa8e7c63739eb9736af8009a653ce298980fc942866ddd3b3b8ebe0a058a327b1305800dabddb02b9a9991211a140ce6f57163d7a95a595fb3a65095acbae5bb0f6f3eeb2abb3acf5131201c80ca51c8a505c59ece7c17027835b617681036deebcc5fdaad2c59e007f9c6ff400672925a440dd1b69cada72811034feaae213d061bbda4de31c5bf2e301460b3c4dc5adda85fa37d67a0b768ec803ab96872316f96279324526f1a1d696cbfed99b124e754b030948ac1605ddd4c35cb5b7d2e7b80f712faad09bf188f4c848effa07ac88a69a02936008bd310e850af9f8f428bd2c8ded032ad04bf28f6cd6ff0290a102d9635921ad2362a705f46e950905c427e3c7c14278d3c7ad7426d04eb8d8a25d0ed1f351a2acc57831d223a2b3130e9a99f5fa3813e127904ce77c686e6d0d9bfc947fc76549a6600944ea427df622fb49a393d06bcf159a9536db867011f7bd8a986bec8be0eafedd2a9ae7310a0a48e284683584d3b0b5c20b4c018e6d6213bec97e698999f0ff13ac68f0c912a0402bb27936c36b8376c024f686d9459b0e8b7d024f434b9f3e08f4656cb60fe6d7dc96b5707c91580e2c3a96683eb2ad4b12296f13ca11d144af4810cd64710b8bc4836e9b24e86b61dc381930d59dd0396e68f827f96260ba9e1bb2205a191c951d2f5c0ea5a006f1b5391d5453d664d3cce7bf3e37a6205e5e1d2aa81caf59538e8adc582892514bafa16d4fd11d16a4337e7cc4a14c02329db0c23228aab5d4cecd03bc607e97c5a8aa2a3c37b221eb61196588b097212858bdd1f21512c3d7019fe0e332d91d014522be8e9494c6b152587204ed99c92aacbac798c285258832cc90077c6de10f55d4bb3cd445f6a12763b128a746730abe57c08f47eb18a01d5f5a2d36a5b65127deb76987f1f2c5ff3d30475bf71095f47ab1ee1f7e47f0da2a61b36f1e30f67a4ca114df0f6adaa893af71e4d0d0cece8889be0f5f5d2c5e85ff2b31d91e0b5b7b4cc134c552b4ebf2c6f41ede23942e0f73812fad70280480ebbfd38b05152e930f26aa460a2c0a81e8e165123beaab53b76bd2be21df480996f99e379ea3778ce3b2e983adaae66a112e88d190be6bd261674ebb44eede67207dd8dae5ddc644cb24b98f7fab7ace46fee3f99bf030b3075208d46804d1ec9bf19f27f8c863bab908380abae58f722fcdf98de4644d2458caa590eee096a7bddec5f2c5178cddeaae8c0bc688b260a638ab39b8e2fc2e41296fee0c641e9f8430caf11a0298c8ac67dab050146a8e9da99423491ed3c5a0f8e0994d537a040aad01d5f3929593faa59fd6d87e3ed5ba0cad62eeb9823f8b222d9ec4d9df324a686a78d580046a51fe8e43dfa34dc446b09fd1c31ac299fade1d655c8ab69522bea50d60d0efac05a2d3fa540a63c301a3767ca6cd743d643ce21ea1ca5c5b577d8811a7f542ba455c1d10efe57d16b0f77ad2789929342c66ce2db8a656b238752290f8dd9c0b585455ef3e36c48a1f14695c573f693522ce8978a5994c906e868046796d8e7d5ab58c5af6112272c06edd9f69459855846852d00ad3232f7fc3b2b6731845555f0e9c758a5979bc0c5d28ea0b500d1bf8b4dd5929b61a25ca75ed6bc1d0302158e4e98cc9c2d12d9c4e2e6ccc75f59aa668931f533b95ef85fa54c7e2c1480318358787b081df99ce02b990b68c3dfc65cf5285dc321d0ec7f2e9b8b144ef976ef798e0e56dbf246a7492a1b08f527cf2e5bb5a1016a0719bf1a8f233c66939c556bf189d9921372281c1c47dc1b5c8d0252ec3d5ff8559db0d7b39ff084d0c3e637ad36638d54ec71116f399bd42ac42de5728adea3a6b89de6a40036b2e1269c7f8c02836a2d91352210854ca1a96b0cd9acafb1ed7638ef8b05aa8f9d04485ff17169dd0c31e20dff85045fa1ad63471451e110190e179ba06d301ca0a11d2d827dfb9b7df4e885e78e636ecf29f71a351e5f68aa215f49fd6788db49fd93e4069be362453ab79d51dc18e89cec6eb4f0a0b56447516d5ebc1eb184d7e703d021bd4bd3c7b491db89d3e8d772d4aa8c36519ea31834204f9f9e13cc7198317d02732ca9999f1656f1cfc34b02d9a0abcd3c32608d956a5df0b868f12fa6dccbed8a4a4dd066facb9f83f02847355d22d43c07b481d7b506d0aa5c56947bf20f454cb00e221bd9a43d420527ed5f90f82c21898f9e5d80011309d0e3da20791abfdeb21913408a4507e455805437e26d298c66c38d57a89ece31edf7acafbef50c6a309beaf3c7703a4d0b9c48fbc683404f7d4e1d5f2f7a4ca544829ddb953e9bd348ebae78bc421b5cb6537eb82f1ebd22a41503698f508976bc512ac617b3b8ffc078abe683fdb27ac7b6527742cba42ade061da90617098230d9d400369a343e169ebfdcfe16f6c25a3d5c616cd2f0b906824c0c92e566d453135f5bfabffed2ed9fc0a09b2f78baa47f10f5b034e766b2a4f7b15078e9b324cd52cf5ca90ab093bfa638d815f4136c6c2942fc7f9090f55e69bce4738752c7b2a318bfdb79fb8e0fdb9139e3db90892cfdb484e7a94bc12f8332aeb27165a0519de2cacf362c1be6552f7d44a32e23a2a0e7f517c42ae7645b082c182be2ae07276fb8dbbcaf54601a5390d88c9803e5d3ddc13a67d5fb472634d1fc7088d81590280470652e863719f1c694c0294d83a19a336723d13360d5347543f30b50d87c1d32ae71e6ef2271d68b1646c41746443455b73debbe929858870130eb0da72b62399ac6015c3906763156447fb1008249bf5ba903aea6a815287cd0049db8de9925d9a0e6408fba2fb964298de926442b8b756a12fd45049543b92c5b87b1529eb9e1964118e7c55329dad523580526f895d68b0f7517e05c5cf19597986a38de676f948dd288ba02ef8fe830cc783693a8d5b79cccf58089b6288da568cc8c27704f7caab76434bbde1a29620083fb65b7cf052eab792b5b55d2c4e773c5a8f4fe5830fc8918c7e3470485b236048d659e8968013d78ceb2b3ccc79bb2534a2ca18a7b1f37b30030050e22fb848c79a20ef66d34e1d4e37d1e07a6a732856484ddd55d4f9b6a4e95e128328f5c4a3e2644ae3642c63a892e593e169b1a169a1b3d44c2977388650e5020d752ea6d0b782b8829c431696e65907cdcfd4b39c058bea5710ce4c4149c360aa30fc4ae0d7ea3d910f7b88de4dda8df19ad4b8df5cca1b004d39d09907eaef6d39cf27a1a1e08f2a711b276307a1d3e510ab795c4e1863a9647cd788f220998704edb01bafe6bf5783aef94b2987052b3687c1fedc190c5954d92df5fd19073d2eef2214793b1594da0be87292977cc6bb62c236407e7b9d307c79c2654fbdb84545796a75a2b9ef0e2b41f3a783bf3face99be204dc11118b643f0ea2f44823a909b8f067fdefa74f26f1633a2b4196c13f0c316fa5ccd96680a52fb12808f281e660c2978bf3bb45d50d22e5d02a109d64ac31c3442abccf3e086964b242ae55208643f1d0622ba37b880a7971b7d82c8ee8b5c9f5db6abbbe1d751ca00955eb50c5f5e696433890c63e7cdac16f506c1f15466b6b19018a885469ade6629abdc5a5966353dc58b38b3543aae061d45e9a9e886a1d682d0c71365ea00882c834a7d9aa71d57619ff9ba8e60e549456dc835f91445ffa78b63d3266c45b917ed97a89200bbd9f7fc1df3a00cbce0d0ba5f94f730c6cbddb1350f25ae18b599ff8356a44b6f708e0b179d661b46f920faed8cead016cea7bc7f8b8070173b16ee5dff4270262ffafd5b4116f25cc3673c9f4e637a3ef5664d4790ed35d9f21a176b38d060315bc527d7122c80b73dfeae39d323cf479efdc7951c2138dbbf8c7052f726b3e0dab9bae9110d8d1e2c117f25a851ed9b672afe8f25874a54e4086ac8c4b5cbd61d9bf1017c13e0ce81140640d0e90668f2f52677112a5d3811ba55f348f3c60899689e4149729ced6078182e9029ee672e58507397048aa5b1d07a95f221d5b6aae4ffe035032a3e14e7c0662c19064aa8a323e74e01b52835061e23fc930f576b0e4cf6f136a5e7b07c89450a114f7b746b98cb7619efbb835e362aabff3d86dade8b8a336771be88c008d5454bdd96313660a4a519d6eebc1dbf38a4f3a3043c59cd6fdb7ea1126061aad6227f4599d19dbf6f7a839b9ad4f810d6985ee9ed055bad12d17b2a03c16867ecafed9703c1fe4ff41a83ee586c6b6286af0ade1046882cc10ef7f1947ad68d06ba2da5f6d101a4b8bcac421546cbf445a2728d636f342e07421757dec5ad8c9c8d96b8fa4f954f3554d09d8e3566b62a6ff9415f665ca5958d7d37f8dc09a2a2550deb060e2f82adb0194e198da1afdfe01c9281a363c3ef15de2c716965767c9c3a53ef1215a43277c6e576498f74a54f758875794a72060e5c8161e87cfe59f4ddd9d27705037c333c227335c979fb779ffa24a9703a700b96949737bd54dfb4b2a872e47c3fc44d78d201dac51be95eefe7b3fa69e7b912853c8877c3d8bf90f735b7eed1b198b9652d37cd8193dc121815db3d5750e1de583135d6f4c353ad26942dcdf1e755bc00dcee29b0a0eb96e5870db4f8faf97569b2a79f44fd482998849a27a08c6a112e7b90fcdac8e0ef10933519e0014fad67e34a874aec2adfb3a39ea8b913ee6439f0dd36ebc93b75fd33b4f0ad9b10b02c22fd5f2e44237aa6d05bde8ebefcadb95d6a063e7a3bf6b5e66e41e71b739bf77675aa9fd17c6d11621a4d3892e14aca43ddd3afccd218e469098243eaf1bd5016e7ae7d8341795a0dbc2b4baeedae26de39aa35007a49c6c865d1906f5960c800319d7abf603c0f393b1655e5f4639eaa2114b14c4a7730cff410b0572d6fb246ff81e2d0b21d40eba9872982fdfbd7b05d43664de8603c0e95fa38bddfaa8bf31099e7ff10871a7dd1dc0cf23a7cb6c66ac9bb611368c1439ff18962349a023f89c2e2614dfef49f223fd259b9eb40dc68416b4d1bf2043733877ab7f3d346d201a0e1d2b38ee43bc95729630b391923d0de87ccfe690beae01da9dff65e92797f28209c15af4335f451ff51daf2a3da2fcb7e0b170d28abfeaf8350a77111c4448d97408fbbe331c97d7b8a16381d5e927a9dc8d44967f732015e622ee32b39d7cd9da340562b638bad719efbaf70d060f6090e99a079c41d308e53b11d96abbb020a87653ea22bf52f6a5c87d65f53c68f6e2f1a21e34f768085601636e4ec5bf8ec3852a0e9f623c685695f6fbc177e1644c6339c421b811c05e4d1b522c89732d60e0950306be635f795626054e7d014b30878743415f71be71972fe6d2b170a1c3e5d024da33c3579b2a682951617fef5a5bf73f9188b4d3d09bfdb0d106283945709d8f6487f92efc3b6fe13912671bbed4d0ecc155cd6088d3c3a2f047036c1745b9d460eadd693c8b85e5ed926b12a4103ca21cb7e6082f85606e20b2106916f3fd85256195816a724555b71d0899ea34ffed33f612377710f58f12b1f4e2afe63651000324c2cc06a03dcbbf9619ea77f90e155d246a1e2163b6fdbb41f4305d6fd6d6190d74dc5487700ad2afdd8902add57b39b2b2c45562e37879a8d475c7edcf4a0344307f4aa1f5e960f530c5660bd30b7a716ee2fa4e06f901962b1bcfcd1b449ca392766e3bbe7748066f266a87da312518ea547e16498621edc88ec0873ef23e8da83b6e6f729a6a678058dfe69778495b87f002b2561c636dcd50948da6689798a094a35ec59ebf7d4bc1866d64176c2f8aa6ef9c3c7cec5b35019bd5efc8add3cf9ec442604bddad788fd86e0edfa02a82b8800d882594c3b036224c99dfebd1fa60ad4ab3dc81c13e57e4e65e44c8c1996b6b9e4e618beba5c2c4b4ac09c9597b0204fb01a6e660ca8cdb437a150206a772a3e8017faf5693c3d47de64a32e946c752063130ed49bd87b4810016e50e4050bc488626efe23aa8e463da2135055fd9e242ae91a2792ce204c0bb14ff5824525951a4aba9d2013f4c2cc3f9375ef251f91a51eb4004e61a9e300e2d998321ebc9d5d148ad9c31bc8d23410e868302c3b323dbd99257e5c76fa7e62de9871e078327765bf8b8342819baa4f6811ffe0ca929266ff4cf5e2640fd033b4a4b1bacb7409c60eb3799207295711d9a5ced056e06beed1807120bf632a25b70560abfdca477f2d0c8549212667bed9e2a0a9d6468762b8abc9ed782664bb3f8202ef1b8769dab967f07ab145023985252318de9479cd19f500c70f41a1860144f0305c96978455a774bed7b9d15b54f1e24230bf3446e57e6062c378657e56fc18c69ad18a49c6ba854153ce4463cf8e109c36a68563bf43c3ede5c0ec6751d3c22a60cebb82db669ae128296e5d5f7a1b3a7a83d3c2ac0fd9358c98c0221882197ca1e8d3e5db5b06a3e8e6dbd82e3ca0508e2e9e2bdd94010059c2e8bfab382bec699c4097ae41c073a5ed1753f48f2827b36d768e8a4c28991e73932d2a61496abe0325df5442abbc3d39d69e4c8301978b4eb6ef3894be4e14e017157c81660ef20bcf4919d7fd62535871e753888bc7be397d54eca54cc7d36bad4cd4566f56a6753ca67933cba00837979c335c8c4bae9073ae8ec4298ffbd8ee745b5e4c3fed70a8583ebc8f633b026dde07b772b0ad5e2d98406bf23d927fb923cb7d8c64cd93f8784aa2104c1b90d77b4cf3a2dd9cc0518c07eaa8f79da6c881176746c094b33017374abd4bc12b02effc24dbeddbf421098b348539834297d71c297f86be0c2e66d00dbf5988badcd13cbd68ba1e9b6e6373ae0825443c59a51823e1b11c4465dd451c4e4d0036ba6c5276145d2178f818003e30e448dc4455ce87ab66859c63ebd777c3c3f2e9f1d77ab6c45b8bc1fbdfdebfcbf9cbf3cfc2ff574a4f9b74e62dcaf2a35e2f4d6d29d4711c36c6fd19e9f09ec11234b970d5d3cbe05461e7efb968758f0a461148c111098b14389d07f0384cf7d2dc423755fbb30b0ff424c725ef9fe0f454cd86d0f87183818c251fcc9b90b131756e40a749307e6c0c3a52e9d7abfb5416b5893e7f9b671a1263b4b40482a0bdef104ef984e6bbbe1c3eb7a45ba3e2d5237e9a526cae629b0464fce6f0a8d647a80ac89db47d2ed081988a77f1ac6a5083dc0cf29c2d3559ff938da438336e9c2a553c3b97e0adcff7e12678ec5858cc754f35eea02770069127242bde8ac40200c9312f6a65102b06c7ba63197f694bddd15eaabbf7408fafab73776067239eb5fad2284984a876f3826dca3b38cb854cef2917db2aaf7f97b5f7ff2f82cd4c50e263d371c96d74aefb5d048c12036bf9160b9b5eff5ead48b1cf08ddd09e6df52ddf378d0c625dd5804c58dc3468e567e328e8e935e7313c14fe3401ca2499eaf08d055cd19ff52d9c8e57007cc38bd95a85916576382ac8478383f48b3fe1e77118377fe2d2183dc167ba2173d754aab18a11005df074c59ca734c554a3e7622ec3ab9a772e96a3506e9a8c2ca484dbd4faf4b6546fdd7454b5de6f1e03dd0d2ddb4b47a5e0877dd3d053862a446fb0a06695a3b04551949fac8ec45966f155c34557914f80ab3bffd26c83d904e5009adc9f15fd2e3f953ec57fc9d62e420670d4a013fe64536b6351c8559699a6647bb0e774e61fd327c75467d91bc5cbd905a72a4112df05c8a2a716ba266da90c4e1acc65b4e7849dcec9e8152176c0bacf8a7cbc8b5587a11e1e9e94ec56455d4dd0989ea09114fc059a8fb5797e0bb441c97693e7ae3969270f4acc18ff8ff8a6ae2f5a3008a401e4ccbb273ddf7c7f57f23e0d803f422b3d24ec462ada0617f8195c954fdf2be3eb3bc2243546c0cdfb030538249052858692c73602cf33a4c0484f0e67815af79cf32023433489c4e4af6c8329abcb3fec01282e62dc79caaa71fe4cb99cdfaffb719c6b360551e409de0996b5d615e8da190fcf74ec7503a255cc2577e6121a8dc956b62a626020cd5dea9089f131c8d474178bd4a90a6c84d60985275158f22062b645b8ecf638015e804ea6dab801aed7278bc2c316925c659a84494c45bce287fa252ce11d8913706db6f3e52412909f095ac96028fa5d9615dfa9dacaedcbb4c848a2fcd0463ef9dc2d1ffa1420aa411c00f9396d57006bcf7471d15e19e103cfe8d0e30b4c321dfa1a13c6d116b84a4618ba76d6169c4b00acf6312fa03e9fe8849d55ac7e96994b7bafd5701b4d771f5f30eca6075384c06c96208748df3c8df33975e2a23a2b699364defc280fed92b880f20e63da7248c34026baa702849f62d77825c45842dcad9f5b0a9c777991687d8b41baa807b5b11272d7cb721c17a58e964fa1734bb5e2da8b7bda324256daeb878e5358b0db14e7485bc4547182af08e3110c28453223865f44f099ffe7ecc1311cd45d55fb1814d8a89e1d3d508b66ca5cf4b214d6648c3547237e21471657b17bddfd7108205f8863967cd1d5824f7956c9bf6002921ec1dc58b4a1a966dce0ccf176c051b6bc13b991b57eb92bbe838acc52c312b5b029268aeaf66ba8594242441a75da120167b935d50e0f32cad0f4394288ac06e806105aa04629b043747a899a9975f5f426e47f7c28fee038e2f87cca231e49837ab28ff5c348930bb99715240183378544885e0713f447fdeef4ec3fd1119c72d315307c3179fde82d017208a6bd8825f085f83966000f40c82d9911526d025801c783f7efa9f34dc9f17f843f6965154ec72ba86010f3742e8dc71b2034886a98c1faeb1469de294756d0c5893c90cdb1c3d02cb00218492dc77e4fb012de9272d93d6578c7b4c19d36c828fe4aabf42ae6fb2cd855f0eeb99d4ad8c78cbd866f4e55871e6a19981eba48e3b1df6673f1a45ad182980077e5dc9629d56225fffe5481ae5930970a4f3fee755a77e21eed9e3105b36a697bd0f88559d31837c1c0e4c833dd1482c7b23bd158d5cdf562c0caf5b8f38cda0e9817e1422bc658cc18baacc3f09b980915279656586ae2483e3fa0e59ea109da2f08478973e22188362bce11436f738a6239179a6d31b73956bc9e89f10dda0563e3e3ed5ee5b8ec594de8e5a2865257b630ce37eaef57af1d702644d67ecbc0ae838f935f713d8b09580f1e9983ed6510a7baa28c8d4edd26e03f9a61fbef31ff4dfef14599bd9d5e162a2cb5766103e5f31fd6e85f4b9caa42401a88bd21367027b24ec0e327f35bb0c350ada60895427af970ddb66c5f847d2b63af4f1f0c086279865bf8b87b338321362e5c6157388ef52ae8d4ecec7bf43a676173aa37bfd89006c2e51e5364f5cb389ec6cee3ba273ea7e00b8dc4dbaea0b10a77205d3bf8e1d3aa00c31bd14304868bfaaedd7f811f57dd8c1ae848321e8b82ae4e738cdf4f5836c291d402a661fa4b6bc2c804a2c60084c3cb82364e7dcc13693c99c4bcc678891e34bb180171becb0a8c4dbf5e2abaebb6146ccb62c063580d9d0a159e9558063fbd4f7c077b96bcaaae2784e843630ca9893fc5f2b85c0056a4b3c4d31d621c339fadd11645e55b0dc81bf2c456ca3be1c316d67ef773f39213202c93ad7741aae5a54f004f944b5fe0e958c642454e46d2d6b4e3035280e234b1c89097fa2a28887f8caf857ff970e1ef11623e3da9b3e8f20f0ec46590efa60be88422a553fee74c0f5ec98a7b500a61f5a69a820bfb0554321e69ad25dbdeaa7075b872e5e8d6a1ac039a42e0a356bf7f119850c827f1bab8522302b699415f020b0f0ed92d2c64758c5d764b8b34858c9b7082df3a6f512140e55a219f7f3c065faaf6fb5d8a180e5f20ee83dca1186a42a929fde13276a2596bf50f43df3d1216691b622a87bc611ec34342b5a36d75d78fedbcd6ac410eb34cd9c16e5841f53eed1c17c2d9d2ddbc32cd2651a67778815389a5126cb0a7648d3359b28bc9012ef0cb5bcb74ad67a72afa94e15403d2a49726445843273c3bb7578271cfca97b414e651d269d8ba143c779499b16f0a7b791cc01f7db8b5fdb73251f5199d2a76df3f93a2a65c371c693240855d922720016ac2749876639f8bebb490b7751e655f5830ffa28d99853d58469184376c3fc5b87183ee3a8db2fd5910ac9fd7292b70ff64be4f1de625faa5328333526da1f7c8c7b766496f18613c3995e0aafdd3d9a2b52e6d522cc75332770e9310d792abf83e2f2febe45863d28e4b63a8131809d872386f09a6a22c0694a70eb7c7a75510a07c4aa4838f64fdf63a08df2857ee174dfea2970234f1377637f7e62034bddb6063182fcb93c985325b27b000b2f164206255989ee857bbeb6323353e8528db6bea3cc480f4742b2cce100607d59ccf72f4b91ec65e2df99930954932bd84a4b45684277537c3fe8ea57add691c20fbc59af7e31a77aa75457917df600cbf5d4c6043a950e772972c324c4c74b67596a0c87f1289f0553a24ce66c6853a46076ba022bf23a1303f1a0280069b6811539644b976103145f4f60a79bcd9dc18f45fef9185d2d1e5f91dac58f215cf91df9338b27b96099efedc41e2f663a52e39c4e981467ccc8d46dc19e45ac4bc4961e027f54af6d2bbfa054ac0bde1c884f423678e4494f96866669c73b315f3f20b00c8c9f25b27d8ca3f3eb5f2afced35ef620714d443c5424695d3cdf2335e8ea8ef1a98ff7fb3955dfea409c6e4e386be77f7c3b39933d36c2050af1fadadadc5ad75f7589c612b9c8cb7f5297dcb66f1b659faf3c4a0c6c0d6202c16066a8bdd3241983b1630f6fc5b78773e17db467ede19feafa62adfe19a51fa74b88079f8567c71f681c3a42f176215feffd8e2a17b32e1af3dc8450b189bfe68cf9388b036a0fa9f5c16f6866dd1bbafb1216b795b07ed98eec15a66ce1ee314ea9a57a2966e8db7dc7d3864dbe331981c3104cbd8c78d73e8385e2d6dcd695019c2e9c32570d46a3e890e77e2989203d055f45e1370bdfa511031a1da0564b64685e3bdfb1c713fcb67526a41859a5e0985ca60e86d2a42ec778f51c5f9d15d9a37a7569c25e8eb80e9ba1a8230c4492921f2248df672b83a8e32015118887a79c391f2456a5aaec8502034c5545551c6b358001a1bc461539d6cea061042f4123c937bbdba485faefcbec7ae39ef5d25ac91f6af0841fded52991984a402331c58661e7dc5931fff66c25d4edc3d8cbaafc0b7f97280fe2c2fff81f7ab014ab7cf2c8200fccf92e82e3a8c210eb2f8504e6ad2c805094bfdbc8fad8606088e5a070961f35d278d53717a149bddc7351961282a394175381ad72b94c2eac54d49fffa3a1cc8ba0969ca7c1fe72503229c6b728738dea032d6f56e50bb5faa36aac2a9e507d84249d3aef0bc19302c2bbf7afedf67fe1eb52afd9d9e54880fc4ab61bcbca85f218eb5c6629fbe4ee9207712541f76f1421d37e04807cfb091dfaa0e19caa5ccefac88a9b52d30db472f39e33e2ebb05504fd39993c8696976ffde5c19ee1f989916afef673fde9343ffda8270356c94a537eff8031056fd9795e64d6bc68946d06fedc5213404fe273339e6b0c2504ab830da9b9785c745c1962c54ddc33e67e1c2ed11147120982ba036ff1fdd604c6f54fa8e575a11470212b67ea509430b904fe0a0ed2224a1b70ff051d879077b93bc4488bfff8eb0e3c7fa03ae417ffa54b3836c234d776499ce81a657cf6f536680608d588d287fe705f3d664c2913ce7aa7ec99fdcf050b50d01b1ebf0f10354cd97f7be5e0727bb390bd5212b4e2e92c32512ed5e12a898eedf5153764450099a0fe12002ccb943818e7b22932cfbe8c8f921b95e151a052b74d3b718e6631c14fb85ff795e2ebca400d453af98687ac75f06d3be9741d3ea32ab5381e91dd5e14a90372dba888ed674319958fb5d31fc29b8af8cf783c202050cf5858c90b8c553a1862cbdce9eedc99c6fa48fd983772b768ac2829d20abbd39784845f6d7cebffce9bed689d2f476c28a35c06eef37c2d4339b5a253842fc831ed85fa60aefd74db7eef01c1c61804d2141b3dbd0499b03901de5b75cc710244dd3e0ce6372a93de56bf681e122bd9990b2c9a5c7dd0de929b535d9fc227b017ba5217a84887e144d2f9d000de3e768becd8aa89b0ebecd006be118eb8562392ce5e79ee8ab8ffa0a8723edf1483226b89e64aa4b0c64d20e51eb9a61d4a11717f2d1bf53d7bb9d9d4b03e1c08b4d6f7ebf60f2e8e7b965cbd23a33238326deee90ff3f97d8e8a230f47b2a81dab8e8f2770365f37af331c91dd882792081b245a20dab3b08518a7823ba16e4dd97eab9e7a37b0a2127e856c194ad3fbbe9777e5099cd4f2878e5b370336b5c0a3be96d3c2f1aab03fb545e5d68233ab3334dba08ccdce718f467fe3a52ab9aa3cc8fc2dcb7d22ee39391a3979a0f906f633bf515166e69959afba13c16ebc264e2d719ad11fcbbeaf5552f853114739eb3a791913ebfe9042bcd21659386204f2b4a6c45e34531731c4c877d0c5b8a8691398395df448d95a974d5a40980e0742e5ede5be2ecd42097b94232114b1051f308257ba3e54dd2a1347c310feb9bca9412be48e5f6ddf98fc6ed2f0a68ae0ba4584202e0c866fcf8338c0562d1f80056a1348c0048de4f8206787b92deff2b0696c9a1f7d50e9b9519b8715a9cb8e066c927398e1acd283d19d5f3b44431fe2a0665a46184cd6a5c4a24c0f4a4d707674bc6af0ae7c390d50a39d86a372bdac9d5dc0953cf39931bda385294623a3310800e5f06dcb7d0bcf84246675b722b3fcdf6ed77e39c07feb3420c22abdb1bc9fa21e891418c39855febbab6ab433c93e1329c946944fa43175c4e3784066192391d754d3d81c22753a10dbcfeb6fd397d9db0dfb92d95db533c51826e0ff2abc16fdee14a5a39315174565853536a1e458ad711273c894d220f0cd3d73f1585ef4a8a4f1e8ce0091f309a1a99944bf31d9e00123625f32e845e2f5253de79510f471932abbb5dfb23472a902f113b25fc022a0189e98c5c7dddcf5a59f9181b5279bc511c701e2073303fea88f151b8d650076a514b645fd914bb809f79c5a3c833439c23a4e0ffda9de6d76308846b088b05e0840b4854afb89ba2acfafd758a8cdeab7c7f325b1072d72478fc6a9cb82b44373ad2d1c8bbfbc44acd622515020ff4b8a6859598166246dfd8448a57755a0918d93e6e9a93e827ae15ce294b7c167aae9d961078ade409471e507effb248193f6a6639a8ecfa7c622dcaa75bfc3df940405918cd1ab11b1634ce0acc3f363e291abab3953cbcb1643f6679b50508db02137d6a234676bf32936eb7d5a5dece9f39dc3b3eddc86a3cc54b3bf67119f9931de509b996b1eb76cabe90aeba11ad85894ec7f4f741c3c3c236456bc876825291bd535b04104a0c0234a017c91f61d255403f33ff96d927cb77c3646f51aabee29eac34b6d39ccf175dbb2d715c8b63f92b6ce3b8b47b27e6e939925dec19523e79fefe897dde585b64c8d0d2283e15de9003435b187a91ed44427e4950c386026fe2256ee8c464b76e7417c46e4aca8edadb4d76418b2e19a05dc729bd75a8932b952d7944eeb1bd8f214d9941e19f7ab8eca96a2e5c761b6cdb320a9faedd845ee9f4e1632a9ae413bf9e34f0805f8a1d9de3adc027f7fa2aea09a4164768c6235be3bee53adb7d6d2fb1bc8dad96725637061e1df4d99242a42a30b5bc64ba146e42e3cbcfb5b5f31e3bb6e9af6a93074830f6f27064bd30f2ceb05b4322b29b363c308d235e3ee5aa6bb652486d829b1d9858b6ab481dfcf45c48d7d520cc7e774983daafdd08df6d88d56414b68ba5ff651338aa22e035de9f636c2532808d6d67dd4d2a6c2080a62ab2a561cf8ba818d3fa813d47c37939e54c0ac714b7c09f17aa9cddb607c045178993ab6e0f15016f6194e5d831ea34a542d23a7618bbff482ea54d60baa071b011ac20ee6036eae700f568ca535dd672e3373754bb93ea31376c7d0fd4789524152eef8108640139b0c39002098372e788676f1293158e245e7ae92753c511d8a84749a0f879ae350ca64d2d9c76595eae7aeb8a3398252aeeb7d5f9909f3e692a1d0889db5f0c91b6b237b6b0d328b87715263405756061842d5d91bcea604bc69d12468a1c1f531500c6ec02b8ede5cf916e9fb351f57b0ba6ad25aa578ffca2085dbab637d4797027e6e18a61f131af2075f1b32826791b43324224ab47c5765f3865974b7b7a0277ad8fd36e58ff3a4084c965dfb7107b1ca0959844d712c1f8452ab0fd3fcd828414f9d13e09bc4425ff4dcdf17f1f23cae07cda6f754643931555ed78de7cbbafe94caf39bd385a189bde457b6d50db714f5cf6c0989170b9e33d3502d137f4899045f61a840a965734be76dc077b28c8462331bd3c2ef5e266938b1b0df89826288c13ec136097197abcbb01df8fb846cb203f392667f1c374f3c13017e1a7ab3316590fa43602afe08d6aac5f2e74f33e51935ee23e9be95754fccd37b87c40ca1d57179b3b16567f41426f256a64733b37ecbd82dafd1094ec73e95a3067438dda5f2971280ed4864e8feb9cb6cde5916216158409fa407743a75d78df2f1b9e53d6d05d82ec4fb95ca5860f94b7b3eeca22f5ebf590976853884356095586e6bb4ed9e44199440703d9d979db5925fa8546d01ef99507b3412f5000c1d513da44fcff2444846a39ae2b88c4639c9f54e773b64ba7628937c53534c1051b25527d73971128d6d689e58512e21c29922497cf3a8e3d969d0534ac35fc39059774586ee2f41f91c404ad350e2d3baba3f63ad7d31513803343cac4859585e2a636a99f47d3a73f520a58112779b0e600121db2fc13e5acd6619aa5a73f239c18e27f081d8d4d0ab38cc298d114a6d425a9723a63add9c6b7800559e413cad9e05fb890d37f23cec0fa5630e91afa534ffd822c85b208f97fc2e12e1cbf86a443d5139a7eb479e74cc720c5be46077c2130af3aab7dc3b8ccd96cc6d3b223f9000be84f6d9cd608a5616c555b38644b7089c6a0dd5240708f80cf4235aae026333e0ac72ba38276818f8fb10413ad1e2e4cb3d407520706ff8587adf049f56556577639a2e6d9a52471f3dd9e3cf4d21d9d51e54033cb68afb77378e1dc2247d923f80ab991cc5caceced394bd15db342de3f95dd958bfcaeed4b9e05c7288b5efed2695f22a975aa0da2f2b1a238cdd5acbc7647330395a044413dbca16379801b7da46749e2a2cac8ff382f041904568f08f2b9055f0ebadefc5e33677391ec0423b78dfc4b15216b028fc553f032943749c1fa093d43797281ede2d29b61061f7f041badfdcfb7f1368773391f21be037ff842cd2c4f4bf8ae7c5bbf67409564c4c71e5efa2fbbaba9137ee04614a6afc2ed3252f47bcef93c0ba1ee8ab0a1c565590338aedc0c7595e4e11a656b080b6aea36a389df02444f4d918cba9af2a1cf7d28466908a512d7c656dcf23eaff81d85d598d5c55021123bd67db7a1927dbd36d5945bf4e5d6903b4aa894989db116f18c745d093a94673f125c52dc79f69fcc6ad5a72d01e4c2d3ee3d12b26dfd6aa8353016c6b846896dbfde05da2b13be47c1a795d97ef2cefe463f7d004f0842e56a47cfeefe390bfffd7f764dc19b0c6204fe0325de84ef1b09c8c24dcdec76c7d8d5793c718c527d0a5922b21bd73f8074aaf0567bc1277eaa0504342cb6c8a59cb6095f4dcf2be1f24111fc5065242671a201a620aee1518ae25eafcc23af31f742349a9e2570b1b061c4281f2bd27442ceb4229e0ddc069843633bbd7cbf66f6362e3f194f694eeef64f9a4bd12b0129d48c8e3b953f260e09f755526fd1fabb99bb91cc42eb0246df96f918ee5ca1e02a7d3b9a851663859c059c8b550d354585aebb0f63948eb9da6af3b5205f4be4a3b8150c637463b3b4532687dfc606abccbb89e23b09595f6e96083417cb6c9b60fd45ed6e5dfd4672a6ff6701d208ec8c9d37cc11316df445ecd957738e94f05c72e256fb8fa3cd6756fe728a7d075877fa1e3878020808df72f0a3d35b299f848ed6e086a7561ce69024b34577978a80f730fbec54dba11f42a8359b510eea105eb466f7e9b253f2787b70bfb6d80fee709a0430e7c9f02a0a3bc87a60ea9a2d5b156c44817e61e9c66fcaa9c56fcc569d0b1da22d60f4a3fc1838af0993648d30e9e09ca21e61155a62af126564ea4a72beb84a42993b22dab91ed5448b5890575a24b1ca25f3e4aa72c7e3574d201408d8f54fce847a28be14b4f260b63d71bc6f7cd2c77ae82eae3e0af4c33b45e2d931939588ac8e3fcfdd1401776121425542f610886302ac29839ef8851b221ff4cb8c8059ef38d2831a048d4f0dd7845409baf670a36ce0a5ffa68fc0ac4102d7ecb5bd52ff9e99a38f585d639a98225f99917015b5e44ef06bb72b508d5d4f39ea18ee459170d2971d7d985518cd2e0400052d7e15eca4fedeb994f56f2d8715a9f66f7ea55f787780c3bd489de34d59540436737083d47f5568fb0b8ca527ec25fa6a93dc4a423703ac44bfd0d76558241b434351d7caa6423d7eb097be275aad9eef70421ee5523b043789b98d1f98f0b25f83cde4188c2fc4e98d292c9d0a18a69d1e833bdb1dd9d357f347054de0072930a15d37a4157a6f10577c5fbf83126f491101763bf3b6e5e91657cbf5669e9408910845ea72c5bab283c49a298b7f48e5324e4ff1a0c54a764075c07193766d51a8ecabc369bfe7ffe02a9882ac08abe7f42407ceb262b605169b24bb43b8092af3a283f3ab0ed484dacfdd51f2c43f67c3459e37046fb4381e5b02357a2c745409431cbc2eb21c5a9a7bc82cbfe498393786ce4f967e905de3a9aaab7af2f9d81b0cd45c678c06a7c3beb6f002b7bd43be3950b4c9f59ac3b801dbb436b18b5be9ccc4de3f18164e653f1179d2c17e4ca982261c5e2470e439f37d5c2dabacb8fa4de18c0c90ab6637366699a257eed14db1564c791c55200d8593fe6f165a39e29ffd7eb05e3ac87d2e8645e8a550f0a97570a6bd2c51bb2f27acb2e6453aec3193731eee28027a4344ba87edd22bc087abcdbbef4655d35f080656dc77dbe765ae976aa7a72d3efb7189f7283bd73419442fa5748b093ca3df300bcd27dd1e5c28ea50db5f8770e724af710f3792375bb4c80d33d25bbfaf6e9921e239138589fe254f9629a7262040e6bec1e5e0a67d02ed04ec0d5b1818c32cd5217ea70b01bd231790bc4bb9f0ece67cca7d1656ae2bcafc4ca0dfd65764c4ff49cf092ad264c2d484fa746aee27c0d6bf93c609b19713411933746cb8f6dff9af819ccf4e5736b152d3ac6e0f47bf318cc7f4807c50d9187efad3f49d3aacae724e07d08d3538c4c913bcd47affa25f43a13678ad4d95838dca6c337ac07c82ce9a4bc989fd0fdd314d596c1258f6b486b1f6ecef03df023feb36675fc57828b2f9b72310e03ec2e3bcc8c17e3439269a67fc7e6a574c0730c796c0f8a8efac8e7c0032862489262fd521a001b3e3196518509e8100a80d8f62e38fa1a833f49eaaec046470deb3fa807854590b96b17d6b42fce9d824f6a135abcecbb85e3f5a19f499b29798db7180449fb7f8053074d38dee64649beb477ba2dd133adf03fc589772a5b50dbc5febe0ca1b4893db06497a93363ff707dfb231087a7160eb52b55a3231516d9527fbaf112c3ee43efef95091a85837608b441d3bec33d2afe068b7b2b6ffbe548926e214cc28b0d167fa0969f4416f9a604e627396aef0168b6d02aa7151e65efbc50b74c26ed463c5eedbeac7adff92081c89a972abd12b708b75d24552104f09efd43c66d9cb41e4930101de0bba6dea525cd7af98f5bfdd06c3fc23324788f177e6515ba9b8173fd29b3f250ab69e1cfc6e02c70ae91fcbdd976802970d4da310db15a132e1d4e485e14303d81555e8e531a4873623384b452f015af2e520d885161878666939682516fe6443f53658b209484174a46bb764fcc88dd650370f03fe9b72967e681f76f0dcf449a89fc9b587dd608f8b53c7cc446b6c9ceef14b555e94e5451e699ac71b4c1324dc1b86f3273899ddbf9c830566053277bb7a62794043bda0687dceb1d9ef109976788aa766cd745b69009aba7f2ab6865d1c167bb821ace4ab93da916892040dd2bd1f6a899f5ed9adeb33b36444b5e1477d20f327722e49b29b69f2c971dd5ed3415ba48eb042f873b732836663d90bddc738f92517a6e2ce6697a1795452a3845ee491adc619ec5ccf9646a582761d0238e8b0172a2367214dcf79514433cbea96684f46ec53a5cb78384cf32cf2e5d95b6a534e2905abd451252d5728ee1bc2d0eb64dcb77ffbe849aed89d9b1f003cce9925871eb463a3c4e64e6bd14a3d96781c02e5771ed35a7742e46acdf79eb082d115d25dce7c8f6bbe3247d3e17ebe41a433ff530f165bfa4b362aa7695feb2f499906f5debcb193e7845972bbb6c5011b16291a34e544332f4e046934e5b7cbf1968fadc0b7478aae2aa215a1e3d6a97cfa677973c33986ad81725d9300f36c261a0cf3f0eb34971297766183ff786a9d8296c9a16f7f666caf302fcd02d2a66234cbd4d486875a8ce4c8b1fdbe2f169a9c07efb0f9700cc53857a5f9d070ca3553684c0c18595bb1afc5f57ba018c377ddaf25e1a4f56cbf01c990f964e078177db4a7da812dd2b0511ad03608ddc942ad2dba0a2e8829dfd3ba4796708c60e72346a5fec4d3064c5a5aed9093dc475d38b837618fd37549a4939e6715782b8d4e3fec457098bc758afda9a8cc56397294bccb15f8549e9a399b224ab797d81f7685286728097074d646a9355ba8655962de2a2b7d9833c485cf1b3c5aa9568766ba6198e7482b6f8227ba7262afcba5bc349f38ff20994a7b8d32cae93283ac7bb93724ef861d01ecf763364bc95a06a642dfa51104f45f592de93b9b13237a8d294e0cbcc69bd1f233ef5b3e20370e215dbe419d514246750d05407bf45bdcba2896b97544bb878587faa99bf2c123967f2f61d0485e2e7bf6df200727d261837734ccfa082a5b58c26b59c0361f9737d2a9170439c9bfbe04036ae6a1d1297225c643d1809be23f39a79c022f5e6a72419c04577711b972bf761a4f4f4ea1cf43d848e7a19b4bfb0b2746e4f40acfe193b28fa023a409beb2a86ccbdf71cf407a23f0504f94ab07b74c2813664f5b64afa441f81a6cced5ea205880c476af124ab238818e56557ef5efcfbf216cbfeea068d38c22e1c0d3e4eb14cb2f083a6045f8f08eb9a3246d9a51a943e8edf3ca78a9bc6d5f2a713c76b47384dc743e7c9813559ddc3d86beedc3453acaafd6901226f5315d21edcfd041db02bd1bd12f698da8c21f7bad8942e2bca2bf644cae1a1acb3745f6ed27c83dc4b62decba61f226ce906b7cdd5df87930ff9920df321bab59ac4aec5a1190ba531c12df7edcd7f233e442ad80d13b03561ff521adc1ea9cdb68b72dccf47667139b63c263b1f48df0afce88a8a51dc409e6235f9379734efdbdf4463c7de621d0aa5d3a4264d9f1d886c87f53d09bdd2347e62a955316d19c4dc93b4e19fc5d7607922ebb286f85d4f3893b5aad0e34bf0f610f5ffc5de4cba0a8639e5c7af161cbffe33ee94756f20a8b1669afdb67b0a7147d7767b0aa23421ac8d7eb1944324b421233d941fca9bfa07a86305abd33521827e14d096a19e7f093149475d8467fd8f4c25d3cc6d46166fe65d1f344c0d46c0e3ac78fbad33ee37ed52e1c3442865ee38fbc2b48a49af649080bd97156726a03b6bd4aafba3d9ea50a5201972a861f79b42c6686d4dc56bb1da9601ee8ecbaa6308af2b12089c4ab47903144bbd2bf6f5918e83883460ac92f24c78d740a3514756dd6ad151b44c82a742299e2df14edabc9e105eba03edcaaf6cef25eded957fc753d45d80d48b4a56ebea8ecbcfc7bf6a73b61d7fe2685b2a74c6ee275e3e032fe813560d2dd8f98c7ccf26fdc2faa05e1b9b393956ec6df8fca31c5d238cde9df5ea70f3ffb4ae9b69a9a327c71a9b291ef6b43bf6cc15d52505fc0dc24ccd408eabe59c6a20799154cb3ffa98dfd396ac3a8048bd33e888979cbc537db76a2c695c4bffcb9bc5ecaba0a678daca6e5878a8f65f892a5e16cc447749eeccfbc31801d691337325a344e2b65dbcb9430a531a10b8bdf9d9c8331dfd50c2905ed76dd50cd6ea55275cfd77f1560c2ea9c96b7c41fd486022c873785395124ffb669ec74df6a3bcdf84d65b7b5cd1b5be135e9aca8c9d1464b23fbb659a2e867814ce1d8077456e7e2fbf2c7722bfd36dc2790abbe29ff2a4753adf609c67f535f222806f2717a0a0bf555af8a6d08c90dfd401197017fdfd81cbea8fd35215e4c891ec893d8e40bc3666996912facf92a80a54e083b3eafb7df62f962d6904433379cc325c23aae5f0f72cb5122415f7ccaccb0f3882c52aed7389cfc0fe7d9636570267e56fabfbb50634efdef0bcfa88ec0b6a7df71a5c413cb26b4b10a9e9602f5b6332204326fc5d2c8559a3ecb029c8dc144dff8ed4026afdafd24413b381e2c98c3b32602d512ed29ee6057f88240d4147415d565b8046a8264da3b290672df136a064f2b2f9bb41f5bcbbf9afdb74cba47da45efc39e0b6e6b5bdaeae97a87fcbad32f926528902b7487ff4882c55188294422ded43a1f9975c8e6d8796d339d967aaaee9289d1914740ba2ab5368267a924420a35993d97a073a6e6972ad6afb7df6e7074709b0c46740fa7bfe3e14537390b8e48e84d14c1258ddb4057c9ee06b74a8d2484d82c32cc21d72b4703ea7454b7e91d302011e53e78c280f0b5816996d7978ee5762732de63b7b3c7b0f2516cd3dfe42510d5c793821341b59de73accce217389a9678648e399581a905f07171322cb7fcec038155f44bda55383723df93188d4f901cd384588ff35ba7e9ef3b2eda2b3d0f81b711c4ce5b17d3e4dc217dfcb4a60201726afb912217f3427eab3e3c6dad8a3726599678cec629b8afff83f61185999a4f587560cee1255e5f1f69efa718436317e48dfbe193abef0dbaa762531625a46df5d1611f512afe4d776cd2dec9b1e2728c4eafa690faec93997b30d161658d0e2deb4d944e4bbcd7976c0b3103b40a8fa8d2bef80f740c1cf6ce4ce0fc16831ef899d89b75fac6c982a4248fd592b9c475c904a9d8a522fb259d4586d0f3949d652d3691399d7e2c5a76a2fb537a84ab4cca77f6c79f560a367e7e2177751d690a644e7c0e0a7bc2a93606ff3b9efa811138cfb43f3166ec653737a7221872dc0c5ce4381d07319d7476dbd275552cd8b9c6481a4458d1cef94badefa85ad319a9e82b04dac8eb6b4aee62b7d677fb7052508dcfe67ff5646c7d8015386f3f5c7e6c23c8c0c655cb7fb104bb5c996b5e39ee9e33db2b7ed418ca98e4b0c5e07dac6fb0b220c092f7bdb7e1083abd6d5ffde74999367c3e891ff25b75359865b518673296217c868c77dc784e5a55522c4ac88cec19400b50c1dd961de9d8816b052d7e27419cd33120b657b03072ae79a4d4fec8b0d0bf4ba324ca4b86c2818a8bb0e411eec817acc387df7e7b14b24645fa142ae87e4a9a7b188b09e7b6075a4c7373b24fc4437acd78ddd6d145366a7b9086baa9b549ce734a646a4a319afbfee5ec2878bb4a77cfff2a05be8b8d64778ad18d5544b48810c37f751a8600fb8b4f677218b15b3655bd2bd5d1ced56ff996af82eecdd22a69e5101f872b94b491573400ceb4ed930fc1193d22c3708fb72e03bd536d04f935c4f2585f71d12c721ebe6b6b6a35a1887f9dc73d232105bd4c46195821ccea85dd23724a916b20ba1b24548ae6b65c20b98b07bfdd296ce414b503b83d22475f88de1e68ffea703f0af2fc2e746741689fe3c4b2c49e1669c172232f2897cddbc1273f4223ebd5af430d853434e3a3d5d7f6ea3a742ccc77fdcfc95ee37a3d977c641f0ceaa0e44fb8a8709a012ab93a716df77041417695fc75a9e8967930a73ca8ab5027f66d84477ee464a9e2c25435193e5876a70d5e0f29bc6002d460492962b262b1b69162df5fae6bd35b875e0416fe45ac6062e07ab94d466cc22743459267190a1e1f6968544c54705fd6baa0c24b87a387f770ec8609020d09903a10e0a660e6f6cff7b69e4a2c4251d871f951ca3a4f8f50f3d82967841fca28912500ce7141f782071d748333a029d11a6697987cae82eaeb5d887fa5b4e6fb87b9997b2d6ed947148e97a4609baad93eb4e95d0e7c6b0c5eea4bad7547e25e48b54b8d5c0b933605d970502db90f617c2286e4ce8e8f1948e48d9acdacc5743213df50e1d9643bb6b60cfc871471ce5ec3dc4a67303b0a890211cf868ac05eb6101f29a62d3299e3c42560ad6ccd7749819e74c1cac45383f8fdfee7f07f45294271e36d2a160f36022110151218d25eb1ef217a0dbff93c5782c9d597a6ab632c92629331604b4cedec2e9e1d077dd91679be13a12e9d39bdb07c66fef61478826559c94db31076498056d936c44941198dc0c2800f54cd50fafdb9f24fc4697581b28756d0c1ee283548f461735e4f680c245cc20babc4c6859a76e6301020541fc1dcea18c7cace1ad6e7ec5c8775f8eaadfae45ec395837d0772c0cb3e3cff89899a98796f64f64b191fd2fe903754beec9604ee5a8d27c0ca0dba42d6a45a9f9e2797fb76e1a207aedc42d2a2a08762d9b23661543c6b2c46f8b4e36041b4731d94390c8f1c614a2c688e7621e1f4be2171665532836b6620f1180c97effe005ca9e9aded691e768452b4c4e71b3f6c13370021329ba3b78ced55a009c5c6dd3acbdbab23826767e6cd9caf4dc370fe781a85697a98ac5739aced125a6079c03d8c3f4ebdc1f72753d1862b6167b2b2ef04bef2cf25712d46014d702f6e8e6e748ed2cbbdedff4ba4bb7b901300cf188acba697815d19125e81e8a3fb6da0fdd01efbc33db083598d77321ad425d969f43612e828e817992bfda8f066e9ae6b23352f52b5be5170d08dc683189ca3a11e3201b8110663be69bb6512189ad5f7a53a14224c768d47a8fd838c274956fa5b7aa3db07b79bf9de9f0f66e95892a312e8608ba3e555cee0b399ca47fe8a6ba26860b032033a9e488faa17667bf4c6e839ad9bf09b0cfac1f7c1cd13cfb390dd0da7bb27843bf53bd0204c0783dc6a710a156dd571c0324857c81fcfa6541438ebc710bed60ff3166ea1bb739b529be9fc7aa94419740b90e1f89027375b2d2febacf9d5b670fc0023cacc579d6f672a4c926e06088f81da030a3901450ff3e0878e054a6d9cf29110b6377d331549206dd11489866079cf07278a04a5a75ae5fc2a704697c003400ceb23adad85acdafa515cee9868995a819de653920cef369d3c72b8abedb74403710c2b9ae850339fd3a1e1b22744f68a4d7401f0bc35999187916870acf33fd33dba3060b94ebc09aa66c989627389f1fd8eb767840bea87f95ded6aaa80a0292e3a23ffffd9cae505e4cea48735bc7c63b000f7aed3c20818ae2341a76ae740715f41d7cae97fccd39f6f13470b8b1b8069e0c23e3c0e2d091315e3ad3a52c83b786aecd2fd2a93e014423bd9554b088cc8d03a7e721681a0f045911c134ea6ffe87ef35db9d5b80193038c44cca267570631f2cbf71989fc9b70210cf66700a3558581142b716cbd6a917a3743912a4ca8e0ee046b240f08a15866bc61b47887deaa72731fbd62464fe9cec32b7b49e509957a56028acc984082648b48c02e7d6dfd9001827c846f6ef9f4e37be32fa29b353656f470e910e81fb85d77f82b6b20fa3d665de80897f8155f82f8d3e46eaa6d1a982b820d88c4f2d95bcb1a1dacfc72f84d9f6a6a6d487e9b1a073535ef7ae96c76bd4f88014b129f625d56b38cfed3d94551dfd5367d5b3c9b38832341e0ed08715c2d62635a6b05c59faa7bd2e596c6d7d6e3ac1b45074f99c7778bfc575262f47c0523d3eef84ea129f2bceaa24a718ea1356b2ce9c5f9acd80d2b563334fd845fb86012a4182c265048f5f01f4cf8d0aed7d066b0ee761881f2b30bd3b2e99a42aab375b062c32f1df4716492ce9c8d563c92ebb0234e51e668a9c6882b5d8db78c95b0b45d85590779c25872d77f32ec510862fe85f28e6f5c1c8cf9b2163e97f75c336a3cb7157de4d554c8234b363b83cd7e21bb1d75b53cbff016a054860fce28e2a4d4d3629d4eaf0284af07be6efa1c1d049f9c56ae79dcf49707097435e63698eed0109cf4103c827bbbcc5952c57faf73d91d36761da285cbe58033afd2b3fb2e16b588df31efd972fe45c5e7e658ea6957731c98be926175b65f1c6f9a713bfc0a1ddb5f7b5f1e412f21c2ea35e544c6da6673978b22295c2008edf22e00d7f61e5aad93ebcf6301061ac96a7ac2f94ac3735458c8b1585b3fc2b88bb233de4caee77c845a5ac2f2c1bb53eaebf1eba1e7b52fa3790b757da891eeb45ff8edf5b540f81f494ac70782e3fa41d4647b02b6990500301393e6d7639f992c8d7f8e851a8437f67401956718b9a1fc02b21a002f670bca01ebeff65fda81fb077a6dedadafa50261ec8c754a99716661cdedb16d68c7cd835255c105bb0a4ee242c5d6c14f2fe3a47ecd760579e469a3d0fe5a4c3e9a88a5dbca2ca0b288fe93982b501e92aec96fec09e96bf24e36b709a3febb244b041257ec693049649b83356f4a5f1f69fde874fdf738c5abb8d5c2cbe10d3311a87b2f8a747d33632f20e346b4c0788bab4efd3a69bfd0a7d3afd63fdd53c931c79ae3ca949a9cfb6bcc2020a1e0f580f12c4706a1eb6c01c04c11f2ddcda7bf8a21e937868f659c30b249d2f4b10b64f26e13afb1bdd4d45f79ba6cd3fef5474ca70da741b7a057e73d2049db9bb2a1c555c1fc00772443c90607bdb8fee74bceb0b37c8d079993f8b54b0a9c5b09292cecac0baa619b499a4c4129f09ea70a424748cea3b55d7f6a7e3942cf7034c0051f91d2841d6f7bed01b357ca049c22c3abb7719c8c17a6d2faf53f144605491421146413d4b5accd6fe274b4bd47190b261c646189eccbe26a03e1e7df7adc8cee14030f5ec07eaf8817ca9a9c212799bc363f6f423ea77330a26e84d7785f61fcced06bd411dff39a1c45b84916b69d966be8a0612598f9bb42d9d67d2a2899e18caa945050d5c462f85a50cc30f021a263d5575383c32566f76a712a3a45e9a48e903b408b79191c27bc9869f995b0733613a86dafce36f735d1b42ad88e55f87e3f369bba63280dcdfc91d5dbe43bdae7a67325d62a0b9fcf836cbd97094d1f16fbc638fb5182956a126bda6a9df3a0f2abea27484e81e134d4cf3407301dd6bd492c492a7926c6dfed7dddecff3d31c534b306fee8c51d1cbce5cfaf4c78f29d3a5c2ff3a7cd4ff7bd864c78f8cdfdd3a18931152171aa8c17b18b97b432435b2f73db07c6888d81e62fa0db944ab9821caa056267889685a97c9f161ffb8d8ccb22bd37d755a14c0bd2954080fc775d00d1d385a8e203a9bbf9fb5b24094ad4c459613ce344e5dea603b57392293366daf7fdd378c9c44034c2179fc4cdfac8f1ae7f192d0d2b4ae85617c8887a2417567ca3b3b1c3f9ea66bfb2bdf4f1135b46a28f6c3c5945c377230ced3dcfa8e17fe55200a88f52df3ba749529978ee688e0588f092598e24769f47b56330d4f395129950174e62a1bfe1e0c9bb49bb4b2fdc07bc17f79486c6018ea1fe22c03ba26da7e920526f13a6cbff1a401c97131bd23fce3b39341a5d3eebea3db6c9d02daf362738fa3607e16329050bfd7438c3e7a088c347798c89dd152dc24eb7626be73196a3d46369d96613beb5cd2b10bec12950201ccf1f1b95f2550554e4d7c9b72e6133c5afe0b9f638ac55c8e51049d3d269d7bd37197981281adb1d6216931f72c28047690b4aba7f82c9d4577da38bc7c0c8b8098442ecbf4b9a6ef4b7621141474970be767b85fb3fdcf3c5e134dd6bf42cc3317b13ad8e81dc0209b99c65fb3b1344e4b2a245af8d26cc0b65f1367283f36d04b35feba69603e662fb39ab841a1d0a661df5aad6bbf8456835178a7b7c2e7c0b10c2f0540b56a0bcdd26cd652bb5de65e9274ab73b7448323c0244b66983afbf48309ee4a164edef475603c51c7aba92ff60ce3431bbab8820e50f1e2b0b2109317b0d990d4e29f335fa69d7c82dab24d97631b93529269e17fadc1f4bdd32bad754f09d7af85c5e5b37f654a5f5a50cc5459be0b51805735c78ec17cf5e971b7ecacd5c917524ac1b487a4eff724bc03ea545e6798188f5748cad306c7b5cfebf3aec4530edc44e81efacdf5fa5745ce92bacc060a006f1132763ca59094eb8ca43a97dde3820a443a8c05fe1da3e543da96f1b0590021cf0922965ed5d8a6ef8e688d4f0f4843649e2e177c6178889ef19e1406f3ea6ea4b9fdd3941043d4a8e1ff5dd2bd80c8ece6985602670c343e09b4e7fd11b36cb25dca2a82f168e8bfcbc6769ec71e2a2695757dec42d5902547f7ebb16446b1e0a3b37aa16c8089be78ec2c402c55bbbfe09647a565423b8869dca81e000c7a0fd2a265b60409a28050e8aa10a58243c628de89f01e4930a99d32f6f74242c18e89b2c1cb84c3a81626010157257389399f6b2395ee79ef640e1159b300a1e50c386e438a6716ff80084bb8740488ac6bf7c31f8275e6ced41bb50cdf0c27526c85df800eacf9c3e6a4cf0267ab2a1a5680d27e083358640dc5045ed9722f46d0c1b86716dfbb57a0a068acc8330d77d749781f70d6139ed0d08488b7f9e4aabdeae49c356430b249ec7079e3f860a58c4792b698146e328ba49d7b05b19c309f4647f072cece0da74132a40b2c4ce833dcceaf41ac52237731f04e1808e0b069348852fb687004490fbbe4ac940226ac801c176654844420288faf891ac7c26e71a4a443b759c4f4f8b19a64a6300e6f47f3262fe84a10b57bb10970859d45c12562f979a678b1e6f11c148b1ccd0f68d30a285e0eaf40b325a955b48876e900a7c102523691359ff08095b7d6c05f88d74eb467daf57614bc6c40c5ef1e1722ad7887d438d88f8162e41a7ae4724087a0c1825657cdf5f0049d3f72da69a1e682e7f8a1945f265bbc87647ea8cd0d96b112612b54235a0c80cce07ff64799e3e9f1a9bfb412ea3f3f2a4eb3e95124a6682b3318008ae200adf230b3aea6cc8231e6d28222df3a78848d66396377c3d2ff882d46c3f4c0bcdbe85161ba766aae6f49437973b501c532a8552c71f6432432cd9289ba895660390437735c5a0b9ea87b0241153cccb2666445c490eaa6ebdd246f99037ace3287a1398a5a703261bb676ef02dd3ee7fe05f4e5cd4da9ab19e6f9fa0eba2860d11314ee53283b488ecc5e5190c156752b44efb6b99578b96bd987cc82d9827f9af7b9d87a41e4de564313adfef373d286e04043307b508e3f00398d9e05a9f800514eae932804450fc8c51b543552685b739b44e99f456a7062e35c207d5d047c1ce5831bc8ae9b3205b4f78bf4509d5da7d7d303f7777153cebff9f43ff817c9d6049e05da0f1d7cce3a9cb07a131f823f8a130d8f9422ae05</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-shrink">
      <input class="hbe hbe-input-field hbe-input-field-shrink" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-shrink" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-shrink">密码:东南西的国籍,三个大写字母.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/blog/lib/hbe.js"></script><link href="/blog/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>数学笔记</category>
      </categories>
      <tags>
        <tag>编码</tag>
        <tag>以头抢地(诚)</tag>
        <tag>data</tag>
        <tag>SAS</tag>
      </tags>
  </entry>
  <entry>
    <title>关于stat的笔记 - visualization</title>
    <url>/blog/2021/11/07/P182/</url>
    <content><![CDATA[<p>朋友友情赞助的stat442的笔记加一点点点tableau(坑了)的笔记.</p>
<span id="more"></span>
<p>加上另一位朋友<a href="hhttps://drive.google.com/drive/folders/142BfLAX4dMk04aFZRfkBaVwsmWBEkF8C?usp=sharing">友情赞助的笔记与dataset</a>.</p>
<h1 id="R"><a href="#R" class="headerlink" title="R"></a>R</h1><h2 id="NumbersOrder"><a href="#NumbersOrder" class="headerlink" title="NumbersOrder"></a>NumbersOrder</h2><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment">#library(aplpack)</span></span><br><span class="line"><span class="comment"># stem(marks, scale = 0.5, width = 100)</span></span><br><span class="line"><span class="comment">#      the defalut in separated each group from 1-4 and 5-9. see page 7.</span></span><br><span class="line"><span class="comment"># stem.leaf(marks)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># the value of ordered values</span></span><br><span class="line">wordLeaders &lt;- <span class="built_in">c</span>(<span class="number">62</span>,<span class="number">65</span>,<span class="number">65</span>,<span class="number">65</span>,<span class="number">66</span>,<span class="number">67</span>,<span class="number">68</span>,<span class="number">72</span>,<span class="number">73</span>,<span class="number">73</span>)</span><br><span class="line">n &lt;- <span class="built_in">length</span>(wordLeaders)</span><br><span class="line">p &lt;- ppoints(n)</span><br><span class="line">plot(x = p, y = wordLeaders, type = <span class="string">&quot;o&quot;</span>, lwd = <span class="number">2</span>,</span><br><span class="line">     col = <span class="string">&quot;grey10&quot;</span>, xlab = <span class="string">&quot;proportions&quot;</span>, ylab = <span class="string">&quot;height in inches&quot;</span>,</span><br><span class="line">     main = <span class="string">&quot;heights of world leaders&quot;</span>)</span><br><span class="line"><span class="comment"># n &lt;- length(marks)</span></span><br><span class="line"><span class="comment"># p &lt;- ppoints(n)</span></span><br><span class="line"><span class="comment"># plot(x = p, y = sort(marks), type = &quot;o&quot;, lwd = 2, col = &quot;grey10&quot;,</span></span><br><span class="line"><span class="comment">#     xlab = &quot;proportion p&quot;, xlim = c(0,1), ylim = c(0, 100),</span></span><br><span class="line"><span class="comment">#     main = &quot;empirical qunatile function for the final grades&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># quantile plot for marks data</span></span><br><span class="line">data(<span class="string">&quot;sittingHeights&quot;</span>, package = <span class="string">&quot;qqtest&quot;</span>)</span><br><span class="line">with(sittingHeights,</span><br><span class="line">     plot(percentCumulative, upperBound, type = <span class="string">&quot;o&quot;</span>, lwd = <span class="number">2</span>,</span><br><span class="line">          xlim = <span class="built_in">c</span>(<span class="number">0</span>,<span class="number">100</span>), ylim = <span class="built_in">c</span>(<span class="number">27</span>, <span class="number">38</span>),</span><br><span class="line">          xlab = <span class="string">&quot;percentage of women&quot;</span>,</span><br><span class="line">          ylab = <span class="string">&quot;sitting heights in inches&quot;</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># air quality measurements</span></span><br><span class="line">qvals &lt;- sort(airquality$Solar.R)</span><br><span class="line">n &lt;- <span class="built_in">length</span>(qvals)</span><br><span class="line">pvals &lt;- ppoints(n)</span><br><span class="line"></span><br><span class="line">plot(pvals, qvals,</span><br><span class="line">     main = <span class="string">&quot;solar radiation in central park&quot;</span>,</span><br><span class="line">     xlab = <span class="string">&quot;cumulative proportion&quot;</span>,</span><br><span class="line">     ylab = <span class="string">&quot;radiation (Langleys)&quot;</span>)</span><br><span class="line"><span class="comment"># comments : very dense at the bottom, but not on the top</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># old faithful geyser</span></span><br><span class="line">data(<span class="string">&quot;geyser&quot;</span>, package = <span class="string">&quot;MASS&quot;</span>)</span><br><span class="line">qvals &lt;- sort(geyser$duration)</span><br><span class="line">n &lt;- <span class="built_in">length</span>(qvals)</span><br><span class="line">pvals &lt;- ppoints(n)</span><br><span class="line">plot(pvals, qvals, cex = <span class="number">1.5</span>,</span><br><span class="line">     main = <span class="string">&quot;quantile plot of old faithful eruptions&quot;</span>,</span><br><span class="line">     xlab = <span class="string">&quot;cumulative proportion&quot;</span>,</span><br><span class="line">     ylab = <span class="string">&quot;duration (minutes)&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Histograms"><a href="#Histograms" class="headerlink" title="Histograms"></a>Histograms</h2><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">drawbox &lt;- <span class="keyword">function</span>(x,y,...)&#123;</span><br><span class="line">  xvals &lt;- <span class="built_in">c</span>(x, reve(x), x[<span class="number">1</span>])</span><br><span class="line">  yvals &lt;- <span class="built_in">c</span>(<span class="built_in">rep</span>(y, each = <span class="number">2</span>), y[<span class="number">1</span>])</span><br><span class="line">  lines(xvals, yvals, ...)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#  the emprical cumulative distirbution</span></span><br><span class="line">plot(x = sort(marks), y = ppoints(<span class="built_in">length</span>(marks)), type =<span class="string">&quot;o&quot;</span>,</span><br><span class="line">     col = <span class="string">&quot;grey10&quot;</span>, xlab = <span class="string">&quot;final grade&quot;</span>,</span><br><span class="line">     ylab = <span class="string">&quot;proportion&quot;</span>, main = <span class="string">&quot;empirical distribution function&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># in r, the function ecdf() produces the empirical distribution function from</span></span><br><span class="line"><span class="comment"># any collection of numbers</span></span><br><span class="line">Fhat &lt;- ecdf(marks)</span><br><span class="line">plot(Fhat,type =<span class="string">&quot;o&quot;</span>,</span><br><span class="line">     col = <span class="string">&quot;grey10&quot;</span>, xlab = <span class="string">&quot;final grade&quot;</span>,</span><br><span class="line">     ylab = <span class="string">&quot;proportion&quot;</span>, main = <span class="string">&quot;empirical distribution function&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># histogram</span></span><br><span class="line">data(<span class="string">&quot;geyser&quot;</span>, package = <span class="string">&quot;MASS&quot;</span>)</span><br><span class="line">plot_colour &lt;- <span class="string">&quot;grey50&quot;</span></span><br><span class="line">with(geyser,</span><br><span class="line">     hist(duration, col = plot_colour, xlim = extendrange(duration),</span><br><span class="line">          main = <span class="string">&quot;old faithful&quot;</span>,xlab =<span class="string">&quot;duration&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># change the brak points     </span></span><br><span class="line">with(geyser,</span><br><span class="line">     hist(duration, col = plot_colour, xlim = extendrange(duration),</span><br><span class="line">          breaks = <span class="built_in">c</span>(<span class="number">0</span>,<span class="number">0.5</span>,<span class="number">1.0</span>,<span class="number">2.75</span>,<span class="number">3</span>,<span class="number">3.5</span>,<span class="number">4</span>,<span class="number">4.5</span>,<span class="number">5</span>,<span class="number">6.0</span>),</span><br><span class="line">          main = <span class="string">&quot;old faithful&quot;</span>,xlab =<span class="string">&quot;duration&quot;</span>))     </span><br><span class="line"></span><br><span class="line"><span class="comment"># change the starting point in histogram</span></span><br><span class="line">savepar &lt;- par(mfrow = <span class="built_in">c</span>(<span class="number">2</span>,<span class="number">3</span>))</span><br><span class="line">with(geyser,</span><br><span class="line">     <span class="keyword">for</span> (start <span class="keyword">in</span> seq(<span class="number">0</span>,<span class="number">0.4</span>,<span class="number">0.1</span>))</span><br><span class="line">       &#123;</span><br><span class="line">       hist(duration,</span><br><span class="line">            breaks = seq(start, <span class="number">6.0</span>,<span class="number">0.5</span>),</span><br><span class="line">            probability = <span class="literal">TRUE</span>,</span><br><span class="line">            xlim = <span class="built_in">c</span>(<span class="number">0</span>, <span class="number">6</span>),</span><br><span class="line">            ylim = <span class="built_in">c</span>(<span class="number">0</span>, <span class="number">0.7</span>),</span><br><span class="line">            main = <span class="string">&quot;&quot;</span>,</span><br><span class="line">            xlab = <span class="string">&quot;duration&quot;</span>)</span><br><span class="line">     &#125;)</span><br><span class="line"></span><br><span class="line">par(savepar)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># interactive histograms with loon package</span></span><br><span class="line">library(loon)</span><br><span class="line">data(<span class="string">&quot;geyser&quot;</span>, package = <span class="string">&quot;MASS&quot;</span>)</span><br><span class="line">with(geyser,</span><br><span class="line">     &#123;l_hist(duration,</span><br><span class="line">             yshows = <span class="string">&quot;density&quot;</span>,</span><br><span class="line">             showBinHandle = <span class="literal">TRUE</span>,</span><br><span class="line">             xlab = <span class="string">&quot;duration of eruption (minutes)&quot;</span>,</span><br><span class="line">             title = <span class="string">&quot;old faithful geyser&quot;</span>,</span><br><span class="line">             showScales = <span class="literal">TRUE</span>,</span><br><span class="line">             showGuides = <span class="literal">TRUE</span>,</span><br><span class="line">             linkingGroup = <span class="string">&quot;old faithful&quot;</span></span><br><span class="line">             )&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment"># show uncertainty due to bin locations</span></span><br><span class="line"><span class="comment"># blurness suggests uncertainty</span></span><br><span class="line">data(<span class="string">&quot;geyser&quot;</span>, package = <span class="string">&quot;MASS&quot;</span>)</span><br><span class="line">Nstarts &lt;- 5</span><br><span class="line">start_values &lt;- seq(<span class="number">0</span>,<span class="number">0.4</span>, length.out = Nstarts)</span><br><span class="line">plot_colour_transparent &lt;- adjustcolor(plot_colour, alpha.f = <span class="number">1</span>/Nstarts)</span><br><span class="line">with(geyser,</span><br><span class="line">     <span class="keyword">for</span> (start <span class="keyword">in</span> start_values)</span><br><span class="line">       &#123;<span class="keyword">if</span> (start == <span class="number">0</span>)</span><br><span class="line">         &#123;hist(duration,</span><br><span class="line">               breaks = seq(start, <span class="number">6.0</span>, <span class="number">0.5</span>),</span><br><span class="line">               col = plot_colour_transparent,</span><br><span class="line">               border = adjustcolor(plot_colour_transparent, <span class="number">0.0</span>),</span><br><span class="line">               probability = <span class="literal">TRUE</span>,</span><br><span class="line">               xlim = <span class="built_in">c</span>(<span class="number">0</span>,<span class="number">7</span>), ylim = <span class="built_in">c</span>(<span class="number">0</span>,<span class="number">0.7</span>),</span><br><span class="line">               main = <span class="string">&quot;&quot;</span>,xlab = <span class="string">&quot;duration&quot;</span>)</span><br><span class="line"></span><br><span class="line">       &#125; <span class="keyword">else</span> &#123; <span class="comment">#add the histogram to the existing plot</span></span><br><span class="line">         hist(duration,</span><br><span class="line">              breaks = seq(start, <span class="number">6.0</span>, <span class="number">0.5</span>),</span><br><span class="line">              col = plot_colour_transparent,</span><br><span class="line">              border = adjustcolor(plot_colour_transparent, <span class="number">0.0</span>),</span><br><span class="line">              probability = <span class="literal">TRUE</span>,</span><br><span class="line">              add = <span class="literal">TRUE</span>)</span><br><span class="line">       &#125;&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment"># averaging over histograms as the bins change</span></span><br><span class="line">hist &lt;- hist(geyser$duration,breaks=seq(<span class="number">0.0</span>,<span class="number">6.0</span>,<span class="number">0.5</span>),</span><br><span class="line">             plot = <span class="literal">FALSE</span>)</span><br><span class="line"><span class="comment"># str(hist) #gives the summary of the structure</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># the function averages the shifted histograms</span></span><br><span class="line">ash &lt;- <span class="keyword">function</span>(x, n_hists = <span class="number">5</span>, binwidth = <span class="literal">NULL</span>,</span><br><span class="line">                type = <span class="string">&quot;l&quot;</span>, xlab = <span class="string">&quot;x&quot;</span>, main = <span class="string">&quot;average shifted histogram&quot;</span>,</span><br><span class="line">                ylab = <span class="string">&quot;averaged&quot;</span>, lwd = <span class="number">2</span>, lty = <span class="number">1</span>, xlim, ylim,</span><br><span class="line">                col = <span class="string">&quot;grey50&quot;</span>, fill, ...)&#123;</span><br><span class="line">  xrange &lt;- <span class="built_in">round</span>(extendrange(x), <span class="number">1</span>)</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">is.null</span>(binwidth)) binwidth &lt;- diff(xrange) / <span class="number">10</span></span><br><span class="line">  delta &lt;- binwidth/n_hists</span><br><span class="line">  xmin &lt;- <span class="built_in">min</span>(xrange) - binwidth</span><br><span class="line">  xmax &lt;- <span class="built_in">max</span>(xrange) + binwidth</span><br><span class="line">  breaks &lt;- seq(xmin, xmax -binwidth, binwidth)</span><br><span class="line">  n_breaks &lt;- <span class="built_in">length</span>(breaks)</span><br><span class="line"></span><br><span class="line">  <span class="comment">## x values where density will be calculated and averaged</span></span><br><span class="line">  xvals &lt;- seq(xmin, xmax-delta, delta)</span><br><span class="line">  n_xvals &lt;- <span class="built_in">length</span>(xvals)</span><br><span class="line"></span><br><span class="line">  <span class="comment"># total density will be numeric, this is where we store a total density for</span></span><br><span class="line">  <span class="comment">#    each xval</span></span><br><span class="line">  density &lt;- numeric(n_xvals)</span><br><span class="line"></span><br><span class="line">  <span class="comment"># the loop over the histograms to get densities, add them up</span></span><br><span class="line">  <span class="comment"># the indices of x have n_hists fewer values becasue there are</span></span><br><span class="line">  <span class="comment"># n_hists shifts in the summing</span></span><br><span class="line">  x_indices &lt;- seq(<span class="number">1</span>,n_xvals-n_hists)</span><br><span class="line">  <span class="keyword">for</span> ( i <span class="keyword">in</span>  seq(<span class="number">0</span>, n_hists - <span class="number">1</span>)) &#123;</span><br><span class="line">    cur_hist &lt;- hist(x, breaks=breaks+delta*i, plot = <span class="literal">FALSE</span>)</span><br><span class="line">    density[i+x_indices] &lt;-</span><br><span class="line">      <span class="comment"># current values</span></span><br><span class="line">      density[i + x_indices] +</span><br><span class="line">       <span class="comment">## add the density from the current histogram</span></span><br><span class="line">      <span class="comment">## rep: repeatsnthe data returned by its first arguement</span></span><br><span class="line">  <span class="built_in">rep</span>(cur_hist$density, <span class="built_in">rep</span>(n_hists, n_breaks - <span class="number">1</span>))</span><br><span class="line">  &#125;</span><br><span class="line">  density &lt;- density/n_hists</span><br><span class="line">  <span class="comment"># plot the averages, and check for missing arguments</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">missing</span>(xlim)) xlim &lt;- xrange</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">missing</span>(ylim)) ylim &lt;- extendrange(density)</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">missing</span>(fill)) fill &lt;- col</span><br><span class="line">  plot(<span class="built_in">rep</span>(xvals, each = <span class="number">2</span>) + <span class="built_in">rep</span>(<span class="built_in">c</span>(-delta/<span class="number">2</span>, delta/<span class="number">2</span>), <span class="built_in">length</span>(xvals)),</span><br><span class="line">       <span class="built_in">rep</span>(density, each = <span class="number">2</span>), type = type,</span><br><span class="line">       xlim = xlim, ylim = ylim, xlab = xlab, ylab = ylab, main = main,</span><br><span class="line">       lwd = lwd, lty = lty, col = col,</span><br><span class="line">       bty = <span class="string">&quot;n&quot;</span>, ...)</span><br><span class="line">  <span class="comment"># and fill it in</span></span><br><span class="line">  polygon(<span class="built_in">rep</span>(xvals, each = <span class="number">2</span>) + <span class="built_in">rep</span>(<span class="built_in">c</span>(-delta/<span class="number">2</span>, delta/<span class="number">2</span>), <span class="built_in">length</span>(xvals)),</span><br><span class="line">          <span class="built_in">rep</span>(density, each = <span class="number">2</span>), col =fill)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">savePar &lt;- par(mfrow = <span class="built_in">c</span>(<span class="number">2</span>,<span class="number">3</span>))</span><br><span class="line">with(geyser,</span><br><span class="line">     &#123;<span class="keyword">for</span>(start <span class="keyword">in</span> seq(<span class="number">0</span>,<span class="number">0.4</span>,<span class="number">0.1</span>))</span><br><span class="line">     &#123;hist(duration,</span><br><span class="line">           breaks=seq(start,<span class="number">6.0</span>,<span class="number">0.5</span>),</span><br><span class="line">           col = plot_colour,</span><br><span class="line">           probability = <span class="literal">TRUE</span>,</span><br><span class="line">           xlim = <span class="built_in">c</span>(<span class="number">0</span>,<span class="number">6</span>),</span><br><span class="line">           ylim = <span class="built_in">c</span>(<span class="number">0</span>, <span class="number">0.7</span>),</span><br><span class="line">           main = <span class="string">&quot;&quot;</span>,</span><br><span class="line">           xlab = <span class="string">&quot;duration&quot;</span></span><br><span class="line">           )  </span><br><span class="line">     &#125;</span><br><span class="line">       ash(duration, main=<span class="string">&quot;&quot;</span>,xlab = <span class="string">&quot;duration&quot;</span>, xlim = <span class="built_in">c</span>(<span class="number">0</span>,<span class="number">6</span>),</span><br><span class="line">           ylim=<span class="built_in">c</span>(<span class="number">0</span>,<span class="number">0.7</span>))</span><br><span class="line">       &#125;</span><br><span class="line">     )  </span><br><span class="line">par(savePar)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># weight function, this returns the weights alone or the weights and information</span></span><br><span class="line"><span class="comment"># on how to draw them as a function of x</span></span><br><span class="line">ashweights &lt;- <span class="keyword">function</span>(m,h,k=<span class="number">0</span>)&#123;</span><br><span class="line">  <span class="comment"># k is the subscript of the central bin containing x, B_k,</span></span><br><span class="line">  <span class="comment"># m is the number of histograms</span></span><br><span class="line">  <span class="comment"># h is the bin width in each of the m histograms being averaged</span></span><br><span class="line">  indices &lt;- seq(<span class="number">1</span>-m, m-<span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">  wts &lt;- 1-<span class="built_in">abs</span>(indices)/m</span><br><span class="line">  <span class="keyword">if</span> (!<span class="built_in">missing</span>(h))&#123;</span><br><span class="line">    width &lt;- h/m</span><br><span class="line">    hts &lt;- <span class="built_in">rep</span>(<span class="built_in">c</span>(<span class="number">0</span>, wts, <span class="number">0</span>), each = <span class="number">2</span>)</span><br><span class="line">    bins &lt;- <span class="built_in">c</span>(-m, <span class="built_in">rep</span>(<span class="built_in">c</span>(indices, m), each = <span class="number">2</span>), m+<span class="number">1</span>) * width + k</span><br><span class="line">    <span class="built_in">list</span>(wts = wts, bins = bins, hts = hts)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">list</span>(wts = wts)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># when m = 4, the weights are</span></span><br><span class="line">ashweights(m = <span class="number">4</span>)$wts</span><br><span class="line"></span><br><span class="line"><span class="comment"># draw the weighted function</span></span><br><span class="line">h &lt;- 0.5</span><br><span class="line">m &lt;- 4</span><br><span class="line">ashInfo &lt;- ashweights(m = m, h = h, k = <span class="number">0</span>)</span><br><span class="line">w_hts &lt;- ashInfo$hts</span><br><span class="line">B_bins &lt;- ashInfo$bins</span><br><span class="line"></span><br><span class="line">plot(B_bins, w_hts, type = <span class="string">&quot;l&quot;</span>,</span><br><span class="line">     main = <span class="built_in">expression</span>(<span class="string">&quot;ASH weight function for&quot;</span> ~ x %in% B[<span class="number">0</span>]),</span><br><span class="line">     ylab = <span class="string">&quot;weights&quot;</span>, xlab = <span class="string">&quot;x&quot;</span>,</span><br><span class="line">     col = <span class="string">&quot;firebrick&quot;</span>)</span><br><span class="line">lines(<span class="built_in">c</span>(<span class="number">0</span>,<span class="number">0</span>), <span class="built_in">c</span>(<span class="number">0</span>, <span class="built_in">max</span>(w_hts)), lty = <span class="number">2</span>)</span><br><span class="line">lines(<span class="built_in">rep</span>(h/m,<span class="number">2</span>), <span class="built_in">c</span>(<span class="number">0</span>, <span class="built_in">max</span>(w_hts)), lty = <span class="number">2</span>)</span><br><span class="line">text(<span class="number">0.5</span>*(h/m), <span class="number">0.1</span>, labels = <span class="built_in">expression</span>(B[<span class="number">0</span>]))</span><br><span class="line"></span><br><span class="line"><span class="comment"># the weight is highest for the count of x in B_0, and decreases symmetrically</span></span><br><span class="line"><span class="comment">#  for m-1 small bins on either side</span></span><br></pre></td></tr></table></figure>

<h2 id="visual-comparisons"><a href="#visual-comparisons" class="headerlink" title="visual comparisons"></a>visual comparisons</h2><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">library(knitr)</span><br><span class="line">classTable &lt;- apply(Titanic,MARGIN = <span class="built_in">c</span>(<span class="number">4</span>,<span class="number">1</span>), FUN = <span class="built_in">sum</span>)</span><br><span class="line">kable(classTable)</span><br><span class="line"></span><br><span class="line"><span class="comment"># number in each class is</span></span><br><span class="line">classTotals &lt;- apply(classTable, MARGIN = <span class="number">2</span>, FUN =<span class="built_in">sum</span>)</span><br><span class="line">classSurvival &lt;- t(classTable[<span class="string">&quot;Yes&quot;</span>, ]/classTotals)</span><br><span class="line">rownames(classSurvival) &lt;- <span class="built_in">c</span>(<span class="string">&quot;survived&quot;</span>)</span><br><span class="line">kable(classSurvival)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># follw the rules for tables, a better way to present these numbers is</span></span><br><span class="line">newTable &lt;- 100 * <span class="built_in">round</span>(classSurvival, <span class="number">2</span>)</span><br><span class="line">newTable &lt;- t(newTable)</span><br><span class="line"><span class="comment"># descendeing order</span></span><br><span class="line">descendingOrder &lt;- order(newTable, decreasing = <span class="literal">TRUE</span>)</span><br><span class="line">newTable &lt;- newTable[descendingOrder, ,drop = <span class="literal">FALSE</span>] <span class="comment"># note drop argument</span></span><br><span class="line">colnames(newTable) &lt;- <span class="built_in">c</span>(<span class="string">&quot;% survived&quot;</span>)</span><br><span class="line">kable(newTable, caption = <span class="string">&quot;survival rates on the titanic by class&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># as lengths of bars, colour coded and labelled by class</span></span><br><span class="line">nvals &lt;- nrow(newTable)</span><br><span class="line">col &lt;- rainbow(nvals, alpha = <span class="number">0.5</span>)</span><br><span class="line">barplot(newTable, col = col, horiz = <span class="literal">TRUE</span>, axes = <span class="literal">FALSE</span>,</span><br><span class="line">        names.arg = <span class="built_in">c</span>(<span class="string">&quot;&quot;</span>), xlab = colnames(newTable))</span><br><span class="line">xlocs &lt;- <span class="built_in">cumsum</span>(newTable)</span><br><span class="line">centres &lt;- <span class="built_in">c</span>(xlocs[<span class="number">1</span>]/<span class="number">2</span>, xlocs[<span class="number">1</span>:(nvals - <span class="number">1</span>)] + diff(xlocs)/<span class="number">2</span>)</span><br><span class="line">text(centres, <span class="number">0.75</span>, labels = rownames(newTable))</span><br><span class="line"></span><br><span class="line">barplot(newTable, col = col, horiz = <span class="literal">TRUE</span>, beside = <span class="literal">TRUE</span>,</span><br><span class="line">        names.arg = <span class="built_in">c</span>(<span class="string">&quot;&quot;</span>),</span><br><span class="line">        xlab = colnames(newTable),</span><br><span class="line">        legend.text = rownames(newTable))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># the titanic - survivors beside deaths</span></span><br><span class="line">survivalProportions &lt;- classTable</span><br><span class="line">survivalProportions[<span class="string">&quot;Yes&quot;</span>,] &lt;- survivalProportions[<span class="string">&quot;Yes&quot;</span>, ]/classTotals</span><br><span class="line">survivalProportions[<span class="string">&quot;No&quot;</span>,] &lt;- survivalProportions[<span class="string">&quot;No&quot;</span>, ]/classTotals</span><br><span class="line">survivalCols &lt;- adjustcolor(<span class="built_in">c</span>(<span class="string">&quot;black&quot;</span>, <span class="string">&quot;grey&quot;</span>), <span class="number">0.5</span>)</span><br><span class="line">barplot(survivalProportions, col = survivalCols,</span><br><span class="line">        horiz = <span class="literal">TRUE</span>, beside = <span class="literal">TRUE</span>,</span><br><span class="line">        xlab = <span class="string">&quot;proportion of class&quot;</span>, xlim = <span class="built_in">c</span>(<span class="number">0</span>,<span class="number">1</span>))</span><br><span class="line">legend(<span class="string">&quot;bottomright&quot;</span>, title = <span class="string">&quot;survival&quot;</span>, fill = survivalCols,</span><br><span class="line">       legend = rownames(survivalProportions))</span><br><span class="line"></span><br><span class="line"><span class="comment"># survivor and deaths within a common frame</span></span><br><span class="line"><span class="comment"># there ia a framing effect which makes proportions very easy to compare</span></span><br><span class="line"><span class="comment"># from one end or the other</span></span><br><span class="line"><span class="comment"># all are along common aligned scales</span></span><br><span class="line"></span><br><span class="line">barplot(survivalProportions, col = survivalCols,</span><br><span class="line">        horiz = <span class="literal">TRUE</span>, beside = <span class="literal">FALSE</span>,</span><br><span class="line">        xlab = <span class="string">&quot;proportion of class&quot;</span>, space = <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">barplot(apply(classTable, MARGIN = <span class="number">2</span>, FUN =<span class="built_in">sum</span>),</span><br><span class="line">        col = adjustcolor(<span class="string">&quot;steelblue&quot;</span>, <span class="number">0.5</span>),</span><br><span class="line">        xlab = <span class="string">&quot;class&quot;</span>, ylab = <span class="string">&quot;number of passengers&quot;</span>)</span><br><span class="line">barplot(classTable, col=survivalCols, xlab = <span class="string">&quot;class&quot;</span>, ylab = <span class="string">&quot;numebr of passengers&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">library(loon.data)</span><br><span class="line">data(<span class="string">&quot;SAheart&quot;</span>, package = <span class="string">&quot;loon.data&quot;</span>)</span><br><span class="line">kable(head(SAheart))</span><br><span class="line"></span><br><span class="line">noFamilyHistory &lt;- SAheart[,<span class="string">&quot;famhist&quot;</span>] == <span class="string">&quot;Absent&quot;</span></span><br><span class="line">FamilyHistory &lt;- SAheart[,<span class="string">&quot;famhist&quot;</span>] == <span class="string">&quot;Present&quot;</span></span><br><span class="line">famHIsotryCol &lt;- adjustcolor(<span class="string">&quot;steelblue&quot;</span>, <span class="number">0.5</span>)</span><br><span class="line">noHistoryCol &lt;- adjustcolor(<span class="string">&quot;firebrick&quot;</span>, <span class="number">0.5</span>)</span><br><span class="line">boxplot(SAheart[noFamilyHistory, <span class="string">&quot;sbp&quot;</span>], col = famHIsotryCol,</span><br><span class="line">        main = <span class="string">&quot;No family history&quot;</span>, horizontal = <span class="literal">TRUE</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># use formula notation y~x and a single data set, on common aligned scales</span></span><br><span class="line">boxplot(sbp~famhist, data = SAheart, col = <span class="built_in">c</span>(noHistoryCol, famHIsotryCol),</span><br><span class="line">        main = <span class="string">&quot;systolic blood pressure&quot;</span>, horizontal = <span class="literal">TRUE</span>)</span><br><span class="line"></span><br><span class="line">library(ggplot2)</span><br><span class="line">ggplot(data=SAheart, mapping = aes(x=famhist, y = sbp)) +</span><br><span class="line">  geom_boxplot(colour = <span class="built_in">c</span>(<span class="string">&quot;firebrick&quot;</span>, <span class="string">&quot;steelblue&quot;</span>),</span><br><span class="line">               fill = <span class="built_in">c</span>(<span class="string">&quot;firebrick&quot;</span>, <span class="string">&quot;steelblue&quot;</span>),</span><br><span class="line">               alpha = <span class="number">0.5</span>) +</span><br><span class="line">  coord_flip()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">hist(SAheart[noFamilyHistory, <span class="string">&quot;sbp&quot;</span>], col = noHistoryCol,</span><br><span class="line">     main = <span class="string">&quot;No family history&quot;</span>,</span><br><span class="line">     xlab = <span class="string">&quot;systolic blood pressure&quot;</span>,</span><br><span class="line">     xlim = extendrange(SAheart[,<span class="string">&quot;sbp&quot;</span>]), ylim = <span class="built_in">c</span>(<span class="number">0</span>, <span class="number">60</span>))</span><br><span class="line"><span class="comment"># when use par(mfrow = c(2,1)) , means not on common scale</span></span><br><span class="line"><span class="comment"># put on common scale as follows</span></span><br><span class="line">hist(SAheart[noFamilyHistory, <span class="string">&quot;sbp&quot;</span>], col = noHistoryCol,</span><br><span class="line">     main = <span class="string">&quot;No family history&quot;</span>,</span><br><span class="line">     xlim = extendrange(SAheart[,<span class="string">&quot;sbp&quot;</span>]))</span><br><span class="line">hist(SAheart[FamilyHistory, <span class="string">&quot;sbp&quot;</span>], col = famHIsotryCol,</span><br><span class="line">     xlim = extendrange(SAheart[,<span class="string">&quot;sbp&quot;</span>]), add = <span class="literal">TRUE</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># reflected histograms</span></span><br><span class="line">xrange &lt;- extendrange(SAheart[,<span class="string">&quot;sbp&quot;</span>])</span><br><span class="line">breaks &lt;- seq(xrange[<span class="number">1</span>], xrange[<span class="number">2</span>], length.out = <span class="number">12</span>)</span><br><span class="line">h1 &lt;- hist(SAheart[noFamilyHistory,<span class="string">&quot;sbp&quot;</span>],</span><br><span class="line">           breaks = breaks, plot = <span class="literal">FALSE</span>)</span><br><span class="line">h2 &lt;- hist(SAheart[FamilyHistory,<span class="string">&quot;sbp&quot;</span>],</span><br><span class="line">           breaks = breaks, plot = <span class="literal">FALSE</span>)</span><br><span class="line">hmax = <span class="built_in">max</span>(<span class="built_in">c</span>(h1$counts, h2$counts))</span><br><span class="line">h2$counts &lt;- -h2$counts</span><br><span class="line">hmin = -hmax</span><br><span class="line">X = <span class="built_in">c</span>(h1$breaks, h2$breaks)</span><br><span class="line">xmax &lt;- <span class="built_in">max</span>(X)</span><br><span class="line">xmin = <span class="built_in">min</span>(X)</span><br><span class="line">plot(h1, xlab = <span class="string">&quot;systolic blood pressure&quot;</span>, main = <span class="string">&quot;comapring patients with(blue) and without(pink)&quot;</span>,</span><br><span class="line">     ylim = <span class="built_in">c</span>(hmin, hmax),xlim = <span class="built_in">c</span>(xmin, xmax),</span><br><span class="line">     col = noHistoryCol)</span><br><span class="line">lines(h2, col = famHIsotryCol)</span><br><span class="line"></span><br><span class="line"><span class="comment"># back to back histograms&#x27;</span></span><br><span class="line">yrange &lt;- extendrange(SAheart[,<span class="string">&quot;sbp&quot;</span>])</span><br><span class="line">breaks &lt;- seq(yrange[<span class="number">1</span>], yrange[<span class="number">2</span>], length.out = <span class="number">12</span>)</span><br><span class="line">h1 &lt;- hist(SAheart[noFamilyHistory,<span class="string">&quot;sbp&quot;</span>],</span><br><span class="line">           breaks = breaks, plot = <span class="literal">FALSE</span>)</span><br><span class="line">h2 &lt;- hist(SAheart[FamilyHistory,<span class="string">&quot;sbp&quot;</span>],</span><br><span class="line">           breaks = breaks, plot = <span class="literal">FALSE</span>)</span><br><span class="line">nbreaks &lt;- <span class="built_in">length</span>(breaks)</span><br><span class="line">hmax = <span class="built_in">max</span>(<span class="built_in">c</span>(h1$counts, h2$counts))</span><br><span class="line">h2$counts &lt;- -h2$counts</span><br><span class="line">hmin = -hmax</span><br><span class="line">Y &lt;- <span class="built_in">rep</span>(h1$breaks, each = <span class="number">2</span>)</span><br><span class="line">X &lt;- <span class="built_in">c</span>(<span class="number">0</span>,<span class="built_in">rep</span>(h1$counts, each = <span class="number">2</span>), <span class="number">0</span>)</span><br><span class="line">plot(<span class="built_in">rep</span>(<span class="number">0</span>,<span class="number">2</span>), <span class="built_in">range</span>(Y), type = <span class="string">&quot;l&quot;</span>, col = <span class="string">&quot;black&quot;</span>,</span><br><span class="line">     xlim = <span class="built_in">c</span>(hmin, hmax), ylim = extendrange(Y),</span><br><span class="line">     bty = <span class="string">&quot;n&quot;</span>,</span><br><span class="line">     xlab = <span class="string">&quot;frequency&quot;</span>, ylab = <span class="string">&quot;systolic blood pressure&quot;</span>,</span><br><span class="line">     main = <span class="string">&quot;comparing patients with and without&quot;</span>)</span><br><span class="line">polygon(X, Y, col = noHistoryCol)</span><br><span class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">1</span>:nbreaks)&#123;lines(<span class="built_in">c</span>(<span class="number">0</span>, h1$counts[i]), <span class="built_in">c</span>(<span class="built_in">rep</span>(h1$breaks[i+<span class="number">1</span>], <span class="number">2</span>)))&#125;</span><br><span class="line">Y &lt;- <span class="built_in">rep</span>(h2$breaks, each = <span class="number">2</span>)</span><br><span class="line">X &lt;- <span class="built_in">c</span>(<span class="number">0</span>,<span class="built_in">rep</span>(h2$counts, each = <span class="number">2</span>), <span class="number">0</span>)</span><br><span class="line">polygon(X, Y, col = famHIsotryCol)</span><br><span class="line"><span class="keyword">for</span>(i <span class="keyword">in</span> <span class="number">1</span>:nbreaks)&#123;lines(<span class="built_in">c</span>(<span class="number">0</span>,h2$counts[i]), <span class="built_in">c</span>(<span class="built_in">rep</span>(h2$breaks[i+<span class="number">1</span>],<span class="number">2</span>)))&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># using facet with ggplot2</span></span><br><span class="line">library(ggplot2)</span><br><span class="line">ggplot(data =SAheart, mapping = aes(x =sbp)) +</span><br><span class="line">  geom_histogram(bins =<span class="number">12</span>,</span><br><span class="line">                 colour = <span class="string">&quot;grey50&quot;</span>,</span><br><span class="line">                 fill=<span class="string">&quot;white&quot;</span>) +</span><br><span class="line">  facet_grid(famhist~.)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># what can be compared via density estimates</span></span><br><span class="line">savepAr &lt;- par(mfrow=<span class="built_in">c</span>(<span class="number">1</span>,<span class="number">2</span>))</span><br><span class="line">densAbsent &lt;- density(SAheart[noFamilyHistory,<span class="string">&quot;sbp&quot;</span>], bw = <span class="string">&quot;SJ&quot;</span>)</span><br><span class="line">densPresent &lt;- density(SAheart[FamilyHistory,<span class="string">&quot;sbp&quot;</span>], bw = <span class="string">&quot;SJ&quot;</span>)</span><br><span class="line"></span><br><span class="line">plot(densAbsent, col = <span class="string">&quot;firebrick&quot;</span>, main = <span class="string">&quot;no family history&quot;</span>)</span><br><span class="line">polygon(densAbsent, col = noHistoryCol)</span><br><span class="line">plot(densPresent, col = <span class="string">&quot;steelblue&quot;</span>, main = <span class="string">&quot;family history&quot;</span>)</span><br><span class="line">polygon(densPresent, col = famHIsotryCol)</span><br><span class="line">par(savepAr)</span><br><span class="line"><span class="comment"># note the scales are not necesssarily identical</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># compare both x,y aligned x only scales</span></span><br><span class="line">savep &lt;- par(mfrow=<span class="built_in">c</span>(<span class="number">2</span>,<span class="number">1</span>))</span><br><span class="line">xlim &lt;- extendrange(SAheart[,<span class="string">&quot;sbp&quot;</span>])</span><br><span class="line">ylim &lt;- extendrange(<span class="built_in">c</span>(densAbsent$y, densPresent$y))</span><br><span class="line">plot(densAbsent, col = <span class="string">&quot;firebrick&quot;</span>, main = <span class="string">&quot;no family history&quot;</span>,</span><br><span class="line">     xlim = xlim, ylim = ylim)</span><br><span class="line">polygon(densAbsent, col = noHistoryCol)</span><br><span class="line">plot(densPresent, col = <span class="string">&quot;steelblue&quot;</span>,main = <span class="string">&quot;family history&quot;</span>,</span><br><span class="line">     xlim = xlim, ylim = ylim)</span><br><span class="line">polygon(densPresent, col = famHIsotryCol)</span><br><span class="line">par(savep)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># common aligned scales</span></span><br><span class="line">plot(densAbsent, col = <span class="string">&quot;firebrick&quot;</span>, xlab = <span class="string">&quot;systolic blood pressure&quot;</span>,</span><br><span class="line">     main = <span class="string">&quot;comparing a no family history with family history&quot;</span>,</span><br><span class="line">     xlim = xlim, ylim = ylim)</span><br><span class="line">polygon(densAbsent, col = noHistoryCol)</span><br><span class="line">lines(densPresent, col = <span class="string">&quot;steelblue&quot;</span>)</span><br><span class="line">polygon(densPresent, col = famHIsotryCol)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># common aligned scales-reflected</span></span><br><span class="line">densPresent$y &lt;- - densPresent$y</span><br><span class="line">ylim2 &lt;- extendrange(<span class="built_in">c</span>(densAbsent$y, densPresent$y))</span><br><span class="line">plot(densAbsent, col = <span class="string">&quot;firebrick&quot;</span>, xlab = <span class="string">&quot;systolic blood pressure&quot;</span>,</span><br><span class="line">     main = <span class="string">&quot;comparing a no family history with family history&quot;</span>,</span><br><span class="line">     xlim = xlim, ylim = ylim2)</span><br><span class="line">polygon(densAbsent, col = noHistoryCol)</span><br><span class="line">lines(densPresent, col = <span class="string">&quot;steelblue&quot;</span>)</span><br><span class="line">polygon(densPresent, col = famHIsotryCol)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># back to back</span></span><br><span class="line">ylim3 &lt;- extendrange(SAheart[,<span class="string">&quot;sbp&quot;</span>])</span><br><span class="line">xlim2 &lt;- extendrange(<span class="built_in">c</span>(densAbsent$y, densPresent$y))</span><br><span class="line">xyswitch &lt;- <span class="keyword">function</span>(xy_thing)&#123;</span><br><span class="line">  yx_thing &lt;- xy_thing</span><br><span class="line">  yx_thing$x &lt;- xy_thing$y</span><br><span class="line">  yx_thing$y &lt;- xy_thing$x</span><br><span class="line">  yx_thing</span><br><span class="line">&#125;</span><br><span class="line">plot(xyswitch(densAbsent), col = <span class="string">&quot;firebrick&quot;</span>, xlab = <span class="string">&quot;Density&quot;</span>,</span><br><span class="line">     ylab = <span class="string">&quot;systolic blood pressure&quot;</span>,</span><br><span class="line">     main = <span class="string">&quot;comparing a no family history with family history&quot;</span>,</span><br><span class="line">     xlim = xlim2, ylim = ylim3)</span><br><span class="line">polygon(xyswitch(densAbsent), col = noHistoryCol)</span><br><span class="line">lines(xyswitch(densPresent), col = <span class="string">&quot;steelblue&quot;</span>)</span><br><span class="line">polygon(xyswitch(densPresent), col = famHIsotryCol)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># using facet with ggplot2</span></span><br><span class="line">libarary(ggplot2)</span><br><span class="line">ggplot(data=SAheart, mapping = aes(x=sbp, col = famhist)) +</span><br><span class="line">  geom_density(colour = <span class="string">&quot;grey50&quot;</span>,</span><br><span class="line">               fill = <span class="string">&quot;black&quot;</span>,</span><br><span class="line">               alpha = <span class="number">0.4</span>,</span><br><span class="line">               bw = <span class="string">&quot;SJ&quot;</span>) +</span><br><span class="line">  facet_grid(famhist~.)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># simple points</span></span><br><span class="line">xlim &lt;- extendrange(SAheart[,<span class="string">&quot;sbp&quot;</span>])</span><br><span class="line">n &lt;- nrow(SAheart)</span><br><span class="line">col = <span class="built_in">rep</span>(adjustcolor(<span class="string">&quot;firebrick&quot;</span>, <span class="number">0.2</span>),n)</span><br><span class="line">col[FamilyHistory] &lt;- adjustcolor(<span class="string">&quot;steelblue&quot;</span>, <span class="number">0.2</span>)</span><br><span class="line">Y &lt;- <span class="built_in">rep</span>(<span class="number">1</span>,n)</span><br><span class="line">Y[FamilyHistory] &lt;- -<span class="number">1</span></span><br><span class="line">plot(SAheart[,<span class="string">&quot;sbp&quot;</span>], y = Y, col = col, pch = <span class="number">19</span>, cex = <span class="number">3</span>,</span><br><span class="line">     xlab = <span class="string">&quot;systolic blood pressure&quot;</span>,</span><br><span class="line">     main = <span class="string">&quot;comparing a no family history with family history&quot;</span>,</span><br><span class="line">     xlim = xlim, ylim = <span class="built_in">c</span>(-<span class="number">2</span>,<span class="number">2</span>), bty = <span class="string">&quot;n&quot;</span>, yaxt = <span class="string">&quot;n&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># simple points with jittering</span></span><br><span class="line"></span><br><span class="line">xlim &lt;- extendrange(SAheart[,<span class="string">&quot;sbp&quot;</span>])</span><br><span class="line">n &lt;- nrow(SAheart)</span><br><span class="line">col = <span class="built_in">rep</span>(adjustcolor(<span class="string">&quot;firebrick&quot;</span>, <span class="number">0.2</span>),n)</span><br><span class="line">col[FamilyHistory] &lt;- adjustcolor(<span class="string">&quot;steelblue&quot;</span>, <span class="number">0.2</span>)</span><br><span class="line">Y &lt;- <span class="built_in">rep</span>(<span class="number">1</span>,n)</span><br><span class="line">Y[FamilyHistory] &lt;- -<span class="number">1</span></span><br><span class="line">U &lt;- runif(n, -<span class="number">0.3</span>,<span class="number">0.3</span>)</span><br><span class="line">plot(SAheart[,<span class="string">&quot;sbp&quot;</span>], y = Y + U, col = col, pch = <span class="number">19</span>, cex = <span class="number">3</span>,</span><br><span class="line">     xlab = <span class="string">&quot;systolic blood pressure&quot;</span>,</span><br><span class="line">     main = <span class="string">&quot;comparing a no family history with family history&quot;</span>,</span><br><span class="line">     xlim = xlim, ylim = <span class="built_in">c</span>(-<span class="number">2</span>,<span class="number">2</span>), bty = <span class="string">&quot;n&quot;</span>, yaxt = <span class="string">&quot;n&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># quantile plots</span></span><br><span class="line">savePar &lt;- par(mfrow = <span class="built_in">c</span>(<span class="number">1</span>,<span class="number">2</span>))</span><br><span class="line">nAbsent &lt;- <span class="built_in">sum</span>(noFamilyHistory)</span><br><span class="line">nPresent &lt;- <span class="built_in">sum</span>(FamilyHistory)</span><br><span class="line">pAbsent &lt;- ppoints(nAbsent)</span><br><span class="line">pPresent &lt;- ppoints(nPresent)</span><br><span class="line"></span><br><span class="line">plot(pAbsent,sort(SAheart[noFamilyHistory, <span class="string">&quot;sbp&quot;</span>]), type = <span class="string">&quot;b&quot;</span>,</span><br><span class="line">     col = noHistoryCol, pch =<span class="number">19</span>,</span><br><span class="line">     xlab = <span class="string">&quot;cumulative proportion&quot;</span>,</span><br><span class="line">     ylab = <span class="string">&quot;systolic blood pressure&quot;</span>,</span><br><span class="line">     main = <span class="string">&quot;no family histroy&quot;</span>)</span><br><span class="line"></span><br><span class="line">plot(pPresent,sort(SAheart[FamilyHistory, <span class="string">&quot;sbp&quot;</span>]), type = <span class="string">&quot;b&quot;</span>,</span><br><span class="line">     col = famHIsotryCol, pch =<span class="number">19</span>,</span><br><span class="line">     xlab = <span class="string">&quot;cumulative proportion&quot;</span>,</span><br><span class="line">     ylab = <span class="string">&quot;systolic blood pressure&quot;</span>,</span><br><span class="line">     main = <span class="string">&quot;family histroy&quot;</span>)</span><br><span class="line">par(savePar)</span><br><span class="line"></span><br><span class="line"><span class="comment"># quantile plot common aligned scales via overlaying</span></span><br><span class="line">ylim &lt;- extendrange(SAheart[,<span class="string">&quot;sbp&quot;</span>])</span><br><span class="line">nAbsent &lt;- <span class="built_in">sum</span>(noFamilyHistory)</span><br><span class="line">nPresent &lt;- <span class="built_in">sum</span>(FamilyHistory)</span><br><span class="line">pAbsent &lt;- ppoints(nAbsent)</span><br><span class="line">pPresent &lt;- ppoints(nPresent)</span><br><span class="line"></span><br><span class="line">plot(pAbsent,sort(SAheart[noFamilyHistory, <span class="string">&quot;sbp&quot;</span>]), type = <span class="string">&quot;b&quot;</span>,</span><br><span class="line">     col = noHistoryCol, pch =<span class="number">19</span>,</span><br><span class="line">     xlab = <span class="string">&quot;cumulative proportion&quot;</span>,</span><br><span class="line">     ylab = <span class="string">&quot;systolic blood pressure&quot;</span>,</span><br><span class="line">     main = <span class="string">&quot;no family histroy&quot;</span>)</span><br><span class="line">points(pPresent, sort(SAheart[FamilyHistory, <span class="string">&quot;sbp&quot;</span>]),</span><br><span class="line">       type = <span class="string">&quot;b&quot;</span>, col = famHIsotryCol, pch =<span class="number">19</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="visual-hypothesis-testing"><a href="#visual-hypothesis-testing" class="headerlink" title="visual hypothesis testing"></a>visual hypothesis testing</h2><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># a function which would achieve this mixing is</span></span><br><span class="line">mixRandomly &lt;- <span class="keyword">function</span>(data)&#123;</span><br><span class="line">  <span class="comment"># note the data need not to be a data frame</span></span><br><span class="line">  <span class="comment"># it is expected to be a list with an x and y component (possibly different lengths)</span></span><br><span class="line">  x &lt;- data$x</span><br><span class="line">  y &lt;- data$y</span><br><span class="line">  m &lt;- <span class="built_in">length</span>(x)</span><br><span class="line">  n &lt;- <span class="built_in">length</span>(y)</span><br><span class="line">  mix &lt;- <span class="built_in">c</span>(x,y)</span><br><span class="line">  select4x &lt;- sample(<span class="number">1</span>:(m+n),</span><br><span class="line">                     m,</span><br><span class="line">                     replace = <span class="literal">FALSE</span>)</span><br><span class="line">  new_x &lt;- mix[select4x]</span><br><span class="line">  new_y &lt;- mix[-select4x]</span><br><span class="line">  <span class="built_in">list</span>(x = new_x, y = new_y)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">myplot &lt;- <span class="keyword">function</span>(data) &#123;</span><br><span class="line">  xrange &lt;- extendrange(<span class="built_in">c</span>(data$x, data$y))</span><br><span class="line">  breaks &lt;- seq(xrange[<span class="number">1</span>], xrange[<span class="number">2</span>], length.out = <span class="number">12</span>)</span><br><span class="line">  hx &lt;- hist(data$x, breaks = breaks, plot = <span class="literal">FALSE</span>)</span><br><span class="line">  hy = hist(data$y, breaks = breaks, plot = <span class="literal">FALSE</span>)</span><br><span class="line">  yrange &lt;- extendrange(<span class="built_in">c</span>(hx$counts, hy$counts))</span><br><span class="line"></span><br><span class="line">  plot(hx, main = <span class="string">&quot;&quot;</span>, axes = <span class="literal">FALSE</span>,</span><br><span class="line">       ylab = <span class="string">&quot;&quot;</span>, xlab = <span class="string">&quot;&quot;</span>, xaxt = <span class="string">&quot;n&quot;</span>, yaxt = <span class="string">&quot;n&quot;</span>,</span><br><span class="line">       ylim = yrange, xlim = xrange,</span><br><span class="line">       col = adjustcolor(<span class="string">&quot;firebrick&quot;</span>, <span class="number">0.4</span>))</span><br><span class="line">  lines(hy, col = adjustcolor(<span class="string">&quot;steelblue&quot;</span>, <span class="number">0.4</span>))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># apply it</span></span><br><span class="line">library(loon.data)</span><br><span class="line">data(<span class="string">&quot;SAheart&quot;</span>, package = <span class="string">&quot;loon.data&quot;</span>)</span><br><span class="line">Present &lt;- SAheart[, <span class="string">&quot;famhist&quot;</span>] == <span class="string">&quot;Present&quot;</span></span><br><span class="line">x &lt;- SAheart[Present, <span class="string">&quot;sbp&quot;</span>]</span><br><span class="line">y &lt;- SAheart[!Present, <span class="string">&quot;sbp&quot;</span>]</span><br><span class="line">data = <span class="built_in">list</span>(x= x, y=y)</span><br><span class="line"></span><br><span class="line">savePar &lt;- par(mfrow = <span class="built_in">c</span>(<span class="number">1</span>,<span class="number">2</span>))</span><br><span class="line">heads &lt;- runif(<span class="number">1</span>) &gt; <span class="number">0.5</span> <span class="comment"># toss a coin for order</span></span><br><span class="line">tails = !heads</span><br><span class="line"><span class="keyword">if</span> (heads) myplot(data) <span class="keyword">else</span> myplot(mixRandomly(data))</span><br><span class="line"><span class="keyword">if</span> (tails) myplot(mixRandomly(data)) <span class="keyword">else</span> myplot(data)</span><br><span class="line"></span><br><span class="line">par(savePar)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># function to do a line up test</span></span><br><span class="line"></span><br><span class="line">lineup &lt;- <span class="keyword">function</span>(data, showSubject = <span class="literal">NULL</span>, generateSubject = NUll,</span><br><span class="line">                   trueLoc = <span class="literal">NULL</span>, layout = <span class="built_in">c</span>(<span class="number">5</span>,<span class="number">4</span>))&#123;</span><br><span class="line">  nSubjects &lt;- layout[<span class="number">1</span>] *layout[<span class="number">2</span>]</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">is.null</span>(trueLoc)) &#123;trueLoc &lt;- sample(<span class="number">1</span>:nSubjects, <span class="number">1</span>)&#125;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">is.null</span>(showSubject)) &#123;stop(<span class="string">&quot;need a plot function for the subject&quot;</span>)&#125;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">is.null</span>(generateSubject)) &#123; stop(<span class="string">&quot;need a function to generate subject&quot;</span>)&#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment"># need to decide which subject to present</span></span><br><span class="line">  presentSubject &lt;- <span class="keyword">function</span>(subjectNo)&#123;</span><br><span class="line">    <span class="keyword">if</span> (subjectNo != trueLoc) &#123;data &lt;- generateSubject(data)&#125;</span><br><span class="line">    showSubject(data, subjectNo)&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># this does the plotting</span></span><br><span class="line">    savePar &lt;- par(mfrow= layout,</span><br><span class="line">                   mar = <span class="built_in">c</span>(<span class="number">2.5</span>,<span class="number">0.1</span>,<span class="number">0.3</span>,<span class="number">0.1</span>), oma = <span class="built_in">rep</span>(<span class="number">0</span>,<span class="number">4</span>))</span><br><span class="line">    sapply(<span class="number">1</span>:nSubjects, FUN = presentSubject)</span><br><span class="line">    par(savePar)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># hide the true location but return information to reconstruct it</span></span><br><span class="line">    hideLocation(trueLoc, nSubjects)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">hideLocation &lt;- <span class="keyword">function</span>(trueLoc, nSubjects)&#123;</span><br><span class="line">  possibleBaseVals &lt;- 3:<span class="built_in">min</span>(<span class="number">2</span>*nSubjects, <span class="number">50</span>)</span><br><span class="line">  <span class="comment"># remove easy base values</span></span><br><span class="line">  possibleBaseVals &lt;- possibleBaseVals[possibleBaseVals != <span class="number">10</span> &amp;</span><br><span class="line">                                         possibleBaseVals != <span class="number">5</span>]</span><br><span class="line">  base &lt;- sample(possibleBaseVals, <span class="number">1</span>)</span><br><span class="line">  offset &lt;- sample(<span class="number">5</span>:<span class="built_in">min</span>(<span class="number">5</span>*nSubjects, <span class="number">125</span>), <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">  <span class="comment"># return the location information (trueLoc hidden)</span></span><br><span class="line">  <span class="built_in">list</span>(trueLoc &lt;- paste0(<span class="string">&quot;log(&quot;</span>,</span><br><span class="line">                         base^(trueLoc +offset),</span><br><span class="line">                         <span class="string">&quot;, base = &quot;</span>, base,</span><br><span class="line">                         <span class="string">&quot;) - &quot;</span>, offset))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">revealLocation &lt;- <span class="keyword">function</span>(hideLocation)&#123;eval(parse(text=hideLocation$trueLoc))&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># suspectLocation &lt;- hideLocation(3,20)</span></span><br><span class="line"><span class="comment"># revealLocation(suspectLocation)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># have to fix myPlot to acccept a subject number</span></span><br><span class="line">myPlot &lt;- <span class="keyword">function</span>(data, subjectNo) &#123;</span><br><span class="line">  xrange &lt;- extendrange(<span class="built_in">c</span>(data$x, data$y))</span><br><span class="line">  breaks &lt;- seq(xrange[<span class="number">1</span>], xrange[<span class="number">2</span>], length.out = <span class="number">12</span>)</span><br><span class="line">  hx &lt;- hist(data$x, breaks = breaks, plot = <span class="literal">FALSE</span>)</span><br><span class="line">  hy &lt;- hist(data$y, breaks = breaks, plot = <span class="literal">FALSE</span>)</span><br><span class="line">  yrange &lt;- extendrange(<span class="built_in">c</span>(hx$counts, hy$counts))</span><br><span class="line"></span><br><span class="line">  plot(hx, main = paste(   subjectNo), cex.main = <span class="number">1.5</span>, line = -<span class="number">0.75</span>,</span><br><span class="line">       ylab = <span class="string">&quot;&quot;</span>, xlab = <span class="string">&quot;&quot;</span>, xaxt = <span class="string">&quot;n&quot;</span>, yaxt = <span class="string">&quot;n&quot;</span>,</span><br><span class="line">       ylim = yrange, xlim = xrange,</span><br><span class="line">       col = adjustcolor(<span class="string">&quot;firebrick&quot;</span>, <span class="number">0.4</span>))</span><br><span class="line">  lines(hy, col = adjustcolor(<span class="string">&quot;steelblue&quot;</span>, <span class="number">0.4</span>))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># we need only execute the test as follows</span></span><br><span class="line">data &lt;- <span class="built_in">list</span>(x = x, y=y)</span><br><span class="line">lineup(data,</span><br><span class="line">       generateSubject = mixRandomly,</span><br><span class="line">       showSubject = myPlot,</span><br><span class="line">       layout = <span class="built_in">c</span>(<span class="number">4</span>,<span class="number">5</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># back to back displays</span></span><br><span class="line">back2back &lt;- <span class="keyword">function</span>(data, subjectNo) &#123;</span><br><span class="line">  ylim &lt;- extendrange(<span class="built_in">c</span>(data$x, data$y))</span><br><span class="line">  Xdensity &lt;- density(data$x, bw = <span class="string">&quot;SJ&quot;</span>)</span><br><span class="line">  Ydensity &lt;- density(data$y, bw = <span class="string">&quot;SJ&quot;</span>)</span><br><span class="line">  Ydensity$y &lt;- - Ydensity$y</span><br><span class="line">  xlim &lt;- extendrange(<span class="built_in">c</span>(Xdensity$y, Ydensity$y))</span><br><span class="line">  xyswitch &lt;- <span class="keyword">function</span>(xy_thing)&#123;</span><br><span class="line">    yx_thing &lt;- xy_thing</span><br><span class="line">    yx_thing$x &lt;- xy_thing$y</span><br><span class="line">    yx_thing$y &lt;- xy_thing$x</span><br><span class="line">    yx_thing</span><br><span class="line">  &#125;</span><br><span class="line">  plot(xyswitch(Xdensity), col = <span class="string">&quot;firebrick&quot;</span>, xlab = <span class="string">&quot;&quot;</span>,</span><br><span class="line">       ylab = <span class="string">&quot;&quot;</span>,</span><br><span class="line">       main = paste(subjectNo),cex.main = <span class="number">1.5</span>, adj = <span class="number">0.75</span>,line = -<span class="number">0.85</span>,</span><br><span class="line">       xaxt = <span class="string">&quot;n&quot;</span>, yaxt = <span class="string">&quot;n&quot;</span>,</span><br><span class="line">       xlim = xlim, ylim = ylim)</span><br><span class="line">  polygon(xyswitch(Xdensity), col = adjustcolor(<span class="string">&quot;firebrick&quot;</span>, <span class="number">0.4</span>))</span><br><span class="line">  lines(xyswitch(Ydensity), col = <span class="string">&quot;steelblue&quot;</span>)</span><br><span class="line">  polygon(xyswitch(Ydensity), col = adjustcolor(<span class="string">&quot;steelblue&quot;</span>, <span class="number">0.4</span>))</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">data &lt;- <span class="built_in">list</span>(x = x, y=y)</span><br><span class="line">lineup(data,</span><br><span class="line">       generateSubject = mixRandomly,</span><br><span class="line">       showSubject = back2back,</span><br><span class="line">       layout = <span class="built_in">c</span>(<span class="number">4</span>,<span class="number">5</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># quantiles display</span></span><br><span class="line">quantiles &lt;- <span class="keyword">function</span>(data, subjectNo)&#123;</span><br><span class="line">  ylim &lt;- extendrange(<span class="built_in">c</span>(data$x, data$y))</span><br><span class="line">  n_x &lt;- <span class="built_in">length</span>(data$x)</span><br><span class="line">  n_y &lt;- <span class="built_in">length</span>(data$y)</span><br><span class="line">  p_x &lt;- ppoints(n_x)</span><br><span class="line">  p_y &lt;- ppoints(n_y)</span><br><span class="line"></span><br><span class="line">  plot(p_x, sort(data$x), type = <span class="string">&quot;b&quot;</span>,</span><br><span class="line">       pch = <span class="number">19</span>, col = adjustcolor(<span class="string">&quot;firebrick&quot;</span>, <span class="number">0.4</span>),</span><br><span class="line">       cex = <span class="number">2</span>, ylim = ylim,</span><br><span class="line">      xlab = <span class="string">&quot;&quot;</span>, ylab = <span class="string">&quot;&quot;</span>, main = paste(subjectNo),</span><br><span class="line">      cex.main = <span class="number">1.5</span>, adj = <span class="number">0.75</span>,line = -<span class="number">0.85</span>,</span><br><span class="line">      xaxt = <span class="string">&quot;n&quot;</span>, yaxt = <span class="string">&quot;n&quot;</span>)</span><br><span class="line">  points(p_y, sort(data$y), type = <span class="string">&quot;b&quot;</span>,</span><br><span class="line">         col = adjustcolor(<span class="string">&quot;steelblue&quot;</span>, <span class="number">0.4</span>),pch = <span class="number">19</span>,</span><br><span class="line">         cex = <span class="number">2</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">lineup(data,</span><br><span class="line">       generateSubject = mixRandomly,</span><br><span class="line">       showSubject = quantiles,</span><br><span class="line">       layout = <span class="built_in">c</span>(<span class="number">4</span>,<span class="number">5</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># we might use boxplot if we are only interested in comparing locations and</span></span><br><span class="line"><span class="comment">#   possible scales and symmetry</span></span><br><span class="line"></span><br><span class="line">boxplots &lt;- <span class="keyword">function</span>(data, subjectNo)&#123;</span><br><span class="line">  y &lt;- <span class="built_in">c</span>(data$x, data$y)</span><br><span class="line">  x &lt;- <span class="built_in">c</span>(<span class="built_in">rep</span>(<span class="number">0</span>, <span class="built_in">length</span>(data$x)),</span><br><span class="line">         <span class="built_in">rep</span>(<span class="number">1</span>, <span class="built_in">length</span>(data$y)))</span><br><span class="line">  boxplot(y~x, data = cbind(x,y),</span><br><span class="line">          col = adjustcolor(<span class="built_in">c</span>(<span class="string">&quot;firebrick&quot;</span>, <span class="string">&quot;steelblue&quot;</span>), <span class="number">0.4</span>),</span><br><span class="line">          main = paste(subjectNo),</span><br><span class="line">          cex.main = <span class="number">1.5</span>, adj = <span class="number">0.75</span>, line = -<span class="number">0.75</span>,</span><br><span class="line">          xlab = <span class="string">&quot;&quot;</span>, ylab = <span class="string">&quot;&quot;</span>, xaxt = <span class="string">&quot;n&quot;</span>, yaxt = <span class="string">&quot;n&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="hypothetical-generative"><a href="#hypothetical-generative" class="headerlink" title="hypothetical generative"></a>hypothetical generative</h2><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># this function will return x and y data that have the same median(0) and</span></span><br><span class="line"><span class="comment"># interquartile range(1): same slope in the middle</span></span><br><span class="line"></span><br><span class="line">matchData &lt;- <span class="keyword">function</span>(data)&#123;</span><br><span class="line">  x &lt;- data$x</span><br><span class="line">  y &lt;- data$y</span><br><span class="line">  <span class="built_in">list</span> (x = scale(x, center = median(x), scale=IQR(x)),</span><br><span class="line">        y = scale(y, center = median(y), scale=IQR(y)))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">lineup(data,</span><br><span class="line">       showSubject = back2back,</span><br><span class="line">       layout = <span class="built_in">c</span>(<span class="number">4</span>,<span class="number">5</span>),</span><br><span class="line">       generateSubject =</span><br><span class="line">         <span class="keyword">function</span>(data) &#123;</span><br><span class="line">           data &lt;- matchData(data)</span><br><span class="line">           data &lt;- mixRandomly(data)</span><br><span class="line">           matchData(data)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># compare to a specific shape</span></span><br><span class="line"><span class="comment"># rdist(): will generate n pseudo-random values from the hypothesized generative</span></span><br><span class="line"><span class="comment">#  distribution (for some location and scale), then data matched on location (median)</span></span><br><span class="line"><span class="comment">#  and scale(IQR) can be geenrated using:</span></span><br><span class="line">getMatchData &lt;- <span class="keyword">function</span>(x,</span><br><span class="line">                         rdist = rnorm,</span><br><span class="line">                         matchScale = <span class="literal">TRUE</span>,</span><br><span class="line">                         matchLocation = <span class="literal">TRUE</span>)&#123;</span><br><span class="line">  new_x &lt;- rdist(<span class="built_in">length</span>(x))   <span class="comment"># geenrate new data Hershey</span></span><br><span class="line">  <span class="comment"># now match the new data to have the same location and scale as the old data</span></span><br><span class="line">  <span class="keyword">if</span> (matchScale) &#123;new_x &lt;- new_x * (IQR(x)/IQR(new_x))&#125;</span><br><span class="line">  <span class="keyword">if</span> (matchLocation) &#123;new_x &lt;- new_x - median(new_x) + median(x)&#125;</span><br><span class="line">  new_x</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># first, get the actual data</span></span><br><span class="line">x &lt;- beaver1[,<span class="string">&quot;temp&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># construct a pairing of it with a randomly geenrated sample from any Gaussian distribution</span></span><br><span class="line"><span class="comment"># and match the location and scale</span></span><br><span class="line">data &lt;- <span class="built_in">list</span>(x = x, y = getMatchData(x))</span><br><span class="line"></span><br><span class="line"><span class="comment"># then this data can now be used in a line up test,</span></span><br><span class="line">lineup(data,</span><br><span class="line">       showSubject = back2back,</span><br><span class="line">       layout = <span class="built_in">c</span>(<span class="number">4</span>,<span class="number">5</span>),</span><br><span class="line">       generateSubject =</span><br><span class="line">         <span class="keyword">function</span>(data) &#123;</span><br><span class="line">           <span class="built_in">list</span>(x = getMatchData(data$x),</span><br><span class="line">                y = getMatchData(data$y))</span><br><span class="line">         &#125;</span><br><span class="line">       )</span><br><span class="line"></span><br><span class="line"><span class="comment"># if from other distribution, like t3</span></span><br><span class="line">rdist &lt;- <span class="keyword">function</span>(n) rt(n, df = <span class="number">3</span>)</span><br><span class="line">data &lt;- <span class="built_in">list</span>(x = x, y = getMatchData(x, rdist = rdist))</span><br><span class="line"></span><br><span class="line"><span class="comment">## the above method was compared to several other pairs of x and y where both were</span></span><br><span class="line"><span class="comment"># generated from the hyppthesized dsitribuiotn</span></span><br><span class="line"><span class="comment"># the extra variation introduced by random generation of both x and y under the null hypothesis might</span></span><br><span class="line"><span class="comment"># be making the detemination more difficult</span></span><br><span class="line"><span class="comment"># the variation might be reduced if we instead use a single representative set of values</span></span><br><span class="line"><span class="comment"># for the comparison in each graphic.</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># sample quantiles vs. theoretical quantiles</span></span><br><span class="line"></span><br><span class="line">library(<span class="string">&quot;MASS&quot;</span>)</span><br><span class="line">attach(geyser)</span><br><span class="line">plot_colour &lt;- adjustcolor(<span class="string">&quot;black&quot;</span>, <span class="number">0.3</span>)</span><br><span class="line">qqnorm(duration, pch = <span class="number">19</span>, col = plot_colour)</span><br><span class="line"><span class="comment"># here geyser duration data with alpha blending to help reveal point density</span></span><br><span class="line"></span><br><span class="line">savePar = par(mfrow=<span class="built_in">c</span>(<span class="number">1</span>,<span class="number">2</span>))</span><br><span class="line">qqnorm(SAheart[noFamilyHistory, <span class="string">&quot;sbp&quot;</span>], pch = <span class="number">19</span>,</span><br><span class="line">       col = adjustcolor(<span class="string">&quot;firebrick&quot;</span>, <span class="number">0.4</span>),</span><br><span class="line">       main = <span class="string">&quot;no family history&quot;</span>)</span><br><span class="line">qqnorm(SAheart[FamilyHistory, <span class="string">&quot;sbp&quot;</span>], pch = <span class="number">19</span>,</span><br><span class="line">       col = adjustcolor(<span class="string">&quot;steelblue&quot;</span>, <span class="number">0.4</span>),</span><br><span class="line">       main = <span class="string">&quot;family history&quot;</span>)</span><br><span class="line">par(savePar)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># self calibrating qqplots</span></span><br><span class="line">library(qqtest)</span><br><span class="line">qqtest(duration)</span><br><span class="line">qqtest(duration, xAxisAsProbs = <span class="literal">TRUE</span>,yAxisAsProbs = <span class="literal">TRUE</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ordering comparisons</span></span><br><span class="line">library(loon.data)</span><br><span class="line">data(<span class="string">&quot;SAheart&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># getting the comparisons of interest</span></span><br><span class="line"><span class="comment"># get the groups</span></span><br><span class="line">groups &lt;- with(SAheart, split(sbp, <span class="built_in">list</span>(famhist, chd)))</span><br><span class="line">kable(t(<span class="built_in">names</span>(groups)))</span><br><span class="line"></span><br><span class="line"><span class="comment"># now ordering the groups</span></span><br><span class="line">ord &lt;- <span class="built_in">c</span>(<span class="string">&quot;Present.No&quot;</span>, <span class="string">&quot;Present.Yes&quot;</span>, <span class="string">&quot;Absent.Yes&quot;</span>,</span><br><span class="line">         <span class="string">&quot;Absent.No&quot;</span>, <span class="string">&quot;Present.No&quot;</span>)</span><br><span class="line"><span class="comment"># match the colours to the famliy history</span></span><br><span class="line">cols &lt;- adjustcolor(<span class="built_in">c</span>(<span class="string">&quot;steelblue&quot;</span>, <span class="string">&quot;steelblue&quot;</span>, <span class="string">&quot;firebrick&quot;</span>,</span><br><span class="line">                      <span class="string">&quot;firebrick&quot;</span>, <span class="string">&quot;steelblue&quot;</span>), <span class="number">0.5</span>)</span><br><span class="line">boxplot(groups[ord], col = cols)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># layout via graph structure</span></span><br><span class="line">library(<span class="string">&quot;PairViz&quot;</span>)</span><br><span class="line">library(loon.data)</span><br><span class="line">data(cancer)</span><br><span class="line">str(cancer)</span><br><span class="line"></span><br><span class="line"><span class="comment"># we can separate the survival times by which organ is affected</span></span><br><span class="line">organs &lt;- with(cancer, split(Survival, Organ))</span><br><span class="line"><span class="comment"># and record their names for use later</span></span><br><span class="line">organNames &lt;- <span class="built_in">names</span>(organs)</span><br><span class="line"><span class="comment"># the structure of the organs data</span></span><br><span class="line">str(organs)</span><br><span class="line"></span><br><span class="line"><span class="comment"># getting Eulerians and Hamiltonians</span></span><br><span class="line">ord &lt;- eulerian(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">library(colorspace)</span><br><span class="line"><span class="comment"># getting a rainbow of colours but choose chromaticity of 50 to dull them</span></span><br><span class="line">cols &lt;- rainbow_hcl(<span class="number">5</span>, <span class="built_in">c</span> = <span class="number">50</span>)</span><br><span class="line">boxplot(organs[ord], col = cols[ord],</span><br><span class="line">        ylab = <span class="string">&quot;Survival time&quot;</span>, main = <span class="string">&quot;cancer treated by vitamin C&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># logout via graph structure</span></span><br><span class="line"><span class="comment"># taking square roots should make the data look a liitle more symmetric</span></span><br><span class="line">sqrtOrgans &lt;- with(cancer, split(<span class="built_in">sqrt</span>(Survival), Organ))</span><br><span class="line"></span><br><span class="line">boxplot(sqrtOrgans[ord], col = cols[ord],</span><br><span class="line">        ylab = <span class="built_in">expression</span>(<span class="built_in">sqrt</span>(<span class="string">&quot;Survival time&quot;</span>)),</span><br><span class="line">        main = <span class="string">&quot;cancer treated by vitamin C&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># hamiltonian decompositions</span></span><br><span class="line">ordHam &lt;- hpaths(<span class="number">5</span>) <span class="comment"># here each hamiltonian is a row of the matrix&#x27;</span></span><br><span class="line"><span class="comment"># for our purpose, we would like the hamiltonians to be joined togehter</span></span><br><span class="line">ordHam &lt;- hpaths(<span class="number">5</span>, matrix = <span class="literal">FALSE</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># run a statistical test comapring each pair and use the p-value</span></span><br><span class="line"><span class="comment"># to order. e.g. test the equality of each pair of means(assuming normlaity)</span></span><br><span class="line"><span class="comment"># pairwise.t.test() does this and corrects the p-values for simultaneity</span></span><br><span class="line">test &lt;- with(cancer,</span><br><span class="line">             pairwise.t.test(<span class="built_in">sqrt</span>(Survival), Organ))</span><br><span class="line">pvals &lt;- test$p.value</span><br><span class="line"><span class="built_in">round</span>(pvals, <span class="number">4</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># the pairviz package can handle graphs with weights</span></span><br><span class="line">ngrps &lt;- <span class="built_in">length</span>(organNames)</span><br><span class="line"><span class="comment"># build matrix of weights</span></span><br><span class="line">weights &lt;- matrix(<span class="number">0</span>, nrow = ngrps, ncol= ngrps)</span><br><span class="line">rownames(weights) &lt;- organNames</span><br><span class="line">colnames(weights) &lt;- organNames</span><br><span class="line">weights[<span class="number">2</span>:ngrps, <span class="number">1</span>:(ngrps-<span class="number">1</span>)] &lt;- pvals</span><br><span class="line"><span class="built_in">round</span>(weights, <span class="number">4</span>)</span><br><span class="line"><span class="comment"># right size matrix but need to be symmetric by filling the upper triangle to</span></span><br><span class="line"><span class="comment"># match lower</span></span><br><span class="line">diag(weights) &lt;- <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">1</span>:(ngrps - <span class="number">1</span>)) &#123;</span><br><span class="line">  <span class="keyword">for</span> (j <span class="keyword">in</span> (i+<span class="number">1</span>):ngrps) &#123;</span><br><span class="line">    weights[i,j] &lt;- weights[j,i]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">round</span>(weights, <span class="number">4</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># greedy eulerians</span></span><br><span class="line"><span class="comment"># low to high</span></span><br><span class="line">low2highEulord &lt;- eulerian(weights);</span><br><span class="line">colnames(weights)[low2highEulord]</span><br><span class="line"><span class="comment"># high to low</span></span><br><span class="line">high2lowEulord &lt;- eulerian(- weights)</span><br><span class="line">colnames(weights)[high2lowEulord]</span><br><span class="line"></span><br><span class="line"><span class="comment"># weighted hamiltonian decompositions</span></span><br><span class="line">low2higihHamord &lt;- weighted_hpaths(weights)</span><br><span class="line"><span class="comment"># high to low</span></span><br><span class="line">high2lowHamord &lt;- weighted_hpaths(- weights)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># having weigthed graph g</span></span><br><span class="line">library(Rgraphviz)</span><br><span class="line">g &lt;- mk_complete_graph(weights)</span><br><span class="line"><span class="comment"># par(mar = c(bottom, left, top, right))</span></span><br><span class="line">par(mar = <span class="built_in">c</span>(<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>))</span><br><span class="line">plot(g, <span class="string">&quot;circo&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#######################################################</span></span><br><span class="line"><span class="comment">########### the code used to install packages in bioManager</span></span><br><span class="line"><span class="keyword">if</span> (!requireNamespace(<span class="string">&quot;BiocManager&quot;</span>, quietly = <span class="literal">TRUE</span>))</span><br><span class="line">  install.packages(<span class="string">&quot;BiocManager&quot;</span>)</span><br><span class="line"></span><br><span class="line">BiocManager::install(<span class="string">&quot;Rgraphviz&quot;</span>)</span><br><span class="line"><span class="comment">#######################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># remove all edges in the top hald the edges weights</span></span><br><span class="line">wvals &lt;- weights[upper.tri(weights)]</span><br><span class="line"><span class="comment"># the median</span></span><br><span class="line">q &lt;- quantile(wvals, <span class="number">0.5</span>)</span><br><span class="line"><span class="comment"># trim the graph via the pairviz function dn_graph()</span></span><br><span class="line">g1 &lt;- dn_graph(g,q,`&lt;=`)</span><br><span class="line">par(mar = <span class="built_in">c</span>(<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>))</span><br><span class="line">plot(g1, <span class="string">&quot;circo&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># this subgraph g1 is not even (some nodes have an odd numebr of edges)</span></span><br><span class="line"><span class="comment"># so it must be made even by adding extra edges to get an Eulerian</span></span><br><span class="line">g1EulOrd &lt;- eulerian(g1)</span><br><span class="line"></span><br><span class="line"><span class="comment"># back to the SAheart data</span></span><br><span class="line">library(PairViz);library(loon.data);data(<span class="string">&quot;SAheart&quot;</span>)</span><br><span class="line"><span class="comment"># building the graph</span></span><br><span class="line">nodes &lt;- <span class="built_in">names</span>(groups)</span><br><span class="line">SAheartGraph &lt;- new(<span class="string">&quot;graphNEL&quot;</span>, nodes = nodes, edgemode = <span class="string">&quot;undirected&quot;</span>)</span><br><span class="line">SAheartGraph &lt;- addEdge(<span class="string">&quot;Present.Yes&quot;</span>, <span class="string">&quot;Absent.No&quot;</span>, SAheartGraph)</span><br><span class="line">SAheartGraph &lt;- addEdge(<span class="string">&quot;Present.Yes&quot;</span>, <span class="string">&quot;Absent.Yes&quot;</span>, SAheartGraph)</span><br><span class="line">SAheartGraph &lt;- addEdge(<span class="string">&quot;Absent.Yes&quot;</span>, <span class="string">&quot;Absent.No&quot;</span>, SAheartGraph)</span><br><span class="line">SAheartGraph &lt;- addEdge(<span class="string">&quot;Absent.No&quot;</span>, <span class="string">&quot;Present.No&quot;</span>, SAheartGraph)</span><br><span class="line"></span><br><span class="line">ord &lt;-eulerian(SAheartGraph)</span><br><span class="line">cols &lt;- adjustcolor(<span class="built_in">rep</span>(<span class="built_in">c</span>(<span class="string">&quot;firebrick&quot;</span>, <span class="string">&quot;steelblue&quot;</span>), <span class="number">2</span>), <span class="number">0.5</span>)</span><br><span class="line"><span class="built_in">names</span>(cols) &lt;- nodes</span><br><span class="line">savePar &lt;- par(mfrow=<span class="built_in">c</span>(<span class="number">1</span>,<span class="number">2</span>), oma = <span class="built_in">rep</span>(<span class="number">6</span>,<span class="number">4</span>))</span><br><span class="line">boxplot(groups[ord], col= cols[ord], main = <span class="string">&quot;family hisotry and chd&quot;</span>)</span><br><span class="line">plot(SAheartGraph, <span class="string">&quot;circo&quot;</span>)</span><br><span class="line">par(savePar)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="time-order"><a href="#time-order" class="headerlink" title="time order"></a>time order</h2><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># time series data</span></span><br><span class="line">library(loon)</span><br><span class="line">p &lt;- l_plot(sunspot.month, color = <span class="string">&quot;grey&quot;</span>, size = <span class="number">1</span>,</span><br><span class="line">            showScales = <span class="literal">TRUE</span>)</span><br><span class="line"><span class="comment"># connect the dots</span></span><br><span class="line">l_layer_line(p, x = time(sunspot.month), y = sunspot.month,</span><br><span class="line">             color = <span class="string">&quot;grey&quot;</span>, linewidth = <span class="number">2</span>,</span><br><span class="line">             index = <span class="string">&quot;end&quot;</span>)</span><br><span class="line"></span><br><span class="line">l_layer_hide(p, <span class="string">&quot;model&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># show a window of a couple of years</span></span><br><span class="line">window(sunspot.month, start=<span class="built_in">c</span>(<span class="number">1960</span>, <span class="number">1</span>), end = <span class="built_in">c</span>(<span class="number">1961</span>, <span class="number">12</span>))</span><br><span class="line">end(sunspot.month)</span><br><span class="line">start(sunspot.month)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># cycle: group the data by season or quarterly phase by using the cycle() function</span></span><br><span class="line">window(cycle(sunspot.month), start = <span class="built_in">c</span>(<span class="number">1960</span>, <span class="number">1</span>), end = <span class="built_in">c</span>(<span class="number">1960</span>, <span class="number">12</span>))</span><br><span class="line">quarter &lt;- 1 + ((cycle(sunspot.month) - <span class="number">1</span>) %/% <span class="number">3</span>)</span><br><span class="line">monthplot(sunspot.month, col = <span class="string">&quot;grey50&quot;</span>, col.base = <span class="string">&quot;red&quot;</span>,</span><br><span class="line">          lwd.base = <span class="number">3</span>, xlab = <span class="string">&quot;quarter&quot;</span>, phase = quarter,</span><br><span class="line">          labels = <span class="built_in">c</span>(<span class="string">&quot;first&quot;</span>, <span class="string">&quot;second&quot;</span>, <span class="string">&quot;third&quot;</span>, <span class="string">&quot;fourth&quot;</span>))</span><br><span class="line"><span class="comment"># we might explore how well the value of one month might be predicted by the immediately</span></span><br><span class="line"><span class="comment"># prior month, that is how well might any value be predicted from knowing</span></span><br><span class="line"><span class="comment"># only its immediate predecessor</span></span><br><span class="line">plot(x = sunspot.month[-<span class="built_in">length</span>(sunspot.month)], y = sunspot.month[-<span class="number">1</span>],</span><br><span class="line">     col = adjustcolor(<span class="string">&quot;firebrick&quot;</span>, <span class="number">0.15</span>), pch = <span class="number">19</span>,</span><br><span class="line">     main = <span class="string">&quot;sunspot activity lagged by one month&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># lag plots: can lag the data by any number of months,</span></span><br><span class="line">lag.plot(sunspot.month,</span><br><span class="line">         col = adjustcolor(<span class="string">&quot;firebrick&quot;</span>, <span class="number">0.15</span>), pch = <span class="number">19</span>,</span><br><span class="line">         main = <span class="string">&quot;sunspot activity lagged by up to 12 months&quot;</span>,</span><br><span class="line">         lags = <span class="number">12</span>)</span><br><span class="line"></span><br><span class="line">freq &lt;- frequency(sunspot.month)</span><br><span class="line">lag.plot(sunspot.month,</span><br><span class="line">         col = adjustcolor(<span class="string">&quot;firebrick&quot;</span>, <span class="number">0.15</span>), pch = <span class="number">19</span>,</span><br><span class="line">         main = <span class="string">&quot;sunspot activity lagged by up to 15 months&quot;</span>,</span><br><span class="line">         set.lags = freq*(<span class="number">1</span>:<span class="number">15</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># jumped by 4 months</span></span><br><span class="line">lag.plot(<span class="built_in">sqrt</span>(sunspot.month),</span><br><span class="line">         col = adjustcolor(<span class="string">&quot;firebrick&quot;</span>, <span class="number">0.15</span>), pch = <span class="number">19</span>,</span><br><span class="line">         main = <span class="string">&quot;sunspot activity^(1/2) lagged 84 tp 180 by 4&quot;</span>,</span><br><span class="line">         set.lags = seq(<span class="number">84</span>,<span class="number">180</span>, <span class="number">4</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># identify every 11 years of the series as a cycle.</span></span><br><span class="line"><span class="comment"># determine the starting year of each 11 year cycle</span></span><br><span class="line">timeseries &lt;- <span class="built_in">sqrt</span>(sunspot.month)</span><br><span class="line">startYears &lt;- seq(start(timeseries)[<span class="number">1</span>], end(timeseries)[<span class="number">1</span>], <span class="number">11</span>)</span><br><span class="line"><span class="comment"># number of cycles</span></span><br><span class="line">ncycles &lt;- <span class="built_in">length</span>(startYears)</span><br><span class="line">cycleNums &lt;- <span class="built_in">rep</span>(<span class="number">1</span>:ncycles, each = <span class="number">132</span>)</span><br><span class="line"><span class="comment"># only need as many as we have data points</span></span><br><span class="line">cycleNUms &lt;- cycleNUms[<span class="number">1</span>:<span class="built_in">length</span>(timeseries)]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># each month will have a position number within its cycle</span></span><br><span class="line">cyclePositions &lt;- <span class="built_in">rep</span>(<span class="number">1</span>:<span class="number">132</span>, ncycles)</span><br><span class="line">cyclePositions &lt;- cyclePositions[<span class="number">1</span>:<span class="built_in">length</span>(timeseries)]</span><br><span class="line">head(cyclePositions)</span><br><span class="line"></span><br><span class="line">library(RColorBrewer)</span><br><span class="line">cols &lt;- adjustcolor(<span class="built_in">rep</span>(brewer.pal(<span class="number">9</span>, name = <span class="string">&quot;Set1&quot;</span>),</span><br><span class="line">                       length.out = ncycles), alpha.f = <span class="number">0.5</span>)</span><br><span class="line">opt &lt;- par(bg=<span class="string">&quot;grey95&quot;</span>)</span><br><span class="line">plot(x = time(timeseries), y =as.vector(timeseries),</span><br><span class="line">     type = <span class="string">&quot;b&quot;</span>, col=cols[cycleNUms], lwd = <span class="number">2</span>, pch = <span class="number">19</span>,</span><br><span class="line">     xlab = <span class="string">&quot;Time&quot;</span>, ylab = <span class="string">&quot;sqrt monthly sunspots&quot;</span>,</span><br><span class="line">     main = <span class="string">&quot;sunspot activity&quot;</span>)</span><br><span class="line">par(opt)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># comparing groups by overlaying them</span></span><br><span class="line">opt &lt;- par(bg = <span class="string">&quot;grey95&quot;</span>)</span><br><span class="line">data &lt;- window(timeseries, start = <span class="built_in">c</span>(startYears[<span class="number">1</span>], <span class="number">1</span>),</span><br><span class="line">                end = <span class="built_in">c</span>(startYears[<span class="number">2</span>] - <span class="number">1</span>, <span class="number">12</span>),</span><br><span class="line">                frequency = <span class="number">12</span>)</span><br><span class="line">plot(<span class="number">1</span>:<span class="built_in">length</span>(data), data,</span><br><span class="line">     type = <span class="string">&quot;l&quot;</span>, col=cols[<span class="number">1</span>], lwd = <span class="number">2</span>,</span><br><span class="line">     xlab = <span class="string">&quot;Month number in 11 year sequence&quot;</span>, ylab = <span class="string">&quot;sqrt monthly sunspots&quot;</span>,</span><br><span class="line">     main = <span class="string">&quot;all 11 tear sequence: 1749-1983&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ( i <span class="keyword">in</span> <span class="number">2</span>:(ncycles - <span class="number">1</span>)) &#123;</span><br><span class="line"> data &lt;- window(timeseries, start = <span class="built_in">c</span>(startYears[i], <span class="number">1</span>),</span><br><span class="line">                 end = <span class="built_in">c</span>(startYears[i+<span class="number">1</span>] - <span class="number">1</span>, <span class="number">12</span>),</span><br><span class="line">                 frequency = <span class="number">12</span>)</span><br><span class="line"> lines(<span class="number">1</span>:<span class="built_in">length</span>(data), data, col = cols[i], lwd = <span class="number">2</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># tidy up the last partial cycle</span></span><br><span class="line">data &lt;- window(timeseries, start = <span class="built_in">c</span>(startYears[ncycles], <span class="number">1</span>),</span><br><span class="line">               end = end(timeseries),</span><br><span class="line">               frequency = <span class="number">12</span>)</span><br><span class="line">lines(<span class="number">1</span>:<span class="built_in">length</span>(data), data, col = cols[ncycles], lwd = <span class="number">2</span>)</span><br><span class="line">par(opt)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#### an interactive display</span></span><br><span class="line">library(loon)</span><br><span class="line"></span><br><span class="line"><span class="comment"># plot the original data, marking 11 year cycles in colour</span></span><br><span class="line">p &lt;-l_plot(x =time(timeseries), y=as.vector(timeseries),</span><br><span class="line">           ylabel=<span class="string">&quot;Mean sqrt monthly sunspots&quot;</span>,</span><br><span class="line">           xlabel=<span class="string">&quot;Time&quot;</span>,</span><br><span class="line">           title=<span class="string">&quot;Sunspot activity&quot;</span>,</span><br><span class="line">           linkingGroup=<span class="string">&quot;sunspots&quot;</span>,</span><br><span class="line">           color = cols[cycleNums], size=<span class="number">1</span>,showGuides=<span class="literal">TRUE</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#  And all the cycles over top of each ot</span></span><br><span class="line">cycleplot &lt;-l_plot(x = cyclePositions,</span><br><span class="line">                  y=as.vector(timeseries),</span><br><span class="line">                  ylabel=<span class="string">&quot;Mean sqrt monthly sunspots&quot;</span>,</span><br><span class="line">                  xlabel=<span class="string">&quot;Month number in 11 year sequence&quot;</span>,</span><br><span class="line">                  title=<span class="string">&quot;11 year sequences&quot;</span>,linkingGroup=<span class="string">&quot;sunspots&quot;</span>,</span><br><span class="line">                  color = cols[cycleNums], size=<span class="number">1</span>,showGuides=<span class="literal">TRUE</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Adding a histogram in the same linking group allows</span></span><br><span class="line"><span class="comment">#    all to the# plots to be linked together</span></span><br><span class="line">h &lt;-l_hist(x= cycleNums,xlabel=<span class="string">&quot;Cycle number&quot;</span>,</span><br><span class="line">           title=<span class="string">&quot;Sunspot  cycles&quot;</span>,linkingGroup=<span class="string">&quot;sunspots&quot;</span>,</span><br><span class="line">           color = cols[cycleNums],showStackedColors =<span class="literal">TRUE</span>,</span><br><span class="line">           showGuides=<span class="literal">TRUE</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># now add the lines as layers</span></span><br><span class="line">data &lt;- window(timeseries, start = <span class="built_in">c</span>(startYears[ncycles], <span class="number">1</span>),</span><br><span class="line">               end = <span class="built_in">c</span>(startYears[<span class="number">2</span>] - <span class="number">1</span>, <span class="number">12</span>),</span><br><span class="line">               frequency = <span class="number">12</span>)</span><br><span class="line">l_layer_line(cyclesplot, x = <span class="number">1</span>:<span class="built_in">length</span>(data), y = data, color = cols[<span class="number">1</span>],</span><br><span class="line">             label = paste(start(data)[<span class="number">1</span>], end(data)[<span class="number">1</span>], sep=<span class="string">&quot;-&quot;</span>), indx = <span class="string">&quot;end&quot;</span>)</span><br><span class="line">l_layer_line(p, x = time(data), y = data, color = cols[<span class="number">1</span>],</span><br><span class="line">             label = paste(start(data)[<span class="number">1</span>], end(data)[<span class="number">1</span>], sep=<span class="string">&quot;-&quot;</span>), indx = <span class="string">&quot;end&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">2</span>:(ncycles - <span class="number">1</span>))&#123;</span><br><span class="line">  data &lt;- window(timeseries, start = <span class="built_in">c</span>(startYears[i], <span class="number">1</span>),</span><br><span class="line">                 end = <span class="built_in">c</span>(startYears[i+<span class="number">1</span>] - <span class="number">1</span>, <span class="number">12</span>),</span><br><span class="line">                 frequency = <span class="number">12</span>)</span><br><span class="line">  l_layer_line(cyclesplot, x = <span class="number">1</span>:<span class="built_in">length</span>(data), y = data, color = cols[i],</span><br><span class="line">               label = paste(start(data)[<span class="number">1</span>], end(data)[<span class="number">1</span>], sep=<span class="string">&quot;-&quot;</span>),</span><br><span class="line">               indx = <span class="string">&quot;end&quot;</span>)</span><br><span class="line">  l_layer_line(p, x = time(data), y = data, color = cols[i],</span><br><span class="line">               label = paste(start(data)[<span class="number">1</span>], end(data)[<span class="number">1</span>], sep=<span class="string">&quot;-&quot;</span>),</span><br><span class="line">               indx = <span class="string">&quot;end&quot;</span>)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># tidy up the last partial cycles</span></span><br><span class="line">data &lt;- window(timeseries, start = <span class="built_in">c</span>(startYears[ncycles], <span class="number">1</span>),</span><br><span class="line">               end = end(timeseries),</span><br><span class="line">               frequency = <span class="number">12</span>)</span><br><span class="line">l_layer_line(p, x = time(data), y = data, color = cols[ncycles],</span><br><span class="line">             label = paste(start(data)[<span class="number">1</span>], end(data)[<span class="number">1</span>], sep=<span class="string">&quot;-&quot;</span>),</span><br><span class="line">             indx = <span class="string">&quot;end&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="time-series-decomposition"><a href="#time-series-decomposition" class="headerlink" title="time series decomposition"></a>time series decomposition</h2><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">plot(co2)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># explore it interactively</span></span><br><span class="line">library(loon)</span><br><span class="line">getDates &lt;- <span class="keyword">function</span>(ts)&#123;</span><br><span class="line">  mapply(FUN = <span class="keyword">function</span>(x,y) &#123;paste(x,y)&#125;, <span class="built_in">floor</span>(time(co2)),</span><br><span class="line">         <span class="built_in">month.name</span>)</span><br><span class="line">&#125;</span><br><span class="line">data = co2</span><br><span class="line"></span><br><span class="line">p &lt;- l_plot(data, title=<span class="string">&quot;Muna loa atmospheric CO2&quot;</span>,</span><br><span class="line">            ylabel = <span class="string">&quot;concentration (ppm)&quot;</span>,</span><br><span class="line">            xlabel = <span class="string">&quot;Date&quot;</span>, linkingGroup = <span class="string">&quot;co2&quot;</span>, color = <span class="string">&quot;grey20&quot;</span>,</span><br><span class="line">            showScales = <span class="literal">TRUE</span>, showGuides = <span class="literal">TRUE</span>,</span><br><span class="line">            itemLabel = getDates(data), showItemLabels = <span class="literal">TRUE</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># another way to get the x and y coordinates</span></span><br><span class="line">xy.raw &lt;- xy.coords(data)</span><br><span class="line">l_layer_line(p, x = xy.raw$x, y = xy.raw$y,</span><br><span class="line">             clor = <span class="string">&quot;grey50&quot;</span>, linewidth = <span class="number">3</span>, index = <span class="string">&quot;end&quot;</span>,</span><br><span class="line">             label = <span class="string">&quot;connect the dots&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># a couple of helper functions</span></span><br><span class="line">getYears &lt;- <span class="keyword">function</span>(ts) &#123;unique(<span class="built_in">floor</span>(time(ts)))&#125;</span><br><span class="line">getYears(co2)</span><br><span class="line"></span><br><span class="line"><span class="comment"># get the number of the month</span></span><br><span class="line"><span class="comment"># this will actually work more generally using frequency()</span></span><br><span class="line">getMonthNos &lt;- <span class="keyword">function</span>(ts)&#123;<span class="number">1</span>:frequency(ts)&#125;</span><br><span class="line">getMonthNos(co2)</span><br><span class="line"></span><br><span class="line"><span class="comment"># we can now computate the averages, first over all months for each year, and</span></span><br><span class="line"><span class="comment">#   second over all years for each month</span></span><br><span class="line">getAves &lt;- <span class="keyword">function</span>(x, by = <span class="string">&quot;year&quot;</span>) &#123;</span><br><span class="line">  years &lt;- getYears(x)</span><br><span class="line">  monthNos &lt;- getMonthNos(x)</span><br><span class="line">  nyears &lt;- <span class="built_in">length</span>(years)</span><br><span class="line">  nmonths &lt;- <span class="built_in">length</span>(monthNos)</span><br><span class="line">  <span class="keyword">if</span> (! (by %in% <span class="built_in">c</span>(<span class="string">&quot;year&quot;</span>, <span class="string">&quot;month&quot;</span>)))&#123;</span><br><span class="line">    stop(<span class="string">&quot;unkwown value for by = &quot;</span>,</span><br><span class="line">         by,</span><br><span class="line">         <span class="string">&quot;; by must be one of &#123;\&quot;year\&quot;,\&quot;month\&quot;&#125;&quot;</span>)</span><br><span class="line">         &#125;</span><br><span class="line">  <span class="keyword">if</span> (by == <span class="string">&quot;year&quot;</span>) &#123;</span><br><span class="line">    aves &lt;- sapply(<span class="number">1</span>:nyears,</span><br><span class="line">                   FUN = <span class="keyword">function</span>(i) &#123;</span><br><span class="line">                     mean(window(x,</span><br><span class="line">                                 start = <span class="built_in">c</span>(years[i], monthNos[<span class="number">1</span>]),</span><br><span class="line">                                 end = <span class="built_in">c</span>(years[i], monthNos[nmonths])))</span><br><span class="line">                   &#125;)</span><br><span class="line">    aves &lt;- data.frame(aves = aves, row.names = years)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    aves &lt;- sapply(<span class="number">1</span>:nmonths,</span><br><span class="line">                   FUN = <span class="keyword">function</span>(i) &#123;</span><br><span class="line">                     mean(window(x,</span><br><span class="line">                                 start = <span class="built_in">c</span>(years[<span class="number">1</span>], monthNos[i]),</span><br><span class="line">                                 end = <span class="built_in">c</span>(years[nyears], monthNos[i]),</span><br><span class="line">                                 frequency = <span class="number">1</span>))</span><br><span class="line">                   &#125;)</span><br><span class="line">    aves &lt;- data.frame(aves = aves, row.names = <span class="built_in">month.abb</span>[monthNos])</span><br><span class="line">  &#125;</span><br><span class="line">  aves</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">head(getAves(co2, by = <span class="string">&quot;month&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># plot them</span></span><br><span class="line">plot(getYears(co2), getAves(co2, by = <span class="string">&quot;year&quot;</span>)$aves,</span><br><span class="line">     type = <span class="string">&quot;l&quot;</span>, xlab = <span class="string">&quot;Year&quot;</span>,</span><br><span class="line">     ylab = <span class="string">&quot;annual average over ll months&quot;</span>)</span><br><span class="line">plot(getAves(co2, by = <span class="string">&quot;month&quot;</span>)$aves,</span><br><span class="line">     type = <span class="string">&quot;l&quot;</span>, xlab = <span class="string">&quot;Year&quot;</span>,xaxt = <span class="string">&quot;n&quot;</span>,</span><br><span class="line">     ylab = <span class="string">&quot;monthly average over all years&quot;</span>)</span><br><span class="line">axis(<span class="number">1</span>,at = getMonthNos(co2), labels = <span class="built_in">month.abb</span>) <span class="comment">#month.abb: month abbreviations</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># reduce the white space between plots</span></span><br><span class="line">savePar &lt;- par(mfrow = <span class="built_in">c</span>(<span class="number">3</span>,<span class="number">1</span>),</span><br><span class="line">               mar = <span class="built_in">c</span>(<span class="number">2</span>,<span class="number">4</span>,<span class="number">1.5</span>,<span class="number">0.5</span>), oma = <span class="built_in">rep</span>(<span class="number">0.1</span>,<span class="number">4</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># decompositions of a time series</span></span><br><span class="line"><span class="comment"># the default decomposition is an additive one</span></span><br><span class="line">co2_decomp &lt;- decompose(co2)</span><br><span class="line"><span class="comment"># having structure</span></span><br><span class="line">str(co2_decomp)</span><br><span class="line">plot(co2_decomp)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># we can see how the local fits behave as we change various elements</span></span><br><span class="line"><span class="comment">#  xloc is the location where we are fitting</span></span><br><span class="line"><span class="comment">#  proportionRange stands for proportion of the x range, which determine</span></span><br><span class="line"><span class="comment">#     what is meant by local</span></span><br><span class="line"><span class="comment"># all weights are 1 or zero</span></span><br><span class="line"></span><br><span class="line">ourdata &lt;- data.frame(x = xy.raw$x, y = xy.raw$y)</span><br><span class="line">unitWeight &lt;- <span class="keyword">function</span>(xloc, x, proportionRange = <span class="number">0.5</span>)&#123;</span><br><span class="line">  xhalf &lt;- diff(<span class="built_in">range</span>(x)) * proportionRange/<span class="number">2</span></span><br><span class="line">  wts &lt;- <span class="built_in">rep</span>(<span class="number">0</span>, <span class="built_in">length</span>(x))</span><br><span class="line">  wts[x &lt; xloc + xhalf &amp; x &gt; xloc - xhalf] &lt;- <span class="number">1</span></span><br><span class="line">  wts</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># we have our data with x and y as before and need weights</span></span><br><span class="line">xloc &lt;- 0.5</span><br><span class="line">weights &lt;- unitWeight(xloc, xy.raw$x, proportionRange = <span class="number">1</span>)</span><br><span class="line"><span class="comment"># and use thes to fit a line</span></span><br><span class="line"></span><br><span class="line">fitw &lt;- lm(y~x, data = ourdata, weights = weights)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># use a weight function shaped like a Gaussian</span></span><br><span class="line">GaussianWeight &lt;- <span class="keyword">function</span>(xloc, x, h = <span class="number">1</span>)&#123;</span><br><span class="line">  <span class="comment"># normal density</span></span><br><span class="line">  dnorm(x, mean = xloc, sd = h)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># the function that will produce a smooth cureve from minimizing the locally</span></span><br><span class="line"><span class="comment">#   weighted sum of squares, or LoWeSS.</span></span><br><span class="line"><span class="comment"># it requires:</span></span><br><span class="line"><span class="comment">#   x,y:  - the data</span></span><br><span class="line"><span class="comment">#   xloc : - x locations at which the estimate is to be calculated</span></span><br><span class="line"><span class="comment">#   span: - a bandwidth</span></span><br><span class="line"><span class="comment">#   weightFn: - a weigthed function ,default will be GaussWeight</span></span><br><span class="line"><span class="comment">#   nloc: - number of equi-spaced locations at which estimate will be calculated</span></span><br><span class="line"><span class="comment">#               if xloc = NULL, ignored otherwise</span></span><br><span class="line"></span><br><span class="line">LoWeSS &lt;- <span class="keyword">function</span>(x, y, xloc = <span class="literal">NULL</span>, span = <span class="number">0.1</span>, weightFn = GaussianWeight,</span><br><span class="line">                   nlocs = <span class="number">200</span>)&#123;</span><br><span class="line">  data &lt;- data.frame(x= x, y = y)</span><br><span class="line">  xrange &lt;- extendrange(x)</span><br><span class="line">  bandwidth &lt;- (diff(xrange)*span)/<span class="number">4</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">is.null</span>(xloc))&#123;</span><br><span class="line">    xloc &lt;- seq(xrange[<span class="number">1</span>], xrange[<span class="number">2</span>], length.out = nlocs)</span><br><span class="line">  &#125;</span><br><span class="line">  estimates &lt;- vector(<span class="string">&quot;numeric&quot;</span>, <span class="built_in">length</span> = <span class="built_in">length</span>(xloc))</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">1</span>:<span class="built_in">length</span>(xloc))&#123;</span><br><span class="line">    weights &lt;- weightFn(xloc[i], x, bandwidth)</span><br><span class="line">    fit &lt;- lm(y~x, data = data, weights = weights)</span><br><span class="line">    pred &lt;- predict(fit, newdata = data.frame(x= xloc[i]))</span><br><span class="line">    estimates[i] &lt;- pred</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment"># return the estimates</span></span><br><span class="line">  <span class="built_in">list</span>(x = xloc, y = estimates)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">x &lt;- xy.raw$x</span><br><span class="line">y &lt;- xy.raw$y</span><br><span class="line">smooth &lt;- LoWeSS(x,y, nlocs = <span class="number">1000</span>, span = <span class="number">0.75</span>)</span><br><span class="line">plot(x,y,col=<span class="string">&quot;grey50&quot;</span>, pch = <span class="number">19</span>, main = <span class="string">&quot;our data&quot;</span>, type = <span class="string">&quot;p&quot;</span>)</span><br><span class="line">lines(smooth$x, smooth$y, col = <span class="string">&quot;steelblue&quot;</span>, lwd = <span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># the data</span></span><br><span class="line">plot(x, y , col = <span class="string">&quot;grey50&quot;</span>, pch = <span class="number">19</span>, main = <span class="string">&quot;relating y to x&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># the LoWeSS estimate</span></span><br><span class="line">lines(smooth$x, smooth$y, col = <span class="string">&quot;steelblue&quot;</span>, lwd = <span class="number">3</span>)</span><br><span class="line"><span class="comment"># add the true mu(x)</span></span><br><span class="line">xordered &lt;- sort(x)</span><br><span class="line">library(stpm)</span><br><span class="line">lines(xordered, mu(xordered), col = <span class="string">&quot;firebrick&quot;</span>, lwd = <span class="number">3</span>, lty = <span class="number">2</span>)</span><br><span class="line">      <span class="comment"># mu function is in library(stpm)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># locally weigthed sums of squares</span></span><br><span class="line">fit &lt;- loess(y~x, data = ourdata)</span><br><span class="line">plot(x,y,col = <span class="string">&quot;grey50&quot;</span>, pch =<span class="number">19</span>, main = <span class="string">&quot;relating y to x&quot;</span>)  </span><br><span class="line"><span class="comment"># get the values predicted by the loess</span></span><br><span class="line">pred &lt;- predict(fit)</span><br><span class="line"><span class="comment"># get the order of the x</span></span><br><span class="line">ord &lt;- order(x)</span><br><span class="line">lines(x[ord], pred[ord], lwd = <span class="number">2</span>, col = <span class="string">&quot;steelblue&quot;</span>)  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># we could also reduce the span being used here (default is 0.75)</span></span><br><span class="line">fit_Large &lt;- loess(y~x, data = ourdata, span = <span class="number">0.15</span>)</span><br><span class="line">pred_Large &lt;- predict(fit_Large)</span><br><span class="line">plot(fit)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># using spans to decompose</span></span><br><span class="line"><span class="comment"># first fit the large span</span></span><br><span class="line">fit &lt;- loess(y~x, data = ourdata, span = <span class="number">0.75</span>)</span><br><span class="line"><span class="comment"># from the fit we extract the estimated residuals</span></span><br><span class="line">r_Large &lt;- fit_Large$residuals</span><br><span class="line"></span><br><span class="line"><span class="comment"># this is another data set that we can plot</span></span><br><span class="line">plot(x, r_Large, col = <span class="string">&quot;grey50&quot;</span>, pch =<span class="number">19</span>,</span><br><span class="line">     main = <span class="string">&quot;s_small fit of r_large on x&quot;</span>)</span><br><span class="line"><span class="comment"># and we can fit this with a smaller span</span></span><br><span class="line">data_resids &lt;- data.frame(r = r_Large, x = x)</span><br><span class="line">fit_small &lt;- loess(r~x, data = data_resids, span = <span class="number">0.2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># get the values predicted by the loess</span></span><br><span class="line">pred_small &lt;- predict(fit_small)</span><br><span class="line"><span class="comment"># need the order of x</span></span><br><span class="line">ord &lt;- order(x)</span><br><span class="line">lines(x[ord], pred_small[ord], lwd = <span class="number">2</span>, col = <span class="string">&quot;steelblue&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">r_Remains &lt;- fit_small$residuals</span><br><span class="line">data.remains &lt;- data.frame(r = r_Remains,  x= x)</span><br><span class="line">fit_Tiny &lt;- loess(r~x, data = data.remains, span = <span class="number">0.5</span>)</span><br><span class="line"><span class="comment"># get the values predicteed by the loess</span></span><br><span class="line">pred_Tiny &lt;- predict(fit_Tiny)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># putting together for the various fitted smooths we have adecomposition of the</span></span><br><span class="line"><span class="comment">#  observed values as</span></span><br><span class="line">opt &lt;- par(mfrow = <span class="built_in">c</span>(<span class="number">3</span>,<span class="number">1</span>), mar = <span class="built_in">c</span>(<span class="number">0</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">2</span>) + <span class="number">0.1</span>)</span><br><span class="line"></span><br><span class="line">plot(x[ord], pred_Large[ord], xlab = <span class="string">&quot;&quot;</span>, ylab = <span class="string">&quot;&quot;</span>, xaxt = <span class="string">&quot;n&quot;</span>,</span><br><span class="line">     col = <span class="string">&quot;grey50&quot;</span>, pch =<span class="number">19</span>, cex = <span class="number">0.5</span>, main = <span class="string">&quot;large span smooth&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># add a range of residuals rectangle</span></span><br><span class="line">xleft &lt;- 1.01</span><br><span class="line">xright &lt;- 1.02</span><br><span class="line">yDelta &lt;- sd(r_Remains)</span><br><span class="line">rectCol &lt;- adjustcolor(<span class="string">&quot;red&quot;</span>, <span class="number">0.5</span>)</span><br><span class="line">ymiddle &lt;- mean(pred_Large)</span><br><span class="line">rect(xleft, ymiddle - yDelta, xright, ymiddle+yDelta,</span><br><span class="line">     border = <span class="string">&quot;grey50&quot;</span>, col = rectCol)</span><br><span class="line">plot(x[ord], pred_small[ord], xlab = <span class="string">&quot;&quot;</span>, ylab = <span class="string">&quot;&quot;</span>, xaxt = <span class="string">&quot;n&quot;</span>,</span><br><span class="line">     col = <span class="string">&quot;grey50&quot;</span>, pch = <span class="number">19</span>, cex= <span class="number">0.5</span>, main = <span class="string">&quot;small span smooth&quot;</span>)</span><br><span class="line"><span class="comment"># add the same range rectangle</span></span><br><span class="line">ymiddle &lt;- mean(pred_small)</span><br><span class="line">rect(xleft, ymiddle - yDelta, xright, ymiddle+yDelta,</span><br><span class="line">     border = <span class="string">&quot;grey50&quot;</span>, col = rectCol)</span><br><span class="line"></span><br><span class="line">plot(x[ord], pred_small[ord], xlab = <span class="string">&quot;&quot;</span>, ylab = <span class="string">&quot;&quot;</span>, xaxt = <span class="string">&quot;n&quot;</span>,</span><br><span class="line">     col = <span class="string">&quot;grey50&quot;</span>, pch = <span class="number">19</span>, cex= <span class="number">0.5</span>, main = <span class="string">&quot;remaining residuals&quot;</span>)</span><br><span class="line">ablines(h =<span class="number">0</span>, col = <span class="string">&quot;lightgrey&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># add the same range rectangle</span></span><br><span class="line">ymiddle &lt;- mean(r_Remains)</span><br><span class="line">rect(xleft, ymiddle - yDelta, xright, ymiddle+yDelta,</span><br><span class="line">     border = <span class="string">&quot;grey50&quot;</span>, col = rectCol)</span><br><span class="line"></span><br><span class="line">rect(xleft, ybottom, xright, ytop, border = <span class="string">&quot;grey50&quot;</span>, col = rectCol)</span><br><span class="line">par(opt)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># the seasonal components now vary a little more over the years</span></span><br><span class="line"><span class="comment"># there are similar arguements t.window and t.degree for the loess smoothing of the</span></span><br><span class="line"><span class="comment"># trend component</span></span><br><span class="line">plot(stl(co2, s.window = <span class="number">7</span>, s.degree = <span class="number">1</span>, t.degree = <span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">library(<span class="string">&quot;loon&quot;</span>)</span><br><span class="line">l_plot(stl(co2, s.window = <span class="number">7</span>, s.degree = <span class="number">1</span>, t.degree = <span class="number">1</span>))</span><br><span class="line">demo(<span class="string">&quot;l_timeseries&quot;</span>)</span><br></pre></td></tr></table></figure>

<h2 id="transforming-data"><a href="#transforming-data" class="headerlink" title="transforming data"></a>transforming data</h2><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">x &lt;- <span class="built_in">round</span>(rnorm(<span class="number">10</span>), digits = <span class="number">2</span>)</span><br><span class="line"><span class="comment"># the ranks (in order smallest to largest)</span></span><br><span class="line">rank(x)</span><br><span class="line"></span><br><span class="line"><span class="comment"># the family of power transformation</span></span><br><span class="line">powerfun &lt;- <span class="keyword">function</span>(x, alpha)&#123;</span><br><span class="line">  <span class="keyword">if</span> (alpha == <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="built_in">log</span>(x)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    (x^alpha - <span class="number">1</span>)/alpha</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">library(loon.data); data(SAheart, package = <span class="string">&quot;loon.data&quot;</span>)</span><br><span class="line">library(qqtest)</span><br><span class="line">data &lt;- SAheart$sbp</span><br><span class="line">savePar &lt;- par(mfrow = <span class="built_in">c</span>(<span class="number">1</span>,<span class="number">2</span>))</span><br><span class="line"><span class="comment"># note alpha is in descending order here</span></span><br><span class="line"><span class="keyword">for</span> (alpha <span class="keyword">in</span> <span class="built_in">c</span>(<span class="number">2</span>,<span class="number">1</span>,<span class="number">1</span>/<span class="number">2</span>,<span class="number">1</span>/<span class="number">3</span>,<span class="number">0</span>,-<span class="number">1</span>/<span class="number">3</span>,-<span class="number">1</span>/<span class="number">2</span>,-<span class="number">1</span>,-<span class="number">2</span>)) &#123;</span><br><span class="line">  newdata &lt;- powerfun(data, alpha)</span><br><span class="line">  dens &lt;- density(newdata, bw = <span class="string">&quot;SJ&quot;</span>)</span><br><span class="line">  h &lt;- hist(newdata, plot = <span class="literal">FALSE</span>)</span><br><span class="line">  ylim &lt;- extendrange(<span class="built_in">c</span>(dens$y, h$density))</span><br><span class="line">  plot(h, ylim = ylim, freq = <span class="literal">FALSE</span>, yaxt = <span class="string">&quot;n&quot;</span>, xaxt = <span class="string">&quot;n&quot;</span>,</span><br><span class="line">       main = <span class="string">&quot;SAheart&quot;</span>, xlab = paste0(<span class="string">&quot;(sbp)^&quot;</span>, <span class="built_in">round</span>(alpha, digits = <span class="number">2</span>)),</span><br><span class="line">       ylab =<span class="string">&quot;&quot;</span>)</span><br><span class="line">  polygon(dens, col = adjustcolor(<span class="string">&quot;grey50&quot;</span>, <span class="number">0.3</span>))</span><br><span class="line">  qqtest(newdata, main = <span class="string">&quot;normal qqplot&quot;</span>, legend = <span class="literal">FALSE</span>, cex = <span class="number">0.5</span>)</span><br><span class="line">&#125;</span><br><span class="line">par(savePar)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># an interactive exploration of chnaging alpha</span></span><br><span class="line">library(loon)</span><br><span class="line"><span class="comment"># something to scale the data</span></span><br><span class="line">scale01 &lt;- <span class="keyword">function</span>(x) &#123;</span><br><span class="line">  (x - <span class="built_in">min</span>(x))/diff(<span class="built_in">range</span>(x) + <span class="number">1</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">## setting up the interactive plots that will respond to chaning power</span></span><br><span class="line">power &lt;- <span class="keyword">function</span>(x, xlab = <span class="literal">NULL</span>, labels = <span class="literal">NULL</span>, lowest = -<span class="number">5</span>, highest = <span class="number">5</span>, ...)&#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">is.null</span>(xlab)) &#123;xlab &lt;- <span class="string">&quot;x&quot;</span>&#125;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">is.null</span>(labels)) &#123;labels &lt;- <span class="built_in">as.character</span>(<span class="number">1</span>:<span class="built_in">length</span>(x))&#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">#scale and order the x values</span></span><br><span class="line">  xs &lt;- scale01(x)</span><br><span class="line">  ord &lt;- order(xs)</span><br><span class="line">  xs &lt;- xs[ord]</span><br><span class="line">  labels &lt;- labels[ord]</span><br><span class="line">  <span class="comment"># normal quantiles</span></span><br><span class="line">  qs &lt;- qnorm(ppoints(<span class="built_in">length</span>(x)))</span><br><span class="line">  <span class="comment"># qqplot</span></span><br><span class="line">  p &lt;- l_plot(x = qs, y = xs, itemLabel = labels,</span><br><span class="line">              ylabel = xlab, xlab = <span class="string">&quot;Gaussian qunatiles&quot;</span>, ...)</span><br><span class="line">  <span class="comment"># now we iwll build a more complex interface a histogram plus a slider for the</span></span><br><span class="line">  <span class="comment"># power</span></span><br><span class="line">  <span class="comment"># the top level window</span></span><br><span class="line">  tw &lt;- tktoplevel()</span><br><span class="line">  <span class="comment"># create and add the histogram to the top window</span></span><br><span class="line">  hx &lt;- l_hist(xs, xlabel = xlab, yshows = <span class="string">&quot;density&quot;</span>, parent = tw, ...)</span><br><span class="line">  <span class="comment"># now create a slider whose value will be the alpha of the power</span></span><br><span class="line">  <span class="comment">#  transformation</span></span><br><span class="line">  alpha_x &lt;- tclVar(<span class="string">&quot;1&quot;</span>)</span><br><span class="line">  <span class="comment"># slider for x</span></span><br><span class="line">  sx &lt;- tkscale(tw, orient = <span class="string">&#x27;horizontal&#x27;</span>, label = <span class="string">&#x27;power x&#x27;</span>,</span><br><span class="line">                variable = alpha_x, from = lowest, to = highest,</span><br><span class="line">                resolution = <span class="number">0.1</span>)</span><br><span class="line">  <span class="comment"># pack the histogram and slider into the same window</span></span><br><span class="line">  tkpack(sx, fill = <span class="string">&#x27;x&#x27;</span>, side = <span class="string">&#x27;bottom&#x27;</span>)</span><br><span class="line">  tkpack(hx, fill = <span class="string">&#x27;both&#x27;</span>, expand = <span class="literal">TRUE</span>)</span><br><span class="line"></span><br><span class="line">  <span class="comment"># now we need an update function to evaluate when the slider changes</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># this is the power function that will change with the slider</span></span><br><span class="line">  update &lt;- <span class="keyword">function</span>(...)&#123;</span><br><span class="line">    alphax &lt;- <span class="built_in">as.numeric</span>(tclvalue(alpha_x))</span><br><span class="line">    newx &lt;- sort(scale01(powerfun(x,alphax)))</span><br><span class="line">    <span class="comment"># update the label</span></span><br><span class="line">    xlabel &lt;- <span class="keyword">if</span>(alphax ==<span class="number">0</span>)&#123;paste0(<span class="string">&quot;log(&quot;</span>,xlab,<span class="string">&quot;)&quot;</span>)</span><br><span class="line">      &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">          <span class="keyword">if</span> (alphax == <span class="number">1</span>)&#123;</span><br><span class="line">            xlab</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            paste0(xlab, <span class="string">&quot;^&quot;</span>, alphax)</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    xrng &lt;- <span class="built_in">range</span>(newx)</span><br><span class="line">    <span class="comment"># update the qqplot p</span></span><br><span class="line">    l_configure(p, y = newx, ylabel = xlabel, xlabel = <span class="string">&quot;Gaussian quantiles&quot;</span>)</span><br><span class="line">    <span class="comment"># update the histogram</span></span><br><span class="line">    binwidthx &lt;- hx[<span class="string">&#x27;binwidth&#x27;</span>]</span><br><span class="line">    l_configure(hx, x = newx, binwidth = binwidthx, xlabel = xlabel)</span><br><span class="line">    l_scaleto_world(hx)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment"># configure the scale to call &quot;update&quot;</span></span><br><span class="line">  tkconfigure(sx, command = update)</span><br><span class="line">  <span class="built_in">invisible</span>(p)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">with(SAheart,</span><br><span class="line">     p &lt;- power(x= sbp, labels = paste(<span class="string">&quot;Patient&quot;</span>, rownames(SAheart)),</span><br><span class="line">                linkingGroup = <span class="string">&quot;SAheart&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># turkey&#x27;s ladder of power transformation</span></span><br><span class="line">data &lt;- rchisq(<span class="number">200</span>, <span class="number">2</span>)</span><br><span class="line">power(data) <span class="comment"># Create a Power Link Object</span></span><br><span class="line"><span class="comment"># if it is concenrated on lower values, then move the power lower on the ladder</span></span><br><span class="line"><span class="comment"># otherwise, in the reverse order</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># power transformation</span></span><br><span class="line">library(MASS)</span><br><span class="line">data(mammals)</span><br><span class="line"></span><br><span class="line"><span class="comment"># straightening plots via power transformation</span></span><br><span class="line">power_xy &lt;- <span class="keyword">function</span>(x, y = <span class="literal">NULL</span>, xlab = <span class="literal">NULL</span>, ylab = <span class="literal">NULL</span>,</span><br><span class="line">                     from= <span class="number">5</span>, to = -<span class="number">5</span>,...)&#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">is.null</span>(xlab)) &#123;xlab &lt;- <span class="string">&quot;x&quot;</span>&#125;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">is.null</span>(ylab)) &#123;ylab &lt;- <span class="string">&quot;y&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">  scale01 &lt;- <span class="keyword">function</span>(x) &#123;</span><br><span class="line">    (x - <span class="built_in">min</span>(x))/diff(<span class="built_in">range</span>(x) + <span class="number">1</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  tt &lt;- tktoplevel() <span class="comment"># this is about dynamic graphic in r (你可以看一下)</span></span><br><span class="line">  <span class="comment"># https://www.stat.berkeley.edu/~spector/s244/Dyngraph.html</span></span><br><span class="line">  <span class="comment"># The basic widget in Tk is the frame, which is essentially a container for</span></span><br><span class="line">  <span class="comment"># any other widgets you wish to use.</span></span><br><span class="line">  <span class="comment"># You can have as many frames as you want, but each individual entity which</span></span><br><span class="line">  <span class="comment"># appears on the screen must be in a &quot;top level&quot; frame,</span></span><br><span class="line">  <span class="comment"># created with the tktoplevel function.</span></span><br><span class="line">  <span class="comment"># When using Tk, you first create a widget (specifying its appearance, the</span></span><br><span class="line">  <span class="comment"># command to be executed when the widget is activated, etc.), and then you</span></span><br><span class="line">  <span class="comment"># specify how it should appear in its parent frame. While Tk provides a number</span></span><br><span class="line">  <span class="comment"># of different schemes for achieving this, we&#x27;ll discuss the technique known as</span></span><br><span class="line">  <span class="comment"># &quot;packing&quot;. The basic idea is to group together widgets (and accompanying</span></span><br><span class="line">  <span class="comment"># labels, if appropriate) into a series of frames, and then to call the tkpack</span></span><br><span class="line">  <span class="comment"># function to put the widgets in the frames, then to finally pack the frames</span></span><br><span class="line">  <span class="comment"># into a main frame which is contained in a top-level widget</span></span><br><span class="line">  <span class="comment"># By default, objects are backed into a frame from top to bottom, with each</span></span><br><span class="line">  <span class="comment"># object being centered within its parent frame. You can control how widgets</span></span><br><span class="line">  <span class="comment"># get packed into a frame by the order in which you call tkpack, and the</span></span><br><span class="line">  <span class="comment"># optional side= argument which can take the values &quot;left&quot;, &quot;right&quot;, &quot;top&quot;</span></span><br><span class="line">  <span class="comment"># or &quot;bottom&quot;</span></span><br><span class="line">  xs &lt;- scale01(x)</span><br><span class="line">  ys &lt;- scale01(y)</span><br><span class="line"></span><br><span class="line">  <span class="comment"># scatterplot</span></span><br><span class="line">  p &lt;- l_plot(x= xs, y = ys, xlabel = xlab, ylabel = ylab,</span><br><span class="line">              parent = tt,...)</span><br><span class="line">  <span class="comment"># a valid Tk parent widget path. When the parent widget is specified (i.e.</span></span><br><span class="line">  <span class="comment">#   not NULL) then the plot widget needs to be placed using some geometry</span></span><br><span class="line">  <span class="comment">#   manager like tkpack or tkplace in order to be displaye</span></span><br><span class="line">  fit &lt;- lm(ys~xs)</span><br><span class="line">  <span class="comment"># layer a fitted line</span></span><br><span class="line">  xrng &lt;- <span class="built_in">range</span>(xs)</span><br><span class="line">  yhat &lt;- predict(fit, data.frame(xs = xrng))</span><br><span class="line">  line &lt;- l_layer_line(p, x= xrng, y = yhat, linewidth = <span class="number">2</span>, index = <span class="string">&quot;end&quot;</span>)</span><br><span class="line"></span><br><span class="line">  <span class="comment"># histogram on each</span></span><br><span class="line">  hx &lt;- l_hist(xs, xlabel = xlab, yshows = <span class="string">&quot;density&quot;</span>)</span><br><span class="line"></span><br><span class="line">  <span class="comment"># setting up separate sliders for each power transformation</span></span><br><span class="line">  alpha_x &lt;- tclVar(<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">  alpha_y &lt;- tclVar(<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">  sx &lt;- tkscale(tt, orient = <span class="string">&#x27;vertical&#x27;</span>, label = <span class="string">&#x27;power x&#x27;</span>, variable = alpha_x,</span><br><span class="line">                from = from, to = to, resoluation = <span class="number">0.1</span>)</span><br><span class="line">  sy &lt;- tkscale(tt, orient = <span class="string">&#x27;vertical&#x27;</span>, label = <span class="string">&#x27;power x&#x27;</span>, variable = alpha_y,</span><br><span class="line">                from = from, to = to, resoluation = <span class="number">0.1</span>)</span><br><span class="line">  tkpack(sy, fill = <span class="string">&#x27;y&#x27;</span>, side = <span class="string">&#x27;right&#x27;</span>)</span><br><span class="line">  tkpack(p, fill = <span class="string">&#x27;both&#x27;</span>, expand = <span class="literal">TRUE</span>)</span><br><span class="line"></span><br><span class="line">  update &lt;- <span class="keyword">function</span>(...) &#123;</span><br><span class="line">    alphax &lt;- <span class="built_in">as.numeric</span>(tclvalue(alpha_x))</span><br><span class="line">    alphay &lt;- <span class="built_in">as.numeric</span>(tclvalue(alpha_y))</span><br><span class="line">    newx &lt;- scale01(powerfun(x, alphax))</span><br><span class="line">    newy &lt;- scale01(powerfun(y, alphay))</span><br><span class="line">    xlabel &lt;- <span class="keyword">if</span> (alphax == <span class="number">0</span>) &#123;paste0(<span class="string">&quot;log(&quot;</span>, xlab,<span class="string">&quot;)&quot;</span>)&#125; <span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (alphax== <span class="number">1</span>) &#123;xlab&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        paste0(xlab, <span class="string">&quot;^&quot;</span>, alphax)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ylabel &lt;- <span class="keyword">if</span> (alphay == <span class="number">0</span>) &#123;paste0(<span class="string">&quot;log(&quot;</span>, ylab,<span class="string">&quot;)&quot;</span>)&#125; <span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (alphay== <span class="number">1</span>) &#123;ylab&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        paste0(ylab, <span class="string">&quot;^&quot;</span>, alphay)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"># fit the line to the new data</span></span><br><span class="line">    fit.temp &lt;- lm(newy~newx)</span><br><span class="line">    xrng &lt;- <span class="built_in">range</span>(newx)</span><br><span class="line">    <span class="comment">## get the fitted line</span></span><br><span class="line">    yhat &lt;- predict(fit.temp, data.frame(newx=xrng))</span><br><span class="line">    <span class="comment"># update the line values</span></span><br><span class="line">    l_configure(line, y= yhat, x=xrng)</span><br><span class="line">    <span class="comment"># reconfigure the points</span></span><br><span class="line">    l_configure(p, x = newx, y= newy, xlabel = xlabel, ylabel = ylabel)</span><br><span class="line">    <span class="comment"># and the histogram</span></span><br><span class="line">    binwidthx &lt;- hx[<span class="string">&#x27;binwidth&#x27;</span>]</span><br><span class="line">    binwidthy &lt;- hx[<span class="string">&#x27;binwidth&#x27;</span>]</span><br><span class="line">    l_configure(hx, x = newx, binwidth = binwidth,</span><br><span class="line">                xlabel = xlabel)</span><br><span class="line">    l_scaleto_world(hx) <span class="comment">#Change Plot Region to Display All Plot Data</span></span><br><span class="line">    l_configure(hy, x = newy,</span><br><span class="line">                binwidth = binwidthy,</span><br><span class="line">                xlabel = ylabel)</span><br><span class="line">    l_scaleto_world(hy)</span><br><span class="line">  &#125;</span><br><span class="line"> <span class="comment"># add the update functions to the sliders</span></span><br><span class="line">  tkconfigure(sx, commmand = update)</span><br><span class="line">  tkconfigure(sy, commmand = update)</span><br><span class="line">  invisbile(p)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="categorical-data-overview"><a href="#categorical-data-overview" class="headerlink" title="categorical data overview"></a>categorical data overview</h2><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">library(loon)</span><br><span class="line">areas &lt;- unique(olive[,<span class="string">&quot;Area&quot;</span>])</span><br><span class="line">nAreas &lt;- <span class="built_in">length</span>(areas)</span><br><span class="line">counts &lt;- <span class="built_in">rep</span>(<span class="number">0</span>, nAreas)</span><br><span class="line">regions &lt;- <span class="built_in">c</span>()</span><br><span class="line"><span class="comment"># construct the dataset</span></span><br><span class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">1</span>:nAreas) &#123;</span><br><span class="line">  counts[i] &lt;- <span class="built_in">sum</span>(olive[,<span class="string">&quot;Area&quot;</span>] == areas[i])</span><br><span class="line">  regions &lt;- <span class="built_in">c</span>(regions, unique(olive[olive[,<span class="string">&quot;Area&quot;</span>] == areas[i], <span class="string">&quot;Region&quot;</span>]))</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># turn regions into a factor with the proper names</span></span><br><span class="line">regions &lt;- as.factor(levels(olive[,<span class="string">&quot;Region&quot;</span>])[regions])</span><br><span class="line"><span class="comment"># our constructed dataset of counts</span></span><br><span class="line">oliveOilCounts &lt;- data.frame(Region = regions, Area = areas, count= counts)</span><br><span class="line"></span><br><span class="line">library(treemap)</span><br><span class="line">treemap(oliveOilCounts, index = <span class="built_in">c</span>(<span class="string">&quot;Region&quot;</span>, <span class="string">&quot;Area&quot;</span>), vSize = <span class="string">&quot;count&quot;</span>) <span class="comment"># vsize could be any variate</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># could construct one interactively</span></span><br><span class="line">itreemap(oliveOilCounts, index = <span class="built_in">c</span>(<span class="string">&quot;Region&quot;</span>), vSize = <span class="string">&quot;count&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># another package that based on ggplot2 for graphics and employs an algorithm which</span></span><br><span class="line"><span class="comment"># tries to achive much squarer boxes</span></span><br><span class="line"></span><br><span class="line">library(treemapify)</span><br><span class="line">library(ggplot2)</span><br><span class="line">treeMapPlot &lt;- ggplot(oliveOilCounts, aes(area = count, fill = Region, <span class="comment"># colour by region</span></span><br><span class="line">                                          label = Area, subgroup = Region))</span><br><span class="line">treeMapPlot + geom_treemap() + geom_treemap_text() +</span><br><span class="line">  geom_treemap_subgroup_border() + geom_treemap_subgroup_text()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># alternatively, the coordinates of the squares can be had via the treemapify(...)</span></span><br><span class="line"><span class="comment"># function</span></span><br><span class="line">library(treemapify)</span><br><span class="line"><span class="comment"># alternatively</span></span><br><span class="line">treeMapCoordinates &lt;- treemapify(oliveOilCounts, area = <span class="string">&quot;count&quot;</span>,</span><br><span class="line">                                   subgroup = <span class="string">&quot;Region&quot;</span>)</span><br><span class="line">head(treeMapCoordinates)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># non-nested data - venneuler package</span></span><br><span class="line">library(venneuler)  <span class="comment"># 姐，这个我不准备run了，因为这个要下载java里的jdk， 还有rstudio</span></span><br><span class="line"><span class="comment"># 里的rjava和vennecular， 我不想下载了</span></span><br><span class="line">ve &lt;- venneuler(<span class="built_in">c</span>(A=<span class="number">1</span>, B=<span class="number">1</span>, <span class="string">&quot;A&amp;B&quot;</span> = <span class="number">1</span>))</span><br><span class="line">plot(ve)</span><br><span class="line"></span><br><span class="line">HairEye &lt;- apply(HairEyeColor, <span class="number">1</span>:<span class="number">2</span>, <span class="built_in">sum</span>)</span><br><span class="line">library(eikosograms)</span><br><span class="line">eikos(y = <span class="string">&quot;Hair&quot;</span>, x = <span class="string">&quot;Eye&quot;</span>, data = HairEye, xaxs = <span class="literal">FALSE</span>, yaxs = <span class="literal">FALSE</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="categorical-data"><a href="#categorical-data" class="headerlink" title="categorical data"></a>categorical data</h2><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment">#######################################################</span></span><br><span class="line"><span class="comment"># categorical data</span></span><br><span class="line"><span class="comment">#######################################################</span></span><br><span class="line">city &lt;- <span class="built_in">c</span>(<span class="string">&quot;Kitchener&quot;</span>, <span class="string">&quot;Waterloo&quot;</span>)</span><br><span class="line">housing &lt;- <span class="built_in">c</span>(<span class="string">&quot;House&quot;</span>, <span class="string">&quot;Apartment&quot;</span>, <span class="string">&quot;Residence&quot;</span>)</span><br><span class="line"><span class="comment"># fake data</span></span><br><span class="line">counts &lt;- rpois(<span class="number">6</span>, lambda = <span class="number">50</span>)</span><br><span class="line"><span class="comment"># arranged in a rectangular array</span></span><br><span class="line">vacancy &lt;- matrix(counts, nrow = <span class="built_in">length</span>(city), ncol = <span class="built_in">length</span>(housing),</span><br><span class="line">                  byrow = <span class="literal">TRUE</span>, <span class="built_in">dimnames</span> = <span class="built_in">list</span>(city = city, housing = housing))</span><br><span class="line"><span class="comment"># coereced to be an object of class table</span></span><br><span class="line">vacancy &lt;- as.table(vacancy)</span><br><span class="line">vacancy</span><br><span class="line"><span class="comment"># creating a multi-way table</span></span><br><span class="line">term &lt;- <span class="built_in">c</span>(<span class="string">&quot;Fall&quot;</span>, <span class="string">&quot;Winter&quot;</span>, <span class="string">&quot;Spring&quot;</span>)</span><br><span class="line"><span class="comment"># more fake counts</span></span><br><span class="line">counts &lt;- seq(from = <span class="number">10</span>, to = <span class="number">180</span>, by = <span class="number">10</span>)</span><br><span class="line">vacancy &lt;- array(counts,</span><br><span class="line">                 <span class="built_in">dim</span> = <span class="built_in">c</span>(<span class="built_in">length</span>(city), <span class="built_in">length</span>(housing), <span class="built_in">length</span>(term)),</span><br><span class="line">                 <span class="built_in">dimnames</span> = <span class="built_in">list</span>(city = city, housing = housing, term = term))</span><br><span class="line">vacancy &lt;- as.table(vacancy)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># reordering variates in tables</span></span><br><span class="line"><span class="comment"># the array dimension permutation function aperm(..)</span></span><br><span class="line">aperm(vacancy, perm = <span class="built_in">c</span>(<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># construting tables from data</span></span><br><span class="line">library(loon.data)</span><br><span class="line">data(<span class="string">&quot;SAheart&quot;</span>, package = <span class="string">&quot;loon.data&quot;</span>)</span><br><span class="line">table(SAheart$chd, SAheart$famhist, dnn = <span class="built_in">c</span>(<span class="string">&quot;chd&quot;</span>, <span class="string">&quot;famhist&quot;</span>))</span><br><span class="line"><span class="comment"># by cross-tabulation (&quot;cross tabs or xtabs)</span></span><br><span class="line">xtabs(~chd + famhist, data = SAheart)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># collapsing dimensions (marginalizing, projecting)</span></span><br><span class="line"><span class="comment"># zero dimensional</span></span><br><span class="line">margin.table(HairEyeColor)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1 dimensional</span></span><br><span class="line">margin.table(HairEyeColor, margin = <span class="number">1</span>)</span><br><span class="line"><span class="comment"># 2 dimensioanl -- here margins 1 and 2 (&quot;hair&quot;, &quot;eye&quot;) are preserved</span></span><br><span class="line">margin.table(HairEyeColor, margin = <span class="built_in">c</span>(<span class="number">1</span>,<span class="number">2</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># note: except for 0 dimensional. there are the same as using apply with sum</span></span><br><span class="line">apply(HairEyeColor, MARGIN = <span class="number">1</span>, FUN = <span class="built_in">sum</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># adding sums to a table</span></span><br><span class="line"><span class="comment"># every margin is summed</span></span><br><span class="line">addmargins(HairEyeColor)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># just producing marginal sums over dimension 2(&quot;eye&quot;) values</span></span><br><span class="line"><span class="comment"># for each pair(i,k) pf remaining variates &quot;hair&quot; and &quot;sex</span></span><br><span class="line">addmargins(HairEyeColor, margin = <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># producing marginal sums over both dimensions 1 and 2 (&quot;hair&quot;, and &quot;eye&quot;)</span></span><br><span class="line">addmargins(HairEyeColor, margin = <span class="built_in">c</span>(<span class="number">1</span>,<span class="number">2</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># sums to proportions</span></span><br><span class="line"><span class="comment"># no margins fixed, just total.. single multinomial</span></span><br><span class="line"><span class="built_in">round</span>(prop.table(HairEyeColor), <span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># one margin is fiexed, (the theird here, i.e. Sex) is fixed,... as may multinomial</span></span><br><span class="line"><span class="comment">#  as in</span></span><br><span class="line"><span class="built_in">round</span>(prop.table(HairEyeColor, margin = <span class="number">3</span>),<span class="number">2</span>)</span><br><span class="line"><span class="comment"># probability models from tables</span></span><br><span class="line"><span class="comment"># easier to see with sums for a two way table</span></span><br><span class="line">HairEye &lt;- margin.table(HairEyeColor, margin = <span class="built_in">c</span>(<span class="number">1</span>,<span class="number">2</span>))</span><br><span class="line"><span class="comment"># sum of each table&#x27;s proportions must be one</span></span><br><span class="line"><span class="built_in">round</span>(prop.table(HairEye, margin = <span class="number">2</span>), <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">library(tidytable) <span class="comment"># provide an implementation of the rules we developed</span></span><br><span class="line"><span class="comment"># for table analysis</span></span><br><span class="line"></span><br><span class="line">tidytable(HairEyeColor)$table</span><br><span class="line"></span><br><span class="line">proportions &lt;- <span class="built_in">round</span>(prop.table(HairEye, margin = <span class="number">2</span>), <span class="number">2</span>)</span><br><span class="line">tidyproportions &lt;- tidytable(proportions)</span><br><span class="line">tidyproportions$proportions</span><br></pre></td></tr></table></figure>

<h2 id="categorical-modelling"><a href="#categorical-modelling" class="headerlink" title="categorical modelling"></a>categorical modelling</h2><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment">#######################################################</span></span><br><span class="line"><span class="comment"># categorical modelling - modelling and independence</span></span><br><span class="line"><span class="comment">#######################################################</span></span><br><span class="line">HairEye &lt;- margin.table(HairEyeColor, margin = <span class="built_in">c</span>(<span class="number">1</span>,<span class="number">2</span>))</span><br><span class="line">total &lt;- margin.table(HairEye)</span><br><span class="line">colsums &lt;- margin.table(HairEye, margin = <span class="number">2</span>)</span><br><span class="line">colsums</span><br><span class="line">rowsums &lt;- margin.table(HairEye, margin = <span class="number">1</span>)</span><br><span class="line">rowsums</span><br><span class="line">rowProbs &lt;- rowsums / total</span><br><span class="line">rowProbs</span><br><span class="line"><span class="comment"># Draw one sample for column 1</span></span><br><span class="line">rmultinom(n = <span class="number">1</span>, size = colsums[<span class="number">1</span>], prob = rowProbs)</span><br><span class="line"></span><br><span class="line"><span class="comment"># the function that generates a new table for fixed column totals</span></span><br><span class="line"><span class="comment">#   and given row probabilities</span></span><br><span class="line">generateCondTable &lt;- <span class="keyword">function</span>(columnSums = seq(<span class="number">100</span>, <span class="number">300</span>, <span class="number">100</span>),</span><br><span class="line">                              rowProbs = seq(<span class="number">0.1</span>,<span class="number">0.4</span>,<span class="number">0.1</span>),</span><br><span class="line">                              dnn = <span class="literal">NULL</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">is.null</span>(dnn)) &#123;</span><br><span class="line">    dnn &lt;- <span class="built_in">list</span>(Y = paste0(<span class="string">&quot;y_&quot;</span>, <span class="number">1</span>:<span class="built_in">length</span>(rowProbs)),</span><br><span class="line">               X = paste0(<span class="string">&quot;x_&quot;</span>, <span class="number">1</span>:<span class="built_in">length</span>(columnSums))</span><br><span class="line">               )</span><br><span class="line">  &#125;</span><br><span class="line"> nRows &lt;- <span class="built_in">length</span>(rowProbs)</span><br><span class="line"> nCols &lt;- <span class="built_in">length</span>(columnSums)</span><br><span class="line"> result &lt;- matrix(nrow = nRows, ncol = nCols)</span><br><span class="line"> <span class="keyword">for</span> (j <span class="keyword">in</span> <span class="number">1</span>:nCols)&#123;</span><br><span class="line">   result[,j] &lt;- rmultinom(n = <span class="number">1</span>, size = columnSums[j], prob = rowProbs)</span><br><span class="line"> &#125;</span><br><span class="line"> result &lt;- as.table(result)</span><br><span class="line"> <span class="built_in">dimnames</span>(result) &lt;- dnn</span><br><span class="line"> result</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># unconditional - NO fixed margin</span></span><br><span class="line">generateUncondTable &lt;- <span class="keyword">function</span>(total = <span class="number">1000</span>, colProbs = seq(<span class="number">0.1</span>, <span class="number">0.4</span>, <span class="number">0.1</span>),</span><br><span class="line">                                rowProbs = seq(<span class="number">0.4</span>, <span class="number">0.1</span>, -<span class="number">0.1</span>), dnn = <span class="literal">NULL</span>)&#123;</span><br><span class="line">  colSums &lt;- rmultinom(n=<span class="number">1</span>, size = total, prob = colProbs)</span><br><span class="line">  generateCondTable(columnSums = colSums, rowProbs = rowProbs, dnn = dnn)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># generating a new table under the hypothesis of independence , from an existing</span></span><br><span class="line"><span class="comment"># table of counts</span></span><br><span class="line">generateTable &lt;- <span class="keyword">function</span>(Table, y, x, conditionalTest = <span class="literal">TRUE</span>) &#123;</span><br><span class="line">  new_table &lt;- margin.table(Table, margin = <span class="built_in">c</span>(y,x))</span><br><span class="line">  <span class="comment">#get the marginal probabilities for the response variates</span></span><br><span class="line">  rowSums &lt;- margin.table(new_table, margin = y)</span><br><span class="line">  rowProbs &lt;- prop.table(rowSums)</span><br><span class="line">  <span class="comment"># get the marginal probailities for the conditioning variate</span></span><br><span class="line">  colSums &lt;- margin.table(new_table, margin = x)</span><br><span class="line">  colProbs &lt;- prop.table(colSums)</span><br><span class="line">  <span class="comment"># get the dnn</span></span><br><span class="line">  dnn &lt;- <span class="built_in">dimnames</span>(new_table)</span><br><span class="line">  <span class="keyword">if</span> (conditionalTest)&#123;</span><br><span class="line">    generateCondTable(columnSums = colSums, rowProbs = rowProbs,</span><br><span class="line">                      dnn = dnn)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    generateUncondTable(total = <span class="built_in">sum</span>(new_table),</span><br><span class="line">                        colProbs = colProbs,</span><br><span class="line">                        rowProbs = rowProbs,</span><br><span class="line">                        dnn = dnn)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># need to functions of the single argument data which will geenrate new data under</span></span><br><span class="line"><span class="comment"># the hypothesis</span></span><br><span class="line">generateTableDataCond &lt;- <span class="keyword">function</span>(data)&#123;</span><br><span class="line">  newtable &lt;- generateTable(data$table, y = data$y, x = data$x,</span><br><span class="line">                            conditionalTest = <span class="literal">TRUE</span>)</span><br><span class="line">  <span class="built_in">list</span>(table = newtable, y= data$y, x = data$x)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">generateTableDataUncond &lt;- <span class="keyword">function</span>(data)&#123;</span><br><span class="line">  newtable &lt;- generateTable(data$table, y = data$y, x = data$x,</span><br><span class="line">                            conditionalTest = <span class="literal">FALSE</span>)</span><br><span class="line">  <span class="built_in">list</span>(table = newtable, y= data$y, x = data$x)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># the function that will show an eikosogram</span></span><br><span class="line">showTable &lt;- <span class="keyword">function</span>(data, Suspect, draw = <span class="literal">FALSE</span>)&#123;</span><br><span class="line">  result &lt;- eikos(y =data$y, x = data$x,</span><br><span class="line">                  data = data$table, legend = <span class="literal">FALSE</span>,</span><br><span class="line">                  xlabs = <span class="literal">FALSE</span>, ylabs = <span class="literal">FALSE</span>,</span><br><span class="line">                  xaxs = <span class="literal">FALSE</span>, yaxs = <span class="literal">FALSE</span>,</span><br><span class="line">                  main = paste(<span class="string">&quot;Suspect&quot;</span>, Suspect),</span><br><span class="line">                  draw = draw) <span class="comment"># default don&#x27;t draw</span></span><br><span class="line">  <span class="built_in">invisible</span>(result)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># since the eikos function is implemented using grid, need to update the lineup function</span></span><br><span class="line"></span><br><span class="line">lineup1 &lt;- <span class="keyword">function</span>(data, showSuspect = <span class="literal">NULL</span>, generateSuspect = NUll,</span><br><span class="line">                   trueLoc = <span class="literal">NULL</span>, layout = <span class="built_in">c</span>(<span class="number">5</span>,<span class="number">4</span>),</span><br><span class="line">                   pkg = <span class="built_in">c</span>(<span class="string">&quot;Graphics&quot;</span>, <span class="string">&quot;grid&quot;</span>, <span class="string">&quot;ggplot2&quot;</span>))&#123;</span><br><span class="line">  <span class="comment"># get the number of suspects in total</span></span><br><span class="line">  nSuspects &lt;- layout[<span class="number">1</span>] *layout[<span class="number">2</span>]</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">is.null</span>(trueLoc)) &#123;trueLoc &lt;- sample(<span class="number">1</span>:nSuspects, <span class="number">1</span>)&#125;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">is.null</span>(showSuspect)) &#123;stop(<span class="string">&quot;need a plot function for the subject&quot;</span>)&#125;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">is.null</span>(generateSuspect)) &#123; stop(<span class="string">&quot;need a function to generate subject&quot;</span>)&#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment"># need to decide which subject to present</span></span><br><span class="line">  presentSuspect &lt;- <span class="keyword">function</span>(suspectNo)&#123;</span><br><span class="line">    <span class="keyword">if</span> (SuspectNo != trueLoc) &#123;data &lt;- generateSuspect(data)&#125;</span><br><span class="line">    showSuspect(data, suspectNo)&#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment"># plotting depends on the plotting package</span></span><br><span class="line">  pkg &lt;- match.arg(pkg) <span class="comment"># Argument Verification Using Partial Matching</span></span><br><span class="line">  <span class="built_in">switch</span>(pkg,</span><br><span class="line">         <span class="string">&quot;graphics&quot;</span> = &#123;</span><br><span class="line">           savePar &lt;- par(mfrow = layout,</span><br><span class="line">                          mar = <span class="built_in">c</span>(<span class="number">2.5</span>,<span class="number">0.1</span>,<span class="number">3</span>,<span class="number">0.1</span>),</span><br><span class="line">                          oma = <span class="built_in">rep</span>(<span class="number">0</span>,<span class="number">4</span>))</span><br><span class="line">           sapply(<span class="number">1</span>:nSuspects, FUN = presentSuspect)</span><br><span class="line">           <span class="comment"># the plot layout here is of no value for graphics</span></span><br><span class="line">           plotLayput &lt;- layout</span><br><span class="line">           par(savePar)</span><br><span class="line">         &#125;,</span><br><span class="line">         <span class="string">&quot;grid&quot;</span> = &#123;</span><br><span class="line">           grobs &lt;- lapply(<span class="number">1</span>:nSuspects, FUN = presentSuspect)</span><br><span class="line">           plotLayout &lt;- arrangeGrob(grobs = plots, <span class="comment"># Arrange multiple grobs on a page</span></span><br><span class="line">                                     nrow = layout[<span class="number">1</span>], ncol = layout[<span class="number">2</span>])</span><br><span class="line">         &#125;,</span><br><span class="line">         <span class="string">&quot;ggplot2&quot;</span> = &#123;</span><br><span class="line">           plots &lt;- lapply(<span class="number">1</span>:nSuspects, FUN = presentSuspect)</span><br><span class="line">           plotLayout &lt;- arrangeGrob(grobs = plots,</span><br><span class="line">                                     nrow = layput[<span class="number">1</span>], ncol = layout[<span class="number">2</span>])</span><br><span class="line">         &#125;,</span><br><span class="line">         stop(<span class="string">&quot;Wrong pkg&quot;</span>))</span><br><span class="line">  <span class="comment"># return obfuscated location and plot (if not &quot;graphics)</span></span><br><span class="line">  <span class="built_in">list</span>(trueLoc = hideLocation(trueLoc, nSuspects),</span><br><span class="line">       plotLayout = plotLayout)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">results &lt;- lineup(..., pkg = <span class="string">&quot;grid&quot;</span>,...) <span class="comment"># must supple other args</span></span><br><span class="line">grid.arrange(results$plotLayout) <span class="comment"># display the lineup</span></span><br><span class="line">revealLocation(results$trueLoc) <span class="comment"># reveal the true location</span></span><br><span class="line"></span><br><span class="line">library(eikosograms); library(gridExtra)</span><br><span class="line">results &lt;- lineup1(data,</span><br><span class="line">                  generateSuspect = generateTableDataCond,</span><br><span class="line">                  showSuspect = showTable,</span><br><span class="line">                  layout = <span class="built_in">c</span>(<span class="number">5</span>,<span class="number">5</span>),</span><br><span class="line">                  pkg = <span class="string">&quot;grid&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># display equivalence in eikosograms</span></span><br><span class="line">titanicsurvclass &lt;- margin.table(Titanic, margin = <span class="built_in">c</span>(<span class="number">1</span>,<span class="number">4</span>))</span><br><span class="line">mosaicplot(titanicsurvclass, main = <span class="string">&quot;MOsaic plot (two way table&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># spine plot</span></span><br><span class="line">spineplot(titanicsurvclass, main = <span class="string">&quot;spineplot (two way table&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># eikosograms and mosaic plots differ when there are more than two variates</span></span><br><span class="line">eikos(y = <span class="string">&quot;Survived&quot;</span>, x = <span class="built_in">c</span>(<span class="string">&quot;Class&quot;</span>, <span class="string">&quot;Sex&quot;</span>),</span><br><span class="line">      data = Titanic, xaxs = <span class="literal">FALSE</span>, yaxs = <span class="literal">FALSE</span>,</span><br><span class="line">      main = <span class="string">&quot;Eikosogram (three way table)&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># mosaic plot, need to construct the marginal table first,</span></span><br><span class="line"><span class="comment"># note that the table is ordered so that survived is first,</span></span><br><span class="line"><span class="comment"># then class and sex (to match the eikosogram order above)</span></span><br><span class="line">titanicsurvclasssex &lt;- margin.table(Titanic, <span class="built_in">c</span>(<span class="number">4</span>,<span class="number">1</span>,<span class="number">2</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># the mosaic plot</span></span><br><span class="line">mosaicplot(titanicsurvclasssex, main = <span class="string">&quot;mosaic plot ( three way table&quot;</span>)</span><br></pre></td></tr></table></figure>


<h2 id="onmaps"><a href="#onmaps" class="headerlink" title="onmaps"></a>onmaps</h2><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment">#######################################################</span></span><br><span class="line"><span class="comment"># onmaps</span></span><br><span class="line"><span class="comment">#######################################################</span></span><br><span class="line">library(maps)</span><br><span class="line">savePar &lt;- par(mfrow = <span class="built_in">c</span>(<span class="number">1</span>,<span class="number">2</span>))</span><br><span class="line"><span class="comment"># first the map from the maps package</span></span><br><span class="line">map(<span class="string">&quot;world&quot;</span>, <span class="string">&quot;Canada&quot;</span>, xlim = <span class="built_in">c</span>(-<span class="number">141</span>, -<span class="number">53</span>), ylim = <span class="built_in">c</span>(<span class="number">40</span>, <span class="number">85</span>),</span><br><span class="line">    col = <span class="string">&quot;grey90&quot;</span>, fill= <span class="literal">TRUE</span>)</span><br><span class="line">title(main = <span class="string">&quot;maps package&quot;</span>)</span><br><span class="line"><span class="comment"># or use the map from the mapdata package</span></span><br><span class="line">library(mapdata)</span><br><span class="line">map(<span class="string">&quot;worldHires&quot;</span>, <span class="string">&quot;canada&quot;</span>, xlim = <span class="built_in">c</span>(-<span class="number">141</span>, -<span class="number">53</span>), ylim = <span class="built_in">c</span>(<span class="number">40</span>, <span class="number">85</span>),</span><br><span class="line">        col = <span class="string">&quot;grey90&quot;</span>, fill = <span class="literal">TRUE</span>)</span><br><span class="line">title(main = <span class="string">&quot;mapdata package&quot;</span>)</span><br><span class="line">par(savePar)</span><br><span class="line"></span><br><span class="line"><span class="comment"># annual precipitation as thermometer glyphs</span></span><br><span class="line">library(maps)</span><br><span class="line">precip &lt;- read.csv(<span class="string">&quot;/Users/xuanxiaowu/Desktop/stat442/rcode/precip.csv&quot;</span>)</span><br><span class="line"><span class="comment"># 这个csv可以在网上找到， 如果你想要的话我给你email， 或者等过几天我学一下github</span></span><br><span class="line"></span><br><span class="line">n &lt;- nrow(precip)</span><br><span class="line">lat &lt;- vector(<span class="string">&quot;numeric&quot;</span>, n)</span><br><span class="line">pop &lt;- vector(<span class="string">&quot;numeric&quot;</span>, n)</span><br><span class="line">long &lt;- vector(<span class="string">&quot;numeric&quot;</span>, n)</span><br><span class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">1</span>:n) &#123;</span><br><span class="line">  city &lt;- precip[i, <span class="string">&quot;name&quot;</span>]</span><br><span class="line">  selected.city &lt;- canada.cities[,<span class="string">&quot;name&quot;</span>] == city</span><br><span class="line">  lat[i] &lt;- canada.cities[selected.city, <span class="string">&quot;lat&quot;</span>]</span><br><span class="line">  long[i] &lt;- canada.cities[selected.city, <span class="string">&quot;long&quot;</span>]</span><br><span class="line">  pop[i] &lt;- canada.cities[selected.city, <span class="string">&quot;pop&quot;</span>]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cities &lt;- data.frame(precip, lat = lat, long= long, pop = pop)</span><br><span class="line"><span class="comment"># take the subset</span></span><br><span class="line">indices &lt;- <span class="built_in">c</span>(<span class="number">5</span>,<span class="number">13</span>,<span class="number">18</span>, <span class="number">20</span>, <span class="number">24</span>, <span class="number">26</span>, <span class="number">27</span>, <span class="number">29</span>, <span class="number">32</span>)</span><br><span class="line">cities &lt;- cities[indices, ]</span><br><span class="line">map(<span class="string">&quot;world&quot;</span>, <span class="string">&quot;Canada&quot;</span>, plot = <span class="literal">TRUE</span>, fill = <span class="literal">FALSE</span>)</span><br><span class="line">symbols(cities$long - <span class="number">1</span>, cities$lat, inches = <span class="literal">FALSE</span>,</span><br><span class="line">        thermometers = cbind(<span class="built_in">rep</span>(<span class="number">2</span>, nrow(cities)),</span><br><span class="line">                             <span class="built_in">rep</span>(<span class="number">4</span>, nrow(cities)),</span><br><span class="line">                             (cities$precip)/<span class="number">2000</span>), <span class="comment"># precip in mm</span></span><br><span class="line">        fg = <span class="string">&quot;red&quot;</span>,</span><br><span class="line">        add = <span class="literal">TRUE</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># statiscal glyphs - any kind of graphic</span></span><br><span class="line">vars &lt;- <span class="built_in">c</span>(<span class="string">&quot;days&quot;</span>, <span class="string">&quot;precip.mm.&quot;</span>, <span class="string">&quot;pop&quot;</span>)</span><br><span class="line">nVars &lt;- <span class="built_in">length</span>(vars)</span><br><span class="line">ncities &lt;- nrow(cities)</span><br><span class="line">cityVals &lt;- cities[,vars]</span><br><span class="line">maxVals &lt;- apply(cityVals, <span class="number">2</span>,<span class="built_in">max</span>)</span><br><span class="line"><span class="comment"># get values as proportions of each column</span></span><br><span class="line">stdCities &lt;- sweep(cityVals, <span class="number">2</span>, maxVals,`/`) <span class="comment"># sweep: Return an array obtained</span></span><br><span class="line">              <span class="comment">#from an input array by sweeping out a summary statistic.</span></span><br><span class="line">stdCitiesList &lt;- Map(<span class="keyword">function</span>(rowNum) &#123;t(stdCities[rowNum,])&#125;,</span><br><span class="line">                     <span class="number">1</span>:ncities) <span class="comment"># apply a function to each element of a vector</span></span><br><span class="line"><span class="comment"># in the loon package, the function l_make_glyphys() will create glyphs from any</span></span><br><span class="line"><span class="comment"># statiscal graphic</span></span><br><span class="line">library(loon)</span><br><span class="line"><span class="comment"># create the glyphs for each city</span></span><br><span class="line">my_glyphs &lt;- l_make_glyphs(stdCitiesList,</span><br><span class="line">                           draw_fun = <span class="keyword">function</span>(city)&#123;</span><br><span class="line">                             par(mar = <span class="built_in">rep</span>(<span class="number">1</span>,<span class="number">4</span>))</span><br><span class="line">                             barplot(height = city,</span><br><span class="line">                                     beside = <span class="literal">TRUE</span>,</span><br><span class="line">                                     axes = <span class="literal">FALSE</span>,</span><br><span class="line">                                     col = rainbow(nVars),</span><br><span class="line">                                     axisnames = <span class="literal">FALSE</span>,</span><br><span class="line">                                     ylim = <span class="built_in">c</span>(<span class="number">0</span>,<span class="number">1</span>))</span><br><span class="line">                           &#125;, width = <span class="number">100</span>, height = <span class="number">100</span>)</span><br><span class="line"><span class="comment"># can view the glyphs</span></span><br><span class="line">l_imageviewer(my_glyphs)</span><br><span class="line"></span><br><span class="line"><span class="comment"># these can be added as points symbols to any l_plot</span></span><br><span class="line"><span class="comment"># plot city locations</span></span><br><span class="line">p &lt;- l_plot(cities$long, cities$lat,</span><br><span class="line">            xlabel = <span class="string">&quot;longitude&quot;</span>,</span><br><span class="line">            ylabel = <span class="string">&quot;laitude&quot;</span>,</span><br><span class="line">            showLabels = <span class="literal">FALSE</span>)</span><br><span class="line"><span class="comment"># add the map</span></span><br><span class="line">Canada &lt;- map(<span class="string">&quot;world&quot;</span>, <span class="string">&quot;Canada&quot;</span>, fill = <span class="literal">TRUE</span>, plot = <span class="literal">FALSE</span>)</span><br><span class="line">l_map &lt;- l_layer(p, Canada, asSingleLayer = <span class="literal">TRUE</span>, color = <span class="string">&quot;cornsilk&quot;</span>)</span><br><span class="line">l_scaleto_world(p) <span class="comment">#Change Plot Region to Display All Plot Data</span></span><br><span class="line"><span class="comment"># then add the images as glyphs called &quot;barplot&quot;</span></span><br><span class="line">g &lt;- l_glyph_add_image(p, my_glyphs, <span class="string">&quot;barplot&quot;</span>)</span><br><span class="line">p[<span class="string">&#x27;glyph&#x27;</span>] &lt;- g</span><br><span class="line"></span><br><span class="line">library(loon)</span><br><span class="line">theEast &lt;- cities$long &gt; -<span class="number">80</span></span><br><span class="line">p[<span class="string">&quot;selected&quot;</span>] &lt;- theEast</span><br><span class="line"></span><br><span class="line"><span class="comment"># readShapeSpatial &#123;maptools&#125;	R Documentation</span></span><br><span class="line"><span class="comment">#       Read shape files into Spatial*DataFrame objects</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># rm(list = ls()): rm will remove all of the objects that are stored in</span></span><br><span class="line"><span class="comment"># your global environment (which may be what you want) but will not unload any</span></span><br><span class="line"><span class="comment">#   of the packages that you have loaded. You can do both by restarting your</span></span><br><span class="line"><span class="comment"># R session in RStudio with the keyboard shortcut Ctrl+Shift+F10 which will</span></span><br><span class="line"><span class="comment"># totally clear your global environment of both objects and loaded packages.</span></span><br><span class="line"><span class="comment">#  use graphic.off() to clear all the plots you have generated</span></span><br></pre></td></tr></table></figure>

<h2 id="three-dimensions"><a href="#three-dimensions" class="headerlink" title="three dimensions"></a>three dimensions</h2><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment">#######################################################</span></span><br><span class="line"><span class="comment"># three dimensions</span></span><br><span class="line"><span class="comment">#######################################################</span></span><br><span class="line">library(MASS)</span><br><span class="line">library(ggplot2)</span><br><span class="line"><span class="comment"># use square grids, count the number of points in each cell</span></span><br><span class="line"><span class="comment"># code count to saturation. here use geom_bin2d() from ggplot2</span></span><br><span class="line">p &lt;- ggplot(geyser, aes(x = duration, y = waiting))</span><br><span class="line">h &lt;- p + geom_bin2d(bins = <span class="number">15</span>)</span><br><span class="line">h</span><br><span class="line"><span class="comment"># to switch the color around</span></span><br><span class="line">library(RColorBrewer)</span><br><span class="line"><span class="comment"># brew a sequence of blues</span></span><br><span class="line">blues &lt;- brewer.pal(<span class="number">9</span>, <span class="string">&quot;Blues&quot;</span>)</span><br><span class="line">darkerBlues &lt;- blues[-(<span class="number">1</span>:<span class="number">2</span>)] <span class="comment"># remove the two lightest blues</span></span><br><span class="line">h + scale_fill_gradientn(colours = darkerBlues)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># use hexbin for hexagonal binning</span></span><br><span class="line">library(<span class="string">&quot;hexbin&quot;</span>)</span><br><span class="line">bins &lt;- hexbin(x = geyser$duration, y = geyser$waiting, xbins = <span class="number">15</span>)</span><br><span class="line">plot(bins, main = <span class="string">&quot;hexagonal bin histogram&quot;</span>)</span><br><span class="line"><span class="comment"># alternatively we cna use the hexbinplot directly</span></span><br><span class="line">hexbinplot(waiting~duration,data = geyser, xbins = <span class="number">15</span>,</span><br><span class="line">           colramp = <span class="keyword">function</span>(n) rev(gray.colors(n)), <span class="comment"># rev:Reverse Elements</span></span><br><span class="line">           aspect = <span class="number">1</span>,</span><br><span class="line">           main = <span class="string">&quot;Hexagonal bin histogram&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#  or we could use size instead of the colour to indicate counts</span></span><br><span class="line">hexbinplot(waiting~duration, data = geyser,</span><br><span class="line">           style = <span class="string">&quot;lattice&quot;</span>, aspect = <span class="number">1</span>,</span><br><span class="line">           main = <span class="string">&quot;hexagonal bin histogram&quot;</span>)</span><br><span class="line"><span class="comment"># both colour and size are used</span></span><br><span class="line">hexbinplot(waiting~duration, data = geyser,</span><br><span class="line">           style = <span class="string">&quot;nested.lattice&quot;</span>, aspect = <span class="number">1</span>,</span><br><span class="line">           main = <span class="string">&quot;hexagonal bin histogram&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># density estimation in two-dimensions</span></span><br><span class="line"><span class="comment"># calculate the contours of the kernel function</span></span><br><span class="line">nxvals &lt;- 100</span><br><span class="line">nyvals &lt;- 100</span><br><span class="line">x &lt;- seq(-<span class="number">5</span>, <span class="number">5</span>,length.out = nxvals)</span><br><span class="line">y &lt;- seq(-<span class="number">5</span>, <span class="number">5</span>,length.out = nyvals)</span><br><span class="line">gridLocs &lt;- expand.grid(x,y)</span><br><span class="line"><span class="comment"># now have the indices to match the locations</span></span><br><span class="line">indices &lt;- cbind(<span class="built_in">rep</span>(<span class="number">1</span>:nxvals, times = nyvals), <span class="built_in">rep</span>(<span class="number">1</span>:nyvals, each = nxvals))</span><br><span class="line"><span class="comment"># a matrix to store away the kernel values</span></span><br><span class="line">kernel &lt;- matrix(<span class="number">0</span>, nrow = nxvals, ncol=nyvals)</span><br><span class="line"></span><br><span class="line"><span class="comment"># need multivariate nromal densities from mvtnorm</span></span><br><span class="line">library(<span class="string">&#x27;mvtnorm&#x27;</span>)</span><br><span class="line"><span class="comment"># bivaraite normal density</span></span><br><span class="line"><span class="comment"># (default is mean 0, and var-cov matrix the 2x2 identity matrix)</span></span><br><span class="line">kernel[indices] &lt;- dmvnorm(gridLocs)</span><br><span class="line"><span class="comment">#there is a contour function to showmlevel curves</span></span><br><span class="line">contour(x=x, y=y, z= kernel, asp = <span class="number">1</span>,</span><br><span class="line">        xlim = <span class="built_in">c</span>(-<span class="number">2</span>,<span class="number">2</span>), ylim = <span class="built_in">c</span>(-<span class="number">2</span>,<span class="number">2</span>),</span><br><span class="line">        col = <span class="string">&quot;black&quot;</span>, lty = <span class="number">2</span>,</span><br><span class="line">        main = <span class="string">&quot;contours of a standard normal&quot;</span>)</span><br><span class="line">points(<span class="number">0</span>,<span class="number">0</span>, pch = <span class="number">19</span>, col = <span class="string">&quot;steelblue&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># we can use this bivariate density as a kernel for bivariate density estimation</span></span><br><span class="line"><span class="comment"># a function that performs the density estimation is kde2d() from the mass package</span></span><br><span class="line">x &lt;- geyser$duration</span><br><span class="line">y &lt;- geyser$waiting</span><br><span class="line">den &lt;- kde2d(x=x, y = y , n = <span class="number">100</span>)</span><br><span class="line">str(den)</span><br><span class="line"></span><br><span class="line"><span class="comment"># now plot the density estimates as contours</span></span><br><span class="line">zlim &lt;- <span class="built_in">range</span>(den$z)</span><br><span class="line">plot(x,y,pch =<span class="number">19</span>,</span><br><span class="line">     col = adjustcolor(<span class="string">&quot;steelblue&quot;</span>, <span class="number">0.5</span>))</span><br><span class="line">contour(den$x, den$y, den$z, col = <span class="string">&quot;grey10&quot;</span>,</span><br><span class="line">        levels = pretty(zlim, <span class="number">10</span>), lwd = <span class="number">1</span>, add = <span class="literal">TRUE</span>)</span><br><span class="line"><span class="comment"># pretty :Compute a sequence of about n+1 equally spaced ‘round’ values</span></span><br><span class="line"><span class="comment"># which cover the range of the values in x. The values are chosen so that</span></span><br><span class="line"><span class="comment"># they are 1, 2 or 5 times a power of 10.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># could add colour images of density</span></span><br><span class="line">library(RColorBrewer)</span><br><span class="line">blues &lt;- brewer.pal(<span class="number">9</span>, <span class="string">&quot;Blues&quot;</span>)</span><br><span class="line">image(den$x, den$y, den$z, col = blues, xlab = <span class="string">&quot;duration&quot;</span>,</span><br><span class="line">      ylab = <span class="string">&quot;waiting&quot;</span>, main = <span class="string">&quot;rectangles coloured by density&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># draw the density in three dimensions</span></span><br><span class="line"><span class="comment"># using the perspective &quot;wire frame&quot; drawings</span></span><br><span class="line">lineCol &lt;- <span class="string">&quot;steelblue&quot;</span></span><br><span class="line">fillCol &lt;- <span class="string">&quot;cornsilk&quot;</span></span><br><span class="line">savePar &lt;- par(mfrow = <span class="built_in">c</span>(<span class="number">1</span>,<span class="number">2</span>))</span><br><span class="line"><span class="comment"># 3d surface</span></span><br><span class="line">persp(den$z, border = lineCol, col = fillCol,</span><br><span class="line">      xlab = <span class="string">&quot;duration&quot;</span>, ylab = <span class="string">&quot;waiting time&quot;</span>,</span><br><span class="line">      zlab = <span class="string">&quot;density&quot;</span>, main = <span class="string">&quot;geyser density estimate&quot;</span>,</span><br><span class="line">      sub = <span class="string">&quot;solid&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># see through</span></span><br><span class="line">persp(den$z, border = lineCol, col = adjustcolor(fillCol,<span class="number">0.5</span>),</span><br><span class="line">      xlab = <span class="string">&quot;duration&quot;</span>, ylab = <span class="string">&quot;waiting time&quot;</span>,</span><br><span class="line">      zlab = <span class="string">&quot;density&quot;</span>, main = <span class="string">&quot;geyser density estimate&quot;</span>,</span><br><span class="line">      sub = <span class="string">&quot;transparent&quot;</span>)</span><br><span class="line"></span><br><span class="line">par(savePar)</span><br><span class="line"></span><br><span class="line"><span class="comment"># can change the viewing angles</span></span><br><span class="line">theta.val &lt;- 0   <span class="comment"># horizontal moving right to the left</span></span><br><span class="line">phi.val &lt;- 0 <span class="comment"># angle of tilt toward viewer</span></span><br><span class="line">lineCol &lt;- <span class="string">&quot;steelblue&quot;</span></span><br><span class="line">fillCol &lt;- <span class="string">&quot;cornsilk&quot;</span></span><br><span class="line">persp(den$z, border = lineCol, col = fillCol,</span><br><span class="line">      xlab = <span class="string">&quot;x&quot;</span>, ylab = <span class="string">&quot;y&quot;</span>, zlab = <span class="string">&quot;z&quot;</span>,</span><br><span class="line">      <span class="comment"># some magic below:</span></span><br><span class="line">      <span class="comment"># bquote: allows partial substitution;</span></span><br><span class="line">      <span class="comment"># terms wrapped in .() are evaluated</span></span><br><span class="line">      main = bquote(paste(phi, <span class="string">&quot;=&quot;</span>, .(phi.val),<span class="string">&quot;;&quot;</span>,</span><br><span class="line">                          thera,<span class="string">&quot;=&quot;</span>,.(theta.val))),</span><br><span class="line">      theta = theta.val,</span><br><span class="line">      phi = phi.val)</span><br><span class="line"><span class="comment"># radius r, the distance of the eyepoint from the centre of the box</span></span><br><span class="line"><span class="comment"># changing the radius (think of points at infinity)</span></span><br><span class="line">persp(den, border = lineCol, col = fillCol,</span><br><span class="line">      r = <span class="number">0.5</span>, phi = <span class="number">0</span>, xlab = <span class="string">&quot;x&quot;</span>, main = <span class="string">&quot;r = 0.5&quot;</span>)<span class="comment"># the smaller the r, the sooner the parallel lines meet</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># the lattice package could be used</span></span><br><span class="line">library(<span class="string">&quot;lattice&quot;</span>)</span><br><span class="line">wireframe(den$z, xlab = <span class="string">&quot;duration&quot;</span>, ylab = <span class="string">&quot;waiting&quot;</span>, zlab = <span class="string">&quot;density&quot;</span>,</span><br><span class="line">          col = <span class="string">&quot;grey50&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># can change the relative dimensions of the box</span></span><br><span class="line">wireframe(den$z, xlab = <span class="string">&quot;duration&quot;</span>, ylab = <span class="string">&quot;waiting&quot;</span>, zlab = <span class="string">&quot;density&quot;</span>,</span><br><span class="line">          col = <span class="string">&quot;grey50&quot;</span>, aspect = <span class="built_in">c</span>(<span class="number">1.2</span>, <span class="number">0.4</span>))</span><br><span class="line"></span><br><span class="line">library(loon.data); data(SAheart)</span><br><span class="line">cloud(sbp~ldl + tobacco, data = SAheart)</span><br><span class="line"></span><br><span class="line"><span class="comment"># change the colour, point symbol, remove perspective and the frame box</span></span><br><span class="line">cloud(sbp~ldl + tobacco, data = SAheart,</span><br><span class="line">      col = adjustcolor(<span class="string">&quot;grey10&quot;</span>, <span class="number">0.3</span>),</span><br><span class="line">      pch = <span class="number">19</span>, perspective = <span class="literal">FALSE</span>,</span><br><span class="line">      par.settings = <span class="built_in">list</span>(axis.line=<span class="built_in">list</span>(col = <span class="literal">NA</span>)))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">library(gridExtra)</span><br><span class="line">cloud1 &lt;- cloud(sbp~ldl + tobacco, data = SAheart,</span><br><span class="line">           col = adjustcolor(<span class="string">&quot;grey10&quot;</span>, <span class="number">0.3</span>),</span><br><span class="line">           pch = <span class="number">19</span>, perspective = <span class="literal">TRUE</span>,</span><br><span class="line">           par.settings = <span class="built_in">list</span>(axis.line=<span class="built_in">list</span>(col = <span class="literal">NA</span>)),</span><br><span class="line">           <span class="comment"># rotate (in degrees) about each axis</span></span><br><span class="line">           screen = <span class="built_in">list</span>(z= <span class="number">20</span>, x = -<span class="number">70</span>, y = <span class="number">0</span>),</span><br><span class="line">           xlab = <span class="string">&quot;&quot;</span>, ylab = <span class="string">&quot;&quot;</span>, zlab = <span class="string">&quot;&quot;</span>)</span><br><span class="line"><span class="comment"># rotate about y by 3 degrees</span></span><br><span class="line">cloud2 &lt;- cloud(sbp~ldl + tobacco, data = SAheart,</span><br><span class="line">                col = adjustcolor(<span class="string">&quot;grey10&quot;</span>, <span class="number">0.3</span>),</span><br><span class="line">                pch = <span class="number">19</span>, perspective = <span class="literal">TRUE</span>,</span><br><span class="line">                par.settings = <span class="built_in">list</span>(axis.line=<span class="built_in">list</span>(col = <span class="literal">NA</span>)),</span><br><span class="line">                <span class="comment"># rotate (in degrees) about each axis</span></span><br><span class="line">                screen = <span class="built_in">list</span>(z= <span class="number">20</span>, x = -<span class="number">70</span>, y = <span class="number">3</span>),</span><br><span class="line">                xlab = <span class="string">&quot;&quot;</span>, ylab = <span class="string">&quot;&quot;</span>, zlab = <span class="string">&quot;&quot;</span>)</span><br><span class="line"><span class="comment"># stereo display</span></span><br><span class="line">grid.arrange(cloud1, cloud2, nrow =<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># use the rgl package</span></span><br><span class="line">library(rgl)</span><br><span class="line">solidcol &lt;- <span class="string">&quot;steelblue&quot;</span></span><br><span class="line">persp3d(den$z, col = solidcol)</span><br><span class="line">        <span class="comment"># with a three button mouse:</span></span><br><span class="line">        <span class="comment">#left buttom  - rotate</span></span><br><span class="line">        <span class="comment">#middle button - change perspective</span></span><br><span class="line">        <span class="comment"># right button - size)</span></span><br><span class="line">    <span class="comment"># get rid of perspective, make things orthogonal</span></span><br><span class="line">    <span class="comment"># FOV(or field of view) is &quot;the degee of parallax&quot;</span></span><br><span class="line">    <span class="comment"># FOV = 0, is orthogonal (or isometric) projection.</span></span><br><span class="line">par3d(FOV = <span class="number">0</span>)</span><br><span class="line">persp3d(den$z, col = <span class="string">&quot;cornsilk&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># interacitve three dimensional plots</span></span><br><span class="line"><span class="comment"># surfaces and planes</span></span><br><span class="line">x &lt;- den$x</span><br><span class="line">y &lt;- den$y        </span><br><span class="line">z &lt;- den$z</span><br><span class="line"><span class="comment"># put the coordinates in a unit cube</span></span><br><span class="line">myscale &lt;- <span class="keyword">function</span>(x)&#123;</span><br><span class="line">  xrange &lt;- <span class="built_in">range</span>(x)</span><br><span class="line">  (x - <span class="built_in">min</span>(xrange))/diff(xrange)</span><br><span class="line">&#125;</span><br><span class="line">x &lt;- myscale(x)</span><br><span class="line">y &lt;- myscale(y)</span><br><span class="line">z &lt;- myscale(z)</span><br><span class="line"></span><br><span class="line">surface3d(x,y,z, color = solidcol)</span><br><span class="line"><span class="comment"># we could ass an arbitrary plane as well</span></span><br><span class="line"><span class="comment"># say the plane a*x + b*y + c*z + d = 0</span></span><br><span class="line">planes3d(<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>, -median(z), col = <span class="string">&quot;firebrick&quot;</span>, alpha =<span class="number">0.5</span>)</span><br><span class="line">planes3d(<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>, -quantile(z, <span class="number">0.75</span>), col = <span class="string">&quot;steelblue&quot;</span>, alpha =<span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># a point in the centre of the box is</span></span><br><span class="line">centre &lt;- <span class="built_in">c</span>(median(x), median(y), median(z) )</span><br><span class="line"><span class="comment"># a plane&#x27;s orientation is given by its normal vector</span></span><br><span class="line">a &lt;- 1</span><br><span class="line">b &lt;- 1</span><br><span class="line">c &lt;- 1</span><br><span class="line">normal &lt;- <span class="built_in">c</span>(a,b,<span class="built_in">c</span>)</span><br><span class="line"><span class="comment"># get d to put this through the centre</span></span><br><span class="line">d &lt;- - t(normal) %*% centre</span><br><span class="line">planes3d(a,b,<span class="built_in">c</span>,d, col = <span class="string">&quot;purple&quot;</span>, alpha= <span class="number">0.7</span>)</span><br></pre></td></tr></table></figure>

<h2 id="marginal-contribution"><a href="#marginal-contribution" class="headerlink" title="marginal contribution"></a>marginal contribution</h2><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment">#######################################################</span></span><br><span class="line"><span class="comment"># marginal contribution - projections and slices</span></span><br><span class="line"><span class="comment">#######################################################       </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># distance determines the amount of perspective ,default is 0.2</span></span><br><span class="line">cloud &lt;- cloud(obesity~alcohol + tobacco, data = SAheart,</span><br><span class="line">                distance = <span class="number">1</span>, perspective = <span class="literal">TRUE</span>,</span><br><span class="line">                par.settings = <span class="built_in">list</span>(axis.line=<span class="built_in">list</span>(col = <span class="literal">NA</span>)),</span><br><span class="line">                <span class="comment"># rotate (in degrees) about each axis</span></span><br><span class="line">                screen = <span class="built_in">list</span>(z= <span class="number">0</span>, x = <span class="number">10</span>, y = <span class="number">0</span>),</span><br><span class="line">                xlab = <span class="string">&quot;x&quot;</span>, ylab = <span class="string">&quot;y&quot;</span>, zlab = <span class="string">&quot;z&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># no perspective = marginal = orthogonal projection</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># three dimensional scatterplot - interactive</span></span><br><span class="line">library(loon)</span><br><span class="line">cols &lt;- <span class="built_in">rep</span>(<span class="string">&quot;firebrick&quot;</span>, <span class="built_in">length</span>(SAheart$chd))</span><br><span class="line">cols[SAheart$chd == <span class="string">&quot;Yes&quot;</span>] &lt;- <span class="string">&quot;steelblue&quot;</span></span><br><span class="line"><span class="comment"># need a new data frame</span></span><br><span class="line">newdata &lt;- data.frame(sbp = SAheart$sbp, ldl = SAheart$ldl,</span><br><span class="line">                      tob = SAheart$tobacco)</span><br><span class="line"><span class="comment"># create the navigation graph</span></span><br><span class="line">l_navgraph(data = newdata,</span><br><span class="line">           <span class="comment"># optional arguements follow</span></span><br><span class="line">           color = cols, glyph = <span class="string">&quot;ccircle&quot;</span>, showGuides = <span class="literal">TRUE</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># a free hand rotation in loon</span></span><br><span class="line">with(l_scale3D(newdata),</span><br><span class="line">     l_plot3D(x = sbp, y = ldl, z = tob, color = cols,</span><br><span class="line">              showGuides = <span class="literal">TRUE</span>, glyph = <span class="string">&quot;ccircle&quot;</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># conditioninh on one or more variate values</span></span><br><span class="line"><span class="comment"># beginning with a density estimate for sbp</span></span><br><span class="line">library(ggplot2)</span><br><span class="line">ggplot(data= SAheart, mapping = aes(sbp)) +</span><br><span class="line">         geom_density(fill = <span class="string">&quot;steelblue&quot;</span>, alpha =<span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># now condition on family history - by color</span></span><br><span class="line">p &lt;- ggplot(data= SAheart, mapping = aes(sbp)) +</span><br><span class="line">  geom_density(mapping = aes(fill = famhist), alpha = <span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># now condition on family history - by locations and color</span></span><br><span class="line">p + facet_grid(famhist~.)</span><br><span class="line">p + facet_grid(.~famhist)</span><br><span class="line"></span><br><span class="line"><span class="comment"># now condition on faimly history (colour and location) and value of chd (location)</span></span><br><span class="line">p + facet_grid(chd ~ famhist, labeller = label_both)</span><br><span class="line"></span><br><span class="line"><span class="comment"># a two variates display conditional on the value of a third,</span></span><br><span class="line">p &lt;- ggplot(data = SAheart, mapping = aes(ldl, sbp))</span><br><span class="line">p + geom_point(color = <span class="string">&quot;steelblue&quot;</span>)</span><br><span class="line"><span class="comment"># condition on famhist(colour)</span></span><br><span class="line">p + geom_point(mapping = aes(color = famhist))</span><br><span class="line"><span class="comment"># conditional on famhist (colour+location)</span></span><br><span class="line">p + geom_point(mapping = aes(color = famhist)) + facet_grid(.~famhist)</span><br><span class="line"><span class="comment"># conditional on famhist (colour + location) - densities</span></span><br><span class="line">p + geom_density_2d() +</span><br><span class="line">  facet_grid(.~famhist, labeller = label_both)</span><br><span class="line"></span><br><span class="line"><span class="comment"># conditional on a continuous variate, say tobacco - colour</span></span><br><span class="line">p + geom_point(mapping = aes(color = tobacco), size = <span class="number">2</span>, alpha = <span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># conditional on a continuous variate, say tobacco -size</span></span><br><span class="line">p + geom_point(mapping = aes(size = tobacco), color = <span class="string">&quot;steelblue&quot;</span>, alpha = <span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># cut_interval(): make n groups having equal range</span></span><br><span class="line"><span class="comment"># cut_number(): makes n groups having euqal numbers of observations</span></span><br><span class="line"><span class="comment"># cut_width(): makes however many groups of constant width</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># conditioning on one or more variate values</span></span><br><span class="line">p + geom_density2d(color = <span class="string">&quot;steelblue&quot;</span>) +</span><br><span class="line">  facet_grid(.~cut_number(tobacco, n = <span class="number">3</span>))</span><br><span class="line"></span><br><span class="line">p + geom_point(color = <span class="string">&quot;steelblue&quot;</span>,alpha =<span class="number">0.5</span>) +</span><br><span class="line">  facet_grid(.~cut_number(tobacco, n = <span class="number">3</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># turn an ggplot into an interactive loon plot</span></span><br><span class="line"><span class="comment"># 这个要额外下载package， 网站https://cran.r-project.org/web/packages/loon.ggplot/index.html</span></span><br><span class="line">gg_p &lt;- p + geom_density2d(color = <span class="string">&quot;steelblue&quot;</span>) + geom_point() +</span><br><span class="line">  facet_grid(.~cut_number(tobacco, n =<span class="number">3</span>))</span><br><span class="line">myplot &lt;- loon.ggplot(gg_p, linkingGroup = <span class="string">&quot;SAheart&quot;</span>)</span><br><span class="line"><span class="comment"># marginalization = orthogonal projection</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p2 &lt;- l_plot(SAheart$tobacco, jitter(<span class="built_in">rep</span>(<span class="number">1</span>, <span class="built_in">length</span>(SAheart$tobacco))),</span><br><span class="line">             linkingGroup = <span class="string">&quot;SAheart&quot;</span>)</span><br><span class="line">p3D &lt;- l_plot3D(l_scale3D(SAheart[,<span class="built_in">c</span>(<span class="string">&quot;obesity&quot;</span>, <span class="string">&quot;tobacco&quot;</span>, <span class="string">&quot;alcohol&quot;</span>)]),</span><br><span class="line">                linkingGroup = <span class="string">&quot;SAheart&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="noncartesian"><a href="#noncartesian" class="headerlink" title="noncartesian"></a>noncartesian</h2><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#######################################################</span></span><br><span class="line"><span class="comment"># noncartesian 1 - beyong three dimensions</span></span><br><span class="line"><span class="comment">#######################################################       </span></span><br><span class="line">data &lt;- iris[,<span class="number">1</span>:<span class="number">4</span>] <span class="comment"># the four measurements on Anderson&#x27;s irises</span></span><br><span class="line">scale01 &lt;- <span class="keyword">function</span>(x) &#123;</span><br><span class="line">  (x - <span class="built_in">min</span>(x))/diff(<span class="built_in">range</span>(x) + <span class="number">1</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">data &lt;- apply(data, <span class="number">2</span>, scale01)</span><br><span class="line">library(TeachingDemos)</span><br><span class="line">faces2(data[<span class="built_in">c</span>(<span class="number">1</span>,<span class="number">51</span>,<span class="number">101</span>), ],</span><br><span class="line">       which = <span class="built_in">c</span>(<span class="number">8</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">17</span>), <span class="comment"># select features</span></span><br><span class="line">       scale = <span class="string">&quot;none&quot;</span>, nrows = <span class="number">1</span>, ncols = <span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># with the appropriate packages, we can explore how variables these features are:</span></span><br><span class="line">library(tkrplot)</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">interactive</span>())&#123;</span><br><span class="line">  tke2 &lt;- <span class="built_in">rep</span>(<span class="built_in">list</span>(</span><br><span class="line">                <span class="built_in">list</span>(<span class="string">&#x27;slider&#x27;</span>,</span><br><span class="line">                     from = <span class="number">0</span>, to = <span class="number">1</span>, init = <span class="number">0.5</span>,</span><br><span class="line">                     resolution = <span class="number">0.1</span>)),</span><br><span class="line">              <span class="number">18</span>)</span><br><span class="line">  <span class="built_in">names</span>(tke2) &lt;- <span class="built_in">c</span>(<span class="string">&#x27;CenterWidth&#x27;</span>,<span class="string">&#x27;TopBottomWidth&#x27;</span>,<span class="string">&#x27;FaceHeight&#x27;</span>,<span class="string">&#x27;TopWidth&#x27;</span>,</span><br><span class="line">                   <span class="string">&#x27;BottomWidth&#x27;</span>,<span class="string">&#x27;NoseLength&#x27;</span>,<span class="string">&#x27;MouthHeight&#x27;</span>,<span class="string">&#x27;MouthCurve&#x27;</span>,</span><br><span class="line">                   <span class="string">&#x27;MouthWidth&#x27;</span>,<span class="string">&#x27;EyesHeight&#x27;</span>,<span class="string">&#x27;EyesBetween&#x27;</span>,<span class="string">&#x27;EyeAngle&#x27;</span>,</span><br><span class="line">                   <span class="string">&#x27;EyeShape&#x27;</span>,<span class="string">&#x27;EyeSize&#x27;</span>,<span class="string">&#x27;EyeballPos&#x27;</span>,<span class="string">&#x27;EyebrowHeight&#x27;</span>,</span><br><span class="line">                   <span class="string">&#x27;EyebrowAngle&#x27;</span>,<span class="string">&#x27;EyebrowWidth&#x27;</span>)</span><br><span class="line">  tkfun2 &lt;- <span class="keyword">function</span>(...)&#123;</span><br><span class="line">    tmpmat &lt;- rbind(Min = <span class="number">0</span>, Adjust = unlist(<span class="built_in">list</span>(...)), Max = <span class="number">1</span>)</span><br><span class="line">    faces2(tmpmat, scale = <span class="string">&#x27;none&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  tkexamp(tkfun2, <span class="built_in">list</span>(tke2), plotloc = <span class="string">&#x27;left&#x27;</span>,</span><br><span class="line">          hscale = <span class="number">2</span>, vscale = <span class="number">2</span>)</span><br><span class="line">    <span class="comment"># Create Tk dialog boxes with controls to show examples of</span></span><br><span class="line">  <span class="comment"># changing parameters on a graph.</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">n &lt;- nrow(data)</span><br><span class="line">faces2(data[sample(<span class="number">1</span>:n, n, replace = <span class="literal">FALSE</span>),],</span><br><span class="line">            which = <span class="built_in">c</span>(<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">12</span>),</span><br><span class="line">            scale = <span class="string">&quot;columns&quot;</span>,</span><br><span class="line">            nrow = <span class="number">10</span>, ncol = <span class="number">15</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># a function that in R called stars(..), which will produce Nightingale&#x27;s rose style glyphs</span></span><br><span class="line">n &lt;- nrow(data)</span><br><span class="line">stars(data[sample(<span class="number">1</span>:n, n, replace= <span class="literal">FALSE</span>), ],</span><br><span class="line">      nrow =<span class="number">10</span>, ncol = <span class="number">15</span>,</span><br><span class="line">      main = <span class="string">&quot;Nightingales Rose (almost)&quot;</span>,</span><br><span class="line">      draw.segments = <span class="literal">TRUE</span>, cex = <span class="number">1.2</span>)</span><br><span class="line"><span class="comment"># data explorations using stars(..) again</span></span><br><span class="line">stars(data, locations =data[,<span class="number">1</span>:<span class="number">2</span>],</span><br><span class="line">      lwd = <span class="number">0.5</span>, <span class="comment"># narrow the line</span></span><br><span class="line">      len = <span class="number">0.05</span>,</span><br><span class="line">      labels = <span class="literal">NULL</span>, radius = <span class="literal">TRUE</span>,</span><br><span class="line">      col.lines = <span class="built_in">rep</span>(adjustcolor(<span class="string">&quot;steelblue&quot;</span>, <span class="number">0.5</span>), n),</span><br><span class="line">      col.stars = <span class="built_in">rep</span>(adjustcolor(<span class="string">&quot;steelblue&quot;</span>, <span class="number">0.5</span>), n),</span><br><span class="line">      nrow = <span class="number">10</span>, ncol = <span class="number">15</span>,</span><br><span class="line">      key.loc = <span class="built_in">c</span>(<span class="number">12</span>,-<span class="number">0.5</span>),</span><br><span class="line">      main = <span class="string">&quot;iris data&quot;</span></span><br><span class="line">      )</span><br></pre></td></tr></table></figure>

<br>
<br>
<br>

<h1 id="Tableau"><a href="#Tableau" class="headerlink" title="Tableau"></a>Tableau</h1><div class="note ">
            <p>ctrl + shift + B -&gt; 放大workplace<br>ctrl + B -&gt; 缩小workplace</p>
          </div>

<h2 id="Join和blend"><a href="#Join和blend" class="headerlink" title="Join和blend"></a>Join和blend</h2><p>Join:在data source中点击要join的sheet,看到sheet的信息后注意点击中上方表的小长方块,然后拖动要join的另一个table,中间会出现两个重合的圆,来调节join的类型.</p>
<p>Blending是特别版本的join,join只能join同类型的data,但blending可以join不同版本的,比如excel join到sql dataset.<br>Join时会说left和right table,blending中叫做primary data source和secondary data source.</p>
<p>当Blending时有两个相同的key.<br>Blending will result certain level of data aggregation(sum, avg, etc…)<br>default: sum相加<br>如果是无法sum的char值,会返回星号*.<br>如果Blending时没有相同的key,会返回null.</p>
<h2 id="Scattor-plot"><a href="#Scattor-plot" class="headerlink" title="Scattor plot"></a>Scattor plot</h2><p>我们发现scattor plot需要三个值.两个负责建立坐标(columns + rows)还有一个是数值,导入marks里面.</p>
<blockquote>
<p>比如column:transation + rows:amount + marks:customer_id<br>customer_id作为每个customer的信息导入.</p>
</blockquote>
<p>关于出现的outlier:删掉或对column/row进行对数(log)转换.</p>
<blockquote>
<p>对数转换:使用calculate field中的sum和log function.</p>
</blockquote>
<p>按子类别计算更多的detail:</p>
<blockquote>
<p>增加calculated field:<br>{ fixed[Sub category]: avg([Amount]) }<br>并增加在mark中的size上.<br>以及因为是value的计算,tableau会自动求和,但我们不需要求整个sub category的sum,所以得改成avg.</p>
</blockquote>
<p>Clusters:在analytics的区域,给scattor plot分不同的群体.<br>把在marks中生成的cluster可以拖入会data里的string value区域,可以保留并用在其他的图中.</p>
<h2 id="Bar-chart"><a href="#Bar-chart" class="headerlink" title="Bar chart"></a>Bar chart</h2><p>Bar chart需要一个分组作为rows(刚刚的cluster group),以及一个数值(amount)作为值(marks).然后点击右上方的show me中的bar chart.<br>How many ppl in a cluster group, add calculated field:<br>CountD([Customer ID])</p>
<p>我们可以做一个两头bar chart:<br>将distinct customer ID也作为column值,做一个左右并排的bar chart.再选中其中的一个右键选取edit axis并reversed.</p>
<div class="note ">
            <p>在最上方的工具栏里有swap rows and columns很好用.</p>
          </div>

<h2 id="Dashboard"><a href="#Dashboard" class="headerlink" title="Dashboard"></a>Dashboard</h2><p>将chart(sheet)集合在一起的地方,还能加action,实时比较不同category下的分析数据,很牛逼.<br>例如:将某个category base的bar chart右键use as filter,那么点击某个category,其他的图标就会计算那个category下的数据.</p>
<p>正常流程:在dashboard tool bar中添加action,选择highlight就只会high light,不会把其他的数据隐藏.<br>source sheet:用于选取的category base的sheet.</p>
<div class="note ">
            <p>在查看图表每个数值的时候可以修改tooltip整理每个数值的标签.<br>可以将其他想要加入的数据添加到marks的detail里,再在tooltip中的insert加入.</p>
          </div>

<div class="note ">
            <p>Marks上面的filters可以用category类的值来选择要研究的数据.</p>
          </div>

<div class="note ">
            <p>常用普通表格之colouring.<br>可以将measure value按住ctrl拖入color(复制一份使用colour),然后选择square,表格上就会按照数据的大小决定颜色深浅.<br>如果有多列的数据,在colour中有use separate legend可以分别辨识颜色深浅.</p>
          </div>
]]></content>
      <categories>
        <category>数学笔记</category>
      </categories>
      <tags>
        <tag>以头抢地(诚)</tag>
        <tag>data</tag>
        <tag>r</tag>
        <tag>tableau</tag>
      </tags>
  </entry>
  <entry>
    <title>0324</title>
    <url>/blog/0324/index.html</url>
    <content><![CDATA[<div class="note ">
            <p>原记录于20160324的梦片段.<br>在2018参加了第一次Game Jam,把这个草稿拿出来更改.<br><del>虽然那次Game jam咕掉了.</del></p>
          </div>

<br>
<br>

<h2 id="2016"><a href="#2016" class="headerlink" title="2016"></a>2016</h2><p>近期的梦.<br>基本都有大魔王,然后我作为勇者被吊着打(.</p>
<p>RPG系列之我是北欧片场的勇者.<br>在好友的帮助下一路过关斩将.<br>终于坐上了前往与大魔王决战的最终场地的出租车中,然后在反光镜中看到了作为司机的大魔王(.<br>我超怂的就跳车了.</p>
<p>RPG北欧片场竟然还有后续.<br>坑爹之又梦到我是勇者.<br>习得了水系的技能后,发射小型冰锥是我的得意也是唯一技能(对啊我竟然有技能了!).<br>追逐且躲着终于打败了大魔王之后,导演组说要拍第二季然后大魔王就这么幽幽的复活了还多带了个吸血鬼乱七八糟的技能.<br>哇,你是在跟说我之前的血与泪都是在凑时间吗.</p>
<p>RPG系列之我是现代勇者.<br>被花式吊打.<br>拼命抢到的左轮没有子弹,因为是连续吊打所以想这这次要死也要死在自己手里,就跳窗被树木扎死了.<br>然后大屏幕幽幽的飘荡着【其实主角是那棵树哟】的要有几多恨的黑幕.</p>
<p>我努力练习的一点点在梦里飞行能力其实一点用都没有.<br>飞的最持久的一次是地板上都是鳄鱼我只好贴着天花板再多一点再多一点.<br>想想去年(梦境意味)遇到枪击战只敢在广场灌木丛旁抱头的那个主角进化到了双枪老太婆(.</p>
<p>求求管理我梦境的神明大人不要再那么抖s了.</p>
<br>
<br>
<br>
]]></content>
  </entry>
  <entry>
    <title>0626</title>
    <url>/blog/0626/index.html</url>
    <content><![CDATA[<div class="note ">
            <p>前言:从梦中来的剧本,仅草草地修改了一下逻辑.</p>
          </div>

<br>
<br>

<p>因家庭原因而不好好上学有暴力倾向的问题男主.</p>
<p>老师是教生物的老师,在课上的知识除了生物甚至会讲到生命与社会与人.很吸引人.<br>男主难得回学校上学也是想听老师的课.在课上被打动(也给班长一个镜头).课后老师去找男主提升学计划表的事.受老师所劝,他作为再想努力一次的证明(?),放学后拿着升学计划表课后想去找老师商谈,然后目击到了老师的死亡现场.</p>
<p>因为是第一目击人,留下来跟警察对口径,途中发现自己班上的班长鬼鬼祟祟(?)的想要接近现场,于是去追到校舍后面逼问.<br>班长担当:东南西(靠).<br>然后班长跟他坦白,讲老师的秘密实验.因为实验还是未发布的情况所以希望警察不要带走老师的研究.</p>
<p>于是男主角被拉上贼船.</p>
<br>
<br>

<p>老师成立的小社团(秘密组织)有一定道德问题,老师在拿所有的自愿者做实验(包括他自己.<br>当作向人体植入皮表层下纳米机器人吧.<br>当然社团里原因参加的人各有各的原因(再讨论).</p>
<p>东南西:既然你在意,我偷出了最后一瓶实验药剂(纳米机器人).<br>(或者说紧急拿出吧,她作为一员肯定有钥匙)<br>如果你想要知道老师死亡的原因,帮我们一臂之力一起调查,就加入我们.<br>男主当然有震惊,是这样想的.<br>如果老师的正道的,那就用老师留下来的力量去报仇.<br>如果老师是道德败坏的,那由他来作为实验证据,然后狠狠报复老师.<br>(反正都是这样的人生了.<br>(老师对他来说是第一次想要信任的,正道派人物.所以这里的报复心就是”看啊你们正道派一个都不能相信”)</p>
<p>参加老师实验的人数未定.因为篇幅只想写两人(……).<br>从其他片场转学来的纪立德(冰雪聪明不多话,笔记上竟然还写了有女性恐惧)<br>和东南西,donna这次就由你当正道派女主角了.<br>被注入纳米机器人之后会获得一些超能力.<br>(附录从北海道转学来的三年级前辈和从冲绳来的现役东南西友人,表面上是“国际文化交流社团”,老师是顾问.被主角吐槽北海道和冲绳不算国际文化交流.)</p>
<br>
<br>

<p>等警察对实验楼(命案现场)解封之后,纪和东南带着男主(使用超能力)去调查.<br>能查到犯人四处捣鼓的痕迹,看上去的确想要查看些什么.也有在意实验架子上所有的瓶瓶罐罐.<br>如果要带走会有很多,也没有钥匙.<br>总之这里的作用是知道,</p>
<ul>
<li>1.犯人的确是奔着老师的研究来的</li>
<li>2.犯人还没有放弃</li>
<li>其余:犯人很可能是老师曾经提过的曾经的合作对象</li>
</ul>
<p>在这里纪会受伤,或者是带着其他的队员来调查,然后纪受伤(纪立德:?).<br>因为受伤,开始出现高烧和记忆相关障碍.(比如通过学生的超能力而)得知是接触了触碰类药物来消除纳米机器人.<br>纪立德是不想让他人碰他,可能也会引起其他人高烧,但东南执意比起这个更需要做其他紧急处理,处理伤口,意外发现物理触碰发烧状况有所好转.<br>社团的大家聚在一起,因为纪立德有少许女性恐惧,所以场面会有些喜剧(?)的大家尴尬握手.</p>
<p>通过推理,了解老师的研究,皮下纳米机器人通过对周围环境的分析计算,共鸣或利用,而产生超能力.<br>副作用是用纳米机器人也会管理超能力(实验)相关记忆和资料,所以不会留下物理证据.<br>(推测是不同人身体中的纳米机器人产生数据共享与修复,所以触碰能力者可以复原被消除的纳米机器人.)<br>(副作用是机器人中的数据也会备份,也就是超能力相关的记忆会因为触碰而共享.)<br>是更尴尬的握手.</p>
<br>
<br>

<p>报告这起事情,以及可能社团的大家也被盯上了,近期要多注意,社团活动中止.<br>北海道来的前辈当然是处于安全第一的立场,东南西是想继续调查的.<br>然后东南作出的决定是,希望大家不要受伤,但也很想保护老师的研究,所以两天后(周一)如果没有进展就向警察报告,寻求保护.<br>男主最初跟纪见过面的时候有握手,所以也有被拉来身体接触(?),同伴感有被感动(传统友人力量).<br>之后社团解散,大家回家,男主呆在社团中思考.<br>就让男主在第一目击的时候看到什么线索吧,然后看社团中大家收集的东西线索想到了什么,就回原现场(场景可以换)想要取什么,正好碰到凶手.<br>这时候可以让凶手打点嘴炮(这里的嘴炮指的更多是他在这项不道德研究的看法),凶手还准备用对付纪的方式下消除纳米机器的药物,然后这次不是触碰,而直接注射针扎到了男主,男主忍着痛把对方打得半死不活.<br>(人到底有没有死没有确定.)<br>对方嘴硬之后开始求饶(?),拷问对方是不是一个人(?),像是宣泄一样一边打一边使用出了自己的能力,能力也是攻击型,又一边嫌弃自己也只配打人,所以就由自己来做报复这件事.打完之后确认威胁消除男主就离开了现场.</p>
<br>
<br>

<p>梦里面是第一视角在高烧下去考试了(草).</p>
<p>可以改成,男主的确因为自己不想让其他社团的人知道这段记忆.<br>(再度插播一下设定,老师的技术能分别“能力相关”和“能力非相关”大脑内容,但还没能分别出“能力相关记忆和能力相关知识”.所以同步时纪能知道一些他人能力相关有趣的事,闹出了很多笑话.)<br>(这里按剧情设定是只限于机器人受物理破损同步时才会产生情报泄漏,也就是只有皮下机器人坏掉的时候同步才会把对方的记忆泄漏给能力者过去.普通触碰不会认知到信息同步.)<br>(同步是一直会同步的.)<br>男主在记忆渐渐消除时也体会到了发烧的痛苦,这时候可以见到东南,但男主没有寻求帮助.</p>
<br>
<br>

<p>这次暂定的结局是男主在记忆清除前交了老师一开始给他的未来计划表,自嘲着说下辈子有机会想当个好人,然后倒在了出学校的路上.<br>之后的结局可以写,男主因为暴力被送进少管所,因为没有记忆口供怎么也对不上,可能东南西做了假证明.<br>幕后黑手也可以因为杀人逮捕送劳里,男主是“在街上跟其他混混打架”的罪名蹲了一个月就出来了.<br>男主视角是一个奇怪的老师突然死掉了,还挺喜欢那个老师的,然后那个奇怪的老师的学生拉自己进入了一个奇怪的社团,不知道为什么之前的自己想要再努力一把,好麻烦啊,的傲娇结局(?).</p>
<p>*男主:从零开始的好好做人生活.</p>
<p>omake是有希子跟老师的实验数据分享记录(唐突).</p>
<br>
<br>
<br>

<div class="note ">
            <p>笔记:和U酱的交流.</p><ul><li>事件之后社团的各位是如何看待男主的.(故事中的道德问题?)</li><li>项目最后到谁手里的,还有在继续研究这个项目吗.(这个是omake介绍有希子的原因呢.)</li><li>如果老师也是有超能力的一员的话,是如何被杀的.(的确,虽然很喜欢超能力但没有人的份都得好好设计一下.)</li></ul>
          </div>
]]></content>
  </entry>
  <entry>
    <title>0510</title>
    <url>/blog/0510/index.html</url>
    <content><![CDATA[<div class="note ">
            <p>前言:这份只有设定.那次的梦人物记得清楚但剧情忘得干净.<br>(类)中国校园背景设定.</p>
          </div>

<p>如果看过了东南西片场的话,这里是那位女性恐惧症患者,纪立德所在的原片场.</p>
<h2 id="基本设定"><a href="#基本设定" class="headerlink" title="基本设定"></a>基本设定</h2><p>有近乎百种的偏门学科可以充当分数,当然主修和辅修的分比重不一样.<br>也可以自己申请新学科.<br>获得的分数作为各个纬度,是基础数值.<br>运动和体育是向全体推崇并热衷的,因为那是唯一的HP值获得方式.<br>可以用自己引以为傲的血液成果来申请召唤武器.<br>单单的满分/高分卷子是不够的.会推荐使用超出学校番位的成果.<br>在自己的探索(和兴趣指引下)得到的整个系统也是希望学生在高分专业前尽可能地去探索自己的能力与兴趣点.</p>
<p>向系统预约和宣战可以登录和抽选比赛内容和在学校内展开的超能力区域,学生在特定的能力操作自己的分身.<br>(是可以在开战途中在登录教室之间移动的,只是真正打架的不是自己,而是小型无人机所投射的幻影.)</p>
<p>作弊是严谨制止并看管很严的,一旦发现并用在比赛中会遭到停学或退学或劳动值班等不等的处罚.</p>
<br>
<br>
<br>

<h2 id="人物"><a href="#人物" class="headerlink" title="人物"></a>人物</h2><h3 id="景明洋"><a href="#景明洋" class="headerlink" title="景明洋"></a>景明洋</h3><p>杂学很厉害,参加很多的项目考核所以基础数值非常高.<br>会参加杂学比赛.<br>国内的节目的话就是一站到底或者最强大脑那样的综艺了.<br>黑发不短,很自信.</p>
<h3 id="纪立德"><a href="#纪立德" class="headerlink" title="纪立德"></a>纪立德</h3><p>冰雪聪明学物理.偏蓝色蓬蓬的头发.带菱形(?)镜框的眼镜,也有些女性恐惧.<br>武器是大学物理竞赛练习册/模拟卷.有雀斑.</p>
<h3 id="秦子柯"><a href="#秦子柯" class="headerlink" title="秦子柯"></a>秦子柯</h3><p>艺术生,学生会长.<br>当学生会长是因为好玩,社交小王子,会跟很多人打交道.<br>喜欢摄影.是军师.也很喜欢比赛,好胜.<br>头发偏黄.</p>
<br>

<p>以上是人称X中三君子.自由组合赛的时候经常一起组队.经常被当作必胜组合.</p>
<h3 id="赵家赵"><a href="#赵家赵" class="headerlink" title="赵家赵"></a>赵家赵</h3><p>(不得不说这个梦到的名字真是厉害阿……)<br>是梦中的第一视角.是最后加入的.<br>(最后混入三君子的小弟.)<br>在一次的运送赛上代替其中的一名成员,临时去高年级参加英语小测,申请得到了适合的刺杀(?)武器,帮助取得了胜利.<br>是纪立德的迷弟,在运动会给纪立德送花然后阴差阳错送回了自己手上,做成了干花收藏.(好怪阿!!!)</p>
<p>加入后跟秦子柯会一人演白脸一人演黑脸.(当然赵家赵演的是黑脸.)<br>是油嘴滑舌的人,偏科基础数值不高,是唯一的学渣.<br>然后被吐槽营业式悲伤脸.</p>
<br>

<p>在赵家赵加入前一直有个好搭档的黑哥同伴.<br>这个学校是有留学生的,大多是非洲来的.很少是北美及欧洲人,有也要么是随着父母来做生意的或者外交官的孩子.</p>
]]></content>
  </entry>
  <entry>
    <title>0711</title>
    <url>/blog/0711/index.html</url>
    <content><![CDATA[<div class="note ">
            <p><a href="https://mazui3.com/blog/2021/09/18/P211/">oc旧图log</a>中提到的神秘萝莉大叔组合.<br>原记录于20160711.<br><del>从记载oc变成记载梦了呢.</del><br>跟记忆有些许偏差,不过这两位不会收入进图书馆所以没关系(?).</p>
          </div>

<br>
<br>

<p>在梦境里有时自己会成为和现实总的自己不一样的角色.我把它当做一个看着别人事情的第一视角.<br>能记得最早的事情是最在汽车上.在停车场内.<br>第二排最靠右的位置,还记着安全带.</p>
<p>也许能感觉到视角比较矮,这次是我是位幼女啊wwww这样的感觉.<br>车里就我一个人.<br>然后靠我这边的车窗就开始溅血了.有位男的正在试图去除另一个人的肝还有心脏.<br>手法十分粗暴.<br>记得当心想的是唔啊这次遇上了器官贩子了得找个方法逃才行.</p>
<p>（在梦中逃跑真的是我最擅长的事情……）</p>
<p>考虑着忘左边的门出去,那位犯人（姑且就这么称呼吧）从左边把门开了把那人丢了上来.<br>然后从驾驶座上车了.<br>那人还活着,当时已经少了一个肝了.生命力真是顽强.<br>停车场那里也没什么人,小女孩的脚力也不行,在想着办法的时候.</p>
<p>【走咯】←犯人<br>【哦】←我</p>
<p>咦<br>等等.<br>…………………………<br>我和他是一伙的吗？？？？？是这个意思吗？？？？？？</p>
<p>然后故事就变成了冷酷型幼女与笨蛋器官贩子（新手）了.<br>……这是什么名字.<br>不是我说…那犯人能笨的地方真的很笨.</p>
<br>

<p>第二次下手是位女士.</p>
<p>记得他在医院的门口就这么下手了.<br>然后遇上了证人,是医生或者护士.<br>…这绝对不会发现的啊找个至少偏僻小巷子难道不是根本吗.</p>
<p>然后我（那位幼女）提议说把她送进去抢救.<br>……虽然不是很懂但是幼女这个主意还是可以的吧.<br>然后还送进手术室之后医生说要出示那位女士的证件.<br>可能是说要证明关系.<br>如果只是说无关系的路人也行吧.</p>
<p>然后那位幼女叫犯人去修改女士的证件.<br>…不过最后是幼女（我）来做了.</p>
<p>顺便一提幼女很自信然后我一点都不知道怎么下手……<br>先是躺在病房最左边…然后躲在床下去修改.<br>旁边还是同伙与医生在聊天（拖时间）.</p>
<p>好在梦里的修改十分简单,记得是本来就有的修正带一样的东西一挂就没有了.<br>大体就这两件案件,其他记不清了.</p>
<p>顺便一提那位没肝的小伙子最后也成了同伙…中间发生了什么简直像是错过了一个世纪……</p>
<p>说起来虽然看上去是冷静型小姐姐在引导,但是幼女每次出门的时候笨蛋犯人都在守着,不知道是接幼女呢还是一种监视.<br>嘛,毕竟我自己比较怕他,也没搞清人物身份.</p>
<p>醒来后还思考了一会儿.<br>想起了之前黑道家的小姐姐的闺蜜,这么个角色,竟然是同一个人.<br>不过是混成怎么样才到跟这无逻辑犯人组合的……明明上一次见面你那么的帅.</p>
]]></content>
  </entry>
  <entry>
    <title>1031</title>
    <url>/blog/1031/index.html</url>
    <content><![CDATA[<div class="note ">
            <p><a href="https://mazui3.com/blog/2021/09/18/P211/">oc旧图log</a>中提到的木柑子社长trick or treat.<br>原记录于20161031.<br>小林视角.<br>很短.</p>
          </div>

<br>
<br>

<p>放学后去社团的时候遇到的是正在扮演上吊的社长.<br>这整人的效果不是一般的好.<br>无论是愚人节还是万圣节也努力过头了一点吧.<br>顺便一提这人因为脖子上及了死结只好一动不动的站在桌子上等我过来.<br>这人会不会有一天一不小心自己死掉啊.<br>按照约定我带来了些巧克力,社长收下了说是恶作剧成功的奖励.<br>然后说我的糖果得在下一个进社团的人恶作剧才能拿到.<br>真是一如既往的风格.</p>
<p>我还真没想过要怎样吓人,不过好在这个部室里什么稀奇古怪的东西都有.<br>把那硕大的铠甲套在了身上,紧贴着移门等候着.<br>就算已经是十月的天铠甲里却十分闷热.<br>听着走廊的每有路过的脚步声就紧张起来.<br>好像有些明白为什么就算手忙脚乱的打好结也要想吓到人.</p>
<p>【啊——!】<br>【唔啊】<br>完全没有心理准备被一拳打到了头.<br>好疼.<br>摘下头盔看着木之原蹲在地上揉着手.<br>收到的是一盒盐津海带.是百元的便当伴侣吗.<br>【家里没有糖果了对不起……】<br>社长也有带糖果来啦每人都有的.反过来安慰了对方.<br>喊着好好好下一位下一位,社长的情致还很高啊.</p>
<p>【今天和男朋友去约会了诶嘿嘿所以不来啦(heart)】<br>——这时收到了来自学妹的简讯.<br>于是社长临时决定去隔壁社团继续trick or treat.</p>
]]></content>
  </entry>
  <entry>
    <title>ReadMe</title>
    <url>/blog/about/index.html</url>
    <content><![CDATA[<p><img src="cover.png"></p>
<hr>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>感谢来访!!<br>这里是Mazui3的个人博客.</p>
<br>
<br>

<img src="cry_meme.png" style="width:40%;height:40%;" alt=“老兔哭哭”>

<hr>
<h2 id="中之人"><a href="#中之人" class="headerlink" title="中之人"></a>中之人</h2><p>笔名是Mazui,称呼是麻醉.老熟人也叫我里约.<br>普通家里蹲.驱动力是99%的兴趣和1%的承诺.<br>五分钟热度.见识少,梦想是读很多很多的书.</p>
<blockquote>
<p>某个post讲了关于博主名字的来源和两位形象的设定-&gt;<a href="https://mazui3.github.io/blog/2018/12/30/P046/">麻醉和里约.</a>  </p>
</blockquote>
<br>
<br>

<hr>
<h2 id="这个博客的使用准则"><a href="#这个博客的使用准则" class="headerlink" title="这个博客的使用准则"></a>这个博客的使用准则</h2><p>如果把其他使用平台比作餐厅的话,这里可以理解成餐厅后厨房一样的存在.</p>
<h3 id="准则"><a href="#准则" class="headerlink" title="准则"></a>准则</h3><ul>
<li>内容包括并不限于自己的 <em>画,生活,笔记和唠嗑</em> .</li>
<li>也有备份别人给我的图,作者有标注其他联系方式,没有标注的是对方没有营业用账号.</li>
<li><strong>不要转载.</strong> 图片的保存ok! <strong>任何使用不可.</strong></li>
<li>为个人保存记录而使用.</li>
<li>博主编码技术稀烂,在各种意想不到的地方都可以有bug,提前道歉orz.</li>
</ul>
<br>
<br>

<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p><strong>电脑的左侧</strong> 以及 <strong>手机的上方</strong> 是博客的页面栏.</p>
<ul>
<li><ins>Home</ins>: 博文主页面</li>
<li><ins>Readme</ins>: 这份说明</li>
<li><ins>Tags</ins>: 文章标签<br>包括 <strong>学习用标签</strong> [R][SQL][python] 等,<a href="https://mazui3.github.io/blog/2021/04/05/P181/"><strong>oc标签</strong></a> [在日落之前][卡尔马] 等,<strong>生活用标签</strong> [Thank you Mr.goose][民以食为天][年终总结]等.</li>
<li><ins>Categories</ins>: 文章种类</li>
<li><ins>Archives</ins>: 归档</li>
<li><ins>Schedule</ins>: <a href="https://mazui3.github.io/blog/2020/03/09/P086/">ddl</a>值班点</li>
<li><ins>FriendLink</ins>: <del>绝佳招募中</del> 的友联</li>
<li><ins>Back</ins>: 返回导航页</li>
</ul>
<br>
没有归纳在页面栏的页面: Commission:[委托](https://mazui3.github.io/blog/commission/)记录

<br>
<br>

<hr>
<h2 id="报告-2021-11-21更新"><a href="#报告-2021-11-21更新" class="headerlink" title="报告(2021.11.21更新)"></a>报告(2021.11.21更新)</h2><ol>
<li>更新评论系统,从gitalk换成disqus.添加无登陆点赞/评论,需要翻墙.</li>
<li>添加导航页面,导航mazui3.com的网址会跳转到github地址的博客.</li>
<li>添加<a href="https://mazui3.github.io/blog/2021/05/13/P195/">博客制作记录</a>.</li>
<li>添加<a href="https://mazui3.github.io/blog/commission/">委托页面</a>,停止中所以没有添加到页面栏中.</li>
<li>今年笔记更新偏多,名为<a href="https://mazui3.github.io/blog/tags/%E5%A5%BD%E4%BD%9C%E5%93%81%E8%A1%A5%E5%85%A8%E8%AE%A1%E5%88%92/">好作品补全计划</a>的读后感系列正绝佳拖稿中.</li>
<li>添加<a href="https://mazui3.com/blog/2021/08/08/P199/">oc草稿导航页面</a>,因为害羞所以是锁文.</li>
</ol>
<br>
<br>

<hr>
<p>谢谢阅览,祝你生活平安.  </p>
<br>
<br>

<p><img src="teaTime.png" alt="你发现了夕阳和Ada喝下午茶的地方(??)"></p>
<blockquote>
<p>图：oversleep <a href="https://twitter.com/oversleep__">twi</a></p>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>Categories</title>
    <url>/blog/categories/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>Commission</title>
    <url>/blog/commission/index.html</url>
    <content><![CDATA[<p>这里存放以前的委托图.<br>虽然通过了<a href="https://www.mihuashi.com/users/mazui">米画师</a>,因为各种原因委托正 <strong>无期限绝赞停止</strong> 中.</p>
<br>
<br>
<br>

<h2 id="组图"><a href="#组图" class="headerlink" title="组图"></a>组图</h2><div class="gallery-page">
    <div class="gallery-list">
        <div class="gallery-column">
            <img src="img/001.png">
            <img src="img/002.png">
        </div>
        <div class="gallery-column">
            <img src="img/003.png">
            <img src="img/004.png">
        </div>
    </div>
</div>

<br>
<br>
<br>

<h2 id="人物设计"><a href="#人物设计" class="headerlink" title="人物设计"></a>人物设计</h2><div class="gallery-page">
    <div class="gallery-list">
        <div class="gallery-column">
            <img src="img/016.png">
        </div>
        <div class="gallery-column">
            <img src="img/015.png">
        </div>
    </div>
</div>

<br>
<br>
<br>

<h2 id="chibi"><a href="#chibi" class="headerlink" title="chibi"></a>chibi</h2><div class="gallery-page">
    <div class="gallery-list">
        <div class="gallery-column">  
            <img src="img/006.png">
            <img src="img/010.png">
            <img src="img/012.png">
            <img src="img/007.png">
            <img src="img/013.png">
        </div>
        <div class="gallery-column">
            <img src="img/008.png">
            <img src="img/009.png">
            <img src="img/014.png">
            <img src="img/018.png">
            <img src="img/011.png">
        </div>
    </div>
</div>

<br>
<br>
<br>

<h2 id="半身"><a href="#半身" class="headerlink" title="半身"></a>半身</h2><div class="gallery-page">
    <div class="gallery-list">
        <div class="gallery-column">
            <img src="img/005.png">
        </div>
        <div class="gallery-column">
            <img src="img/017.png">
        </div>
    </div>
</div>
]]></content>
  </entry>
  <entry>
    <title>agreement</title>
    <url>/blog/agreement/index.html</url>
    <content><![CDATA[<p>关于博客评论使用原则以及常见问答.<br>更新于2021.08.08🌧️</p>
<h2 id="使用原则"><a href="#使用原则" class="headerlink" title="使用原则"></a>使用原则</h2><p>本博客是完全为<strong>个人向</strong>使用而制作的博客.<br>没有改变他人思想的意愿和目的,如果真有什么内容有帮助我很开心,但没有也很正常.<br>评论可以回复gif/图片+未登录评论+可以点赞的设置(需要翻墙).<br>没有交钱,功能有限制和广告.</p>
<p>关于内容:</p>
<ul>
<li>只要没有冒犯就没有理由删除.</li>
<li>博主<strong>很喜欢很喜欢很喜欢</strong>看评论,很喜欢建设性意见,点赞也很开心.</li>
<li>但博主没有<strong>义务</strong>回复所有评论.</li>
</ul>
<p>如果能接受这点,非常非常欢迎以及感谢评论.</p>
<h2 id="常见问答"><a href="#常见问答" class="headerlink" title="常见问答"></a>常见问答</h2><p>现在没有任何问答.</p>
<p><img src="loading_b.gif" alt="吐司面包机"></p>
<p>感谢阅读!</p>
]]></content>
  </entry>
  <entry>
    <title>Link</title>
    <url>/blog/link/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>0421/ending</title>
    <url>/blog/0421/ending/index.html</url>
    <content><![CDATA[<h2 id="【面临火山喷发危机】"><a href="#【面临火山喷发危机】" class="headerlink" title="【面临火山喷发危机】"></a>【面临火山喷发危机】</h2><p>喷发分两个阶段。第一个阶段是温和型喷发(夏威夷式喷发)，岩浆只是溢流出来(怪物为输送孩子做准备)。这个时候是可以选择行动的。<br>岩浆移动缓慢，范围少，可以接近火山并攀登。<br>这时候攀登需要每半小时过体质抗争少许火山灰的影响。会损伤呼吸系统和视力。<br>大约5小时后是大喷发(普林尼式喷发)。会涌出火山碎屑流(BE标致)火山气体喷射到高空，并扩散到远处。<br>(5小时就是能从零开始接近登顶但是无法回来了。)<br>(所以无法延迟/消除，就会死在火山上面。)</p>
<h2 id="【延迟火山喷发】"><a href="#【延迟火山喷发】" class="headerlink" title="【延迟火山喷发】"></a>【延迟火山喷发】</h2><ul>
<li><p>如果能意识到龙虾君和火山之间的关系。在面临最终时间点的时候逆行，带着龙虾君去见怪物君。龙虾君会突然感情化，会引领调查员将它丢入火山中。<br>怪物意识到自己的孩子丢失，会暂时缓和喷发，之后脱离险境的调查员的抉择会直接影响到结局。</p>
</li>
<li><p>第二种可能性是阻扰仪式的进行。这种可能性下会有少许的火山喷发，21号之后可以出海，调查员可以离开。</p>
</li>
</ul>
<h2 id="【消除火山喷发】"><a href="#【消除火山喷发】" class="headerlink" title="【消除火山喷发】"></a>【消除火山喷发】</h2><p>达成条件讲真有点难。有那么点以防踢门所以写了的意思。<br>也就是让怪物君在喷发前死亡了。物理意义上做不到，怪物生长到快吸食完整块大地，大小是跟岛屿本身大半块差不多大的。只能从信仰角度上了。<br>劫持电视台，关于火山的直播节目。让民众对于火山的信仰产生少许的动摇也好，神祗意义上会削弱。会产生不成功的喷发，不至于封岛(只是台风那样的感觉)，当然土地之后还是会死去。<br>之前的调查如果有开关于信仰方面的，像是教堂一类的地图。也可以试图打劫神父。打劫神父需要提前一天，无法在火山正要喷发的当即达成这条线。<br>劫持和说服都很难以及很需要依靠数值和物理意义说服。两者调查员如果不是很能同时做到，建议不给过这条线。</p>
<p>能延期/阻止火山喷发，就有安葬余芝的剧情了。28号安葬。</p>
<h2 id="日后谈，后辈君去事故的地方献花。"><a href="#日后谈，后辈君去事故的地方献花。" class="headerlink" title="日后谈，后辈君去事故的地方献花。"></a>日后谈，后辈君去事故的地方献花。</h2><p>真是败给你了，你感觉余芝会这么说。谢谢你的日记，你说，如果不是你留下的记录，我们也不会走到这里。<br>你知道她不会回复，但又好像听到了她轻轻的笑声。<br>风吹过树海，余芝会不会和你一样也在看着远方的山呢。<br>那是美丽的，我们每天都能仰望到的大山。<br>大山碧绿，一如既往。</p>
<h2 id="【未能阻止火山喷发】"><a href="#【未能阻止火山喷发】" class="headerlink" title="【未能阻止火山喷发】"></a>【未能阻止火山喷发】</h2><p>火山灰笼罩全了天空，灰色的洪流(火山碎屑流)涌出，高温吞噬房屋，吞噬小镇，吞噬它所经过的一切。<br>过极难幸运能幸存，幸存默认1hp。<br>只能听到外部的新闻报道。数月温度平均下降2度。火山两周内持续释放大量参着龙虾君们的火山灰。整个岛变成死岛，和其群岛一样不适合生物生存。无人幸免。靠近岛屿的大陆农产业开始突然发展。<br>此后这片岛屿只剩下各种怪谈传说，这大规模的灾难吸引了不少人群和学者来考察研究，没有人知道真实的经过。<br>只有大山依旧在那里。</p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/blog/secret/index.html</url>
    <content><![CDATA[<h5 id="偷偷存放在这里的"><a href="#偷偷存放在这里的" class="headerlink" title="偷偷存放在这里的"></a>偷偷存放在这里的</h5><br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>


<div class="gallery-page">
    <div class="gallery-list">
        <div class="gallery-column">
      <img src="img/004.jpeg" alt="D">
            <img src="img/030.jpg" alt="黒溯">
            <img src="img/010.jpg" alt="とりのめ">
            <img src="img/014.jpg" alt="游">
            <img src="img/003.jpeg" alt="D">
            <img src="img/007.jpg" alt="朽鸦">
            <img src="img/011.jpg" alt="あおあそ">
            <img src="img/031.jpg" alt="科学植树">
            <img src="img/070.jpg" alt="ネリ夫">
            <img src="img/019.jpg" alt="イ骨">
            <img src="img/005.jpg" alt="兎鷺ぬい">
        </div>
    </div>
</div>

<br>
<br>

<div class="gallery-page">
    <div class="gallery-list">
        <div class="gallery-column">
            <img src="img/013.jpg" alt="あおあそ">
            <img src="img/067.jpg" alt="昼間">
            <img src="img/018.jpg" alt="RaV²">
            <img src="img/017.jpg" alt="むじ">
        </div>
        <div class="gallery-column">
            <img src="img/016.jpg" alt="あおあそ">
                <img src="img/009.jpg" alt="昼間">
                    <img src="img/008.jpg" alt="まみむ">
            <img src="img/015.jpg" alt="oyama">
        </div>
    </div>
</div>

<br>
<br>

<div class="gallery-page">
    <div class="gallery-list">
        <div class="gallery-column">
            <img src="img/020.jpeg" alt="独木乔">
            <img src="img/029.jpg" alt="桐黑">
        </div>
        <div class="gallery-column">
            <img src="img/021.jpg" alt="きう">
            <img src="img/022.jpeg" alt="柚皮">
        </div>
    </div>
</div>

<br>
<br>

<div class="gallery-page">
    <div class="gallery-list">
        <div class="gallery-column">
            <img src="img/001.jpg" alt="Oversleep">
            <img src="img/024.jpg" alt="朽鸦">
            <img src="img/051.jpg" alt="K4RI">
        </div>
        <div class="gallery-column">
        <img src="img/002.jpg" alt="Oversleep">
          <img src="img/025.jpg" alt="朽鸦">
            <img src="img/052.jpg" alt="K4RI">
        </div>
    </div>
</div>

<br>
<br>

<div class="gallery-page">
    <div class="gallery-list">
        <div class="gallery-column">
            <img src="img/066.jpg" alt="游">
            <img src="img/039.jpg" alt="过滤锡">

<pre><code>    &lt;/div&gt;
    &lt;div class=&quot;gallery-column&quot;&gt;
    &lt;img src=&quot;img/044.jpg&quot; alt=&quot;narakbyeol&quot;&gt;
    &lt;img src=&quot;img/026.png&quot; alt=&quot;初代&quot;&gt;

    &lt;/div&gt;
    &lt;div class=&quot;gallery-column&quot;&gt;
      &lt;img src=&quot;img/027.jpg&quot; alt=&quot;酉野&quot;&gt;
        &lt;img src=&quot;img/064.jpeg&quot; alt=&quot;sofw0&quot;&gt;
    &lt;/div&gt;
&lt;/div&gt;
</code></pre>
</div>

<br>
<br>

<div class="gallery-page">
    <div class="gallery-list">
        <div class="gallery-column">
         <img src="img/046.jpg" alt="rei1oo">
        </div>
        <div class="gallery-column">
        <img src="img/033.jpg" alt="drifter">
        </div>
    </div>
</div>

<br>
<br>

<div class="gallery-page">
    <div class="gallery-list">
        <div class="gallery-column">
            <img src="img/032.jpg" alt="いお">
        </div>
        <div class="gallery-column">
            <img src="img/034.jpg" alt="兎鷺ぬい">
        </div>
    </div>
</div>

<br>
<br>

<div class="gallery-page">
    <div class="gallery-list">
        <div class="gallery-column">
        <img src="img/023.jpg" alt="MARU">
             <img src="img/036.png" alt="MOKUROH">
        </div>
        <div class="gallery-column">
            <img src="img/065.jpg" alt="052">
            <img src="img/035.png" alt="兎鷺ぬい">
        </div>
    </div>
</div>

<br>
<br>

<div class="gallery-page">
    <div class="gallery-list">
        <div class="gallery-column">
            <img src="img/040.png" alt="荒境TS">
        </div>
        <div class="gallery-column">
        <img src="img/012.png" alt="hama">
        </div>
    </div>
</div>

<br>
<br>

<div class="gallery-page">
    <div class="gallery-list">
        <div class="gallery-column">
        <img src="img/048.jpg" alt="升天">
            <img src="img/043.jpg" alt="mmmmuda">
            <img src="img/050.jpg" alt="真犬">
        </div>
        <div class="gallery-column">
        <img src="img/049.jpg" alt="とりのめ">
        <img src="img/045.png" alt="automeruz">
            <img src="img/047.jpg" alt="乌之">
        </div>
    </div>
</div>



<br>
<br>

<div class="gallery-page">
    <div class="gallery-list">
        <div class="gallery-column">
            <img src="img/041.jpg" alt="乐杭">
        </div>
        <div class="gallery-column">
        <img src="img/042.jpg" alt="乐杭">
        </div>
    </div>
</div>

<br>
<br>

<div class="gallery-page">
    <div class="gallery-list">
        <div class="gallery-column">
            <img src="img/071.png" alt="离若">
        </div>
        <div class="gallery-column">
        <img src="img/072.png" alt="离若">
        </div>
        <div class="gallery-column">
        <img src="img/073.png" alt="离若">
        </div>
    </div>
</div>

<br>
<br>


<div class="gallery-page">
    <div class="gallery-list">
        <div class="gallery-column">     
            <img src="img/057.png" alt="link">
            <img src="img/058.png" alt="Jason">
            <img src="img/059.gif" alt="朽鸦">
            <img src="img/060.jpg" alt="可是我的暴風雨無處落下">            
        </div>
        <div class="gallery-column">     
            <img src="img/053.gif" alt="初代">
            <img src="img/054.gif" alt="初代">
            <img src="img/061.png" alt="威零">
            <img src="img/062.png" alt="axe">
            <img src="img/000.png" alt="fanniko">
        </div>
        <div class="gallery-column">     
          <img src="img/069.png" alt="alicenpai">
            <img src="img/055.jpg" alt="朽鸦">
            <img src="img/056.jpg" alt="朽鸦">
            <img src="img/068.jpg" alt="Yuu">
        </div>
    </div>
</div>

<br>
<br>
<br>
<br>
<br>
<br>

<div class="note ">
            <p>昼間 <a href="https://twitter.com/22irum">twi</a><br>RaV² <a href="https://twitter.com/122px_SHEOL">twi</a><br>むじ <a href="https://twitter.com/uimss">twi</a><br>独木乔 <a href="https://weibo.com/u/5537395666?topnav=1&wvr=6&topsug=1&ssl_rnd=1608788424.9403&is_all=1">weibo</a><br>柚皮 <a href="https://weibo.com/u/2838392911?topnav=1&wvr=6&topsug=1&ssl_rnd=1610647299.2948">weibo</a><br>D <a href="https://weibo.com/u/3795555891?topnav=1&wvr=6&topsug=1&ssl_rnd=1610635088.5232">Weibo</a><br>酉野 <a href="https://twitter.com/TORI_NO_s">twi</a><br>兎鷺ぬい <a href="https://twitter.com/U3GN1">twi</a><br>hama <a href="https://twitter.com/Hamha_S">twi</a><br>初代 <a href="https://weibo.com/u/6925007932?ssl_rnd=1607234112.7211">weibo</a><br>朽鸦 <a href="https://weibo.com/kurooooo?ssl_rnd=1607234148.0755">weibo</a><br>sofw0 <a href="https://twitter.com/sofw0">twi</a><br>052 <a href="https://twitter.com/saniiiwan">twi</a><br>游 <a href="https://twitter.com/stdio_nameraka">twi</a><br>とりのめ <a href="https://twitter.com/dobunomeme">twi</a><br>黒溯 <a href="https://twitter.com/kurohush">twi</a><br>あおあそ <a href="https://twitter.com/njosau">twi</a><br>科学植树<a href="https://weibo.com/u/5283504305?topnav=1&wvr=6&topsug=1&ssl_rnd=1621026354.9726"> weibo</a><br>イ骨 <a href="https://twitter.com/iihoneikotu">twi</a><br>oyama <a href="https://twitter.com/__oyama___">twi</a><br>まみむ <a href="https://twitter.com/ko_cha_22">twi</a><br>きう <a href="https://twitter.com/kyuuri_5656">twi</a><br>Oversleep <a href="https://twitter.com/oversleep__">twi</a><br>K4RI <a href="https://twitter.com/kari_kakakari">twi</a><br>MARU <a href="https://twitter.com/ara_itao">twi</a><br>いお <a href="https://twitter.com/iooo666">twi</a><br>荒境TS <a href="https://twitter.com/kM2o4">twi</a><br>drifter <a href="https://twitter.com/drifter_matsu">twi</a><br>rei1oo <a href="https://www.instagram.com/rei1oo/">ins</a><br>mmmmuda <a href="https://twitter.com/mildough">twi</a><br>alicenpai <a href="https://twitter.com/alicenpai">twi</a><br>Yuu <a href="https://twitter.com/yuuinai">twi</a><br>fanniko <a href="https://twitter.com/Nikooo2016">twi</a><br>link <a href="https://www.pixiv.net/users/6063300">pixiv</a><br>Jason <a href="https://twitter.com/p_enporo">twi</a><br>automeruz <a href="https://www.instagram.com/automeruz/">ins</a><br>ネリ夫 <a href="https://twitter.com/neri_akira">twi</a><br>narakbyeol <a href="https://www.instagram.com/narakbyeol/">ins</a><br>MOKUROH <a href="https://weibo.com/fukurooou?ssl_rnd=1621040300.9621&is_all=1">weibo</a><br>可是我的暴風雨無處落下 <a href="https://weibo.com/u/3707957815?topnav=1&wvr=6&topsug=1&ssl_rnd=1621040171.0308&is_all=1">weibo</a><br>桐黑 <a href="https://weibo.com/u/3894744642?topnav=1&wvr=6&topsug=1&ssl_rnd=1621040942.523&is_all=1">weibo</a><br>威零 <a href="https://weibo.com/u/2078903965?topnav=1&wvr=6&topsug=1&ssl_rnd=1621041387.5922">weibo</a><br>axe <a href="https://weibo.com/axe0527?ssl_rnd=1621041424.3589&is_all=1">weibo</a><br>离若<a href="https://weibo.com/u/6348610869?topnav=1&wvr=6&topsug=1&ssl_rnd=1610168204.5878&is_all=1#_rnd1610168217973">weibo</a> &amp; <a href="https://twitter.com/quanshanlizi">twi</a></p>
          </div>
]]></content>
  </entry>
  <entry>
    <title>Schedule</title>
    <url>/blog/schedule/index.html</url>
    <content><![CDATA[<style>
h1 {text-align: center;}
p {text-align: center;
color: #de6954; }
div {text-align: center;}
</style>

<img src="ddl.PNG" alt="ddl看着你一片空白的计划表叹气" style="width:30%;height:30%;">

<p>漂流 -&gt; <a href="https://twitter.com/drifter_matsu">twi</a></p>
<br>

<div>

<p>🍰下一次的event——!!🍰</p>
<body>

<p id="demo"></p>

<script>

// Set the date we're counting down to
var countDownDate = new Date("Dec 24, 2021 12:00:00").getTime();

// Update the count down every 1 second
var x = setInterval(function() {

  // Get today's date and time
  var now = new Date().getTime();

  // Find the distance between now and the count down date
  var distance = countDownDate - now;

  // Time calculations for days, hours, minutes and seconds
  var days = Math.floor(distance / (1000 * 60 * 60 * 24));
  var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
  var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
  var seconds = Math.floor((distance % (1000 * 60)) / 1000);

  // Output the result in an element with id="demo"
  document.getElementById("demo").innerHTML = days + "d " + hours + "h "
  + minutes + "m " + seconds + "s ";

  // If the count down is over, write some text
  if (distance < 0) {
    clearInterval(x);
    document.getElementById("demo").innerHTML = "EXPIRED";
  }
}, 1000);
</script>

</body>

<p>🌲</p>
</div>
]]></content>
  </entry>
  <entry>
    <title>Tags</title>
    <url>/blog/tags/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/blog/0421/background/index.html</url>
    <content><![CDATA[<h2 id="时间轴"><a href="#时间轴" class="headerlink" title="时间轴"></a>时间轴</h2><p>0119 - 余芝被卷入事件<br>0227 - 余芝返回火山<br>0313 - 余芝拜访教堂，导致14号的仪式没有照常进行。<br>0320 - 余芝上传关于火山研究的论文。<br>0404 - 论文被驳回，2号时再次上传。<br>0413 - 坠崖事故，余芝死亡<br>0414 - 祭奠开始<br>0417 - 余芝的葬礼，事件开始<br>0421 - 事件结束<br>（0428 - 安葬）</p>
<h2 id="论文"><a href="#论文" class="headerlink" title="论文"></a>论文</h2><p>火山爆发有各种其他的因素。<br>会勘查的也是多方面的。<br>过去一万年内是否有过喷发。<br>现在岩浆库或者说热度的勘查，是否有烟与蒸汽(以及导致的声音)，周围是否有地震(地震波)。</p>
<blockquote>
<p><a href="https%EF%BC%9A//research%E3%80%82sinica%E3%80%82edu%E3%80%82tw/lin-cheng-horng-tatun-volcano-seismic-wave/">地震波</a></p>
</blockquote>
<p>(所有的火山都会喷出气体和熔浆。)</p>
<p>指明地震波不符合火山喷发的波动。</p>
<h2 id="宗教"><a href="#宗教" class="headerlink" title="宗教"></a>宗教</h2><p>【关于怪物的神祗】</p>
<p>巨大的物体就会诞生对其真真假假的传说。<br>关于怪物的祭奠。时间上正好可以加入当地的仪式。<br>教徒所聚集的场所，教堂大大小小有分散在岛屿的不同地方。最靠近山的是最初的，也算是总部的教堂。<br>教堂有一半没有屋顶，祷告的大厅是露天的。<br>教会参杂了些西方的，东方的，各种都有的又不精准的装饰。教堂本身的构造却有些类似基督教。<br>教徒所穿配的是两层防水的大袍。岛屿经常下雨，也包括仪式的日子。<br>当调查员来调查的时候可以是雨天。仪式是会在雨中进行。仪式的一部分是点燃所铺好的，沿着大厅四围的燃木引导，火在雨中蔓延，烧到神父背后的木架上。燃木里有加火山土。祷告结束时差不多开始火势变小（烧完了）。<br>雨会打在身上，神父的祷告和雨声林木声参合在一起。火的温度和雨的冰冷。木架上的火光正好盖着大山，大山像是会在火焰和祷告中肃听，重生，归于寂静。<br>整个教堂也是有不露天的场所。但作为保留，其他的分布小教堂也保留了露天祷告大厅（或者玻璃房）的习俗，虽然不一定能看到，但祷告室的方向也都是朝着山。</p>
<p>（跟教徒谈话）据说当初最先踏上这片土地的先辈带来了文化和习俗，宗教也是其中一部分。傍着山建造教堂，工程到一半是雷雨大作，屋顶的事一直都拖欠着。恶劣的天气一连几个月都不在好。想着硬是想把教堂建好的时候落了雷，认为是不吉的象征，放弃建造时却奇迹般的出晴。当时的教父认为这是大山的引导，在当时的宗教里融入了新的感悟习俗。原本基督教是世界的神明，大山是当地的神明。<br>关于每隔两个月的祭奠。祷告是每个月的14号都会进行的。每两个月的仪式会更正式一些。除去在教堂的祷告，一部分的信徒跟着神父去大山。<br>贡品以当即的谷物水果为主，在冬日蔬果不足的时候会用牲畜的毛皮来代替。<br>仪式不止一天。第一日祷告后会保留仪式时的火焰，将神父首先将贡品丢入烧至灰烬。之后持续三天信徒或本地村民陆续来拜访进贡，第五日收灰烬。第六日带着灰烬进入大山。一面跟着神父唱着词一面将灰烬沿途洒下。</p>
<h2 id="地底的怪物"><a href="#地底的怪物" class="headerlink" title="地底的怪物"></a>地底的怪物</h2><p>怪物与岛屿的关系。</p>
<p>可以理解为神祗意义上影响岛屿和物理意义上帮助繁荣。<br>物理上比如土地的肥沃是怪物带来的生理意义的蛋白质排放。<br>或者会产生石油那样的资源系型帮助。</p>
<h2 id="怪物的孩子"><a href="#怪物的孩子" class="headerlink" title="怪物的孩子"></a>怪物的孩子</h2><blockquote>
<p>[龙虾君]<br>颜色是黑，壳下有暗红。<br>大小是人类脑袋大小25-35cm，力量堪比成年男性。<br>（力量偏高是擅长挖地，龙虾君再次繁育会去新的大地底部再度成长。）<br>用触角的爬行速度慢，可以喷气飞行/冲击。<br>（在将来加入队伍的情况下）<br>对接触过矿石的探索者会表现得更粘人。<br>喜欢被投喂，看到探索者吃东西会想尝试。什么都喜欢吃，除了酸的。</p>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/blog/0421/intro/index.html</url>
    <content><![CDATA[<h2 id="【简介】"><a href="#【简介】" class="headerlink" title="【简介】"></a>【简介】</h2><p>这是一个关于我们的家乡，我们的过去，向其献上花束的故事。</p>
<h2 id="【关于】"><a href="#【关于】" class="headerlink" title="【关于】"></a>【关于】</h2><p>这是一份开放故事剧本。<br>最初的目的是写一份自由的，不考虑任何规则书和数据平衡的跑团剧本。<br>这个故事可以改编用于自己的跑团，也请自己添加判定和属性。<br>大纲中参考了杂乱的亚洲文化与地理。<br>兴趣驱使，无恶意。作者这个人学疏才浅，也请多见谅…</p>
<h2 id="【角色】"><a href="#【角色】" class="headerlink" title="【角色】"></a>【角色】</h2><p>主要角色是国小女老师，名叫余芝。温柔亲和，业余爱好是登山。年龄27岁。<br>两位探索者的角色一位是余芝定下婚约的伴侣，另一位是同为老师的后辈。<br>都为本地居民或长时间在本地生活。<br>可以加入0-2位npc。</p>
<p>以下剧本中的npc名为林文君。<br>余芝的大学同学，女性好友，登山爱好者也是一起飙车的车友。就职于报社。</p>
<p>剧本中伴侣的名为田有杰。后辈君叫巧家正。<br>后辈君的职业设定为刚就职的教师，同教国语，跟着余老师实习。<br>伴侣君的职业没有规定。田有杰的职业是证券公司职员。</p>
<h2 id="【世界观】"><a href="#【世界观】" class="headerlink" title="【世界观】"></a>【世界观】</h2><p>故事地点在架空的地方，一座岛屿之上。<br>土地肥沃，四季舒适，很适合居住。<br>岛屿中间有死火山，名为东山。<br>发展水平是手机及网络还未普及，生活朴实的年代。<br>大纲内日历使用的是2004年的日期。<br>两位探索者各有一段单人剧情。</p>
<h2 id="【故事幕后目标】"><a href="#【故事幕后目标】" class="headerlink" title="【故事幕后目标】"></a>【故事幕后目标】</h2><p>主要角色，余芝是精神已紊乱的前调查员。<br>剧本目的是调查她生前的经历，发掘她所看到的，关于我们的家乡，我们的构成背后的秘密。</p>
<p>家乡本身跟附近的岛屿一样，不适合生物居住。<br>死火山地下是怪物桑的所在处,而怪物桑是富裕岛屿活力的真正原因。</p>
<p>怪物本身也会吸食大地，带来片刻的繁荣。不单是人类，其他生物遇到也都会被资源吸引而来。<br>直到怪物死亡，那时候就是耗尽这片土地的时候。土地永久性死去，回归生物不适合居住的情况。<br>怪物桑会将自己的幼崽喷放到大气中，繁殖并寄生其他的土地。也就是火山喷发。<br>这时候岛屿是无法逃出的，封岛可以是电磁信号紊乱以及天气极其恶劣。</p>
<p>故事是怪物在繁衍的时候死亡，在台风封岛时和火山喷发前进行调查。</p>
<p>我们的调查员最后会选择如何面对家乡。</p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/blog/0421/plots/index.html</url>
    <content><![CDATA[<hr>
<p>title： ‘0421/plots’<br>date： 2020-11-29 00：03：12</p>
<hr>
<h2 id="【行动说明】"><a href="#【行动说明】" class="headerlink" title="【行动说明】"></a>【行动说明】</h2><p>每日白天行动约1-2个地点，爬山需要一整天，距离城镇近的行动消耗半天，按地图和投骰子决定具体时间。<br>按时间轴，在调查员行动的同时，宗教的仪式在山旁边也在进行，调查员何时能接触到教会教堂是需要每时都计算仪式的进行。<br>节假日以及星期按【2004年】为准，星期的设定可能会影响到特定地点的开放，请注意。</p>
<p>每日晚上结束行动时通过电视知晓第二天的天气。<br>第一天开始天气不佳，无法出海，之后的雨天与否按33%的降雨率投骰子，下雨自由行动每个事件会多消耗2小时。<br>获得余芝的日记后，晚上的行动除了电视与新闻外可以读日记。因为时间原因日记每日可以阅读的部分是有约束的。如果不是每日都读日记，可以选择阅读部分，或者随机。</p>
<p>请注意05年左右大家的手机还都是诺基亚或者翻盖手机，推特是06年开始的，所以定sns论坛不适用。<br>网络情报可以通过图书馆或网吧，以及学校机房等。调查员是否拥有个人电脑通过个人财产决定。</p>
<br>
<br>

<h2 id="【调查点】"><a href="#【调查点】" class="headerlink" title="【调查点】"></a>【调查点】</h2><p>本岛和周围各个小岛被统称为东陵群岛。本岛叫做东陵岛。死火山名为东山。<br>人口4百万人左右，不算小也不算太拥挤。<br>周围有共有39座小岛和开阔的海域，大多居民都在本岛居住。除本岛在外，岛屿面积均在1平方公里以下，其中5座涉有少许人居住。<br>本岛有两座城市，一座叫东山市，一座叫夏口市。<br>东山市处于的山南部的山脚，夏口市处于北边的码头。<br>东山市被火山分为【山北】和【山南】。南区是旧城区靠海，北区原本重农业与林业，最近也开始建造新居民区。<br>夏口市是旧时新移民登陆的地方，历史更久，但近些年才重新发展，设立北海岸新区，多与本国和各国贸易往来。<br>在这架空世界观中东陵处于的国家为联邦制。东陵有独立的行政政府。</p>
<br>
<br>


<h3 id="【夏口市博物馆】"><a href="#【夏口市博物馆】" class="headerlink" title="【夏口市博物馆】"></a>【夏口市博物馆】</h3><p>是本岛最大的博物馆。周一闭馆，其余开放时间早晨10点到下午17点。<br>这里是余芝的笔记中对应的拥有下颚骨文物的地方。<br>博物馆约有二十五年的历史，夏口市旧城区的中心。之后渐渐扩展，跟旁边的市公园合并。原先的公园成了动植物的分馆。<br>在新区最近在建科技馆的分馆。<br>调查员除了笔记中记载的文物外，可以看多些关于岛屿的历史。<br>有以下文物。</p>
<p>【搁浅的鲸鱼骨架和市中心鲸爆历史】<br>【富有的岛外人去世后捐献的一生之中收藏的动物标本收集】<br>【其他地方的工笔，书画，字帖，各朝官窑瓷器，成化斗彩，珐琅彩瓷】</p>
<p>久远些大多都是岛外来的，赠送或拍卖来的。</p>
<p>最近的特别展览是【古神兽出没】。展览的各个文化史前对不了解的动物，崇拜与小故事。<br>展出题材有龙，凤凰，麒麟，独角兽，人面狮身。<br>和展览放一起的还有向当地的孩子征集的创作，分为小学，中学，高中来展出。可以看到余芝和后辈君的学校。<br>后辈君因为有次胡子忘记刮被画成人面师身。</p>
<p>如果调查员是带有疑问的去博物馆，可以询问到博物馆的动植物标本，地质学样本。<br>博物馆可以询问馆长余芝办公室的【矿石碎片】。不属于任何已知的矿石。<br>可以将龙虾君交付或寄托给博物馆。<br>询问的话馆长会告知龙虾君不属于任何一种物种，但通过类似的动物推测，可以多了解到龙虾君的一些习性。</p>
<br>
<br>

<blockquote>
<p>葬礼结束后之后就可去整理遗物</p>
</blockquote>
<h3 id="派出所"><a href="#派出所" class="headerlink" title="派出所"></a>派出所</h3><p>葬礼结束后之后就可去整理遗物。<br>触发会在导入结束后，警方的调查结案，将当时的证物还给家人君。<br>可以获得余芝在事件时身上所带的东西。和事故时现场的图片，并无其他交通工具相撞。<br>除了日常和工作物品还有【一把小的钥匙】和【处方安眠药】。<br>日常和工作物品包括【女士小型手提包】【化妆品，价格平价】【钱包和存折，现金一千存款两万】【手机，品牌是诺基亚，白色】【驾驶证和身份证】【家门钥匙】【文曲星电子词典】【备课笔记】。</p>
<p>调查【文曲星电子词典】可以查到最近记录多是火山相关的单词。【备课笔记】中有今后两周左右的教学计划。【手机】大多通讯记录是跟家人君和父母，余芝的手机没有上网等其他功能，是非常简朴的款式。</p>
<br>
<br>

<h3 id="【余芝的住处】"><a href="#【余芝的住处】" class="headerlink" title="【余芝的住处】"></a>【余芝的住处】</h3><p>为了省钱选的是离学校不近也不远的地方。位于东山市新城区，五层的公寓楼，小区名为油油新村。<br>房子干净，周围也新，望远能看到农田。<br>余芝住五楼，是一厅一室的一人小家。客厅带厨房，有洗衣机，小阳台。<br>客厅无电视，有收音机和日历。是收音机和cd机二合一的设计，有皇后乐队的cd。五月天是家人君送给她的。<br>经典的曲目是五月天的【倔强】和Queen的【I Was Born To Love You】。<br>家人君喜欢听小青年华语，余芝喜欢听浪漫派外语，除这两个乐队外也听。<br>装修干净，木地板，白墙壁。柜子上会铺花格布，有盆五彩的假花。<br>物品不多，有一个架子是摆了少许的书和教师节礼物。大多是手工贺卡，用曲奇盒保存起来。</p>
<p>关于余芝房间里的书籍，愿意花些时间，可以把书单直接列举出来。<br>如果是草草观察，可以概括成文学，心理教育，小说和自然杂志。</p>
<p>字典词典(英文和中文)、文学简史、现代文学三十年、宋词唐诗选析、娱乐至死、退步集、给无价的孩子定价、西方哲学史、批判性思维、从一到无穷大、沉默的大多数、麦田里的守望者(英文和中文两个版本)、暗恋桃花源、野草、台北人、儒林外史、我与地坛、动物农场、撒哈拉的故事、小王子。<br>杂志有收集很多【大地地理杂志】，似乎订阅有三四年了。<br>床头柜上是金庸的【射雕英雄传】，是家人君借给她的。书签夹在开始没几页的地方。</p>
<p>离门近的柜子里摆放着杂物。有摩托车用头盔，【登山用工具】和煤炭存放过的痕迹。</p>
<p>家人君可以对有特定回忆的物品进行灵感判定。<br>【登山用工具】，家人君可以回想起年前的出游和余芝掉下山崖的事情。<br>【射雕英雄传】和【倔强】用于回忆两人交往时候的事。</p>
<p>一楼大门的信箱里有未拆封的被退回的第二版【论文】和编辑的留言。留言的内容是以学术上缺陷和不合理地方的建设性意见。<br>关于【论文】：在论文的后记中，如果搜索参考书籍，是都可以从市【图书馆】和余芝的大学图书馆借来的。<br>除此之外，可以从外封袋中知道投稿的【杂志社】。当不知道去哪里的时候报社npc可以提醒。论文的内容和退回的原因详见【论文】一栏。</p>
<br>
<br>


<h3 id="【（余芝投稿论文的）杂志出版社】"><a href="#【（余芝投稿论文的）杂志出版社】" class="headerlink" title="【（余芝投稿论文的）杂志出版社】"></a>【（余芝投稿论文的）杂志出版社】</h3><p>如果去询问，可以知道余芝的第一版论文。<br>原稿已经退还他们没有原文，但因为写的很怪所以有印象。<br>余芝辩论了关于某种生物吞噬土地的可能性，并论述临近海洋的旧人类存在的证据，旧人类与生物之间的可能关系，并推论他们文明结束是生物所导致的。大多都是推论，很缺乏证据。<br>但第二版去除了神秘生物，只在辩论火山喷发岛屿沉没的可能性。两版都有指出调查员们居住的岛屿有符合这些条件。<br>如果直接问编辑，除了辩证内容很不寻常，第一版和第二版之间的改变也很奇怪。</p>
<p>(杂志社，火山相关的东西多看看!!!)</p>
<br>
<br>

<h3 id="【图书馆】"><a href="#【图书馆】" class="headerlink" title="【图书馆】"></a>【图书馆】</h3><p>【余芝的书籍借阅记录】<br>最近的借阅记录大多是当地的报纸时事与长年关于火山活动的记载。<br>历史上的火山喷发都有一定的周期规律，自从小岛繁荣发展之后，火山就再也没有爆发过。<br>【余芝身上的钥匙】<br>是使用在图书馆的储物柜里。藏放的是余芝的日记和第一版被退回的论文。<br>需要获得了钥匙再判定成功。<br>阅读日记，可以选择晚上不行动时分段阅读，如果白天读的话很花时间。<br>【网络】<br>可以在图书馆及其他地方利用网络。</p>
<p>【政府的文件】 - 如果调查员是政府相关职业，可以有在官方记载未公布的，真实关于火山的数据。</p>
<blockquote>
<p>于200年前火山喷发，形成山口湖，现已无喷发迹象。火山口周围无生物，仅底部森林保持正常生态环境。有分析表明火山口附加土壤植被极少，然而其少数的土壤极具营养肥沃，未能哺育生物可能是数量原因。</p>
</blockquote>
<br>
<br>



<h3 id="【火山】"><a href="#【火山】" class="headerlink" title="【火山】"></a>【火山】</h3><ul>
<li>【火山山脚】</li>
<li>【火山第二峰】</li>
<li>【火山山顶，火山湖】</li>
</ul>
<p>火山分为三个部分，顶部有火山口的湖，中部被少许雪覆盖，底部是森林。<br>探索者的登山路线会消耗8小时，往返15公里，海拔3500m。<br>需要准备服装和设备。例如高筒登山鞋，保暖大衣，登山杖，高原反应的药物或氧气。<br>树林中树很高很茂密，是普通的自然树林。除了最中间有开一条公路，公路刚开始时旁还有几个路口有人踩出来的路径。<br>对照着余芝的笔记。树林处有开辟其他的旅游地段。包括河流旁的垂钓，山间小道，农家乐，果林之类的。都靠着公路，只有宗教祭奠的时候会看到有一队人进入树林深处。<br>路径是绕树林一小圈，尽头是一片开阔的高低地。往下望全是绿。<br>登山的路径是不需要从树林开始，刚出中部的时候是一色的火山沙和岩块。<br>（会有那种停车场，旁边小木屋标志着旅游登山路径）<br>火山口湖水深平均200米。周围植被少只有岩石。湖水质清澈干净，但极少有生物。<br>口不小，周长十来公里。</p>
<p>在第二峰和火山湖的交叉处，有一些陡峭的小屋，是提供食物和氧气瓶的。也是笔记中的歇脚处。离顶处还是不近，也要半个小时才能到达。</p>
<p>在去往火山山顶的路上，有一座简陋寺庙。也是祭拜山神的。<br>去第二峰的路上没有，日记中也没有记载。这里最初的目的是怕调查员白跑一趟而设计的（）。<br>里面有且只有一个管理人，也是神父。<br>【关于这个小地点】<br>如果跟npc交谈可以得知，整座山可以被看作山神所在之处。虽然教堂大多都建在山脚，方便祭拜，但因为宗教的原因在山体上多多少少都有建造。据说每100海拔米都肯定会有一座，实际上108座。这在文化中是感观万方。<br>注意这里每一座并不是都会有小建筑物，有些可以算是地藏一样的存在，一个小山神像。每次的祭奠管理和修复山神像也是一部分。<br>普通的信徒不必祭拜所有的寺庙，但作为神父的要求是会在大祭典按高度顺序拜访每一座两次，这在文化中被看作亲近山神。<br>这一座（有建筑物的）正好处于旅游的登山路线之中，所以他作为神父还负责请香的业务。偶尔帮有求之人看看八字赚外快。<br>在21号以外的时间，这里，可以得知祭奠的信息。</p>
<br>
<br>

<h3 id="【沿余芝的登山路径重回火山】"><a href="#【沿余芝的登山路径重回火山】" class="headerlink" title="【沿余芝的登山路径重回火山】"></a>【沿余芝的登山路径重回火山】</h3><p>在最终决战前的登山没有太多意义，在没有获得日记的情况下可以让家人君获得等多的回忆。<br>只有在龙虾君入队的情况下，如果提前出发将龙虾君丢入火山口的条件，可以提前结束事件，进入延迟喷发结局。在这个情况下调查员的健康不会有更多损耗（指第一阶段的喷发而引起的烫伤和火山灰）。不过同时日后谈是更难说服居民移出故乡。</p>
<br>
<br>

<h3 id="【返回余芝跟家人君爬山时失踪的地点】"><a href="#【返回余芝跟家人君爬山时失踪的地点】" class="headerlink" title="【返回余芝跟家人君爬山时失踪的地点】"></a>【返回余芝跟家人君爬山时失踪的地点】</h3><p>【特殊条件】火山四周的山脚会随机产生裂缝，也就是余芝日记中所记述看到不可思议事物的地点。<br>在17，18，19，20，21五天里分别有1，2，3，5，8个裂缝。具体出现在哪用随机数（投地图坐标）来辨别。</p>
<p>世界上多数的火山都会被开发为景点，小岛上的火山也不例外。山顶过于商业化的开发让你觉得索然无味，于是你打算从山脚的树林开始探索，在山脚下转悠的时候，被你发现了一道一人宽的裂缝，凑近听还有水流的声音，山顶有火山湖就算了，为什么火山内部会有水？你当机立断决定探索一番火山内部的景象。裂缝之内是一番幽静的洞天，黑暗，潮湿，还有一股暖意，当你逐渐靠近缓缓流淌的水源的时候，感受到了蒸腾的热意涌上。火山内部的水只是让你怀疑“火山”的真假，而温热的水却让你产生了毛骨耸然的猜想——是什么在加热？造物主的脉搏，还是神明的呼吸？<br>【调查物品】古人类的人骨是随机出现的。</p>
<h3 id="【余芝与调查员的办公室】"><a href="#【余芝与调查员的办公室】" class="headerlink" title="【余芝与调查员的办公室】"></a>【余芝与调查员的办公室】</h3><p>学校名为【东山市思源国民小学】，位于东山市旧城区。<br>重返办公室。<br>如果在前两天内，也就是17-18日的时候来，可以将龙虾君列入队伍。<br>19-20日时，如果持有矿石碎片，龙虾君也可以入队。</p>
<ul>
<li>   能获得一部分余芝的物品笔记。行动的备忘录。</li>
<li>   龙虾君加入调查员。<br>龙虾君加入调查员的契机是调查余芝的办公桌。 调查的话会发现物品【矿石碎片】。<br>对矿石碎片侦查：</li>
<li>普通描述：是白色的小石头，能折射出五彩的光。</li>
<li>更细致的：硬度并不像石头，更像是生物的壳。</li>
</ul>
<p>后辈君可以灵感对余芝的回忆。<br>在备课关于食物链的文章时，你听到她小声的低估了声，<br>如果是为人类的推动那也许还有些意义，但如果只是为了生存而剥夺他人生存，岂不是一个没有头的徒劳循环。</p>
<h3 id="【将火山（怪物）作为信仰的教堂】"><a href="#【将火山（怪物）作为信仰的教堂】" class="headerlink" title="【将火山（怪物）作为信仰的教堂】"></a>【将火山（怪物）作为信仰的教堂】</h3><p>注意教堂有不止一个。<br>离山最近的一个，也是真正露天的那个，是余芝拜访过的。<br>其他的会有玻璃天花板，在其他的教堂可以打听到一些关于信仰的事情。</p>
<p>从教堂的信徒那里听说过余芝来过的事情。</p>
<br>
<br>

<p>这次幼崽因为数量过多，在地底下堆积，有极少数通过缝隙爬出地层，也就是余芝所接触到的。超出了怪物容纳的范围，怪物的生命也将尽，会一口气全部喷发出来，让它的幼崽送离这片即将死去的土地。<br>余芝与家人君第一次登山的时候，以及导入的时候出现在她办公桌上的龙虾君是怪物桑的幼崽。</p>
<p>（进山的路线）<br>大约是山腰山脚的地方绕着走一圈。词的内容大致如下：</p>
<blockquote>
<p>一月瑞雪降，二月春苗长，三月酥雨眉心妆，山神泽四方；<br>五月鳜鱼肥，七月繁花飞，八九十月硕果累，常拜山神伟；<br>冬去会有时，盛景复常在，山神颜悦吐福息，岁岁花相似。</p>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>0421/playerPlots</title>
    <url>/blog/0421/playerPlots/index.html</url>
    <content><![CDATA[<h2 id="【导入】"><a href="#【导入】" class="headerlink" title="【导入】"></a>【导入】</h2><h3 id="先从后辈君开始。"><a href="#先从后辈君开始。" class="headerlink" title="先从后辈君开始。"></a>先从后辈君开始。</h3><p>你是一位新人教师。<br>所就职的地方是所不大不小的公立小学。大部分学生会直接升入旁边的初中，并不会有太多教学压力。你跟随余老师也快有一个月了，帮忙批作业，听她上课和学着备课。余芝跟你说下一次准备让你上课试试看。你有些紧张，凡事都会有开始嘛！她笑着跟你说。<br>在这一个月的学习与相处中，你渐渐地喜欢上了余芝，当然是敬仰的那种喜欢。她听说你没有驾照，甚至偏要上下班方便的时候用她的摩托车载你一程，当然这帮了你大忙了。<br>她是位很负责和具有亲和力的人，也许就是天生很适合跟小学生打交道吧。如果自己也能那样自然地跟学生相处就好了，你这么想着。<br>我们的故事在一个放学后开始。</p>
<p>你在办公室备课，准备的内容是一首小诗。</p>
<blockquote>
<p>去年今日此门中，人面桃花相映红。<br>人面不知何处去，桃花依旧笑春风。</p>
</blockquote>
<p>学校里只剩了些少数没回家的孩子，除了偶尔远处传来玩耍时的吆喝声，整个学校都很安静。办公室就你一个，也很适合集中精神。你构想着如何介绍唐诗的背景，如果使用多媒体的话效果会更好吧，但余芝老师不用多媒体也能讲的很好呢。<br>你专注在思考中的时候，门的地方突然传来了巨响。<br>不，说是冲击更准确，回头后并不是门，而是门旁边的玻璃窗因为冲击散了一地。你因为在房间较里的地方而没有被玻璃扎到，算是幸运吗？<br>你定下神来寻找着玻璃破碎的原因，看到的是一只像是昆虫的生物。<br>也许描述成巨型的龙虾更合适，它有人的脑袋那么大，外壳被划伤，流出粘稠的液体，向着一个方向拼命爬行着。<br>你注意到，它爬行的方向正是余芝老师的办公桌。</p>
<blockquote>
<p>这地方如果探索者要进行干涉，龙虾君会躲起来，可以适当吓唬探索者。<br>[龙虾君的描述]粘稠的液体是体液，划痕是玻璃所导致的。龙虾君是上半身（2/3）昆虫状，下半身（1/3）是有吸盘的触手状。动作笨拙很虚弱。</p>
</blockquote>
<p>如果探索者没有干涉，龙虾君会爬到余芝左边最高的抽屉上，试图打开。<br>探索者干涉的话可以描述一下龙虾君的手感，温度较高，没有到烫伤程度的温热。有粘稠的液体。</p>
<p>“好大一声响发生了什么？”<br>门这时被打开了，传来喘气慌张的声音，是余芝。<br>她看着不知所措的你，看向了你指的方向。当看到没见过的生物出现在自己桌子上的时候，她脸色变了。<br>是恐惧和悲伤的神情。<br>这时再次发生冲击，你睁开眼，桌子上乱成一团，这次找不到了那只怪物了。<br>余芝在原地愣住了，回过神后来问你有没有受伤。<br>“玻璃的事情就打电话交给处理后勤的老师吧。”她说。看起来积累了很多的疲劳。<br>这时候如果调查员问起怎么说明，余芝会提议撒谎。比如说是放学有孩子玩球搞的鬼。</p>
<p>后勤老师过来询问看情况，他说先把玻璃扫了，明天再通知人来修。余芝老师也帮忙。<br>这时候是找不到龙虾君的。</p>
<p>余芝的桌子，干净。有朴素的文具教材和两个班的学生作业。桌子是垫了绿色玻璃，留下了黑黑的痕迹但玻璃还完好，下面垫着一些照片，也有和一位男性的合影。桌上有养盆兰草。<br>如果偷偷看余芝的抽屉，第一眼看上去没有什么异常，是普通的教师桌子，有修改的笔，备忘录之类的杂物，都是学校统一发的文具。想翻看抽屉会被后勤老师询问打断。</p>
<p>结束后余芝会跟你说太晚了，直接载你回家吧。</p>
<p>调查员应该没有原因拒绝，因为之前也是这样搭顺风车的。<br>实在实在实在拒绝掉了，后面的导入会省略。</p>
<p>她递给你备用的摩托车帽，像往常一样载你回去。<br>这时候的路上可以闲聊。关于备课关于杂事。</p>
<p>注意，一旦谈及到了刚才的怪异事件就会触发剧情。</p>
<h3 id="【后辈君的剧情】"><a href="#【后辈君的剧情】" class="headerlink" title="【后辈君的剧情】"></a>【后辈君的剧情】</h3><p>你们在山间公路骑行，所居住的区域在穿过树林的另一头。这里是岛上作为地标的大山附近的树林，阳光从树枝的缝隙中铺散下来很是漂亮。在树林的间隙中可以看到远方在火山湖，天气舒适的四月份可是野营垂钓的好时间。<br>可现在的你没有那样的心情。<br>余芝之后在路上一直一言不发，你有些担心。</p>
<p>如果问到怪异事件的话。<br>她沉默了很久。然后开始给机车加速。<br>一直加速。<br>你可以看到前面是山道的急转弯。你感到不妙。</p>
<p>如果打岔的话也不会接话，问话喊话也不会有回答。<br>这时候可以夺方向盘，或者说是车头，靠随机判定。<br>一次失败就会失控。</p>
<p>一切都很快，你只知道车子失控了，然后就是冲出了栏杆，你只能感觉到撞击和疼痛，你拼命的捂住头，你在往下掉。</p>
<p>靠随机数决定撞几次停下来，撞到会扣hp。<br>成功的话车子还是会撞上栏杆，车子和余老师掉下去，后辈君没有掉下去。<br>只有大成功的情况，余芝没有掉下山去。这时候爬起来身上还是疼痛，站起来的时候一阵眩晕，车子在道路上擦出一道长长的黑痕。你看到余芝倒在公路上，头上有少许血迹。你喊她名字没有回应，她撞到了头昏过去了。<br>不管怎么样都是后辈君报警和叫救护车。</p>
<p>疼痛。猛烈的疼痛。五感中只有疼痛将自己跟世界联系到了一起。<br>接着是耳鸣，在耳鸣中渐渐取回了视觉。地面粗糙的触感，你发现自己是躺在地面上了。嘴里有咸味，你没在意。花了些时间撑起身来，还觉得天旋地转。手脚肚子麻得很，看上去没流血，好像只是皮肉伤。四周是公路，你记起来是在回家的路上，是下午，周围是树林和山，午后橙色的阳光温柔而遥远。<br>路面上留着的是在记忆中有印象的杂物，盖下面的是黑色车轮的痕迹，一直延伸到断掉的栏杆旁。你才意识到不止你一个人，还有余老师也在机车上。你有很不好的感觉，磕绊得走到栏杆旁，看不见她的影子。<br>得先报警。<br>掉在地上的包摔了百来米，好在里面的电话还能用。电话的另一头安抚你要冷静，你只不停地重复要快点来。<br>等待的时间太过漫长，你又往公路下看，坡很陡，裸石下的植被挡住了视线，隐隐只能看到远处的湖水。电话里劝不要擅自冒险，你想着得在公路旁来告知警察但又急着往树林里去找余芝，两头为难。你回头往公路远处望去，像是下定了决心，冲进了树林。你往树林里不停的大喊，只剩林间回声和远处传来的警笛声。</p>
<p>救护车来后会跟余芝分开，她被送去医院调查员被拉去做警局做笔录。<br>剧情在这里告一段落。<br>如果要联系余芝的亲人请在家人君的导入结束后再进行剧情。<br>没有触发事件的话。</p>
<p>余芝送你到了平时的小车站，往西面走上台阶没多少路就是你的家了。你看得出她很疲惫，或者说是丧失了活力。你们一如既往的道别，你发现她之后往平时的反方向去了。</p>
<p>是回树林，她回第一次在登山里目击怪异事件的地方。然后骑着机车故意从山间掉到湖里去了。<br>余芝的死亡/事故无法避免。</p>
<p>###【家人君的导入】</p>
<p>家人君的导入是从得知余芝去世的消息开始的。与后辈君的相遇是在葬礼上。</p>
<p>余芝。你说她的名字里包含了芝兰，她与名字一样美丽大方。她笑着说自己还配不上这个名字。<br>她是交往了很久的女友，你们相处了多少年了呢，从刚刚相识的青涩到渐渐融入到对方的生活中。你已经太习惯她的陪伴了。<br>她是教国文的国小老师，你们会一起聊文学与历史，聊孩子与家长。她抱怨你的职业消耗你的健康，登山是她的爱好，她会拉着你加入她一起尝试。年前的时候你们实现了第一次共同登山，你肌肉酸痛了整一周，她说下次一定要挑战最高峰。<br>你们下个月终于决定同居了，那是两人生活的新的开始。那天她没有像往常一样在你下班的时候发来短信，你隐隐约约有不好的预感。<br>在晚上的时候你接到了电话。</p>
<p>如果余芝已经事故死亡或是去医院都是警察的电话。<br>如果后辈君有主动联系余芝的家人，那这时候插入剧情。</p>
<p>电话的另一头是自称警察的人，告知你余芝发生了事故，让你来办死亡证明，并问你她家人的联系方式。不认识的男人声音跟你所熟知的一切偏差太大。</p>
<p>余芝独立且独身，学校统一会给师生买保险，她填了长年相处的男朋友为紧急联系人。因为后辈的证词，会先跟学校核对身份，于是联系到家人君。</p>
<p>电话里的声音太过遥远，安抚的话你已经没在听了。记下了地点，挂了电话，在原地站了许久，留在眼前的影像明明什么都没有变。<br>她死了？她死了吗？<br>得去看看，得去明白发生了什么。下了决心换衣出门，接下来是措手不及的忙碌。</p>
<p>见到了她的父母。上一次见面是什么事情？只记得不是现在这样像被抽了魂。<br>在那之后又发生了什么？你只记得你跟着去了派出所，去了医院，去了她出事的地方。<br>余芝的父母也年事已高，余芝是他们的独女。面对突然的变故，在去法院的路上他们泣不成声，之后便把多些繁杂琐碎的后事交托给了你。<br>发布讣闻，准备入殓，安排出殡。<br>回过神来，已经是四天后的告别式。<br>礼堂里里外外铺满了花，在那中央的，是要陷入花朵中的，她的照片。<br>你感到有些恍惚，那张照片是跟她的父母一起翻看相册挑选的，你记得。来的葬礼的人也是自己一位位告知的，你记得。请的公司，场地，花圈，你都记得。<br>明明记得，但那种不真实感无法抹去。好似恐惧着什么袭来一样，那层淡淡的墙。<br>直到告别式结束后，宾客散去，你站在她面前，才能感受到，之后带她去火葬，在此是最后的告别。情感再度涌上来，这次没有任何的防护，嚎哭无法停止。</p>
<p>你恍惚地等着来接她的车子，发觉外面有两个人在等你。<br>那是作为第一目击人的她的后辈，和她最好的好友，她的大学同学。他们明显有事还想跟你说。他们显得有些不知从何开口，问你之后的安排。<br>你也想找后辈君。之前有听警察转述过他描述的发生的事件，更想听他亲口再说一遍。<br>你们约了火葬之后在附近的咖啡馆见面。她的大学同学询问是否能跟着过去，余芝的母亲同意了。<br>这是最后一程了。</p>
<p>余芝的死亡，被定案为交通事故。但如果后辈的证言属实，比起事故更像是自杀。<br>她的大学同学问你，余芝最近是否有反常，她对这次的事情除了悲伤更多的是困惑。后辈也对此想了解更多，就算是第一目击人的他，也不敢相信平时平易近人的前辈会故意造成事故。<br>他们问你是否有精力和时间一起来调查余芝的自杀原因。<br>从警察那里有听说，最初也有考虑后辈所提供的证词是否真实。后来在余芝的家里找到了安眠药和煤炭，取消了对后辈的怀疑。<br>她很早前就有自杀倾向了吗。<br>是从什么时候开始的？她当时在想些什么？我为什么没有注意到呢。<br>跟随来的除了不解还有后悔。<br>挑选的进塔日子还有一阵。<br>想明白她最后作出的决定，想了解被忽视的她另外一面。这段时间就全力跟他们一起还原余芝最后的日子。<br>不但是为了她，也是为了自己。这是自己最后能为她所做的事了。</p>
<p>家人的导入结束后，因为悲伤，会有健忘的表现。</p>
<p>###【家人君的剧情】</p>
<p>家人君的剧情是关于自己跟余芝生活间的回忆。<br>如果一直没有获取余芝的日记，回忆的剧情用于补全他们过去的经历。<br>因为相处的时间久，之后如果带有线索的提问，可以申请回忆起余芝过去几个月的行动。<br>家人君视角的另一些琐细行动可以来余芝的日记的记录。具体请参考日记记录。<br>能够回忆的结点包括：【办公室的兰草】【赠送的音乐CD或小说】【余芝房间的登山工具】</p>
]]></content>
  </entry>
  <entry>
    <title>0421</title>
    <url>/blog/0421/index.html</url>
    <content><![CDATA[<p>【余芝的私人笔记，请在适当的情况和条件下公布】<br>因为相对比较长，可以考虑计算阅读时间，分段落展示。</p>
<blockquote>
<p>（是年前的出游。过完年，社交结束后回到一个人的生活所以回回想起这段经历，无法无视所以记载。）</p>
</blockquote>
<h3 id="0208"><a href="#0208" class="headerlink" title="0208"></a>0208</h3><p>我决定使用这本笔记来记载我的所见所闻。<br>即使是我的胡言乱语，我感觉记载下那次的经历是我的义务。<br>我很害怕，只有开始动笔会让我轻松一些。</p>
<h3 id="0209"><a href="#0209" class="headerlink" title="0209"></a>0209</h3><p>我不敢多加思考，但既然决定记录了，就从那天开始讲起吧。<br>我一直想邀请家人君一起登山，那是我很久以来的兴趣。<br>对，那天起初是很开心的。那是第一次跟家人君的登山，也是久违的一起出游了。<br>我们的目的地是岛屿中的火山。既然是从出生开始就活在这里的本地人了，自己家乡的名胜都没去过，一直都是个遗憾。<br>不过毕竟家人君还是新手，我就带着他跟着我们城镇的登山爱好队一起，目的是离火山口有些距离的第二高峰。<br>路线是巴士到山腰的整合地，再开始徒步。</p>
<blockquote>
<p>（地图需要，这里也是简介了另一条爬山路线）</p>
</blockquote>
<p>家人君的装备是一起去选的。</p>
<blockquote>
<p>（之前有描述过）</p>
</blockquote>
<p>我担心事物不够，在熟悉的整合地又补了些少许的水和果冻包。那地的老板总是挂着不变的笑容，但也算好说话，我出示了本地登山协会的证明，给了我个亲民的价格。能量果冻的口感我很喜欢。虽然看家人君身体不算经常病弱的类型，但也带了瓶氧气以防万一。<br>预计是夜半（12点）出发，到目的地观看日出，预计四点左右能到。<br>刚开始的路是能看得到树木的土地，再往上是少许绿色的植被，之字形的路还算好走。<br>再往上是石块组成的山路，有些地方需要攀爬了。两边有铁链和围栏标注着道路，家人君说拍照的时候如果不扶着什么脚会止不住的抖。<br>渐渐可以感觉在云层中前进，这是我非常喜欢的地方，有种来到了另一个世界的错觉。<br>我们跟着队伍慢慢的前进，在预定的时间之前到了。<br>家人君说自己第一次到这么高的地方，一路扛着的相机一定要发挥大作用。<br>山顶风不小，我们做在相机旁边等待着日出。<br>平时我们各忙各的，我想参与更多学校的事情，新学期申请了带后辈，班主任也想试试，想跟学生们更多的相处。家人君问我要不要考虑同居，我没马上回答。<br>的确搬来一起住就算很忙也能有更多相处的时间。关系也需要两个人一起努力。<br>他笑着说要不要等自己的租房合同快要到期再考虑。<br>我说好。</p>
<blockquote>
<p>（山顶处的聊天可以适当根据家人君和余芝的关系口胡一下）</p>
</blockquote>
<p>一眼望去的天空全是暗蓝，地平线被橘色劈开。橘色渐渐变粉，天也加入了湖蓝慢慢亮起来，那是干净的美。<br>我跟家人君说下次有机会去火山口看，火山口的湖是另一种景色。<br>自然风光是这样的纯粹宏大，再怎么描述它的美丽不如亲自去体验。<br>看完日出我们去山顶附近的歇脚处买了早饭。在风中呆了太久，没有什么比热乎乎的面更温暖了。家人君说从出生以来没吃过那么好吃的汤面，我说他夸张。<br>之后就是下山了。<br>下山才是真正辛苦的哩，家人君少了新鲜劲，我跟着他渐渐走在了队伍后面。</p>
<h3 id="0210"><a href="#0210" class="headerlink" title="0210"></a>0210</h3><p>昨天太疲惫，还要看早读，今天再继续了。<br>怎么写的像是郊游日记（笑）。<br>我记得那天是赶在过年的前夕，我们是周一出发的。虽然两个人都很疲惫了，还有一天的休息，我们下山后商量着在附近多住一晚，早上周边走走再回去。<br>对，是周日我们去山脚湖泊的地方闲逛时发现的。<br>山的周边是一片很少人居住的树海，围着一片不小的湖泊，也是垂钓爱好者常聚的地方，我每日上班绕着山周边的公路开过也会路过这边湖泊。<br>我们两个一点都不懂垂钓，但作为每天会路过的地方，带着好奇只是想散散步。<br>离公路近的地方有小屋租借垂钓工具和小船，也算是个景点吧。再往里走能看到有些还是一个家庭出来带着工具还烤了火。<br>走出石头铺着的河床，人就少了不少，偶尔也能看到些中年人会站在河中间钓鱼，我不懂，是中间鱼会更多吗。<br>听说我们当地信教的人会每段时间就会浩浩荡荡一路人来爬山，应该就是这样山脚到山腰的地方，我们那天没碰到。<br>风景还是很好的，山脚的路跟攀爬不同，有很多动物的声音，心情也被感染，很清爽。<br>我到那个地方是意外。按着印象中大约离公路旁的路口有那么一两个小时，也可能是更久。<br>应该怎么描述呢，有像小高地的地方，是个断崖。家人君还带着相机，他在那个地方拍过几张照。我叫他拍照的时候小心，不然连人带家伙一起掉下去。那里视角很好，一望过去是高低的树林，错落有致。<br>到那里为止都还是度假，我们转身准备离开那个高地的时候，我一脚踩空了。<br>现在回想起来可能是踩到什么不结实的东西了，我只记得视角一黑往下掉，撞了些地方，回过神的时候四周就不是开阔的天空，而是树林和崖壁了。<br>家人君在呼唤着我，我看不到他，他应该是在这断崖的上面。我回话说没事。我也上不来他也下不去，我就说我们照着（西边？）一直走走回去吧。当时的我还是过于乐观了。<br>家人君说每隔段时间就跟我喊话，确认我的位置，他原路返回，不会太困难。如果我看不清太阳的位置就听他声音走。<br>这一切都不会有太多问题，也许是最初摔的时候伤到了脚，在爬下坡的时候再次一脚踩空了。<br>我花了点时间才醒来，滑到的地方是一个一人宽的裂缝的前面，可以听到水流的声音。我喊话，家人君没有回复我。<br>因为入口处正是湖泊的地方，一方也是有些好奇水流，一方也是想是不是跟着水走就可以找到公路。<br>于是我就进去了。<br>对，就在这里，我想我现在也没理解，只是按着记忆来写吧。<br>里面是开阔的。我的确看到了水。那更像是山间的小瀑布，正巧是在山洞里的，水跟我们在来时路不同，它是暖的，当时只是在想也许山是有热能的吧。<br>水指引着我往离走，我若影若现能看到另一个光源，于是决定在路还比较好回头的情况下再进去看看。<br>那不是一个光源，那是像水晶一样石笋带来的反光。<br>垂下来的石笋，当时还觉得是石笋，有尖细的，有圆滑的，看上去像人的手臂那么长，里面地面上也有反光，我走进去建起，是小型的石头，纹路像是碎玻璃的集合，能发五彩的光。<br>越靠近光更亮，像是自己发光一样。<br>我用手电筒对着它照，五彩的光照到了四周的洞壁上，颜色很美，很温柔，很……仁慈，还记得有种吸引住，移不开视线的感觉。<br>我也才注意到更里面的地方，往下是开阔的山洞，像去听交响乐那样的大厅一样的空间大小，四周的石笋形成好似植物根茎一样的纹路，视线往下看，像是有动物的骨头。不对，我越看越像人的骨盆，但那个大小却又比人大些，让我困惑，这时候我才意识到下面在密密麻麻的彩色石丛里有什么东西在动。<br>彩色光……在涌动，照在洞壁上的光也跟着，整个洞穴都跟着，晃着我的眼，定神才看出来有形状。<br>本能让我后退，我只记得是好似甲虫类的生物，密集的聚在一起蠕动像蛇又像是波浪。太多了，那面墙在扭动，我感到站不稳。整个空间像是一个玩笑，恐惧，我的反应是不由主的恐惧。<br>生理上感到不适，胃酸在涌出来，反应过来的时候我已经在跑了。<br>我应该是往原来进来的洞口跑的，我记得我看到了光，然后又摔了，在次有记忆的时候已经在医院了。家人君在我旁边，他说找到我是三个小时之后的事了。我倒在山间的小溪旁边，所幸只是些小伤。<br>医生说我扭伤了小腿肚的肌肉，静养就能好。小腿伤不重，只是精神上受到了些冲击，近期不要再做会刺激到的事情了。<br>我指甲里的泥的确证明着我狼狈逃跑的经过。听家人君的描述，他和搜查队没有看到过什么山间的裂缝。<br>也许是他们看漏了，但在那种旅游场所的附近，那么奇怪的地方如果有被发现我怎么又会没有耳闻呢。</p>
<p>……这次记载，的确像是梦一样的存在。太多解释不通，而且奇怪的东西了。<br>恐惧渐渐被稀释。已经过了有快一个月。那时的我看到的是真实的吗？<br>也许的确有人骨，也只是长的特别壮大的人骨。那我遇到的是凶杀案的抛尸地点吗。<br>怎么想怎么蹊跷。也许我应该跟警察去沟通，除去奇怪的东西，万一那真的是人骨呢。</p>
<h3 id="0212"><a href="#0212" class="headerlink" title="0212"></a>0212</h3><blockquote>
<p>（这天周四，余芝下班后抽空去的警察局）</p>
</blockquote>
<p>我做了笔录。听警方说并没有找到跟我描述相同的地方，我也许是精神受到了很大的冲击而出现了幻觉。<br>这种结果我也设想过。<br>我担心，我担心我看到的是真实的，但也担心它是虚假的。<br>他们说会如果有更多的线索会联系我，也嘱咐我好好休息。<br>没有奇怪的凶杀案，没有神秘的爬虫生物，一切一切都是我的梦。<br>没有人死亡，没有生物危机，跟昨天一样，一如往常。<br>这样就好了吗？<br>也许这样交给他们，先有更多的休息才能更好的做任何事情。<br>我有应该回去的地方。</p>
<h3 id="0214"><a href="#0214" class="headerlink" title="0214"></a>0214</h3><p>是什么时候开始我们也过外面人的节日了？<br>如果不是家人君提醒，我也是注意不到。<br>周六只需要上上午的班，他特地在我下班时间来接我，和我一起回家。<br>他带了盆兰草来见我，说单买只玫瑰什么的可不实用，兰草还能当盆栽养。我被逗笑了。<br>把兰草留在了办公室，陪我一起工作。<br>我思考过很久是否应当告诉他。告诉他那天的所见所闻，告诉他这事情我越回想越觉得可疑。<br>结果是，先保留。不过留下这份记录也许某日能代我向他解释也说不定。<br>我们再次整理下现在所有的情报。<br>这些证据，都可以作为，如果是我不相信都不会存在的事物。那如果是我搞错了，是不是这一切都是一场梦？<br>我准备暂且再调查一阵，希望能找到可以些实际的证据。<br>或者一切都不存在的证据。<br>首先我们会需要再次回去，我目击一切的地方。那是一切的开始。不过再次之前也需要再准备些必要的道具。</p>
<blockquote>
<p>（道具功能有些会有用，有些无用。会跟龙虾的特性有关。余芝还不知道。）</p>
</blockquote>
<p>最近碰巧是当地宗教的活动时间，他们也在山的旁边。按印象每双数的月他们的活动要持续不止一天。如果可以不想在调查这件事时碰到更多的人，那就再过段时间再返回山洞吧。<br>这段时间就用来从最基础的地方调查起也不坏。<br>哈哈，说是调查更不如说是学习研究。<br>说来惭愧，作为登山的爱好者，也是本地的居民。关于大山所了解的更多是从上一辈人听来的那或真或假的故事。<br>我需要更多的了解山的历史，从科学的角度。也要更多的了解地质学上的事情。那也许只是个外行人看上去很奇怪的自然现象。<br>作为老师，要自己学更多才能更好的教学生呢。<br>从明天开始，一项一项慢慢来。<br>不过…情人节吗。<br>如果明天看到玫瑰就买一支吧。<br>外面人珍重的节日习俗，我也想体验一下。</p>
<h3 id="0216"><a href="#0216" class="headerlink" title="0216"></a>0216</h3><p>今天跟着孩子一起去社会实践。今年去的是博物馆。<br>里面有件藏品让我在意。<br>听说是旧人类的下颚骨，特点是比普通人的大小大了一圈。<br>这片大地以前的居民吗……<br>回想起当初在我的幻觉里，里面的骨骼也是较大的。</p>
<h3 id="0217"><a href="#0217" class="headerlink" title="0217"></a>0217</h3><p>最近夜晚去市图书馆度过，多余的一点时间用来查查任何可能的历史或者地质资料。<br>这学期的教师评定要申请，还有后辈的心得报告，不要忘记了。<br>资料复印好都收着，和这本记事本就放在图书馆里好了。睡前备课时看着总会走神。</p>
<h3 id="0218"><a href="#0218" class="headerlink" title="0218"></a>0218</h3><p>后辈君提了一个理论。<br>因为大家只会跟周围的人进行攀比及生存，那就生活在自己的小圈子里也不应该是更省事。<br>还真是岛屿人的思维方式。<br>不过的确周围很多人一辈子都生活在这岛上没出去过，就比如我的姥爷。<br>并不是说那是件坏事，只是。<br>只是想着博物馆的下颚骨，有些悲伤。</p>
<h3 id="0220"><a href="#0220" class="headerlink" title="0220"></a>0220</h3><p>现在有的情报与调查思路。之前查了一些关于火山的资料，说来明明登上过几次了却没从地质的角度来看过它。<br>作为参考选择了其他地方的死火山当作对比，暂时没有发现什么奇怪的地方，硬要说的话是山脚的植被比其他地方的更茂盛，但这可能也是维度的因素。<br>先记载一下想要调查的方向。<br>地质，还有历史与板块活动。<br>还没确定记忆中五彩光的矿石，博物馆有类似的，但并没有亮到感觉自身都在发光，不过这个也许是当初黑暗环境的错觉。<br>旧人类的历史因为有博物馆的关键词有查到一些，下颚骨是在海边的地区所发现，并不是从海里来而是地底下出土的。有份报告怀疑是曾经在这块板块所生活的原始人，板块渐渐下沉变成了比现在还小的零散岛屿。如果生活区间因为板块活动而被缩小，不宜居住所以渐渐消失也可以理解。<br>这么一说如果我那时看到的是旧人类的骨架也可以这么解释，并不是什么杀人案。<br>最后见过的怪异生物也想做考察，但这个没有头绪，优先级排后吧。</p>
<h3 id="0223"><a href="#0223" class="headerlink" title="0223"></a>0223</h3><p>家人君说我最近太忙希望我不要累坏身体。的确最近没怎么跟他一起度过，于是昨晚一起在他家吃了饭。<br>我们开了啤酒，晕晕的配上他最喜欢的奇想乐队，感觉回到了我们刚认识的时候。<br>我很喜欢那个气氛，烦恼都抛在脑后，只有我和他，在那个小屋子里，他烧的蒜香大虾和奇想的吉他。<br>过去还真是个温柔又残忍的词呀。</p>
<h3 id="0224"><a href="#0224" class="headerlink" title="0224"></a>0224</h3><p>昨晚难得做了个安稳的梦。<br>我带着成为成人的记忆回到了我的小学，我还记得，那时的我跟讲台差不多高。<br>讲台前的同学手里捏着作文本，在做关于家乡文化自豪的演讲，那时我们的作文本还是黄色的。讲台下的桌子是两人用的。有些学生在偷偷写作业，老师坐在那位演讲的同学位子上，她的眼神像是在鼓励又像是欣赏，一刻都没离开。<br>我站在他左边的角落，是教室里放了盆公用小植物的角落。等待着下一个去演讲。<br>以老师带头的掌声响起，那位同学走下了台。我看了眼钟，还有五分钟下课，不大够老师规定的演讲时间，她也注意到了，问我要不要下节课再继续。<br>如果是小学的我会很开心的选择下次吧，我还记得那时的我并不是个喜欢在人群面前表达自我的人。感谢我的职业，现在已经很熟悉站在讲台前了，而且隐隐感到，错过了这次，对我来说的下节课永远不会到来。<br>上一次作为学生走向讲台是什么时候呢？内心不知是激动还是烦躁，我翻开了自己的作文本，是我不认识的字迹。里面写的是小学生经常会听到的别人会写的漂亮的句子，想也是，毕竟对于孩子来说那样的感情是否太遥远抽象，我合上了本子。<br>关于家乡吗。<br>小学的时候对家乡的理解是什么呢。<br>我记得有机会的时候会跟着大人去山里。每年都有几次，那时候也不会说野营那样的词，就是去山里傍着水走，大人做大人们的事情，我们就在那自然花园玩耍。跟城落里被排挤的植物不同，那里有太多的东西可以看了。绿的，黄的。会动的，不会动的，突然钻出来的。我单纯的喜欢这块地方，我很想再留在这里久一点。<br>之前的那位学生又讲了些什么呢？文化的传承，地理的优越？那时候只会觉得这样的句子是厉害的，会被认可的。也许没有理解却相信着吧，我明白，因为我也是。<br>那样的句子，现在说不出来啊。<br>“关于我和我的家乡”<br>老师一边填着什么，也许是评分表，一边笑着看着我。教室里有些许吵闹，是下课前的躁动。<br>“我有幸出生于这块土地，我打心底的喜欢着这个地方。从小的地方来说，我喜欢这里的山，这里的水。”<br>“我喜欢在爸爸自行车后座摇摇晃晃时从旁吹过带有湿气的风。虽然经常下雨，我也喜欢阳光从云层中渗出的样子，放晴后带着雨水的植物也很动人。”<br>“我打心底的认为，这块土地可以孕育出跟这里一样静洁的人。”<br>“我敬畏和尊重我们的文化。从大地来的生命了解并感恩大地，这是再正常不过的了。我们的内心有所托付，我为我们拥有的信仰和习俗而感到自豪。“<br>“只是我是希望，从习俗中获取的感恩，将那更好的投入在学习和探索这个世界上。更多的看看世界，测试自己的极限。”<br>“我们是可以做到的，我也觉得那是必要的。”<br>“将来离开岛屿，带着恩赐，去探索更遥远的地方。”<br>去探索岛屿外的世界。<br>去外面的世界。<br>已经知道了那个外面的世界，就会想去看呀。<br>我无法再继续演讲了。</p>
<p>梦醒了。</p>
<h3 id="0301"><a href="#0301" class="headerlink" title="0301"></a>0301</h3><p>我不记得自己睡了多久。<br>是前天，我一个人返回最初的地方。<br>这样不行。<br>可能没有很多时间了。<br>之前所看到的只不过是冰山一角。我未踏进深部就逃了出来。<br>无法理解所见到的就按能想起来的地方记录吧。<br>原来以为之前搜查到的琐碎可以通过重返这个地方拼接起来，结果更加奇怪，我不懂了。</p>
<p>神秘壁画。</p>
<h3 id="0302"><a href="#0302" class="headerlink" title="0302"></a>0302</h3><p>麻烦事可能找上门来了。<br>龙虾君。</p>
<h3 id="0314"><a href="#0314" class="headerlink" title="0314"></a>0314</h3><p>这片大地本身就不是为了让人幸福而存在的.<br>能互帮互助的,从一开始就只有人类而已.<br>本应如此,我也一直是这么相信着的,但为什么.</p>
<h3 id="0410"><a href="#0410" class="headerlink" title="0410"></a>0410</h3><p>人类也许就是消耗品吧。<br>哪有什么大人和孩子的分别啊。<br>还完完整整没有被污染的就是孩子，经历过太多到无法修补就是大人。<br>我还在去工作。说实话自己都有些不敢相信。<br>论文已经再次上传。也许有更重要的事情要去做。也许已经能做的都做了。<br>我带的后辈还需要去写他的工作报告，他值得有光明的未来。<br>少许借用下他人的世界会让我获得些许的安宁。<br>他的世界是怎样的呢。<br>在零散的交谈中记得，他出学校也没多久，刚刚从课桌走向讲台。<br>不擅长当众演讲，对小孩子很有耐心。</p>
<blockquote>
<p>（适当）</p>
</blockquote>
<p>如果他能成为那样的老师就好了。一定会比我更出色，一定会比我更适合。<br>只当我这样一个人在写日记时会慢慢把我拉回另一个世界。<br>这个世界没有外界，没有未来。<br>孩子们在外面嬉笑，好似那个世界和我的世界相互平行，共同存在。<br>哪边才是真实的？我宁愿相信都是真实的。<br>不可以去想。不可以去把他们的世界跟我的世界混淆在一起。那对他们来说太残忍了。<br>就让我一个人留在这里。和我亲爱的家乡一起。<br>从一开始就应该这样。<br>我能目击到山神复活的一刻吗？<br>山神啊，带走我吧。<br>你容纳所有的生物，你也能容纳我吗？<br>你在这里是百年？千年？<br>陪伴了我们多少代人的岁月，这也快结束了。<br>请原谅自私的我。<br>请原谅到最后还如此自私的我吧。</p>
]]></content>
  </entry>
</search>
